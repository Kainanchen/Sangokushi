package com.texaspoker.moment;

import a.does.not.Exists2;
import android.os.Build.VERSION;
import android.support.v4.media.TransportMediator;
import android.support.v4.view.InputDeviceCompat;
import android.support.v4.view.PointerIconCompat;
import android.support.v4.view.accessibility.AccessibilityEventCompat;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import com.ali.fixHelper;
import com.android.volley.DefaultRetryPolicy;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.DescriptorProtos.ServiceOptions;
import com.google.protobuf.Descriptors.Descriptor;
import com.google.protobuf.Descriptors.EnumDescriptor;
import com.google.protobuf.Descriptors.EnumValueDescriptor;
import com.google.protobuf.Descriptors.FileDescriptor;
import com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.GeneratedMessage.Builder;
import com.google.protobuf.GeneratedMessage.FieldAccessorTable;
import com.google.protobuf.Internal.EnumLite;
import com.google.protobuf.Internal.EnumLiteMap;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolMessageEnum;
import com.google.protobuf.ProtocolStringList;
import com.google.protobuf.RepeatedFieldBuilder;
import com.google.protobuf.SingleFieldBuilder;
import com.google.protobuf.UnknownFieldSet;
import com.illuminate.texaspoker.R.R;
import com.sina.weibo.sdk.constant.WBConstants;
import com.sina.weibo.sdk.register.mobile.LetterIndexBar;
import com.sina.weibo.sdk.utils.AidTask;
import com.tencent.android.tpush.XGPushManager;
import com.tencent.mm.sdk.modelmsg.WXMediaMessage;
import com.texaspoker.moment.TexasPokerCommon.CREATE_ROOM_TYPE;
import com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo;
import com.texaspoker.moment.TexasPokerCommon.ClubBaseInfoOrBuilder;
import com.texaspoker.moment.TexasPokerCommon.DEVICE_TYPE;
import com.texaspoker.moment.TexasPokerCommon.ERROR_CODE_TYPE;
import com.texaspoker.moment.TexasPokerCommon.GAME_ROOM_TYPE;
import com.texaspoker.moment.TexasPokerCommon.ID_TYPE;
import com.texaspoker.moment.TexasPokerCommon.LANGUAGE_TYPE;
import com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo;
import com.texaspoker.moment.TexasPokerCommon.PokerProcessInfoOrBuilder;
import com.texaspoker.moment.TexasPokerCommon.SNG_ROOM_TYPE;
import com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo;
import com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfoOrBuilder;
import com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet;
import com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNetOrBuilder;
import com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet;
import com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNetOrBuilder;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import net.sqlcipher.database.SQLiteDatabase;

public final class TexasPoker {
    private static final Descriptor f8257A;
    private static FieldAccessorTable f8258B;
    private static final Descriptor f8259C;
    private static FieldAccessorTable f8260D;
    private static final Descriptor f8261E;
    private static FieldAccessorTable f8262F;
    private static final Descriptor f8263G;
    private static FieldAccessorTable f8264H;
    private static final Descriptor f8265I;
    private static FieldAccessorTable f8266J;
    private static final Descriptor f8267K;
    private static FieldAccessorTable f8268L;
    private static final Descriptor f8269M;
    private static FieldAccessorTable f8270N;
    private static final Descriptor f8271O;
    private static FieldAccessorTable f8272P;
    private static final Descriptor f8273Q;
    private static FieldAccessorTable f8274R;
    private static final Descriptor f8275S;
    private static FieldAccessorTable f8276T;
    private static final Descriptor f8277U;
    private static FieldAccessorTable f8278V;
    private static final Descriptor f8279W;
    private static FieldAccessorTable f8280X;
    private static final Descriptor f8281Y;
    private static FieldAccessorTable f8282Z;
    private static final Descriptor f8283a;
    private static final Descriptor aA;
    private static FieldAccessorTable aB;
    private static final Descriptor aC;
    private static FieldAccessorTable aD;
    private static final Descriptor aE;
    private static FieldAccessorTable aF;
    private static final Descriptor aG;
    private static FieldAccessorTable aH;
    private static final Descriptor aI;
    private static FieldAccessorTable aJ;
    private static final Descriptor aK;
    private static FieldAccessorTable aL;
    private static final Descriptor aM;
    private static FieldAccessorTable aN;
    private static final Descriptor aO;
    private static FieldAccessorTable aP;
    private static final Descriptor aQ;
    private static FieldAccessorTable aR;
    private static final Descriptor aS;
    private static FieldAccessorTable aT;
    private static final Descriptor aU;
    private static FieldAccessorTable aV;
    private static final Descriptor aW;
    private static FieldAccessorTable aX;
    private static final Descriptor aY;
    private static FieldAccessorTable aZ;
    private static final Descriptor aa;
    private static FieldAccessorTable ab;
    private static final Descriptor ac;
    private static FieldAccessorTable ad;
    private static final Descriptor ae;
    private static FieldAccessorTable af;
    private static final Descriptor ag;
    private static FieldAccessorTable ah;
    private static final Descriptor ai;
    private static FieldAccessorTable aj;
    private static final Descriptor ak;
    private static FieldAccessorTable al;
    private static final Descriptor am;
    private static FieldAccessorTable an;
    private static final Descriptor ao;
    private static FieldAccessorTable ap;
    private static final Descriptor aq;
    private static FieldAccessorTable ar;
    private static final Descriptor as;
    private static FieldAccessorTable at;
    private static final Descriptor au;
    private static FieldAccessorTable av;
    private static final Descriptor aw;
    private static FieldAccessorTable ax;
    private static final Descriptor ay;
    private static FieldAccessorTable az;
    private static FieldAccessorTable f8284b;
    private static final Descriptor bA;
    private static FieldAccessorTable bB;
    private static final Descriptor bC;
    private static FieldAccessorTable bD;
    private static final Descriptor bE;
    private static FieldAccessorTable bF;
    private static final Descriptor bG;
    private static FieldAccessorTable bH;
    private static final Descriptor bI;
    private static FieldAccessorTable bJ;
    private static final Descriptor bK;
    private static FieldAccessorTable bL;
    private static final Descriptor bM;
    private static FieldAccessorTable bN;
    private static final Descriptor bO;
    private static FieldAccessorTable bP;
    private static final Descriptor bQ;
    private static FieldAccessorTable bR;
    private static final Descriptor bS;
    private static FieldAccessorTable bT;
    private static final Descriptor bU;
    private static FieldAccessorTable bV;
    private static final Descriptor bW;
    private static FieldAccessorTable bX;
    private static final Descriptor bY;
    private static FieldAccessorTable bZ;
    private static final Descriptor ba;
    private static FieldAccessorTable bb;
    private static final Descriptor bc;
    private static FieldAccessorTable bd;
    private static final Descriptor be;
    private static FieldAccessorTable bf;
    private static final Descriptor bg;
    private static FieldAccessorTable bh;
    private static final Descriptor bi;
    private static FieldAccessorTable bj;
    private static final Descriptor bk;
    private static FieldAccessorTable bl;
    private static final Descriptor bm;
    private static FieldAccessorTable bn;
    private static final Descriptor bo;
    private static FieldAccessorTable bp;
    private static final Descriptor bq;
    private static FieldAccessorTable br;
    private static final Descriptor bs;
    private static FieldAccessorTable bt;
    private static final Descriptor bu;
    private static FieldAccessorTable bv;
    private static final Descriptor bw;
    private static FieldAccessorTable bx;
    private static final Descriptor by;
    private static FieldAccessorTable bz;
    private static final Descriptor f8285c;
    private static final Descriptor cA;
    private static FieldAccessorTable cB;
    private static final Descriptor cC;
    private static FieldAccessorTable cD;
    private static final Descriptor cE;
    private static FieldAccessorTable cF;
    private static final Descriptor cG;
    private static FieldAccessorTable cH;
    private static final Descriptor cI;
    private static FieldAccessorTable cJ;
    private static final Descriptor cK;
    private static FieldAccessorTable cL;
    private static final Descriptor cM;
    private static FieldAccessorTable cN;
    private static final Descriptor cO;
    private static FieldAccessorTable cP;
    private static final Descriptor cQ;
    private static FieldAccessorTable cR;
    private static final Descriptor cS;
    private static FieldAccessorTable cT;
    private static final Descriptor cU;
    private static FieldAccessorTable cV;
    private static final Descriptor cW;
    private static FieldAccessorTable cX;
    private static final Descriptor cY;
    private static FieldAccessorTable cZ;
    private static final Descriptor ca;
    private static FieldAccessorTable cb;
    private static final Descriptor cc;
    private static FieldAccessorTable cd;
    private static final Descriptor ce;
    private static FieldAccessorTable cf;
    private static final Descriptor cg;
    private static FieldAccessorTable ch;
    private static final Descriptor ci;
    private static FieldAccessorTable cj;
    private static final Descriptor ck;
    private static FieldAccessorTable cl;
    private static final Descriptor cm;
    private static FieldAccessorTable cn;
    private static final Descriptor co;
    private static FieldAccessorTable cp;
    private static final Descriptor cq;
    private static FieldAccessorTable cr;
    private static final Descriptor cs;
    private static FieldAccessorTable ct;
    private static final Descriptor cu;
    private static FieldAccessorTable cv;
    private static final Descriptor cw;
    private static FieldAccessorTable cx;
    private static final Descriptor cy;
    private static FieldAccessorTable cz;
    private static FieldAccessorTable f8286d;
    private static final Descriptor dA;
    private static FieldAccessorTable dB;
    private static final Descriptor dC;
    private static FieldAccessorTable dD;
    private static final Descriptor dE;
    private static FieldAccessorTable dF;
    private static final Descriptor dG;
    private static FieldAccessorTable dH;
    private static final Descriptor dI;
    private static FieldAccessorTable dJ;
    private static final Descriptor dK;
    private static FieldAccessorTable dL;
    private static final Descriptor dM;
    private static FieldAccessorTable dN;
    private static final Descriptor dO;
    private static FieldAccessorTable dP;
    private static final Descriptor dQ;
    private static FieldAccessorTable dR;
    private static final Descriptor dS;
    private static FieldAccessorTable dT;
    private static final Descriptor dU;
    private static FieldAccessorTable dV;
    private static final Descriptor dW;
    private static FieldAccessorTable dX;
    private static final Descriptor dY;
    private static FieldAccessorTable dZ;
    private static final Descriptor da;
    private static FieldAccessorTable db;
    private static final Descriptor dc;
    private static FieldAccessorTable dd;
    private static final Descriptor de;
    private static FieldAccessorTable df;
    private static final Descriptor dg;
    private static FieldAccessorTable dh;
    private static final Descriptor di;
    private static FieldAccessorTable dj;
    private static final Descriptor dk;
    private static FieldAccessorTable dl;
    private static final Descriptor dm;
    private static FieldAccessorTable dn;
    private static final Descriptor f8287do;
    private static FieldAccessorTable dp;
    private static final Descriptor dq;
    private static FieldAccessorTable dr;
    private static final Descriptor ds;
    private static FieldAccessorTable dt;
    private static final Descriptor du;
    private static FieldAccessorTable dv;
    private static final Descriptor dw;
    private static FieldAccessorTable dx;
    private static final Descriptor dy;
    private static FieldAccessorTable dz;
    private static final Descriptor f8288e;
    private static final Descriptor eA;
    private static FieldAccessorTable eB;
    private static final Descriptor eC;
    private static FieldAccessorTable eD;
    private static final Descriptor eE;
    private static FieldAccessorTable eF;
    private static final Descriptor eG;
    private static FieldAccessorTable eH;
    private static final Descriptor eI;
    private static FieldAccessorTable eJ;
    private static final Descriptor eK;
    private static FieldAccessorTable eL;
    private static final Descriptor eM;
    private static FieldAccessorTable eN;
    private static final Descriptor eO;
    private static FieldAccessorTable eP;
    private static final Descriptor eQ;
    private static FieldAccessorTable eR;
    private static final Descriptor eS;
    private static FieldAccessorTable eT;
    private static final Descriptor eU;
    private static FieldAccessorTable eV;
    private static final Descriptor eW;
    private static FieldAccessorTable eX;
    private static final Descriptor eY;
    private static FieldAccessorTable eZ;
    private static final Descriptor ea;
    private static FieldAccessorTable eb;
    private static final Descriptor ec;
    private static FieldAccessorTable ed;
    private static final Descriptor ee;
    private static FieldAccessorTable ef;
    private static final Descriptor eg;
    private static FieldAccessorTable eh;
    private static final Descriptor ei;
    private static FieldAccessorTable ej;
    private static final Descriptor ek;
    private static FieldAccessorTable el;
    private static final Descriptor em;
    private static FieldAccessorTable en;
    private static final Descriptor eo;
    private static FieldAccessorTable ep;
    private static final Descriptor eq;
    private static FieldAccessorTable er;
    private static final Descriptor es;
    private static FieldAccessorTable et;
    private static final Descriptor eu;
    private static FieldAccessorTable ev;
    private static final Descriptor ew;
    private static FieldAccessorTable ex;
    private static final Descriptor ey;
    private static FieldAccessorTable ez;
    private static FieldAccessorTable f8289f;
    private static final Descriptor fA;
    private static FieldAccessorTable fB;
    private static final Descriptor fC;
    private static FieldAccessorTable fD;
    private static final Descriptor fE;
    private static FieldAccessorTable fF;
    private static final Descriptor fG;
    private static FieldAccessorTable fH;
    private static final Descriptor fI;
    private static FieldAccessorTable fJ;
    private static final Descriptor fK;
    private static FieldAccessorTable fL;
    private static final Descriptor fM;
    private static FieldAccessorTable fN;
    private static final Descriptor fO;
    private static FieldAccessorTable fP;
    private static final Descriptor fQ;
    private static FieldAccessorTable fR;
    private static final Descriptor fS;
    private static FieldAccessorTable fT;
    private static final Descriptor fU;
    private static FieldAccessorTable fV;
    private static final Descriptor fW;
    private static FieldAccessorTable fX;
    private static final Descriptor fY;
    private static FieldAccessorTable fZ;
    private static final Descriptor fa;
    private static FieldAccessorTable fb;
    private static final Descriptor fc;
    private static FieldAccessorTable fd;
    private static final Descriptor fe;
    private static FieldAccessorTable ff;
    private static final Descriptor fg;
    private static FieldAccessorTable fh;
    private static final Descriptor fi;
    private static FieldAccessorTable fj;
    private static final Descriptor fk;
    private static FieldAccessorTable fl;
    private static final Descriptor fm;
    private static FieldAccessorTable fn;
    private static final Descriptor fo;
    private static FieldAccessorTable fp;
    private static final Descriptor fq;
    private static FieldAccessorTable fr;
    private static final Descriptor fs;
    private static FieldAccessorTable ft;
    private static final Descriptor fu;
    private static FieldAccessorTable fv;
    private static final Descriptor fw;
    private static FieldAccessorTable fx;
    private static final Descriptor fy;
    private static FieldAccessorTable fz;
    private static final Descriptor f8290g;
    private static final Descriptor gA;
    private static FieldAccessorTable gB;
    private static final Descriptor gC;
    private static FieldAccessorTable gD;
    private static final Descriptor gE;
    private static FieldAccessorTable gF;
    private static final Descriptor gG;
    private static FieldAccessorTable gH;
    private static final Descriptor gI;
    private static FieldAccessorTable gJ;
    private static final Descriptor gK;
    private static FieldAccessorTable gL;
    private static final Descriptor gM;
    private static FieldAccessorTable gN;
    private static final Descriptor gO;
    private static FieldAccessorTable gP;
    private static final Descriptor gQ;
    private static FieldAccessorTable gR;
    private static final Descriptor gS;
    private static FieldAccessorTable gT;
    private static final Descriptor gU;
    private static FieldAccessorTable gV;
    private static final Descriptor gW;
    private static FieldAccessorTable gX;
    private static final Descriptor gY;
    private static FieldAccessorTable gZ;
    private static final Descriptor ga;
    private static FieldAccessorTable gb;
    private static final Descriptor gc;
    private static FieldAccessorTable gd;
    private static final Descriptor ge;
    private static FieldAccessorTable gf;
    private static final Descriptor gg;
    private static FieldAccessorTable gh;
    private static final Descriptor gi;
    private static FieldAccessorTable gj;
    private static final Descriptor gk;
    private static FieldAccessorTable gl;
    private static final Descriptor gm;
    private static FieldAccessorTable gn;
    private static final Descriptor go;
    private static FieldAccessorTable gp;
    private static final Descriptor gq;
    private static FieldAccessorTable gr;
    private static final Descriptor gs;
    private static FieldAccessorTable gt;
    private static final Descriptor gu;
    private static FieldAccessorTable gv;
    private static final Descriptor gw;
    private static FieldAccessorTable gx;
    private static final Descriptor gy;
    private static FieldAccessorTable gz;
    private static FieldAccessorTable f8291h;
    private static final Descriptor ha;
    private static FieldAccessorTable hb;
    private static final Descriptor hc;
    private static FieldAccessorTable hd;
    private static final Descriptor he;
    private static FieldAccessorTable hf;
    private static final Descriptor hg;
    private static FieldAccessorTable hh;
    private static final Descriptor hi;
    private static FieldAccessorTable hj;
    private static final Descriptor hk;
    private static FieldAccessorTable hl;
    private static final Descriptor hm;
    private static FieldAccessorTable hn;
    private static final Descriptor ho;
    private static FieldAccessorTable hp;
    private static final Descriptor hq;
    private static FieldAccessorTable hr;
    private static final Descriptor hs;
    private static FieldAccessorTable ht;
    private static FileDescriptor hu;
    private static final Descriptor f8292i;
    private static FieldAccessorTable f8293j;
    private static final Descriptor f8294k;
    private static FieldAccessorTable f8295l;
    private static final Descriptor f8296m;
    private static FieldAccessorTable f8297n;
    private static final Descriptor f8298o;
    private static FieldAccessorTable f8299p;
    private static final Descriptor f8300q;
    private static FieldAccessorTable f8301r;
    private static final Descriptor f8302s;
    private static FieldAccessorTable f8303t;
    private static final Descriptor f8304u;
    private static FieldAccessorTable f8305v;
    private static final Descriptor f8306w;
    private static FieldAccessorTable f8307x;
    private static final Descriptor f8308y;
    private static FieldAccessorTable f8309z;

    /* renamed from: com.texaspoker.moment.TexasPoker.1 */
    class C11141 implements InternalDescriptorAssigner {
        C11141() {
        }

        public final ExtensionRegistry assignDescriptors(FileDescriptor fileDescriptor) {
            TexasPoker.hu = fileDescriptor;
            return null;
        }
    }

    public enum BUYIN_CONTROL_MESSAGE_TYPE implements ProtocolMessageEnum {
        BUYIN_CONTROL_MESSAGE_TYPE_INVITE(0, BUYIN_CONTROL_MESSAGE_TYPE_INVITE_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT(BUYIN_CONTROL_MESSAGE_TYPE_INVITE_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_DENY(BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_DENY_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_ENABLE(BUYIN_CONTROL_MESSAGE_TYPE_DENY_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_ENABLE_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_DISABLE(BUYIN_CONTROL_MESSAGE_TYPE_ENABLE_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_DISABLE_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_SNG_START(BUYIN_CONTROL_MESSAGE_TYPE_DISABLE_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_SNG_START_VALUE),
        BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL(BUYIN_CONTROL_MESSAGE_TYPE_SNG_START_VALUE, BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL_VALUE);
        
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT_VALUE = 2;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_DENY_VALUE = 3;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_DISABLE_VALUE = 5;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_ENABLE_VALUE = 4;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_INVITE_VALUE = 1;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL_VALUE = 7;
        public static final int BUYIN_CONTROL_MESSAGE_TYPE_SNG_START_VALUE = 6;
        private static final BUYIN_CONTROL_MESSAGE_TYPE[] VALUES;
        private static EnumLiteMap<BUYIN_CONTROL_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.BUYIN_CONTROL_MESSAGE_TYPE.1 */
        class C11151 implements EnumLiteMap<BUYIN_CONTROL_MESSAGE_TYPE> {
            C11151() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return BUYIN_CONTROL_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11151();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static BUYIN_CONTROL_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case BUYIN_CONTROL_MESSAGE_TYPE_INVITE_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
                case BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_ACCEPT;
                case BUYIN_CONTROL_MESSAGE_TYPE_DENY_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_DENY;
                case BUYIN_CONTROL_MESSAGE_TYPE_ENABLE_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_ENABLE;
                case BUYIN_CONTROL_MESSAGE_TYPE_DISABLE_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_DISABLE;
                case BUYIN_CONTROL_MESSAGE_TYPE_SNG_START_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_SNG_START;
                case BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL_VALUE:
                    return BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<BUYIN_CONTROL_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(17);
        }

        public static BUYIN_CONTROL_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private BUYIN_CONTROL_MESSAGE_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum BUYIN_CONTROL_TYPE implements ProtocolMessageEnum {
        BUYIN_CONTROL_TYPE_ACCEPT(0, BUYIN_CONTROL_TYPE_ACCEPT_VALUE),
        BUYIN_CONTROL_TYPE_DENY(BUYIN_CONTROL_TYPE_ACCEPT_VALUE, BUYIN_CONTROL_TYPE_DENY_VALUE);
        
        public static final int BUYIN_CONTROL_TYPE_ACCEPT_VALUE = 1;
        public static final int BUYIN_CONTROL_TYPE_DENY_VALUE = 2;
        private static final BUYIN_CONTROL_TYPE[] VALUES;
        private static EnumLiteMap<BUYIN_CONTROL_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.BUYIN_CONTROL_TYPE.1 */
        class C11161 implements EnumLiteMap<BUYIN_CONTROL_TYPE> {
            C11161() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return BUYIN_CONTROL_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11161();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static BUYIN_CONTROL_TYPE valueOf(int i) {
            switch (i) {
                case BUYIN_CONTROL_TYPE_ACCEPT_VALUE:
                    return BUYIN_CONTROL_TYPE_ACCEPT;
                case BUYIN_CONTROL_TYPE_DENY_VALUE:
                    return BUYIN_CONTROL_TYPE_DENY;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<BUYIN_CONTROL_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(18);
        }

        public static BUYIN_CONTROL_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private BUYIN_CONTROL_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface BuyInsuranceInfoOrBuilder extends MessageOrBuilder {
        INSURANCE_ACT getEInsuranceAct();

        long getLBetStacks();

        long getLPotID();

        boolean hasEInsuranceAct();

        boolean hasLBetStacks();

        boolean hasLPotID();
    }

    public static final class BuyInsuranceInfo extends GeneratedMessage implements BuyInsuranceInfoOrBuilder {
        public static final int EINSURANCEACT_FIELD_NUMBER = 2;
        public static final int LBETSTACKS_FIELD_NUMBER = 3;
        public static final int LPOTID_FIELD_NUMBER = 1;
        public static Parser<BuyInsuranceInfo> PARSER;
        private static final BuyInsuranceInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private INSURANCE_ACT eInsuranceAct_;
        private long lBetStacks_;
        private long lPotID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.BuyInsuranceInfo.1 */
        class C11171 extends AbstractParser<BuyInsuranceInfo> {
            C11171() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new BuyInsuranceInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements BuyInsuranceInfoOrBuilder {
            private int bitField0_;
            private INSURANCE_ACT eInsuranceAct_;
            private long lBetStacks_;
            private long lPotID_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gk;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gl.ensureFieldAccessorsInitialized(BuyInsuranceInfo.class, Builder.class);
            }

            private Builder() {
                this.eInsuranceAct_ = INSURANCE_ACT.INSURANCE_ACT_BET;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eInsuranceAct_ = INSURANCE_ACT.INSURANCE_ACT_BET;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                BuyInsuranceInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lPotID_ = 0;
                this.bitField0_ &= -2;
                this.eInsuranceAct_ = INSURANCE_ACT.INSURANCE_ACT_BET;
                this.bitField0_ &= -3;
                this.lBetStacks_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gk;
            }

            public final BuyInsuranceInfo getDefaultInstanceForType() {
                return BuyInsuranceInfo.getDefaultInstance();
            }

            public final BuyInsuranceInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final BuyInsuranceInfo buildPartial() {
                int i = BuyInsuranceInfo.LPOTID_FIELD_NUMBER;
                BuyInsuranceInfo buyInsuranceInfo = new BuyInsuranceInfo(null);
                int i2 = this.bitField0_;
                if ((i2 & BuyInsuranceInfo.LPOTID_FIELD_NUMBER) != BuyInsuranceInfo.LPOTID_FIELD_NUMBER) {
                    i = 0;
                }
                buyInsuranceInfo.lPotID_ = this.lPotID_;
                if ((i2 & BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER) == BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER) {
                    i |= BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER;
                }
                buyInsuranceInfo.eInsuranceAct_ = this.eInsuranceAct_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                buyInsuranceInfo.lBetStacks_ = this.lBetStacks_;
                buyInsuranceInfo.bitField0_ = i;
                onBuilt();
                return buyInsuranceInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof BuyInsuranceInfo) {
                    return mergeFrom((BuyInsuranceInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(BuyInsuranceInfo buyInsuranceInfo) {
                if (buyInsuranceInfo != BuyInsuranceInfo.getDefaultInstance()) {
                    if (buyInsuranceInfo.hasLPotID()) {
                        setLPotID(buyInsuranceInfo.getLPotID());
                    }
                    if (buyInsuranceInfo.hasEInsuranceAct()) {
                        setEInsuranceAct(buyInsuranceInfo.getEInsuranceAct());
                    }
                    if (buyInsuranceInfo.hasLBetStacks()) {
                        setLBetStacks(buyInsuranceInfo.getLBetStacks());
                    }
                    mergeUnknownFields(buyInsuranceInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLPotID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.BuyInsuranceInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.BuyInsuranceInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.BuyInsuranceInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.BuyInsuranceInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.BuyInsuranceInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$BuyInsuranceInfo$Builder");
            }

            public final boolean hasLPotID() {
                return (this.bitField0_ & BuyInsuranceInfo.LPOTID_FIELD_NUMBER) == BuyInsuranceInfo.LPOTID_FIELD_NUMBER;
            }

            public final long getLPotID() {
                return this.lPotID_;
            }

            public final Builder setLPotID(long j) {
                this.bitField0_ |= BuyInsuranceInfo.LPOTID_FIELD_NUMBER;
                this.lPotID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPotID() {
                this.bitField0_ &= -2;
                this.lPotID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEInsuranceAct() {
                return (this.bitField0_ & BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER) == BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER;
            }

            public final INSURANCE_ACT getEInsuranceAct() {
                return this.eInsuranceAct_;
            }

            public final Builder setEInsuranceAct(INSURANCE_ACT insurance_act) {
                if (insurance_act == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= BuyInsuranceInfo.EINSURANCEACT_FIELD_NUMBER;
                this.eInsuranceAct_ = insurance_act;
                onChanged();
                return this;
            }

            public final Builder clearEInsuranceAct() {
                this.bitField0_ &= -3;
                this.eInsuranceAct_ = INSURANCE_ACT.INSURANCE_ACT_BET;
                onChanged();
                return this;
            }

            public final boolean hasLBetStacks() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLBetStacks() {
                return this.lBetStacks_;
            }

            public final Builder setLBetStacks(long j) {
                this.bitField0_ |= 4;
                this.lBetStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBetStacks() {
                this.bitField0_ &= -5;
                this.lBetStacks_ = 0;
                onChanged();
                return this;
            }
        }

        private BuyInsuranceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private BuyInsuranceInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static BuyInsuranceInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final BuyInsuranceInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private BuyInsuranceInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LPOTID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LPOTID_FIELD_NUMBER;
                            this.lPotID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            INSURANCE_ACT valueOf = INSURANCE_ACT.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EINSURANCEACT_FIELD_NUMBER;
                                this.eInsuranceAct_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EINSURANCEACT_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lBetStacks_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LPOTID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gk;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gl.ensureFieldAccessorsInitialized(BuyInsuranceInfo.class, Builder.class);
        }

        static {
            PARSER = new C11171();
            BuyInsuranceInfo buyInsuranceInfo = new BuyInsuranceInfo(true);
            defaultInstance = buyInsuranceInfo;
            buyInsuranceInfo.initFields();
        }

        public final Parser<BuyInsuranceInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasLPotID() {
            return (this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER;
        }

        public final long getLPotID() {
            return this.lPotID_;
        }

        public final boolean hasEInsuranceAct() {
            return (this.bitField0_ & EINSURANCEACT_FIELD_NUMBER) == EINSURANCEACT_FIELD_NUMBER;
        }

        public final INSURANCE_ACT getEInsuranceAct() {
            return this.eInsuranceAct_;
        }

        public final boolean hasLBetStacks() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLBetStacks() {
            return this.lBetStacks_;
        }

        private void initFields() {
            this.lPotID_ = 0;
            this.eInsuranceAct_ = INSURANCE_ACT.INSURANCE_ACT_BET;
            this.lBetStacks_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasLPotID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LPOTID_FIELD_NUMBER, this.lPotID_);
            }
            if ((this.bitField0_ & EINSURANCEACT_FIELD_NUMBER) == EINSURANCEACT_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EINSURANCEACT_FIELD_NUMBER, this.eInsuranceAct_.getNumber());
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LBETSTACKS_FIELD_NUMBER, this.lBetStacks_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LPOTID_FIELD_NUMBER, this.lPotID_) + 0;
            }
            if ((this.bitField0_ & EINSURANCEACT_FIELD_NUMBER) == EINSURANCEACT_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EINSURANCEACT_FIELD_NUMBER, this.eInsuranceAct_.getNumber());
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LBETSTACKS_FIELD_NUMBER, this.lBetStacks_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static BuyInsuranceInfo parseFrom(ByteString byteString) {
            return (BuyInsuranceInfo) PARSER.parseFrom(byteString);
        }

        public static BuyInsuranceInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyInsuranceInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static BuyInsuranceInfo parseFrom(byte[] bArr) {
            return (BuyInsuranceInfo) PARSER.parseFrom(bArr);
        }

        public static BuyInsuranceInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyInsuranceInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static BuyInsuranceInfo parseFrom(InputStream inputStream) {
            return (BuyInsuranceInfo) PARSER.parseFrom(inputStream);
        }

        public static BuyInsuranceInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyInsuranceInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static BuyInsuranceInfo parseDelimitedFrom(InputStream inputStream) {
            return (BuyInsuranceInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static BuyInsuranceInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyInsuranceInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static BuyInsuranceInfo parseFrom(CodedInputStream codedInputStream) {
            return (BuyInsuranceInfo) PARSER.parseFrom(codedInputStream);
        }

        public static BuyInsuranceInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyInsuranceInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(BuyInsuranceInfo buyInsuranceInfo) {
            return newBuilder().mergeFrom(buyInsuranceInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface BuyinControlOrBuilder extends MessageOrBuilder {
        GAME_ROOM_TYPE getEGameRoomType();

        long getLBuyinCreateTime();

        long getLClubID();

        long getLGameRoomID();

        long getLStacks();

        String getSClubName();

        ByteString getSClubNameBytes();

        String getSGameRoomName();

        ByteString getSGameRoomNameBytes();

        UserBaseInfoNet getStUserBaseInfo();

        UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

        boolean hasEGameRoomType();

        boolean hasLBuyinCreateTime();

        boolean hasLClubID();

        boolean hasLGameRoomID();

        boolean hasLStacks();

        boolean hasSClubName();

        boolean hasSGameRoomName();

        boolean hasStUserBaseInfo();
    }

    public static final class BuyinControl extends GeneratedMessage implements BuyinControlOrBuilder {
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 6;
        public static final int LBUYINCREATETIME_FIELD_NUMBER = 3;
        public static final int LCLUBID_FIELD_NUMBER = 7;
        public static final int LGAMEROOMID_FIELD_NUMBER = 4;
        public static final int LSTACKS_FIELD_NUMBER = 2;
        public static Parser<BuyinControl> PARSER = null;
        public static final int SCLUBNAME_FIELD_NUMBER = 8;
        public static final int SGAMEROOMNAME_FIELD_NUMBER = 5;
        public static final int STUSERBASEINFO_FIELD_NUMBER = 1;
        private static final BuyinControl defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private long lBuyinCreateTime_;
        private long lClubID_;
        private long lGameRoomID_;
        private long lStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sClubName_;
        private Object sGameRoomName_;
        private UserBaseInfoNet stUserBaseInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.BuyinControl.1 */
        class C11181 extends AbstractParser<BuyinControl> {
            static {
                fixHelper.fixfunc(new int[]{2006, 2007});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11181();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements BuyinControlOrBuilder {
            private int bitField0_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private long lBuyinCreateTime_;
            private long lClubID_;
            private long lGameRoomID_;
            private long lStacks_;
            private Object sClubName_;
            private Object sGameRoomName_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoBuilder_;
            private UserBaseInfoNet stUserBaseInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cR.ensureFieldAccessorsInitialized(BuyinControl.class, Builder.class);
            }

            private Builder() {
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sGameRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sGameRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (BuyinControl.alwaysUseFieldBuilders) {
                    getStUserBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.lStacks_ = 0;
                this.bitField0_ &= -3;
                this.lBuyinCreateTime_ = 0;
                this.bitField0_ &= -5;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -9;
                this.sGameRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.bitField0_ &= -33;
                this.lClubID_ = 0;
                this.bitField0_ &= -65;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cQ;
            }

            public final BuyinControl getDefaultInstanceForType() {
                return BuyinControl.getDefaultInstance();
            }

            public final BuyinControl build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final BuyinControl buildPartial() {
                BuyinControl buyinControl = new BuyinControl(null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & BuyinControl.STUSERBASEINFO_FIELD_NUMBER) == BuyinControl.STUSERBASEINFO_FIELD_NUMBER) {
                    i2 = BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
                }
                if (this.stUserBaseInfoBuilder_ == null) {
                    buyinControl.stUserBaseInfo_ = this.stUserBaseInfo_;
                } else {
                    buyinControl.stUserBaseInfo_ = (UserBaseInfoNet) this.stUserBaseInfoBuilder_.build();
                }
                if ((i & BuyinControl.LSTACKS_FIELD_NUMBER) == BuyinControl.LSTACKS_FIELD_NUMBER) {
                    i2 |= BuyinControl.LSTACKS_FIELD_NUMBER;
                }
                buyinControl.lStacks_ = this.lStacks_;
                if ((i & BuyinControl.LGAMEROOMID_FIELD_NUMBER) == BuyinControl.LGAMEROOMID_FIELD_NUMBER) {
                    i2 |= BuyinControl.LGAMEROOMID_FIELD_NUMBER;
                }
                buyinControl.lBuyinCreateTime_ = this.lBuyinCreateTime_;
                if ((i & BuyinControl.SCLUBNAME_FIELD_NUMBER) == BuyinControl.SCLUBNAME_FIELD_NUMBER) {
                    i2 |= BuyinControl.SCLUBNAME_FIELD_NUMBER;
                }
                buyinControl.lGameRoomID_ = this.lGameRoomID_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                buyinControl.sGameRoomName_ = this.sGameRoomName_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                buyinControl.eGameRoomType_ = this.eGameRoomType_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                buyinControl.lClubID_ = this.lClubID_;
                if ((i & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i2 |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                buyinControl.sClubName_ = this.sClubName_;
                buyinControl.bitField0_ = i2;
                onBuilt();
                return buyinControl;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof BuyinControl) {
                    return mergeFrom((BuyinControl) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(BuyinControl buyinControl) {
                if (buyinControl != BuyinControl.getDefaultInstance()) {
                    if (buyinControl.hasStUserBaseInfo()) {
                        mergeStUserBaseInfo(buyinControl.getStUserBaseInfo());
                    }
                    if (buyinControl.hasLStacks()) {
                        setLStacks(buyinControl.getLStacks());
                    }
                    if (buyinControl.hasLBuyinCreateTime()) {
                        setLBuyinCreateTime(buyinControl.getLBuyinCreateTime());
                    }
                    if (buyinControl.hasLGameRoomID()) {
                        setLGameRoomID(buyinControl.getLGameRoomID());
                    }
                    if (buyinControl.hasSGameRoomName()) {
                        this.bitField0_ |= 16;
                        this.sGameRoomName_ = buyinControl.sGameRoomName_;
                        onChanged();
                    }
                    if (buyinControl.hasEGameRoomType()) {
                        setEGameRoomType(buyinControl.getEGameRoomType());
                    }
                    if (buyinControl.hasLClubID()) {
                        setLClubID(buyinControl.getLClubID());
                    }
                    if (buyinControl.hasSClubName()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                        this.sClubName_ = buyinControl.sClubName_;
                        onChanged();
                    }
                    mergeUnknownFields(buyinControl.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStUserBaseInfo() && hasLStacks() && hasLBuyinCreateTime() && getStUserBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.BuyinControl.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.BuyinControl.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.BuyinControl) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.BuyinControl) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.BuyinControl.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$BuyinControl$Builder");
            }

            public final boolean hasStUserBaseInfo() {
                return (this.bitField0_ & BuyinControl.STUSERBASEINFO_FIELD_NUMBER) == BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    return this.stUserBaseInfo_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ != null) {
                    this.stUserBaseInfoBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfo_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStUserBaseInfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & BuyinControl.STUSERBASEINFO_FIELD_NUMBER) != BuyinControl.STUSERBASEINFO_FIELD_NUMBER || this.stUserBaseInfo_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfo_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfo_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfo_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoBuilder() {
                this.bitField0_ |= BuyinControl.STUSERBASEINFO_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
                if (this.stUserBaseInfoBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfo_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoFieldBuilder() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfoBuilder_ = new SingleFieldBuilder(getStUserBaseInfo(), getParentForChildren(), isClean());
                    this.stUserBaseInfo_ = null;
                }
                return this.stUserBaseInfoBuilder_;
            }

            public final boolean hasLStacks() {
                return (this.bitField0_ & BuyinControl.LSTACKS_FIELD_NUMBER) == BuyinControl.LSTACKS_FIELD_NUMBER;
            }

            public final long getLStacks() {
                return this.lStacks_;
            }

            public final Builder setLStacks(long j) {
                this.bitField0_ |= BuyinControl.LSTACKS_FIELD_NUMBER;
                this.lStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStacks() {
                this.bitField0_ &= -3;
                this.lStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBuyinCreateTime() {
                return (this.bitField0_ & BuyinControl.LGAMEROOMID_FIELD_NUMBER) == BuyinControl.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLBuyinCreateTime() {
                return this.lBuyinCreateTime_;
            }

            public final Builder setLBuyinCreateTime(long j) {
                this.bitField0_ |= BuyinControl.LGAMEROOMID_FIELD_NUMBER;
                this.lBuyinCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyinCreateTime() {
                this.bitField0_ &= -5;
                this.lBuyinCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & BuyinControl.SCLUBNAME_FIELD_NUMBER) == BuyinControl.SCLUBNAME_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= BuyinControl.SCLUBNAME_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -9;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSGameRoomName() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getSGameRoomName() {
                Object obj = this.sGameRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sGameRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSGameRoomNameBytes() {
                Object obj = this.sGameRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sGameRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSGameRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sGameRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSGameRoomName() {
                this.bitField0_ &= -17;
                this.sGameRoomName_ = BuyinControl.getDefaultInstance().getSGameRoomName();
                onChanged();
                return this;
            }

            public final Builder setSGameRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sGameRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomType() {
                return (this.bitField0_ & 32) == 32;
            }

            public final GAME_ROOM_TYPE getEGameRoomType() {
                return this.eGameRoomType_;
            }

            public final Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type) {
                if (game_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.eGameRoomType_ = game_room_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomType() {
                this.bitField0_ &= -33;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                onChanged();
                return this;
            }

            public final boolean hasLClubID() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLClubID() {
                return this.lClubID_;
            }

            public final Builder setLClubID(long j) {
                this.bitField0_ |= 64;
                this.lClubID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLClubID() {
                this.bitField0_ &= -65;
                this.lClubID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSClubName() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final String getSClubName() {
                Object obj = this.sClubName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sClubName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSClubNameBytes() {
                Object obj = this.sClubName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sClubName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSClubName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.sClubName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSClubName() {
                this.bitField0_ &= -129;
                this.sClubName_ = BuyinControl.getDefaultInstance().getSClubName();
                onChanged();
                return this;
            }

            public final Builder setSClubNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.sClubName_ = byteString;
                onChanged();
                return this;
            }
        }

        private BuyinControl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private BuyinControl(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static BuyinControl getDefaultInstance() {
            return defaultInstance;
        }

        public final BuyinControl getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private BuyinControl(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stUserBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stUserBaseInfo_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stUserBaseInfo_);
                                this.stUserBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LSTACKS_FIELD_NUMBER;
                            this.lStacks_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lBuyinCreateTime_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= SCLUBNAME_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.sGameRoomName_ = readBytes;
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 32;
                                this.eGameRoomType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.lClubID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.sClubName_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STUSERBASEINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cR.ensureFieldAccessorsInitialized(BuyinControl.class, Builder.class);
        }

        static {
            PARSER = new C11181();
            BuyinControl buyinControl = new BuyinControl(true);
            defaultInstance = buyinControl;
            buyinControl.initFields();
        }

        public final Parser<BuyinControl> getParserForType() {
            return PARSER;
        }

        public final boolean hasStUserBaseInfo() {
            return (this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfo() {
            return this.stUserBaseInfo_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
            return this.stUserBaseInfo_;
        }

        public final boolean hasLStacks() {
            return (this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER;
        }

        public final long getLStacks() {
            return this.lStacks_;
        }

        public final boolean hasLBuyinCreateTime() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLBuyinCreateTime() {
            return this.lBuyinCreateTime_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & SCLUBNAME_FIELD_NUMBER) == SCLUBNAME_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasSGameRoomName() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getSGameRoomName() {
            Object obj = this.sGameRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sGameRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSGameRoomNameBytes() {
            Object obj = this.sGameRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sGameRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & 32) == 32;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasLClubID() {
            return (this.bitField0_ & 64) == 64;
        }

        public final long getLClubID() {
            return this.lClubID_;
        }

        public final boolean hasSClubName() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final String getSClubName() {
            Object obj = this.sClubName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sClubName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSClubNameBytes() {
            Object obj = this.sClubName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sClubName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
            this.lStacks_ = 0;
            this.lBuyinCreateTime_ = 0;
            this.lGameRoomID_ = 0;
            this.sGameRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.lClubID_ = 0;
            this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStUserBaseInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLStacks()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBuyinCreateTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStUserBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_);
            }
            if ((this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYINCREATETIME_FIELD_NUMBER, this.lBuyinCreateTime_);
            }
            if ((this.bitField0_ & SCLUBNAME_FIELD_NUMBER) == SCLUBNAME_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(SGAMEROOMNAME_FIELD_NUMBER, getSGameRoomNameBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeBytes(SCLUBNAME_FIELD_NUMBER, getSClubNameBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_) + 0;
            }
            if ((this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBUYINCREATETIME_FIELD_NUMBER, this.lBuyinCreateTime_);
            }
            if ((this.bitField0_ & SCLUBNAME_FIELD_NUMBER) == SCLUBNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(SGAMEROOMNAME_FIELD_NUMBER, getSGameRoomNameBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt64Size(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeBytesSize(SCLUBNAME_FIELD_NUMBER, getSClubNameBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static BuyinControl parseFrom(ByteString byteString) {
            return (BuyinControl) PARSER.parseFrom(byteString);
        }

        public static BuyinControl parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControl) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static BuyinControl parseFrom(byte[] bArr) {
            return (BuyinControl) PARSER.parseFrom(bArr);
        }

        public static BuyinControl parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControl) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static BuyinControl parseFrom(InputStream inputStream) {
            return (BuyinControl) PARSER.parseFrom(inputStream);
        }

        public static BuyinControl parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControl) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static BuyinControl parseDelimitedFrom(InputStream inputStream) {
            return (BuyinControl) PARSER.parseDelimitedFrom(inputStream);
        }

        public static BuyinControl parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControl) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static BuyinControl parseFrom(CodedInputStream codedInputStream) {
            return (BuyinControl) PARSER.parseFrom(codedInputStream);
        }

        public static BuyinControl parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControl) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(BuyinControl buyinControl) {
            return newBuilder().mergeFrom(buyinControl);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface BuyinControlMsgOrBuilder extends MessageOrBuilder {
        BUYIN_CONTROL_MESSAGE_TYPE getEBuyinControlMessageTypeDeny();

        long getLActionUuid();

        long getLBuyStacks();

        long getLBuyinActionID();

        long getLClubID();

        long getLMsgID();

        String getSActionNickname();

        ByteString getSActionNicknameBytes();

        String getSClubName();

        ByteString getSClubNameBytes();

        UserGameInfoNet getStFromUser();

        UserGameInfoNetOrBuilder getStFromUserOrBuilder();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEBuyinControlMessageTypeDeny();

        boolean hasLActionUuid();

        boolean hasLBuyStacks();

        boolean hasLBuyinActionID();

        boolean hasLClubID();

        boolean hasLMsgID();

        boolean hasSActionNickname();

        boolean hasSClubName();

        boolean hasStFromUser();

        boolean hasStGameRoomInfo();
    }

    public static final class BuyinControlMsg extends GeneratedMessage implements BuyinControlMsgOrBuilder {
        public static final int EBUYINCONTROLMESSAGETYPEDENY_FIELD_NUMBER = 5;
        public static final int LACTIONUUID_FIELD_NUMBER = 6;
        public static final int LBUYINACTIONID_FIELD_NUMBER = 1;
        public static final int LBUYSTACKS_FIELD_NUMBER = 3;
        public static final int LCLUBID_FIELD_NUMBER = 9;
        public static final int LMSGID_FIELD_NUMBER = 8;
        public static Parser<BuyinControlMsg> PARSER = null;
        public static final int SACTIONNICKNAME_FIELD_NUMBER = 7;
        public static final int SCLUBNAME_FIELD_NUMBER = 10;
        public static final int STFROMUSER_FIELD_NUMBER = 2;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 4;
        private static final BuyinControlMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private BUYIN_CONTROL_MESSAGE_TYPE eBuyinControlMessageTypeDeny_;
        private long lActionUuid_;
        private long lBuyStacks_;
        private long lBuyinActionID_;
        private long lClubID_;
        private long lMsgID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sActionNickname_;
        private Object sClubName_;
        private UserGameInfoNet stFromUser_;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.BuyinControlMsg.1 */
        class C11191 extends AbstractParser<BuyinControlMsg> {
            C11191() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new BuyinControlMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements BuyinControlMsgOrBuilder {
            private int bitField0_;
            private BUYIN_CONTROL_MESSAGE_TYPE eBuyinControlMessageTypeDeny_;
            private long lActionUuid_;
            private long lBuyStacks_;
            private long lBuyinActionID_;
            private long lClubID_;
            private long lMsgID_;
            private Object sActionNickname_;
            private Object sClubName_;
            private SingleFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> stFromUserBuilder_;
            private UserGameInfoNet stFromUser_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cy;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cz.ensureFieldAccessorsInitialized(BuyinControlMsg.class, Builder.class);
            }

            private Builder() {
                this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.eBuyinControlMessageTypeDeny_ = BUYIN_CONTROL_MESSAGE_TYPE.BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
                this.sActionNickname_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.eBuyinControlMessageTypeDeny_ = BUYIN_CONTROL_MESSAGE_TYPE.BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
                this.sActionNickname_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (BuyinControlMsg.alwaysUseFieldBuilders) {
                    getStFromUserFieldBuilder();
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lBuyinActionID_ = 0;
                this.bitField0_ &= -2;
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -3;
                this.lBuyStacks_ = 0;
                this.bitField0_ &= -5;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -9;
                this.eBuyinControlMessageTypeDeny_ = BUYIN_CONTROL_MESSAGE_TYPE.BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
                this.bitField0_ &= -17;
                this.lActionUuid_ = 0;
                this.bitField0_ &= -33;
                this.sActionNickname_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -65;
                this.lMsgID_ = 0;
                this.bitField0_ &= -129;
                this.lClubID_ = 0;
                this.bitField0_ &= -257;
                this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -513;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cy;
            }

            public final BuyinControlMsg getDefaultInstanceForType() {
                return BuyinControlMsg.getDefaultInstance();
            }

            public final BuyinControlMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final BuyinControlMsg buildPartial() {
                int i;
                int i2 = BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER;
                BuyinControlMsg buyinControlMsg = new BuyinControlMsg(null);
                int i3 = this.bitField0_;
                if ((i3 & BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER) != BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER) {
                    i2 = 0;
                }
                buyinControlMsg.lBuyinActionID_ = this.lBuyinActionID_;
                if ((i3 & BuyinControlMsg.STFROMUSER_FIELD_NUMBER) == BuyinControlMsg.STFROMUSER_FIELD_NUMBER) {
                    i = i2 | BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stFromUserBuilder_ == null) {
                    buyinControlMsg.stFromUser_ = this.stFromUser_;
                } else {
                    buyinControlMsg.stFromUser_ = (UserGameInfoNet) this.stFromUserBuilder_.build();
                }
                if ((i3 & BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER) == BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER) {
                    i |= BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER;
                }
                buyinControlMsg.lBuyStacks_ = this.lBuyStacks_;
                if ((i3 & BuyinControlMsg.LMSGID_FIELD_NUMBER) == BuyinControlMsg.LMSGID_FIELD_NUMBER) {
                    i |= BuyinControlMsg.LMSGID_FIELD_NUMBER;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    buyinControlMsg.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    buyinControlMsg.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((i3 & 16) == 16) {
                    i |= 16;
                }
                buyinControlMsg.eBuyinControlMessageTypeDeny_ = this.eBuyinControlMessageTypeDeny_;
                if ((i3 & 32) == 32) {
                    i |= 32;
                }
                buyinControlMsg.lActionUuid_ = this.lActionUuid_;
                if ((i3 & 64) == 64) {
                    i |= 64;
                }
                buyinControlMsg.sActionNickname_ = this.sActionNickname_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                buyinControlMsg.lMsgID_ = this.lMsgID_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                buyinControlMsg.lClubID_ = this.lClubID_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                buyinControlMsg.sClubName_ = this.sClubName_;
                buyinControlMsg.bitField0_ = i;
                onBuilt();
                return buyinControlMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof BuyinControlMsg) {
                    return mergeFrom((BuyinControlMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(BuyinControlMsg buyinControlMsg) {
                if (buyinControlMsg != BuyinControlMsg.getDefaultInstance()) {
                    if (buyinControlMsg.hasLBuyinActionID()) {
                        setLBuyinActionID(buyinControlMsg.getLBuyinActionID());
                    }
                    if (buyinControlMsg.hasStFromUser()) {
                        mergeStFromUser(buyinControlMsg.getStFromUser());
                    }
                    if (buyinControlMsg.hasLBuyStacks()) {
                        setLBuyStacks(buyinControlMsg.getLBuyStacks());
                    }
                    if (buyinControlMsg.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(buyinControlMsg.getStGameRoomInfo());
                    }
                    if (buyinControlMsg.hasEBuyinControlMessageTypeDeny()) {
                        setEBuyinControlMessageTypeDeny(buyinControlMsg.getEBuyinControlMessageTypeDeny());
                    }
                    if (buyinControlMsg.hasLActionUuid()) {
                        setLActionUuid(buyinControlMsg.getLActionUuid());
                    }
                    if (buyinControlMsg.hasSActionNickname()) {
                        this.bitField0_ |= 64;
                        this.sActionNickname_ = buyinControlMsg.sActionNickname_;
                        onChanged();
                    }
                    if (buyinControlMsg.hasLMsgID()) {
                        setLMsgID(buyinControlMsg.getLMsgID());
                    }
                    if (buyinControlMsg.hasLClubID()) {
                        setLClubID(buyinControlMsg.getLClubID());
                    }
                    if (buyinControlMsg.hasSClubName()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                        this.sClubName_ = buyinControlMsg.sClubName_;
                        onChanged();
                    }
                    mergeUnknownFields(buyinControlMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLBuyinActionID()) {
                    return false;
                }
                if (hasStFromUser() && !getStFromUser().isInitialized()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.BuyinControlMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.BuyinControlMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.BuyinControlMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.BuyinControlMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.BuyinControlMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$BuyinControlMsg$Builder");
            }

            public final boolean hasLBuyinActionID() {
                return (this.bitField0_ & BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER) == BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER;
            }

            public final long getLBuyinActionID() {
                return this.lBuyinActionID_;
            }

            public final Builder setLBuyinActionID(long j) {
                this.bitField0_ |= BuyinControlMsg.LBUYINACTIONID_FIELD_NUMBER;
                this.lBuyinActionID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyinActionID() {
                this.bitField0_ &= -2;
                this.lBuyinActionID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStFromUser() {
                return (this.bitField0_ & BuyinControlMsg.STFROMUSER_FIELD_NUMBER) == BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
            }

            public final UserGameInfoNet getStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    return this.stFromUser_;
                }
                return (UserGameInfoNet) this.stFromUserBuilder_.getMessage();
            }

            public final Builder setStFromUser(UserGameInfoNet userGameInfoNet) {
                if (this.stFromUserBuilder_ != null) {
                    this.stFromUserBuilder_.setMessage(userGameInfoNet);
                } else if (userGameInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stFromUser_ = userGameInfoNet;
                    onChanged();
                }
                this.bitField0_ |= BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder setStFromUser(Builder builder) {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = builder.build();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStFromUser(UserGameInfoNet userGameInfoNet) {
                if (this.stFromUserBuilder_ == null) {
                    if ((this.bitField0_ & BuyinControlMsg.STFROMUSER_FIELD_NUMBER) != BuyinControlMsg.STFROMUSER_FIELD_NUMBER || this.stFromUser_ == UserGameInfoNet.getDefaultInstance()) {
                        this.stFromUser_ = userGameInfoNet;
                    } else {
                        this.stFromUser_ = UserGameInfoNet.newBuilder(this.stFromUser_).mergeFrom(userGameInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stFromUserBuilder_.mergeFrom(userGameInfoNet);
                }
                this.bitField0_ |= BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStFromUserBuilder() {
                this.bitField0_ |= BuyinControlMsg.STFROMUSER_FIELD_NUMBER;
                onChanged();
                return (Builder) getStFromUserFieldBuilder().getBuilder();
            }

            public final UserGameInfoNetOrBuilder getStFromUserOrBuilder() {
                if (this.stFromUserBuilder_ != null) {
                    return (UserGameInfoNetOrBuilder) this.stFromUserBuilder_.getMessageOrBuilder();
                }
                return this.stFromUser_;
            }

            private SingleFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> getStFromUserFieldBuilder() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUserBuilder_ = new SingleFieldBuilder(getStFromUser(), getParentForChildren(), isClean());
                    this.stFromUser_ = null;
                }
                return this.stFromUserBuilder_;
            }

            public final boolean hasLBuyStacks() {
                return (this.bitField0_ & BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER) == BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final long getLBuyStacks() {
                return this.lBuyStacks_;
            }

            public final Builder setLBuyStacks(long j) {
                this.bitField0_ |= BuyinControlMsg.STGAMEROOMINFO_FIELD_NUMBER;
                this.lBuyStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyStacks() {
                this.bitField0_ &= -5;
                this.lBuyStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & BuyinControlMsg.LMSGID_FIELD_NUMBER) == BuyinControlMsg.LMSGID_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= BuyinControlMsg.LMSGID_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= BuyinControlMsg.LMSGID_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & BuyinControlMsg.LMSGID_FIELD_NUMBER) != BuyinControlMsg.LMSGID_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= BuyinControlMsg.LMSGID_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= BuyinControlMsg.LMSGID_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            public final boolean hasEBuyinControlMessageTypeDeny() {
                return (this.bitField0_ & 16) == 16;
            }

            public final BUYIN_CONTROL_MESSAGE_TYPE getEBuyinControlMessageTypeDeny() {
                return this.eBuyinControlMessageTypeDeny_;
            }

            public final Builder setEBuyinControlMessageTypeDeny(BUYIN_CONTROL_MESSAGE_TYPE buyin_control_message_type) {
                if (buyin_control_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.eBuyinControlMessageTypeDeny_ = buyin_control_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEBuyinControlMessageTypeDeny() {
                this.bitField0_ &= -17;
                this.eBuyinControlMessageTypeDeny_ = BUYIN_CONTROL_MESSAGE_TYPE.BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
                onChanged();
                return this;
            }

            public final boolean hasLActionUuid() {
                return (this.bitField0_ & 32) == 32;
            }

            public final long getLActionUuid() {
                return this.lActionUuid_;
            }

            public final Builder setLActionUuid(long j) {
                this.bitField0_ |= 32;
                this.lActionUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLActionUuid() {
                this.bitField0_ &= -33;
                this.lActionUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSActionNickname() {
                return (this.bitField0_ & 64) == 64;
            }

            public final String getSActionNickname() {
                Object obj = this.sActionNickname_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sActionNickname_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSActionNicknameBytes() {
                Object obj = this.sActionNickname_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sActionNickname_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSActionNickname(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.sActionNickname_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSActionNickname() {
                this.bitField0_ &= -65;
                this.sActionNickname_ = BuyinControlMsg.getDefaultInstance().getSActionNickname();
                onChanged();
                return this;
            }

            public final Builder setSActionNicknameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.sActionNickname_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -129;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLClubID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLClubID() {
                return this.lClubID_;
            }

            public final Builder setLClubID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.lClubID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLClubID() {
                this.bitField0_ &= -257;
                this.lClubID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSClubName() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final String getSClubName() {
                Object obj = this.sClubName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sClubName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSClubNameBytes() {
                Object obj = this.sClubName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sClubName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSClubName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sClubName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSClubName() {
                this.bitField0_ &= -513;
                this.sClubName_ = BuyinControlMsg.getDefaultInstance().getSClubName();
                onChanged();
                return this;
            }

            public final Builder setSClubNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sClubName_ = byteString;
                onChanged();
                return this;
            }
        }

        private BuyinControlMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private BuyinControlMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static BuyinControlMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final BuyinControlMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private BuyinControlMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LBUYINACTIONID_FIELD_NUMBER;
                            break;
                        case LMSGID_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LBUYINACTIONID_FIELD_NUMBER;
                            this.lBuyinActionID_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STFROMUSER_FIELD_NUMBER) == STFROMUSER_FIELD_NUMBER) {
                                toBuilder = this.stFromUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stFromUser_ = (UserGameInfoNet) codedInputStream.readMessage(UserGameInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stFromUser_);
                                this.stFromUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STFROMUSER_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            this.lBuyStacks_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                                toBuilder2 = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            readTag = codedInputStream.readEnum();
                            BUYIN_CONTROL_MESSAGE_TYPE valueOf = BUYIN_CONTROL_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 16;
                                this.eBuyinControlMessageTypeDeny_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EBUYINCONTROLMESSAGETYPEDENY_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.lActionUuid_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.sActionNickname_ = readBytes;
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.lClubID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.sClubName_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LBUYINACTIONID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cy;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cz.ensureFieldAccessorsInitialized(BuyinControlMsg.class, Builder.class);
        }

        static {
            PARSER = new C11191();
            BuyinControlMsg buyinControlMsg = new BuyinControlMsg(true);
            defaultInstance = buyinControlMsg;
            buyinControlMsg.initFields();
        }

        public final Parser<BuyinControlMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLBuyinActionID() {
            return (this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER;
        }

        public final long getLBuyinActionID() {
            return this.lBuyinActionID_;
        }

        public final boolean hasStFromUser() {
            return (this.bitField0_ & STFROMUSER_FIELD_NUMBER) == STFROMUSER_FIELD_NUMBER;
        }

        public final UserGameInfoNet getStFromUser() {
            return this.stFromUser_;
        }

        public final UserGameInfoNetOrBuilder getStFromUserOrBuilder() {
            return this.stFromUser_;
        }

        public final boolean hasLBuyStacks() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final long getLBuyStacks() {
            return this.lBuyStacks_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasEBuyinControlMessageTypeDeny() {
            return (this.bitField0_ & 16) == 16;
        }

        public final BUYIN_CONTROL_MESSAGE_TYPE getEBuyinControlMessageTypeDeny() {
            return this.eBuyinControlMessageTypeDeny_;
        }

        public final boolean hasLActionUuid() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLActionUuid() {
            return this.lActionUuid_;
        }

        public final boolean hasSActionNickname() {
            return (this.bitField0_ & 64) == 64;
        }

        public final String getSActionNickname() {
            Object obj = this.sActionNickname_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sActionNickname_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSActionNicknameBytes() {
            Object obj = this.sActionNickname_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sActionNickname_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasLClubID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLClubID() {
            return this.lClubID_;
        }

        public final boolean hasSClubName() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final String getSClubName() {
            Object obj = this.sClubName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sClubName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSClubNameBytes() {
            Object obj = this.sClubName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sClubName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.lBuyinActionID_ = 0;
            this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
            this.lBuyStacks_ = 0;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.eBuyinControlMessageTypeDeny_ = BUYIN_CONTROL_MESSAGE_TYPE.BUYIN_CONTROL_MESSAGE_TYPE_INVITE;
            this.lActionUuid_ = 0;
            this.sActionNickname_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lMsgID_ = 0;
            this.lClubID_ = 0;
            this.sClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLBuyinActionID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStFromUser() && !getStFromUser().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYINACTIONID_FIELD_NUMBER, this.lBuyinActionID_);
            }
            if ((this.bitField0_ & STFROMUSER_FIELD_NUMBER) == STFROMUSER_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYSTACKS_FIELD_NUMBER, this.lBuyStacks_);
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeEnum(EBUYINCONTROLMESSAGETYPEDENY_FIELD_NUMBER, this.eBuyinControlMessageTypeDeny_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeBytes(SACTIONNICKNAME_FIELD_NUMBER, getSActionNicknameBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(SCLUBNAME_FIELD_NUMBER, getSClubNameBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LBUYINACTIONID_FIELD_NUMBER, this.lBuyinActionID_) + 0;
            }
            if ((this.bitField0_ & STFROMUSER_FIELD_NUMBER) == STFROMUSER_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBUYSTACKS_FIELD_NUMBER, this.lBuyStacks_);
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeEnumSize(EBUYINCONTROLMESSAGETYPEDENY_FIELD_NUMBER, this.eBuyinControlMessageTypeDeny_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt64Size(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeBytesSize(SACTIONNICKNAME_FIELD_NUMBER, getSActionNicknameBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt64Size(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(SCLUBNAME_FIELD_NUMBER, getSClubNameBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static BuyinControlMsg parseFrom(ByteString byteString) {
            return (BuyinControlMsg) PARSER.parseFrom(byteString);
        }

        public static BuyinControlMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControlMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static BuyinControlMsg parseFrom(byte[] bArr) {
            return (BuyinControlMsg) PARSER.parseFrom(bArr);
        }

        public static BuyinControlMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControlMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static BuyinControlMsg parseFrom(InputStream inputStream) {
            return (BuyinControlMsg) PARSER.parseFrom(inputStream);
        }

        public static BuyinControlMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControlMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static BuyinControlMsg parseDelimitedFrom(InputStream inputStream) {
            return (BuyinControlMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static BuyinControlMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControlMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static BuyinControlMsg parseFrom(CodedInputStream codedInputStream) {
            return (BuyinControlMsg) PARSER.parseFrom(codedInputStream);
        }

        public static BuyinControlMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (BuyinControlMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(BuyinControlMsg buyinControlMsg) {
            return newBuilder().mergeFrom(buyinControlMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public enum CHAT_MESSAGE_FROM implements ProtocolMessageEnum {
        CHAT_MESSAGE_FROM_ME(0, CHAT_MESSAGE_FROM_ME_VALUE),
        CHAT_MESSAGE_FROM_FRIEND(CHAT_MESSAGE_FROM_ME_VALUE, CHAT_MESSAGE_FROM_FRIEND_VALUE),
        CHAT_MESSAGE_FROM_TIME(CHAT_MESSAGE_FROM_FRIEND_VALUE, CHAT_MESSAGE_FROM_TIME_VALUE),
        CHAT_MESSAGE_FROM_SYSTEM(CHAT_MESSAGE_FROM_TIME_VALUE, CHAT_MESSAGE_FROM_SYSTEM_VALUE);
        
        public static final int CHAT_MESSAGE_FROM_FRIEND_VALUE = 2;
        public static final int CHAT_MESSAGE_FROM_ME_VALUE = 1;
        public static final int CHAT_MESSAGE_FROM_SYSTEM_VALUE = 4;
        public static final int CHAT_MESSAGE_FROM_TIME_VALUE = 3;
        private static final CHAT_MESSAGE_FROM[] VALUES;
        private static EnumLiteMap<CHAT_MESSAGE_FROM> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.CHAT_MESSAGE_FROM.1 */
        class C11201 implements EnumLiteMap<CHAT_MESSAGE_FROM> {
            C11201() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return CHAT_MESSAGE_FROM.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11201();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static CHAT_MESSAGE_FROM valueOf(int i) {
            switch (i) {
                case CHAT_MESSAGE_FROM_ME_VALUE:
                    return CHAT_MESSAGE_FROM_ME;
                case CHAT_MESSAGE_FROM_FRIEND_VALUE:
                    return CHAT_MESSAGE_FROM_FRIEND;
                case CHAT_MESSAGE_FROM_TIME_VALUE:
                    return CHAT_MESSAGE_FROM_TIME;
                case CHAT_MESSAGE_FROM_SYSTEM_VALUE:
                    return CHAT_MESSAGE_FROM_SYSTEM;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CHAT_MESSAGE_FROM> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(CHAT_MESSAGE_FROM_SYSTEM_VALUE);
        }

        public static CHAT_MESSAGE_FROM valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CHAT_MESSAGE_FROM(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum CHAT_MESSAGE_TYPE implements ProtocolMessageEnum {
        CHAT_MESSAGE_TYPE_TEXT(0, CHAT_MESSAGE_TYPE_TEXT_VALUE),
        CHAT_MESSAGE_TYPE_VOICE(CHAT_MESSAGE_TYPE_TEXT_VALUE, CHAT_MESSAGE_TYPE_VOICE_VALUE),
        CHAT_MESSAGE_TYPE_BILL(CHAT_MESSAGE_TYPE_VOICE_VALUE, CHAT_MESSAGE_TYPE_BILL_VALUE),
        CHAT_MESSAGE_TYPE_POKER_PROCESS(CHAT_MESSAGE_TYPE_BILL_VALUE, CHAT_MESSAGE_TYPE_POKER_PROCESS_VALUE),
        CHAT_MESSAGE_TYPE_GAME_CREATE(CHAT_MESSAGE_TYPE_POKER_PROCESS_VALUE, CHAT_MESSAGE_TYPE_GAME_CREATE_VALUE),
        CHAT_MESSAGE_TYPE_PIC(CHAT_MESSAGE_TYPE_GAME_CREATE_VALUE, CHAT_MESSAGE_TYPE_PIC_VALUE),
        CHAT_MESSAGE_TYPE_ENTER_GAME(CHAT_MESSAGE_TYPE_PIC_VALUE, CHAT_MESSAGE_TYPE_ENTER_GAME_VALUE),
        CHAT_MESSAGE_TYPE_OTHER(CHAT_MESSAGE_TYPE_ENTER_GAME_VALUE, CHAT_MESSAGE_TYPE_OTHER_VALUE),
        CHAT_MESSAGE_TYPE_WEBPAGE(CHAT_MESSAGE_TYPE_OTHER_VALUE, CHAT_MESSAGE_TYPE_WEBPAGE_VALUE),
        CHAT_MESSAGE_TYPE_SYSTEM(CHAT_MESSAGE_TYPE_WEBPAGE_VALUE, CHAT_MESSAGE_TYPE_SYSTEM_VALUE),
        CHAT_MESSAGE_TYPE_GAME_SYSTEM(CHAT_MESSAGE_TYPE_SYSTEM_VALUE, CHAT_MESSAGE_TYPE_GAME_SYSTEM_VALUE),
        CHAT_MESSAGE_TYPE_POKER_HISTORY(CHAT_MESSAGE_TYPE_GAME_SYSTEM_VALUE, CHAT_MESSAGE_TYPE_POKER_HISTORY_VALUE);
        
        public static final int CHAT_MESSAGE_TYPE_BILL_VALUE = 3;
        public static final int CHAT_MESSAGE_TYPE_ENTER_GAME_VALUE = 7;
        public static final int CHAT_MESSAGE_TYPE_GAME_CREATE_VALUE = 5;
        public static final int CHAT_MESSAGE_TYPE_GAME_SYSTEM_VALUE = 11;
        public static final int CHAT_MESSAGE_TYPE_OTHER_VALUE = 8;
        public static final int CHAT_MESSAGE_TYPE_PIC_VALUE = 6;
        public static final int CHAT_MESSAGE_TYPE_POKER_HISTORY_VALUE = 12;
        public static final int CHAT_MESSAGE_TYPE_POKER_PROCESS_VALUE = 4;
        public static final int CHAT_MESSAGE_TYPE_SYSTEM_VALUE = 10;
        public static final int CHAT_MESSAGE_TYPE_TEXT_VALUE = 1;
        public static final int CHAT_MESSAGE_TYPE_VOICE_VALUE = 2;
        public static final int CHAT_MESSAGE_TYPE_WEBPAGE_VALUE = 9;
        private static final CHAT_MESSAGE_TYPE[] VALUES;
        private static EnumLiteMap<CHAT_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.CHAT_MESSAGE_TYPE.1 */
        class C11211 implements EnumLiteMap<CHAT_MESSAGE_TYPE> {
            C11211() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return CHAT_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11211();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static CHAT_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case CHAT_MESSAGE_TYPE_TEXT_VALUE:
                    return CHAT_MESSAGE_TYPE_TEXT;
                case CHAT_MESSAGE_TYPE_VOICE_VALUE:
                    return CHAT_MESSAGE_TYPE_VOICE;
                case CHAT_MESSAGE_TYPE_BILL_VALUE:
                    return CHAT_MESSAGE_TYPE_BILL;
                case CHAT_MESSAGE_TYPE_POKER_PROCESS_VALUE:
                    return CHAT_MESSAGE_TYPE_POKER_PROCESS;
                case CHAT_MESSAGE_TYPE_GAME_CREATE_VALUE:
                    return CHAT_MESSAGE_TYPE_GAME_CREATE;
                case CHAT_MESSAGE_TYPE_PIC_VALUE:
                    return CHAT_MESSAGE_TYPE_PIC;
                case CHAT_MESSAGE_TYPE_ENTER_GAME_VALUE:
                    return CHAT_MESSAGE_TYPE_ENTER_GAME;
                case CHAT_MESSAGE_TYPE_OTHER_VALUE:
                    return CHAT_MESSAGE_TYPE_OTHER;
                case CHAT_MESSAGE_TYPE_WEBPAGE_VALUE:
                    return CHAT_MESSAGE_TYPE_WEBPAGE;
                case CHAT_MESSAGE_TYPE_SYSTEM_VALUE:
                    return CHAT_MESSAGE_TYPE_SYSTEM;
                case CHAT_MESSAGE_TYPE_GAME_SYSTEM_VALUE:
                    return CHAT_MESSAGE_TYPE_GAME_SYSTEM;
                case CHAT_MESSAGE_TYPE_POKER_HISTORY_VALUE:
                    return CHAT_MESSAGE_TYPE_POKER_HISTORY;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CHAT_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(CHAT_MESSAGE_TYPE_GAME_CREATE_VALUE);
        }

        public static CHAT_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CHAT_MESSAGE_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum CHAT_ROOM_MESSAGE_TYPE implements ProtocolMessageEnum {
        CHAT_ROOM_MESSAGE_INVITE(0, CHAT_ROOM_MESSAGE_INVITE_VALUE),
        CHAT_ROOM_MESSAGE_ENTER(CHAT_ROOM_MESSAGE_INVITE_VALUE, CHAT_ROOM_MESSAGE_ENTER_VALUE),
        CHAT_ROOM_MESSAGE_LEAVE(CHAT_ROOM_MESSAGE_ENTER_VALUE, CHAT_ROOM_MESSAGE_LEAVE_VALUE),
        CHAT_ROOM_MESSAGE_KICK(CHAT_ROOM_MESSAGE_LEAVE_VALUE, CHAT_ROOM_MESSAGE_KICK_VALUE),
        CHAT_ROOM_MESSAGE_SET(CHAT_ROOM_MESSAGE_KICK_VALUE, CHAT_ROOM_MESSAGE_SET_VALUE),
        CHAT_ROOM_MESSAGE_REMOVECHATROOM(CHAT_ROOM_MESSAGE_SET_VALUE, CHAT_ROOM_MESSAGE_REMOVECHATROOM_VALUE);
        
        public static final int CHAT_ROOM_MESSAGE_ENTER_VALUE = 2;
        public static final int CHAT_ROOM_MESSAGE_INVITE_VALUE = 1;
        public static final int CHAT_ROOM_MESSAGE_KICK_VALUE = 4;
        public static final int CHAT_ROOM_MESSAGE_LEAVE_VALUE = 3;
        public static final int CHAT_ROOM_MESSAGE_REMOVECHATROOM_VALUE = 6;
        public static final int CHAT_ROOM_MESSAGE_SET_VALUE = 5;
        private static final CHAT_ROOM_MESSAGE_TYPE[] VALUES;
        private static EnumLiteMap<CHAT_ROOM_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.CHAT_ROOM_MESSAGE_TYPE.1 */
        class C11221 implements EnumLiteMap<CHAT_ROOM_MESSAGE_TYPE> {
            C11221() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return CHAT_ROOM_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11221();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static CHAT_ROOM_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case CHAT_ROOM_MESSAGE_INVITE_VALUE:
                    return CHAT_ROOM_MESSAGE_INVITE;
                case CHAT_ROOM_MESSAGE_ENTER_VALUE:
                    return CHAT_ROOM_MESSAGE_ENTER;
                case CHAT_ROOM_MESSAGE_LEAVE_VALUE:
                    return CHAT_ROOM_MESSAGE_LEAVE;
                case CHAT_ROOM_MESSAGE_KICK_VALUE:
                    return CHAT_ROOM_MESSAGE_KICK;
                case CHAT_ROOM_MESSAGE_SET_VALUE:
                    return CHAT_ROOM_MESSAGE_SET;
                case CHAT_ROOM_MESSAGE_REMOVECHATROOM_VALUE:
                    return CHAT_ROOM_MESSAGE_REMOVECHATROOM;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CHAT_ROOM_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(8);
        }

        public static CHAT_ROOM_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CHAT_ROOM_MESSAGE_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum CHAT_TYPE implements ProtocolMessageEnum {
        CHAT_TYPE_SINGLE(0, CHAT_TYPE_SINGLE_VALUE),
        CHAT_TYPE_GROUP(CHAT_TYPE_SINGLE_VALUE, CHAT_TYPE_GROUP_VALUE),
        CHAT_TYPE_CLUB(CHAT_TYPE_GROUP_VALUE, CHAT_TYPE_CLUB_VALUE);
        
        public static final int CHAT_TYPE_CLUB_VALUE = 3;
        public static final int CHAT_TYPE_GROUP_VALUE = 2;
        public static final int CHAT_TYPE_SINGLE_VALUE = 1;
        private static final CHAT_TYPE[] VALUES;
        private static EnumLiteMap<CHAT_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.CHAT_TYPE.1 */
        class C11231 implements EnumLiteMap<CHAT_TYPE> {
            C11231() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return CHAT_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11231();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static CHAT_TYPE valueOf(int i) {
            switch (i) {
                case CHAT_TYPE_SINGLE_VALUE:
                    return CHAT_TYPE_SINGLE;
                case CHAT_TYPE_GROUP_VALUE:
                    return CHAT_TYPE_GROUP;
                case CHAT_TYPE_CLUB_VALUE:
                    return CHAT_TYPE_CLUB;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CHAT_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(13);
        }

        public static CHAT_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CHAT_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum CLUB_MESSAGE_TYPE implements ProtocolMessageEnum {
        CLUB_MESSAGE_APPLY(0, CLUB_MESSAGE_APPLY_VALUE),
        CLUB_MESSAGE_ACCEPT(CLUB_MESSAGE_APPLY_VALUE, CLUB_MESSAGE_ACCEPT_VALUE),
        CLUB_MESSAGE_DENY(CLUB_MESSAGE_ACCEPT_VALUE, CLUB_MESSAGE_DENY_VALUE),
        CLUB_MESSAGE_REMOVE(CLUB_MESSAGE_DENY_VALUE, CLUB_MESSAGE_REMOVE_VALUE),
        CLUB_MESSAGE_QUIT(CLUB_MESSAGE_REMOVE_VALUE, CLUB_MESSAGE_QUIT_VALUE),
        CLUB_MESSAGE_ENTER(CLUB_MESSAGE_QUIT_VALUE, CLUB_MESSAGE_ENTER_VALUE),
        CLUB_MESSAGE_DELETE(CLUB_MESSAGE_ENTER_VALUE, CLUB_MESSAGE_DELETE_VALUE),
        CLUB_MESSAGE_SENIOR(CLUB_MESSAGE_DELETE_VALUE, CLUB_MESSAGE_SENIOR_VALUE),
        CLUB_MESSAGE_JIUNIOR(CLUB_MESSAGE_SENIOR_VALUE, CLUB_MESSAGE_JIUNIOR_VALUE),
        CLUB_MESSAGE_FUND(CLUB_MESSAGE_JIUNIOR_VALUE, CLUB_MESSAGE_FUND_VALUE);
        
        public static final int CLUB_MESSAGE_ACCEPT_VALUE = 2;
        public static final int CLUB_MESSAGE_APPLY_VALUE = 1;
        public static final int CLUB_MESSAGE_DELETE_VALUE = 7;
        public static final int CLUB_MESSAGE_DENY_VALUE = 3;
        public static final int CLUB_MESSAGE_ENTER_VALUE = 6;
        public static final int CLUB_MESSAGE_FUND_VALUE = 10;
        public static final int CLUB_MESSAGE_JIUNIOR_VALUE = 9;
        public static final int CLUB_MESSAGE_QUIT_VALUE = 5;
        public static final int CLUB_MESSAGE_REMOVE_VALUE = 4;
        public static final int CLUB_MESSAGE_SENIOR_VALUE = 8;
        private static final CLUB_MESSAGE_TYPE[] VALUES;
        private static EnumLiteMap<CLUB_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.CLUB_MESSAGE_TYPE.1 */
        class C11241 implements EnumLiteMap<CLUB_MESSAGE_TYPE> {
            C11241() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return CLUB_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C11241();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static CLUB_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case CLUB_MESSAGE_APPLY_VALUE:
                    return CLUB_MESSAGE_APPLY;
                case CLUB_MESSAGE_ACCEPT_VALUE:
                    return CLUB_MESSAGE_ACCEPT;
                case CLUB_MESSAGE_DENY_VALUE:
                    return CLUB_MESSAGE_DENY;
                case CLUB_MESSAGE_REMOVE_VALUE:
                    return CLUB_MESSAGE_REMOVE;
                case CLUB_MESSAGE_QUIT_VALUE:
                    return CLUB_MESSAGE_QUIT;
                case CLUB_MESSAGE_ENTER_VALUE:
                    return CLUB_MESSAGE_ENTER;
                case CLUB_MESSAGE_DELETE_VALUE:
                    return CLUB_MESSAGE_DELETE;
                case CLUB_MESSAGE_SENIOR_VALUE:
                    return CLUB_MESSAGE_SENIOR;
                case CLUB_MESSAGE_JIUNIOR_VALUE:
                    return CLUB_MESSAGE_JIUNIOR;
                case CLUB_MESSAGE_FUND_VALUE:
                    return CLUB_MESSAGE_FUND;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CLUB_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(CLUB_MESSAGE_ENTER_VALUE);
        }

        public static CLUB_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CLUB_MESSAGE_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface CSAddChatRoomUserOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSAddChatRoomUser extends GeneratedMessage implements CSAddChatRoomUserOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSAddChatRoomUser> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 3;
        private static final CSAddChatRoomUser defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSAddChatRoomUser.1 */
        class C11251 extends AbstractParser<CSAddChatRoomUser> {
            C11251() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSAddChatRoomUser(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSAddChatRoomUserOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aM;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aN.ensureFieldAccessorsInitialized(CSAddChatRoomUser.class, Builder.class);
            }

            private Builder() {
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSAddChatRoomUser.alwaysUseFieldBuilders) {
                    getVUserBaseInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aM;
            }

            public final CSAddChatRoomUser getDefaultInstanceForType() {
                return CSAddChatRoomUser.getDefaultInstance();
            }

            public final CSAddChatRoomUser build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSAddChatRoomUser buildPartial() {
                int i = CSAddChatRoomUser.UUID_FIELD_NUMBER;
                CSAddChatRoomUser cSAddChatRoomUser = new CSAddChatRoomUser(null);
                int i2 = this.bitField0_;
                if ((i2 & CSAddChatRoomUser.UUID_FIELD_NUMBER) != CSAddChatRoomUser.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSAddChatRoomUser.uuid_ = this.uuid_;
                if ((i2 & CSAddChatRoomUser.LROOMID_FIELD_NUMBER) == CSAddChatRoomUser.LROOMID_FIELD_NUMBER) {
                    i |= CSAddChatRoomUser.LROOMID_FIELD_NUMBER;
                }
                cSAddChatRoomUser.lRoomID_ = this.lRoomID_;
                if (this.vUserBaseInfosBuilder_ == null) {
                    if ((this.bitField0_ & 4) == 4) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                        this.bitField0_ &= -5;
                    }
                    cSAddChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfos_;
                } else {
                    cSAddChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfosBuilder_.build();
                }
                cSAddChatRoomUser.bitField0_ = i;
                onBuilt();
                return cSAddChatRoomUser;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSAddChatRoomUser) {
                    return mergeFrom((CSAddChatRoomUser) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSAddChatRoomUser cSAddChatRoomUser) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (cSAddChatRoomUser != CSAddChatRoomUser.getDefaultInstance()) {
                    if (cSAddChatRoomUser.hasUuid()) {
                        setUuid(cSAddChatRoomUser.getUuid());
                    }
                    if (cSAddChatRoomUser.hasLRoomID()) {
                        setLRoomID(cSAddChatRoomUser.getLRoomID());
                    }
                    if (this.vUserBaseInfosBuilder_ == null) {
                        if (!cSAddChatRoomUser.vUserBaseInfos_.isEmpty()) {
                            if (this.vUserBaseInfos_.isEmpty()) {
                                this.vUserBaseInfos_ = cSAddChatRoomUser.vUserBaseInfos_;
                                this.bitField0_ &= -5;
                            } else {
                                ensureVUserBaseInfosIsMutable();
                                this.vUserBaseInfos_.addAll(cSAddChatRoomUser.vUserBaseInfos_);
                            }
                            onChanged();
                        }
                    } else if (!cSAddChatRoomUser.vUserBaseInfos_.isEmpty()) {
                        if (this.vUserBaseInfosBuilder_.isEmpty()) {
                            this.vUserBaseInfosBuilder_.dispose();
                            this.vUserBaseInfosBuilder_ = null;
                            this.vUserBaseInfos_ = cSAddChatRoomUser.vUserBaseInfos_;
                            this.bitField0_ &= -5;
                            if (CSAddChatRoomUser.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVUserBaseInfosFieldBuilder();
                            }
                            this.vUserBaseInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vUserBaseInfosBuilder_.addAllMessages(cSAddChatRoomUser.vUserBaseInfos_);
                        }
                    }
                    mergeUnknownFields(cSAddChatRoomUser.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasLRoomID()) {
                    return false;
                }
                for (int i = 0; i < getVUserBaseInfosCount(); i += CSAddChatRoomUser.UUID_FIELD_NUMBER) {
                    if (!getVUserBaseInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSAddChatRoomUser.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSAddChatRoomUser.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSAddChatRoomUser) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSAddChatRoomUser) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSAddChatRoomUser.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSAddChatRoomUser$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSAddChatRoomUser.UUID_FIELD_NUMBER) == CSAddChatRoomUser.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSAddChatRoomUser.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSAddChatRoomUser.LROOMID_FIELD_NUMBER) == CSAddChatRoomUser.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSAddChatRoomUser.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            private void ensureVUserBaseInfosIsMutable() {
                if ((this.bitField0_ & 4) != 4) {
                    this.vUserBaseInfos_ = new ArrayList(this.vUserBaseInfos_);
                    this.bitField0_ |= 4;
                }
            }

            public final List<UserBaseInfoNet> getVUserBaseInfosList() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUserBaseInfos_);
                }
                return this.vUserBaseInfosBuilder_.getMessageList();
            }

            public final int getVUserBaseInfosCount() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return this.vUserBaseInfos_.size();
                }
                return this.vUserBaseInfosBuilder_.getCount();
            }

            public final UserBaseInfoNet getVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNet) this.vUserBaseInfosBuilder_.getMessage(i);
            }

            public final Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUserBaseInfos_);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUserBaseInfos() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.remove(i);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.vUserBaseInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
                if (this.vUserBaseInfosBuilder_ != null) {
                    return this.vUserBaseInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUserBaseInfos_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList() {
                return getVUserBaseInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfosBuilder_ = new RepeatedFieldBuilder(this.vUserBaseInfos_, (this.bitField0_ & 4) == 4, getParentForChildren(), isClean());
                    this.vUserBaseInfos_ = null;
                }
                return this.vUserBaseInfosBuilder_;
            }
        }

        private CSAddChatRoomUser(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSAddChatRoomUser(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSAddChatRoomUser getDefaultInstance() {
            return defaultInstance;
        }

        public final CSAddChatRoomUser getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSAddChatRoomUser(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            if ((i & 4) != 4) {
                                this.vUserBaseInfos_ = new ArrayList();
                                i |= 4;
                            }
                            this.vUserBaseInfos_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & 4) == 4) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & 4) == 4) {
                this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aM;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aN.ensureFieldAccessorsInitialized(CSAddChatRoomUser.class, Builder.class);
        }

        static {
            PARSER = new C11251();
            CSAddChatRoomUser cSAddChatRoomUser = new CSAddChatRoomUser(true);
            defaultInstance = cSAddChatRoomUser;
            cSAddChatRoomUser.initFields();
        }

        public final Parser<CSAddChatRoomUser> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final List<UserBaseInfoNet> getVUserBaseInfosList() {
            return this.vUserBaseInfos_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
            return this.vUserBaseInfos_;
        }

        public final int getVUserBaseInfosCount() {
            return this.vUserBaseInfos_.size();
        }

        public final UserBaseInfoNet getVUserBaseInfos(int i) {
            return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.vUserBaseInfos_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                int i = 0;
                while (i < getVUserBaseInfosCount()) {
                    if (getVUserBaseInfos(i).isInitialized()) {
                        i += UUID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            for (int i = 0; i < this.vUserBaseInfos_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            int i3 = i2;
            while (i < this.vUserBaseInfos_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i)) + i3;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSAddChatRoomUser parseFrom(ByteString byteString) {
            return (CSAddChatRoomUser) PARSER.parseFrom(byteString);
        }

        public static CSAddChatRoomUser parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSAddChatRoomUser) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSAddChatRoomUser parseFrom(byte[] bArr) {
            return (CSAddChatRoomUser) PARSER.parseFrom(bArr);
        }

        public static CSAddChatRoomUser parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSAddChatRoomUser) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSAddChatRoomUser parseFrom(InputStream inputStream) {
            return (CSAddChatRoomUser) PARSER.parseFrom(inputStream);
        }

        public static CSAddChatRoomUser parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSAddChatRoomUser) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSAddChatRoomUser parseDelimitedFrom(InputStream inputStream) {
            return (CSAddChatRoomUser) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSAddChatRoomUser parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSAddChatRoomUser) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSAddChatRoomUser parseFrom(CodedInputStream codedInputStream) {
            return (CSAddChatRoomUser) PARSER.parseFrom(codedInputStream);
        }

        public static CSAddChatRoomUser parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSAddChatRoomUser) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSAddChatRoomUser cSAddChatRoomUser) {
            return newBuilder().mergeFrom(cSAddChatRoomUser);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSBuyBuyInOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getLStacks();

        long getUuid();

        boolean hasLRoomID();

        boolean hasLStacks();

        boolean hasUuid();
    }

    public static final class CSBuyBuyIn extends GeneratedMessage implements CSBuyBuyInOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static final int LSTACKS_FIELD_NUMBER = 3;
        public static Parser<CSBuyBuyIn> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyBuyIn defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private long lStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyBuyIn.1 */
        class C11261 extends AbstractParser<CSBuyBuyIn> {
            static {
                fixHelper.fixfunc(new int[]{1845, 1846});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11261();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyBuyInOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long lStacks_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.du;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dv.ensureFieldAccessorsInitialized(CSBuyBuyIn.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSBuyBuyIn.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lStacks_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.du;
            }

            public final CSBuyBuyIn getDefaultInstanceForType() {
                return CSBuyBuyIn.getDefaultInstance();
            }

            public final CSBuyBuyIn build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSBuyBuyIn buildPartial() {
                int i = CSBuyBuyIn.UUID_FIELD_NUMBER;
                CSBuyBuyIn cSBuyBuyIn = new CSBuyBuyIn(null);
                int i2 = this.bitField0_;
                if ((i2 & CSBuyBuyIn.UUID_FIELD_NUMBER) != CSBuyBuyIn.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSBuyBuyIn.uuid_ = this.uuid_;
                if ((i2 & CSBuyBuyIn.LROOMID_FIELD_NUMBER) == CSBuyBuyIn.LROOMID_FIELD_NUMBER) {
                    i |= CSBuyBuyIn.LROOMID_FIELD_NUMBER;
                }
                cSBuyBuyIn.lRoomID_ = this.lRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSBuyBuyIn.lStacks_ = this.lStacks_;
                cSBuyBuyIn.bitField0_ = i;
                onBuilt();
                return cSBuyBuyIn;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSBuyBuyIn) {
                    return mergeFrom((CSBuyBuyIn) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSBuyBuyIn cSBuyBuyIn) {
                if (cSBuyBuyIn != CSBuyBuyIn.getDefaultInstance()) {
                    if (cSBuyBuyIn.hasUuid()) {
                        setUuid(cSBuyBuyIn.getUuid());
                    }
                    if (cSBuyBuyIn.hasLRoomID()) {
                        setLRoomID(cSBuyBuyIn.getLRoomID());
                    }
                    if (cSBuyBuyIn.hasLStacks()) {
                        setLStacks(cSBuyBuyIn.getLStacks());
                    }
                    mergeUnknownFields(cSBuyBuyIn.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSBuyBuyIn.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSBuyBuyIn.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyBuyIn) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyBuyIn) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSBuyBuyIn.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSBuyBuyIn$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSBuyBuyIn.UUID_FIELD_NUMBER) == CSBuyBuyIn.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSBuyBuyIn.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSBuyBuyIn.LROOMID_FIELD_NUMBER) == CSBuyBuyIn.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSBuyBuyIn.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLStacks() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLStacks() {
                return this.lStacks_;
            }

            public final Builder setLStacks(long j) {
                this.bitField0_ |= 4;
                this.lStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStacks() {
                this.bitField0_ &= -5;
                this.lStacks_ = 0;
                onChanged();
                return this;
            }
        }

        private CSBuyBuyIn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyBuyIn(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyBuyIn getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyBuyIn getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyBuyIn(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lStacks_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.du;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dv.ensureFieldAccessorsInitialized(CSBuyBuyIn.class, Builder.class);
        }

        static {
            PARSER = new C11261();
            CSBuyBuyIn cSBuyBuyIn = new CSBuyBuyIn(true);
            defaultInstance = cSBuyBuyIn;
            cSBuyBuyIn.initFields();
        }

        public final Parser<CSBuyBuyIn> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasLStacks() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLStacks() {
            return this.lStacks_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.lStacks_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyBuyIn parseFrom(ByteString byteString) {
            return (CSBuyBuyIn) PARSER.parseFrom(byteString);
        }

        public static CSBuyBuyIn parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyIn) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyBuyIn parseFrom(byte[] bArr) {
            return (CSBuyBuyIn) PARSER.parseFrom(bArr);
        }

        public static CSBuyBuyIn parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyIn) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyBuyIn parseFrom(InputStream inputStream) {
            return (CSBuyBuyIn) PARSER.parseFrom(inputStream);
        }

        public static CSBuyBuyIn parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyIn) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyBuyIn parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyBuyIn) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyBuyIn parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyIn) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyBuyIn parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyBuyIn) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyBuyIn parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyIn) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyBuyIn cSBuyBuyIn) {
            return newBuilder().mergeFrom(cSBuyBuyIn);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSBuyBuyInV2OrBuilder extends MessageOrBuilder {
        long getLClubID();

        long getLRoomID();

        long getLStacks();

        long getUuid();

        boolean hasLClubID();

        boolean hasLRoomID();

        boolean hasLStacks();

        boolean hasUuid();
    }

    public static final class CSBuyBuyInV2 extends GeneratedMessage implements CSBuyBuyInV2OrBuilder {
        public static final int LCLUBID_FIELD_NUMBER = 4;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static final int LSTACKS_FIELD_NUMBER = 3;
        public static Parser<CSBuyBuyInV2> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyBuyInV2 defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lClubID_;
        private long lRoomID_;
        private long lStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyBuyInV2.1 */
        class C11271 extends AbstractParser<CSBuyBuyInV2> {
            static {
                fixHelper.fixfunc(new int[]{3028, 3029});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11271();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyBuyInV2OrBuilder {
            private int bitField0_;
            private long lClubID_;
            private long lRoomID_;
            private long lStacks_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dy;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dz.ensureFieldAccessorsInitialized(CSBuyBuyInV2.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSBuyBuyInV2.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lStacks_ = 0;
                this.bitField0_ &= -5;
                this.lClubID_ = 0;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dy;
            }

            public final CSBuyBuyInV2 getDefaultInstanceForType() {
                return CSBuyBuyInV2.getDefaultInstance();
            }

            public final CSBuyBuyInV2 build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSBuyBuyInV2 buildPartial() {
                int i = CSBuyBuyInV2.UUID_FIELD_NUMBER;
                CSBuyBuyInV2 cSBuyBuyInV2 = new CSBuyBuyInV2(null);
                int i2 = this.bitField0_;
                if ((i2 & CSBuyBuyInV2.UUID_FIELD_NUMBER) != CSBuyBuyInV2.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSBuyBuyInV2.uuid_ = this.uuid_;
                if ((i2 & CSBuyBuyInV2.LROOMID_FIELD_NUMBER) == CSBuyBuyInV2.LROOMID_FIELD_NUMBER) {
                    i |= CSBuyBuyInV2.LROOMID_FIELD_NUMBER;
                }
                cSBuyBuyInV2.lRoomID_ = this.lRoomID_;
                if ((i2 & CSBuyBuyInV2.LCLUBID_FIELD_NUMBER) == CSBuyBuyInV2.LCLUBID_FIELD_NUMBER) {
                    i |= CSBuyBuyInV2.LCLUBID_FIELD_NUMBER;
                }
                cSBuyBuyInV2.lStacks_ = this.lStacks_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSBuyBuyInV2.lClubID_ = this.lClubID_;
                cSBuyBuyInV2.bitField0_ = i;
                onBuilt();
                return cSBuyBuyInV2;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSBuyBuyInV2) {
                    return mergeFrom((CSBuyBuyInV2) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSBuyBuyInV2 cSBuyBuyInV2) {
                if (cSBuyBuyInV2 != CSBuyBuyInV2.getDefaultInstance()) {
                    if (cSBuyBuyInV2.hasUuid()) {
                        setUuid(cSBuyBuyInV2.getUuid());
                    }
                    if (cSBuyBuyInV2.hasLRoomID()) {
                        setLRoomID(cSBuyBuyInV2.getLRoomID());
                    }
                    if (cSBuyBuyInV2.hasLStacks()) {
                        setLStacks(cSBuyBuyInV2.getLStacks());
                    }
                    if (cSBuyBuyInV2.hasLClubID()) {
                        setLClubID(cSBuyBuyInV2.getLClubID());
                    }
                    mergeUnknownFields(cSBuyBuyInV2.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSBuyBuyInV2.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSBuyBuyInV2.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyBuyInV2) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyBuyInV2) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSBuyBuyInV2.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSBuyBuyInV2$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSBuyBuyInV2.UUID_FIELD_NUMBER) == CSBuyBuyInV2.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSBuyBuyInV2.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSBuyBuyInV2.LROOMID_FIELD_NUMBER) == CSBuyBuyInV2.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSBuyBuyInV2.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLStacks() {
                return (this.bitField0_ & CSBuyBuyInV2.LCLUBID_FIELD_NUMBER) == CSBuyBuyInV2.LCLUBID_FIELD_NUMBER;
            }

            public final long getLStacks() {
                return this.lStacks_;
            }

            public final Builder setLStacks(long j) {
                this.bitField0_ |= CSBuyBuyInV2.LCLUBID_FIELD_NUMBER;
                this.lStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStacks() {
                this.bitField0_ &= -5;
                this.lStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLClubID() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLClubID() {
                return this.lClubID_;
            }

            public final Builder setLClubID(long j) {
                this.bitField0_ |= 8;
                this.lClubID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLClubID() {
                this.bitField0_ &= -9;
                this.lClubID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSBuyBuyInV2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyBuyInV2(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyBuyInV2 getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyBuyInV2 getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyBuyInV2(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LCLUBID_FIELD_NUMBER;
                            this.lStacks_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lClubID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dy;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dz.ensureFieldAccessorsInitialized(CSBuyBuyInV2.class, Builder.class);
        }

        static {
            PARSER = new C11271();
            CSBuyBuyInV2 cSBuyBuyInV2 = new CSBuyBuyInV2(true);
            defaultInstance = cSBuyBuyInV2;
            cSBuyBuyInV2.initFields();
        }

        public final Parser<CSBuyBuyInV2> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasLStacks() {
            return (this.bitField0_ & LCLUBID_FIELD_NUMBER) == LCLUBID_FIELD_NUMBER;
        }

        public final long getLStacks() {
            return this.lStacks_;
        }

        public final boolean hasLClubID() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLClubID() {
            return this.lClubID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.lStacks_ = 0;
            this.lClubID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & LCLUBID_FIELD_NUMBER) == LCLUBID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & LCLUBID_FIELD_NUMBER) == LCLUBID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LCLUBID_FIELD_NUMBER, this.lClubID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyBuyInV2 parseFrom(ByteString byteString) {
            return (CSBuyBuyInV2) PARSER.parseFrom(byteString);
        }

        public static CSBuyBuyInV2 parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyInV2) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyBuyInV2 parseFrom(byte[] bArr) {
            return (CSBuyBuyInV2) PARSER.parseFrom(bArr);
        }

        public static CSBuyBuyInV2 parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyInV2) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyBuyInV2 parseFrom(InputStream inputStream) {
            return (CSBuyBuyInV2) PARSER.parseFrom(inputStream);
        }

        public static CSBuyBuyInV2 parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyInV2) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyBuyInV2 parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyBuyInV2) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyBuyInV2 parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyInV2) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyBuyInV2 parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyBuyInV2) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyBuyInV2 parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyBuyInV2) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyBuyInV2 cSBuyBuyInV2) {
            return newBuilder().mergeFrom(cSBuyBuyInV2);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSBuyInsuranceOrBuilder extends MessageOrBuilder {
        GAME_ROOM_GAME_STATE getEGameRoomStatus();

        long getLGameHandID();

        long getLGameRoomID();

        BuyInsuranceInfo getStBuyInsuranceInfo(int i);

        int getStBuyInsuranceInfoCount();

        List<BuyInsuranceInfo> getStBuyInsuranceInfoList();

        BuyInsuranceInfoOrBuilder getStBuyInsuranceInfoOrBuilder(int i);

        List<? extends BuyInsuranceInfoOrBuilder> getStBuyInsuranceInfoOrBuilderList();

        long getUuid();

        boolean hasEGameRoomStatus();

        boolean hasLGameHandID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSBuyInsurance extends GeneratedMessage implements CSBuyInsuranceOrBuilder {
        public static final int EGAMEROOMSTATUS_FIELD_NUMBER = 4;
        public static final int LGAMEHANDID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSBuyInsurance> PARSER = null;
        public static final int STBUYINSURANCEINFO_FIELD_NUMBER = 5;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyInsurance defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ROOM_GAME_STATE eGameRoomStatus_;
        private long lGameHandID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private List<BuyInsuranceInfo> stBuyInsuranceInfo_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyInsurance.1 */
        class C11281 extends AbstractParser<CSBuyInsurance> {
            C11281() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSBuyInsurance(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyInsuranceOrBuilder {
            private int bitField0_;
            private GAME_ROOM_GAME_STATE eGameRoomStatus_;
            private long lGameHandID_;
            private long lGameRoomID_;
            private RepeatedFieldBuilder<BuyInsuranceInfo, Builder, BuyInsuranceInfoOrBuilder> stBuyInsuranceInfoBuilder_;
            private List<BuyInsuranceInfo> stBuyInsuranceInfo_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gm;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gn.ensureFieldAccessorsInitialized(CSBuyInsurance.class, Builder.class);
            }

            private Builder() {
                this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.stBuyInsuranceInfo_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.stBuyInsuranceInfo_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSBuyInsurance.alwaysUseFieldBuilders) {
                    getStBuyInsuranceInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lGameHandID_ = 0;
                this.bitField0_ &= -5;
                this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.bitField0_ &= -9;
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    this.stBuyInsuranceInfo_ = Collections.emptyList();
                    this.bitField0_ &= -17;
                } else {
                    this.stBuyInsuranceInfoBuilder_.clear();
                }
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gm;
            }

            public final CSBuyInsurance getDefaultInstanceForType() {
                return CSBuyInsurance.getDefaultInstance();
            }

            public final CSBuyInsurance build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSBuyInsurance buildPartial() {
                int i = CSBuyInsurance.UUID_FIELD_NUMBER;
                CSBuyInsurance cSBuyInsurance = new CSBuyInsurance(null);
                int i2 = this.bitField0_;
                if ((i2 & CSBuyInsurance.UUID_FIELD_NUMBER) != CSBuyInsurance.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSBuyInsurance.uuid_ = this.uuid_;
                if ((i2 & CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER) == CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER;
                }
                cSBuyInsurance.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER) == CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER) {
                    i |= CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER;
                }
                cSBuyInsurance.lGameHandID_ = this.lGameHandID_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSBuyInsurance.eGameRoomStatus_ = this.eGameRoomStatus_;
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    if ((this.bitField0_ & 16) == 16) {
                        this.stBuyInsuranceInfo_ = Collections.unmodifiableList(this.stBuyInsuranceInfo_);
                        this.bitField0_ &= -17;
                    }
                    cSBuyInsurance.stBuyInsuranceInfo_ = this.stBuyInsuranceInfo_;
                } else {
                    cSBuyInsurance.stBuyInsuranceInfo_ = this.stBuyInsuranceInfoBuilder_.build();
                }
                cSBuyInsurance.bitField0_ = i;
                onBuilt();
                return cSBuyInsurance;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSBuyInsurance) {
                    return mergeFrom((CSBuyInsurance) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSBuyInsurance cSBuyInsurance) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (cSBuyInsurance != CSBuyInsurance.getDefaultInstance()) {
                    if (cSBuyInsurance.hasUuid()) {
                        setUuid(cSBuyInsurance.getUuid());
                    }
                    if (cSBuyInsurance.hasLGameRoomID()) {
                        setLGameRoomID(cSBuyInsurance.getLGameRoomID());
                    }
                    if (cSBuyInsurance.hasLGameHandID()) {
                        setLGameHandID(cSBuyInsurance.getLGameHandID());
                    }
                    if (cSBuyInsurance.hasEGameRoomStatus()) {
                        setEGameRoomStatus(cSBuyInsurance.getEGameRoomStatus());
                    }
                    if (this.stBuyInsuranceInfoBuilder_ == null) {
                        if (!cSBuyInsurance.stBuyInsuranceInfo_.isEmpty()) {
                            if (this.stBuyInsuranceInfo_.isEmpty()) {
                                this.stBuyInsuranceInfo_ = cSBuyInsurance.stBuyInsuranceInfo_;
                                this.bitField0_ &= -17;
                            } else {
                                ensureStBuyInsuranceInfoIsMutable();
                                this.stBuyInsuranceInfo_.addAll(cSBuyInsurance.stBuyInsuranceInfo_);
                            }
                            onChanged();
                        }
                    } else if (!cSBuyInsurance.stBuyInsuranceInfo_.isEmpty()) {
                        if (this.stBuyInsuranceInfoBuilder_.isEmpty()) {
                            this.stBuyInsuranceInfoBuilder_.dispose();
                            this.stBuyInsuranceInfoBuilder_ = null;
                            this.stBuyInsuranceInfo_ = cSBuyInsurance.stBuyInsuranceInfo_;
                            this.bitField0_ &= -17;
                            if (CSBuyInsurance.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getStBuyInsuranceInfoFieldBuilder();
                            }
                            this.stBuyInsuranceInfoBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.stBuyInsuranceInfoBuilder_.addAllMessages(cSBuyInsurance.stBuyInsuranceInfo_);
                        }
                    }
                    mergeUnknownFields(cSBuyInsurance.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasLGameRoomID() || !hasLGameHandID()) {
                    return false;
                }
                for (int i = 0; i < getStBuyInsuranceInfoCount(); i += CSBuyInsurance.UUID_FIELD_NUMBER) {
                    if (!getStBuyInsuranceInfo(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSBuyInsurance.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSBuyInsurance.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyInsurance) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyInsurance) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSBuyInsurance.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSBuyInsurance$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSBuyInsurance.UUID_FIELD_NUMBER) == CSBuyInsurance.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSBuyInsurance.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER) == CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSBuyInsurance.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameHandID() {
                return (this.bitField0_ & CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER) == CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER;
            }

            public final long getLGameHandID() {
                return this.lGameHandID_;
            }

            public final Builder setLGameHandID(long j) {
                this.bitField0_ |= CSBuyInsurance.EGAMEROOMSTATUS_FIELD_NUMBER;
                this.lGameHandID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameHandID() {
                this.bitField0_ &= -5;
                this.lGameHandID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomStatus() {
                return (this.bitField0_ & 8) == 8;
            }

            public final GAME_ROOM_GAME_STATE getEGameRoomStatus() {
                return this.eGameRoomStatus_;
            }

            public final Builder setEGameRoomStatus(GAME_ROOM_GAME_STATE game_room_game_state) {
                if (game_room_game_state == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.eGameRoomStatus_ = game_room_game_state;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomStatus() {
                this.bitField0_ &= -9;
                this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                onChanged();
                return this;
            }

            private void ensureStBuyInsuranceInfoIsMutable() {
                if ((this.bitField0_ & 16) != 16) {
                    this.stBuyInsuranceInfo_ = new ArrayList(this.stBuyInsuranceInfo_);
                    this.bitField0_ |= 16;
                }
            }

            public final List<BuyInsuranceInfo> getStBuyInsuranceInfoList() {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    return Collections.unmodifiableList(this.stBuyInsuranceInfo_);
                }
                return this.stBuyInsuranceInfoBuilder_.getMessageList();
            }

            public final int getStBuyInsuranceInfoCount() {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    return this.stBuyInsuranceInfo_.size();
                }
                return this.stBuyInsuranceInfoBuilder_.getCount();
            }

            public final BuyInsuranceInfo getStBuyInsuranceInfo(int i) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    return (BuyInsuranceInfo) this.stBuyInsuranceInfo_.get(i);
                }
                return (BuyInsuranceInfo) this.stBuyInsuranceInfoBuilder_.getMessage(i);
            }

            public final Builder setStBuyInsuranceInfo(int i, BuyInsuranceInfo buyInsuranceInfo) {
                if (this.stBuyInsuranceInfoBuilder_ != null) {
                    this.stBuyInsuranceInfoBuilder_.setMessage(i, buyInsuranceInfo);
                } else if (buyInsuranceInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.set(i, buyInsuranceInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder setStBuyInsuranceInfo(int i, Builder builder) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.set(i, builder.build());
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addStBuyInsuranceInfo(BuyInsuranceInfo buyInsuranceInfo) {
                if (this.stBuyInsuranceInfoBuilder_ != null) {
                    this.stBuyInsuranceInfoBuilder_.addMessage(buyInsuranceInfo);
                } else if (buyInsuranceInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.add(buyInsuranceInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addStBuyInsuranceInfo(int i, BuyInsuranceInfo buyInsuranceInfo) {
                if (this.stBuyInsuranceInfoBuilder_ != null) {
                    this.stBuyInsuranceInfoBuilder_.addMessage(i, buyInsuranceInfo);
                } else if (buyInsuranceInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.add(i, buyInsuranceInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addStBuyInsuranceInfo(Builder builder) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.add(builder.build());
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addStBuyInsuranceInfo(int i, Builder builder) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.add(i, builder.build());
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllStBuyInsuranceInfo(Iterable<? extends BuyInsuranceInfo> iterable) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    ensureStBuyInsuranceInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.stBuyInsuranceInfo_);
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearStBuyInsuranceInfo() {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    this.stBuyInsuranceInfo_ = Collections.emptyList();
                    this.bitField0_ &= -17;
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.clear();
                }
                return this;
            }

            public final Builder removeStBuyInsuranceInfo(int i) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    ensureStBuyInsuranceInfoIsMutable();
                    this.stBuyInsuranceInfo_.remove(i);
                    onChanged();
                } else {
                    this.stBuyInsuranceInfoBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getStBuyInsuranceInfoBuilder(int i) {
                return (Builder) getStBuyInsuranceInfoFieldBuilder().getBuilder(i);
            }

            public final BuyInsuranceInfoOrBuilder getStBuyInsuranceInfoOrBuilder(int i) {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    return (BuyInsuranceInfoOrBuilder) this.stBuyInsuranceInfo_.get(i);
                }
                return (BuyInsuranceInfoOrBuilder) this.stBuyInsuranceInfoBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends BuyInsuranceInfoOrBuilder> getStBuyInsuranceInfoOrBuilderList() {
                if (this.stBuyInsuranceInfoBuilder_ != null) {
                    return this.stBuyInsuranceInfoBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.stBuyInsuranceInfo_);
            }

            public final Builder addStBuyInsuranceInfoBuilder() {
                return (Builder) getStBuyInsuranceInfoFieldBuilder().addBuilder(BuyInsuranceInfo.getDefaultInstance());
            }

            public final Builder addStBuyInsuranceInfoBuilder(int i) {
                return (Builder) getStBuyInsuranceInfoFieldBuilder().addBuilder(i, BuyInsuranceInfo.getDefaultInstance());
            }

            public final List<Builder> getStBuyInsuranceInfoBuilderList() {
                return getStBuyInsuranceInfoFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<BuyInsuranceInfo, Builder, BuyInsuranceInfoOrBuilder> getStBuyInsuranceInfoFieldBuilder() {
                if (this.stBuyInsuranceInfoBuilder_ == null) {
                    this.stBuyInsuranceInfoBuilder_ = new RepeatedFieldBuilder(this.stBuyInsuranceInfo_, (this.bitField0_ & 16) == 16, getParentForChildren(), isClean());
                    this.stBuyInsuranceInfo_ = null;
                }
                return this.stBuyInsuranceInfoBuilder_;
            }
        }

        private CSBuyInsurance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyInsurance(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyInsurance getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyInsurance getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyInsurance(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= EGAMEROOMSTATUS_FIELD_NUMBER;
                            this.lGameHandID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_GAME_STATE valueOf = GAME_ROOM_GAME_STATE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 8;
                                this.eGameRoomStatus_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMSTATUS_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            if ((i & 16) != 16) {
                                this.stBuyInsuranceInfo_ = new ArrayList();
                                i |= 16;
                            }
                            this.stBuyInsuranceInfo_.add((BuyInsuranceInfo) codedInputStream.readMessage(BuyInsuranceInfo.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & 16) == 16) {
                        this.stBuyInsuranceInfo_ = Collections.unmodifiableList(this.stBuyInsuranceInfo_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & 16) == 16) {
                this.stBuyInsuranceInfo_ = Collections.unmodifiableList(this.stBuyInsuranceInfo_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gm;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gn.ensureFieldAccessorsInitialized(CSBuyInsurance.class, Builder.class);
        }

        static {
            PARSER = new C11281();
            CSBuyInsurance cSBuyInsurance = new CSBuyInsurance(true);
            defaultInstance = cSBuyInsurance;
            cSBuyInsurance.initFields();
        }

        public final Parser<CSBuyInsurance> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLGameHandID() {
            return (this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER;
        }

        public final long getLGameHandID() {
            return this.lGameHandID_;
        }

        public final boolean hasEGameRoomStatus() {
            return (this.bitField0_ & 8) == 8;
        }

        public final GAME_ROOM_GAME_STATE getEGameRoomStatus() {
            return this.eGameRoomStatus_;
        }

        public final List<BuyInsuranceInfo> getStBuyInsuranceInfoList() {
            return this.stBuyInsuranceInfo_;
        }

        public final List<? extends BuyInsuranceInfoOrBuilder> getStBuyInsuranceInfoOrBuilderList() {
            return this.stBuyInsuranceInfo_;
        }

        public final int getStBuyInsuranceInfoCount() {
            return this.stBuyInsuranceInfo_.size();
        }

        public final BuyInsuranceInfo getStBuyInsuranceInfo(int i) {
            return (BuyInsuranceInfo) this.stBuyInsuranceInfo_.get(i);
        }

        public final BuyInsuranceInfoOrBuilder getStBuyInsuranceInfoOrBuilder(int i) {
            return (BuyInsuranceInfoOrBuilder) this.stBuyInsuranceInfo_.get(i);
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lGameHandID_ = 0;
            this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
            this.stBuyInsuranceInfo_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameHandID()) {
                int i = 0;
                while (i < getStBuyInsuranceInfoCount()) {
                    if (getStBuyInsuranceInfo(i).isInitialized()) {
                        i += UUID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeEnum(EGAMEROOMSTATUS_FIELD_NUMBER, this.eGameRoomStatus_.getNumber());
            }
            for (int i = 0; i < this.stBuyInsuranceInfo_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STBUYINSURANCEINFO_FIELD_NUMBER, (MessageLite) this.stBuyInsuranceInfo_.get(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i2 += CodedOutputStream.computeEnumSize(EGAMEROOMSTATUS_FIELD_NUMBER, this.eGameRoomStatus_.getNumber());
            }
            int i3 = i2;
            while (i < this.stBuyInsuranceInfo_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(STBUYINSURANCEINFO_FIELD_NUMBER, (MessageLite) this.stBuyInsuranceInfo_.get(i)) + i3;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyInsurance parseFrom(ByteString byteString) {
            return (CSBuyInsurance) PARSER.parseFrom(byteString);
        }

        public static CSBuyInsurance parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsurance) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyInsurance parseFrom(byte[] bArr) {
            return (CSBuyInsurance) PARSER.parseFrom(bArr);
        }

        public static CSBuyInsurance parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsurance) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyInsurance parseFrom(InputStream inputStream) {
            return (CSBuyInsurance) PARSER.parseFrom(inputStream);
        }

        public static CSBuyInsurance parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsurance) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyInsurance parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyInsurance) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyInsurance parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsurance) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyInsurance parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyInsurance) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyInsurance parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsurance) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyInsurance cSBuyInsurance) {
            return newBuilder().mergeFrom(cSBuyInsurance);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSBuyInsuranceDelayOrBuilder extends MessageOrBuilder {
        GAME_ROOM_GAME_STATE getEGameRoomStatus();

        long getLGameHandID();

        long getLGameRoomID();

        long getUuid();

        boolean hasEGameRoomStatus();

        boolean hasLGameHandID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSBuyInsuranceDelay extends GeneratedMessage implements CSBuyInsuranceDelayOrBuilder {
        public static final int EGAMEROOMSTATUS_FIELD_NUMBER = 4;
        public static final int LGAMEHANDID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSBuyInsuranceDelay> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyInsuranceDelay defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ROOM_GAME_STATE eGameRoomStatus_;
        private long lGameHandID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyInsuranceDelay.1 */
        class C11291 extends AbstractParser<CSBuyInsuranceDelay> {
            static {
                fixHelper.fixfunc(new int[]{1354, 1355});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11291();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyInsuranceDelayOrBuilder {
            private int bitField0_;
            private GAME_ROOM_GAME_STATE eGameRoomStatus_;
            private long lGameHandID_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m5958build();

            public final native CSBuyInsuranceDelay m5959build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m5960buildPartial();

            public final native CSBuyInsuranceDelay m5961buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5962clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5963clear();

            public final native Builder m5964clear();

            public final native Builder clearEGameRoomStatus();

            public final native Builder clearLGameHandID();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5965clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5966clone();

            public final native Builder m5967clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m5968getDefaultInstanceForType();

            public final native CSBuyInsuranceDelay m5969getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native GAME_ROOM_GAME_STATE getEGameRoomStatus();

            public final native long getLGameHandID();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasEGameRoomStatus();

            public final native boolean hasLGameHandID();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5970mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5971mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5972mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m5973mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m5974mergeFrom(Message message);

            public final native Builder mergeFrom(CSBuyInsuranceDelay cSBuyInsuranceDelay);

            public final native Builder setEGameRoomStatus(GAME_ROOM_GAME_STATE game_room_game_state);

            public final native Builder setLGameHandID(long j);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gy;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSBuyInsuranceDelay(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyInsuranceDelay(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyInsuranceDelay getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyInsuranceDelay getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyInsuranceDelay(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= EGAMEROOMSTATUS_FIELD_NUMBER;
                            this.lGameHandID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_GAME_STATE valueOf = GAME_ROOM_GAME_STATE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 8;
                                this.eGameRoomStatus_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMSTATUS_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gy;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gz.ensureFieldAccessorsInitialized(CSBuyInsuranceDelay.class, Builder.class);
        }

        static {
            PARSER = new C11291();
            CSBuyInsuranceDelay cSBuyInsuranceDelay = new CSBuyInsuranceDelay(true);
            defaultInstance = cSBuyInsuranceDelay;
            cSBuyInsuranceDelay.initFields();
        }

        public final Parser<CSBuyInsuranceDelay> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLGameHandID() {
            return (this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER;
        }

        public final long getLGameHandID() {
            return this.lGameHandID_;
        }

        public final boolean hasEGameRoomStatus() {
            return (this.bitField0_ & 8) == 8;
        }

        public final GAME_ROOM_GAME_STATE getEGameRoomStatus() {
            return this.eGameRoomStatus_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lGameHandID_ = 0;
            this.eGameRoomStatus_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameHandID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeEnum(EGAMEROOMSTATUS_FIELD_NUMBER, this.eGameRoomStatus_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & EGAMEROOMSTATUS_FIELD_NUMBER) == EGAMEROOMSTATUS_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMSTATUS_FIELD_NUMBER, this.eGameRoomStatus_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyInsuranceDelay parseFrom(ByteString byteString) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(byteString);
        }

        public static CSBuyInsuranceDelay parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyInsuranceDelay parseFrom(byte[] bArr) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(bArr);
        }

        public static CSBuyInsuranceDelay parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyInsuranceDelay parseFrom(InputStream inputStream) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(inputStream);
        }

        public static CSBuyInsuranceDelay parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyInsuranceDelay parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyInsuranceDelay) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyInsuranceDelay parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsuranceDelay) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyInsuranceDelay parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyInsuranceDelay parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyInsuranceDelay) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyInsuranceDelay cSBuyInsuranceDelay) {
            return newBuilder().mergeFrom(cSBuyInsuranceDelay);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSBuyinActionOrBuilder extends MessageOrBuilder {
        BUYIN_CONTROL_TYPE getEBuyinControlMessageType();

        long getLActionUuid();

        long getLBuyinActionID();

        long getLGameRoomID();

        long getUuid();

        boolean hasEBuyinControlMessageType();

        boolean hasLActionUuid();

        boolean hasLBuyinActionID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSBuyinAction extends GeneratedMessage implements CSBuyinActionOrBuilder {
        public static final int EBUYINCONTROLMESSAGETYPE_FIELD_NUMBER = 5;
        public static final int LACTIONUUID_FIELD_NUMBER = 4;
        public static final int LBUYINACTIONID_FIELD_NUMBER = 2;
        public static final int LGAMEROOMID_FIELD_NUMBER = 3;
        public static Parser<CSBuyinAction> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyinAction defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private BUYIN_CONTROL_TYPE eBuyinControlMessageType_;
        private long lActionUuid_;
        private long lBuyinActionID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyinAction.1 */
        class C11301 extends AbstractParser<CSBuyinAction> {
            C11301() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSBuyinAction(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyinActionOrBuilder {
            private int bitField0_;
            private BUYIN_CONTROL_TYPE eBuyinControlMessageType_;
            private long lActionUuid_;
            private long lBuyinActionID_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cE;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cF.ensureFieldAccessorsInitialized(CSBuyinAction.class, Builder.class);
            }

            private Builder() {
                this.eBuyinControlMessageType_ = BUYIN_CONTROL_TYPE.BUYIN_CONTROL_TYPE_ACCEPT;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eBuyinControlMessageType_ = BUYIN_CONTROL_TYPE.BUYIN_CONTROL_TYPE_ACCEPT;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSBuyinAction.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lBuyinActionID_ = 0;
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -5;
                this.lActionUuid_ = 0;
                this.bitField0_ &= -9;
                this.eBuyinControlMessageType_ = BUYIN_CONTROL_TYPE.BUYIN_CONTROL_TYPE_ACCEPT;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cE;
            }

            public final CSBuyinAction getDefaultInstanceForType() {
                return CSBuyinAction.getDefaultInstance();
            }

            public final CSBuyinAction build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSBuyinAction buildPartial() {
                int i = CSBuyinAction.UUID_FIELD_NUMBER;
                CSBuyinAction cSBuyinAction = new CSBuyinAction(null);
                int i2 = this.bitField0_;
                if ((i2 & CSBuyinAction.UUID_FIELD_NUMBER) != CSBuyinAction.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSBuyinAction.uuid_ = this.uuid_;
                if ((i2 & CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER) == CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER) {
                    i |= CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER;
                }
                cSBuyinAction.lBuyinActionID_ = this.lBuyinActionID_;
                if ((i2 & CSBuyinAction.LACTIONUUID_FIELD_NUMBER) == CSBuyinAction.LACTIONUUID_FIELD_NUMBER) {
                    i |= CSBuyinAction.LACTIONUUID_FIELD_NUMBER;
                }
                cSBuyinAction.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSBuyinAction.lActionUuid_ = this.lActionUuid_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSBuyinAction.eBuyinControlMessageType_ = this.eBuyinControlMessageType_;
                cSBuyinAction.bitField0_ = i;
                onBuilt();
                return cSBuyinAction;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSBuyinAction) {
                    return mergeFrom((CSBuyinAction) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSBuyinAction cSBuyinAction) {
                if (cSBuyinAction != CSBuyinAction.getDefaultInstance()) {
                    if (cSBuyinAction.hasUuid()) {
                        setUuid(cSBuyinAction.getUuid());
                    }
                    if (cSBuyinAction.hasLBuyinActionID()) {
                        setLBuyinActionID(cSBuyinAction.getLBuyinActionID());
                    }
                    if (cSBuyinAction.hasLGameRoomID()) {
                        setLGameRoomID(cSBuyinAction.getLGameRoomID());
                    }
                    if (cSBuyinAction.hasLActionUuid()) {
                        setLActionUuid(cSBuyinAction.getLActionUuid());
                    }
                    if (cSBuyinAction.hasEBuyinControlMessageType()) {
                        setEBuyinControlMessageType(cSBuyinAction.getEBuyinControlMessageType());
                    }
                    mergeUnknownFields(cSBuyinAction.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLBuyinActionID() && hasLGameRoomID() && hasLActionUuid() && hasEBuyinControlMessageType()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSBuyinAction.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSBuyinAction.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyinAction) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyinAction) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSBuyinAction.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSBuyinAction$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSBuyinAction.UUID_FIELD_NUMBER) == CSBuyinAction.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSBuyinAction.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBuyinActionID() {
                return (this.bitField0_ & CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER) == CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER;
            }

            public final long getLBuyinActionID() {
                return this.lBuyinActionID_;
            }

            public final Builder setLBuyinActionID(long j) {
                this.bitField0_ |= CSBuyinAction.LBUYINACTIONID_FIELD_NUMBER;
                this.lBuyinActionID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyinActionID() {
                this.bitField0_ &= -3;
                this.lBuyinActionID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSBuyinAction.LACTIONUUID_FIELD_NUMBER) == CSBuyinAction.LACTIONUUID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSBuyinAction.LACTIONUUID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -5;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLActionUuid() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLActionUuid() {
                return this.lActionUuid_;
            }

            public final Builder setLActionUuid(long j) {
                this.bitField0_ |= 8;
                this.lActionUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLActionUuid() {
                this.bitField0_ &= -9;
                this.lActionUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEBuyinControlMessageType() {
                return (this.bitField0_ & 16) == 16;
            }

            public final BUYIN_CONTROL_TYPE getEBuyinControlMessageType() {
                return this.eBuyinControlMessageType_;
            }

            public final Builder setEBuyinControlMessageType(BUYIN_CONTROL_TYPE buyin_control_type) {
                if (buyin_control_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.eBuyinControlMessageType_ = buyin_control_type;
                onChanged();
                return this;
            }

            public final Builder clearEBuyinControlMessageType() {
                this.bitField0_ &= -17;
                this.eBuyinControlMessageType_ = BUYIN_CONTROL_TYPE.BUYIN_CONTROL_TYPE_ACCEPT;
                onChanged();
                return this;
            }
        }

        private CSBuyinAction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyinAction(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyinAction getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyinAction getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyinAction(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LBUYINACTIONID_FIELD_NUMBER;
                            this.lBuyinActionID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LACTIONUUID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lActionUuid_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            readTag = codedInputStream.readEnum();
                            BUYIN_CONTROL_TYPE valueOf = BUYIN_CONTROL_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 16;
                                this.eBuyinControlMessageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EBUYINCONTROLMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cE;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cF.ensureFieldAccessorsInitialized(CSBuyinAction.class, Builder.class);
        }

        static {
            PARSER = new C11301();
            CSBuyinAction cSBuyinAction = new CSBuyinAction(true);
            defaultInstance = cSBuyinAction;
            cSBuyinAction.initFields();
        }

        public final Parser<CSBuyinAction> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLBuyinActionID() {
            return (this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER;
        }

        public final long getLBuyinActionID() {
            return this.lBuyinActionID_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LACTIONUUID_FIELD_NUMBER) == LACTIONUUID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLActionUuid() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLActionUuid() {
            return this.lActionUuid_;
        }

        public final boolean hasEBuyinControlMessageType() {
            return (this.bitField0_ & 16) == 16;
        }

        public final BUYIN_CONTROL_TYPE getEBuyinControlMessageType() {
            return this.eBuyinControlMessageType_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lBuyinActionID_ = 0;
            this.lGameRoomID_ = 0;
            this.lActionUuid_ = 0;
            this.eBuyinControlMessageType_ = BUYIN_CONTROL_TYPE.BUYIN_CONTROL_TYPE_ACCEPT;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBuyinActionID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLActionUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasEBuyinControlMessageType()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYINACTIONID_FIELD_NUMBER, this.lBuyinActionID_);
            }
            if ((this.bitField0_ & LACTIONUUID_FIELD_NUMBER) == LACTIONUUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeEnum(EBUYINCONTROLMESSAGETYPE_FIELD_NUMBER, this.eBuyinControlMessageType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LBUYINACTIONID_FIELD_NUMBER) == LBUYINACTIONID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBUYINACTIONID_FIELD_NUMBER, this.lBuyinActionID_);
            }
            if ((this.bitField0_ & LACTIONUUID_FIELD_NUMBER) == LACTIONUUID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeEnumSize(EBUYINCONTROLMESSAGETYPE_FIELD_NUMBER, this.eBuyinControlMessageType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyinAction parseFrom(ByteString byteString) {
            return (CSBuyinAction) PARSER.parseFrom(byteString);
        }

        public static CSBuyinAction parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinAction) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyinAction parseFrom(byte[] bArr) {
            return (CSBuyinAction) PARSER.parseFrom(bArr);
        }

        public static CSBuyinAction parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinAction) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyinAction parseFrom(InputStream inputStream) {
            return (CSBuyinAction) PARSER.parseFrom(inputStream);
        }

        public static CSBuyinAction parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinAction) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyinAction parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyinAction) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyinAction parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinAction) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyinAction parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyinAction) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyinAction parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinAction) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyinAction cSBuyinAction) {
            return newBuilder().mergeFrom(cSBuyinAction);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSBuyinControlMsgRspOrBuilder extends MessageOrBuilder {
        long getLMsgId();

        long getUuid();

        boolean hasLMsgId();

        boolean hasUuid();
    }

    public static final class CSBuyinControlMsgRsp extends GeneratedMessage implements CSBuyinControlMsgRspOrBuilder {
        public static final int LMSGID_FIELD_NUMBER = 2;
        public static Parser<CSBuyinControlMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSBuyinControlMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lMsgId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp.1 */
        class C11311 extends AbstractParser<CSBuyinControlMsgRsp> {
            static {
                fixHelper.fixfunc(new int[]{903, 904});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11311();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSBuyinControlMsgRspOrBuilder {
            private int bitField0_;
            private long lMsgId_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cC;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cD.ensureFieldAccessorsInitialized(CSBuyinControlMsgRsp.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSBuyinControlMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lMsgId_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cC;
            }

            public final CSBuyinControlMsgRsp getDefaultInstanceForType() {
                return CSBuyinControlMsgRsp.getDefaultInstance();
            }

            public final CSBuyinControlMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSBuyinControlMsgRsp buildPartial() {
                int i = CSBuyinControlMsgRsp.UUID_FIELD_NUMBER;
                CSBuyinControlMsgRsp cSBuyinControlMsgRsp = new CSBuyinControlMsgRsp(null);
                int i2 = this.bitField0_;
                if ((i2 & CSBuyinControlMsgRsp.UUID_FIELD_NUMBER) != CSBuyinControlMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSBuyinControlMsgRsp.uuid_ = this.uuid_;
                if ((i2 & CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER) == CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER) {
                    i |= CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER;
                }
                cSBuyinControlMsgRsp.lMsgId_ = this.lMsgId_;
                cSBuyinControlMsgRsp.bitField0_ = i;
                onBuilt();
                return cSBuyinControlMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSBuyinControlMsgRsp) {
                    return mergeFrom((CSBuyinControlMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSBuyinControlMsgRsp cSBuyinControlMsgRsp) {
                if (cSBuyinControlMsgRsp != CSBuyinControlMsgRsp.getDefaultInstance()) {
                    if (cSBuyinControlMsgRsp.hasUuid()) {
                        setUuid(cSBuyinControlMsgRsp.getUuid());
                    }
                    if (cSBuyinControlMsgRsp.hasLMsgId()) {
                        setLMsgId(cSBuyinControlMsgRsp.getLMsgId());
                    }
                    mergeUnknownFields(cSBuyinControlMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSBuyinControlMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSBuyinControlMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSBuyinControlMsgRsp.UUID_FIELD_NUMBER) == CSBuyinControlMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSBuyinControlMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLMsgId() {
                return (this.bitField0_ & CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER) == CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgId() {
                return this.lMsgId_;
            }

            public final Builder setLMsgId(long j) {
                this.bitField0_ |= CSBuyinControlMsgRsp.LMSGID_FIELD_NUMBER;
                this.lMsgId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgId() {
                this.bitField0_ &= -3;
                this.lMsgId_ = 0;
                onChanged();
                return this;
            }
        }

        private CSBuyinControlMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSBuyinControlMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSBuyinControlMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSBuyinControlMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSBuyinControlMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgId_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cC;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cD.ensureFieldAccessorsInitialized(CSBuyinControlMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C11311();
            CSBuyinControlMsgRsp cSBuyinControlMsgRsp = new CSBuyinControlMsgRsp(true);
            defaultInstance = cSBuyinControlMsgRsp;
            cSBuyinControlMsgRsp.initFields();
        }

        public final Parser<CSBuyinControlMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLMsgId() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgId() {
            return this.lMsgId_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lMsgId_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgId_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgId_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSBuyinControlMsgRsp parseFrom(ByteString byteString) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSBuyinControlMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSBuyinControlMsgRsp parseFrom(byte[] bArr) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSBuyinControlMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSBuyinControlMsgRsp parseFrom(InputStream inputStream) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSBuyinControlMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyinControlMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSBuyinControlMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSBuyinControlMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinControlMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSBuyinControlMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSBuyinControlMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSBuyinControlMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSBuyinControlMsgRsp cSBuyinControlMsgRsp) {
            return newBuilder().mergeFrom(cSBuyinControlMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSCancelGameOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSCancelGame extends GeneratedMessage implements CSCancelGameOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSCancelGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSCancelGame defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCancelGame.1 */
        class C11321 extends AbstractParser<CSCancelGame> {
            C11321() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCancelGame(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCancelGameOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gW;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gX.ensureFieldAccessorsInitialized(CSCancelGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSCancelGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gW;
            }

            public final CSCancelGame getDefaultInstanceForType() {
                return CSCancelGame.getDefaultInstance();
            }

            public final CSCancelGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSCancelGame buildPartial() {
                int i = CSCancelGame.UUID_FIELD_NUMBER;
                CSCancelGame cSCancelGame = new CSCancelGame((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSCancelGame.UUID_FIELD_NUMBER) != CSCancelGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSCancelGame.uuid_ = this.uuid_;
                if ((i2 & CSCancelGame.LGAMEROOMID_FIELD_NUMBER) == CSCancelGame.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSCancelGame.LGAMEROOMID_FIELD_NUMBER;
                }
                cSCancelGame.lGameRoomID_ = this.lGameRoomID_;
                cSCancelGame.bitField0_ = i;
                onBuilt();
                return cSCancelGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSCancelGame) {
                    return mergeFrom((CSCancelGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSCancelGame cSCancelGame) {
                if (cSCancelGame != CSCancelGame.getDefaultInstance()) {
                    if (cSCancelGame.hasUuid()) {
                        setUuid(cSCancelGame.getUuid());
                    }
                    if (cSCancelGame.hasLGameRoomID()) {
                        setLGameRoomID(cSCancelGame.getLGameRoomID());
                    }
                    mergeUnknownFields(cSCancelGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSCancelGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSCancelGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSCancelGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSCancelGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSCancelGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSCancelGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSCancelGame.UUID_FIELD_NUMBER) == CSCancelGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSCancelGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSCancelGame.LGAMEROOMID_FIELD_NUMBER) == CSCancelGame.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSCancelGame.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSCancelGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSCancelGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSCancelGame cSCancelGame);

        private native CSCancelGame(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSCancelGame(com.google.protobuf.GeneratedMessage.Builder builder, CSCancelGame cSCancelGame);

        private native CSCancelGame(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m5975getDefaultInstanceForType();

        public final native CSCancelGame m5976getDefaultInstanceForType();

        public final native long getLGameRoomID();

        public final native Parser<CSCancelGame> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5977newBuilderForType();

        public final native Builder m5978newBuilderForType();

        protected final native Builder m5979newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5980toBuilder();

        public final native Builder m5981toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSCancelGame getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gW;
        }

        static void __clinit__() {
            PARSER = new C11321();
            CSCancelGame cSCancelGame = new CSCancelGame(true);
            defaultInstance = cSCancelGame;
            cSCancelGame.initFields();
        }

        public static CSCancelGame parseFrom(ByteString byteString) {
            return (CSCancelGame) PARSER.parseFrom(byteString);
        }

        public static CSCancelGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCancelGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCancelGame parseFrom(byte[] bArr) {
            return (CSCancelGame) PARSER.parseFrom(bArr);
        }

        public static CSCancelGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCancelGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCancelGame parseFrom(InputStream inputStream) {
            return (CSCancelGame) PARSER.parseFrom(inputStream);
        }

        public static CSCancelGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCancelGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCancelGame parseDelimitedFrom(InputStream inputStream) {
            return (CSCancelGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCancelGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCancelGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCancelGame parseFrom(CodedInputStream codedInputStream) {
            return (CSCancelGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSCancelGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCancelGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSCancelGame cSCancelGame) {
            return newBuilder().mergeFrom(cSCancelGame);
        }
    }

    public interface CSCreateChatRoomOrBuilder extends MessageOrBuilder {
        int getIRoomType();

        long getLCreateUser();

        int getNCurMembers();

        int getNMaxMembers();

        int getNOwnerCreate();

        int getNOwnerInvite();

        String getSRoomName();

        ByteString getSRoomNameBytes();

        long getUuid();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasIRoomType();

        boolean hasLCreateUser();

        boolean hasNCurMembers();

        boolean hasNMaxMembers();

        boolean hasNOwnerCreate();

        boolean hasNOwnerInvite();

        boolean hasSRoomName();

        boolean hasUuid();
    }

    public static final class CSCreateChatRoom extends GeneratedMessage implements CSCreateChatRoomOrBuilder {
        public static final int IROOMTYPE_FIELD_NUMBER = 6;
        public static final int LCREATEUSER_FIELD_NUMBER = 5;
        public static final int NCURMEMBERS_FIELD_NUMBER = 4;
        public static final int NMAXMEMBERS_FIELD_NUMBER = 3;
        public static final int NOWNERCREATE_FIELD_NUMBER = 8;
        public static final int NOWNERINVITE_FIELD_NUMBER = 7;
        public static Parser<CSCreateChatRoom> PARSER = null;
        public static final int SROOMNAME_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 9;
        private static final CSCreateChatRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iRoomType_;
        private long lCreateUser_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private int nCurMembers_;
        private int nMaxMembers_;
        private int nOwnerCreate_;
        private int nOwnerInvite_;
        private Object sRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreateChatRoom.1 */
        class C11331 extends AbstractParser<CSCreateChatRoom> {
            C11331() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCreateChatRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreateChatRoomOrBuilder {
            private int bitField0_;
            private int iRoomType_;
            private long lCreateUser_;
            private int nCurMembers_;
            private int nMaxMembers_;
            private int nOwnerCreate_;
            private int nOwnerInvite_;
            private Object sRoomName_;
            private long uuid_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aE;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aF.ensureFieldAccessorsInitialized(CSCreateChatRoom.class, Builder.class);
            }

            private Builder() {
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSCreateChatRoom.alwaysUseFieldBuilders) {
                    getVUserBaseInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.nMaxMembers_ = 0;
                this.bitField0_ &= -5;
                this.nCurMembers_ = 0;
                this.bitField0_ &= -9;
                this.lCreateUser_ = 0;
                this.bitField0_ &= -17;
                this.iRoomType_ = 0;
                this.bitField0_ &= -33;
                this.nOwnerInvite_ = 0;
                this.bitField0_ &= -65;
                this.nOwnerCreate_ = 0;
                this.bitField0_ &= -129;
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -257;
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aE;
            }

            public final CSCreateChatRoom getDefaultInstanceForType() {
                return CSCreateChatRoom.getDefaultInstance();
            }

            public final CSCreateChatRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSCreateChatRoom buildPartial() {
                int i = CSCreateChatRoom.UUID_FIELD_NUMBER;
                CSCreateChatRoom cSCreateChatRoom = new CSCreateChatRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSCreateChatRoom.UUID_FIELD_NUMBER) != CSCreateChatRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSCreateChatRoom.uuid_ = this.uuid_;
                if ((i2 & CSCreateChatRoom.SROOMNAME_FIELD_NUMBER) == CSCreateChatRoom.SROOMNAME_FIELD_NUMBER) {
                    i |= CSCreateChatRoom.SROOMNAME_FIELD_NUMBER;
                }
                cSCreateChatRoom.sRoomName_ = this.sRoomName_;
                if ((i2 & CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER) == CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER) {
                    i |= CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER;
                }
                cSCreateChatRoom.nMaxMembers_ = this.nMaxMembers_;
                if ((i2 & CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER) == CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER) {
                    i |= CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER;
                }
                cSCreateChatRoom.nCurMembers_ = this.nCurMembers_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSCreateChatRoom.lCreateUser_ = this.lCreateUser_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSCreateChatRoom.iRoomType_ = this.iRoomType_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSCreateChatRoom.nOwnerInvite_ = this.nOwnerInvite_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSCreateChatRoom.nOwnerCreate_ = this.nOwnerCreate_;
                if (this.vUserBaseInfosBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                        this.bitField0_ &= -257;
                    }
                    cSCreateChatRoom.vUserBaseInfos_ = this.vUserBaseInfos_;
                } else {
                    cSCreateChatRoom.vUserBaseInfos_ = this.vUserBaseInfosBuilder_.build();
                }
                cSCreateChatRoom.bitField0_ = i;
                onBuilt();
                return cSCreateChatRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSCreateChatRoom) {
                    return mergeFrom((CSCreateChatRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSCreateChatRoom cSCreateChatRoom) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (cSCreateChatRoom != CSCreateChatRoom.getDefaultInstance()) {
                    if (cSCreateChatRoom.hasUuid()) {
                        setUuid(cSCreateChatRoom.getUuid());
                    }
                    if (cSCreateChatRoom.hasSRoomName()) {
                        this.bitField0_ |= CSCreateChatRoom.SROOMNAME_FIELD_NUMBER;
                        this.sRoomName_ = cSCreateChatRoom.sRoomName_;
                        onChanged();
                    }
                    if (cSCreateChatRoom.hasNMaxMembers()) {
                        setNMaxMembers(cSCreateChatRoom.getNMaxMembers());
                    }
                    if (cSCreateChatRoom.hasNCurMembers()) {
                        setNCurMembers(cSCreateChatRoom.getNCurMembers());
                    }
                    if (cSCreateChatRoom.hasLCreateUser()) {
                        setLCreateUser(cSCreateChatRoom.getLCreateUser());
                    }
                    if (cSCreateChatRoom.hasIRoomType()) {
                        setIRoomType(cSCreateChatRoom.getIRoomType());
                    }
                    if (cSCreateChatRoom.hasNOwnerInvite()) {
                        setNOwnerInvite(cSCreateChatRoom.getNOwnerInvite());
                    }
                    if (cSCreateChatRoom.hasNOwnerCreate()) {
                        setNOwnerCreate(cSCreateChatRoom.getNOwnerCreate());
                    }
                    if (this.vUserBaseInfosBuilder_ == null) {
                        if (!cSCreateChatRoom.vUserBaseInfos_.isEmpty()) {
                            if (this.vUserBaseInfos_.isEmpty()) {
                                this.vUserBaseInfos_ = cSCreateChatRoom.vUserBaseInfos_;
                                this.bitField0_ &= -257;
                            } else {
                                ensureVUserBaseInfosIsMutable();
                                this.vUserBaseInfos_.addAll(cSCreateChatRoom.vUserBaseInfos_);
                            }
                            onChanged();
                        }
                    } else if (!cSCreateChatRoom.vUserBaseInfos_.isEmpty()) {
                        if (this.vUserBaseInfosBuilder_.isEmpty()) {
                            this.vUserBaseInfosBuilder_.dispose();
                            this.vUserBaseInfosBuilder_ = null;
                            this.vUserBaseInfos_ = cSCreateChatRoom.vUserBaseInfos_;
                            this.bitField0_ &= -257;
                            if (CSCreateChatRoom.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVUserBaseInfosFieldBuilder();
                            }
                            this.vUserBaseInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vUserBaseInfosBuilder_.addAllMessages(cSCreateChatRoom.vUserBaseInfos_);
                        }
                    }
                    mergeUnknownFields(cSCreateChatRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasSRoomName() || !hasNMaxMembers() || !hasNCurMembers() || !hasLCreateUser() || !hasIRoomType() || !hasNOwnerInvite() || !hasNOwnerCreate()) {
                    return false;
                }
                for (int i = 0; i < getVUserBaseInfosCount(); i += CSCreateChatRoom.UUID_FIELD_NUMBER) {
                    if (!getVUserBaseInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSCreateChatRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSCreateChatRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateChatRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateChatRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSCreateChatRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSCreateChatRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSCreateChatRoom.UUID_FIELD_NUMBER) == CSCreateChatRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSCreateChatRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSRoomName() {
                return (this.bitField0_ & CSCreateChatRoom.SROOMNAME_FIELD_NUMBER) == CSCreateChatRoom.SROOMNAME_FIELD_NUMBER;
            }

            public final String getSRoomName() {
                Object obj = this.sRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSRoomNameBytes() {
                Object obj = this.sRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateChatRoom.SROOMNAME_FIELD_NUMBER;
                this.sRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSRoomName() {
                this.bitField0_ &= -3;
                this.sRoomName_ = CSCreateChatRoom.getDefaultInstance().getSRoomName();
                onChanged();
                return this;
            }

            public final Builder setSRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateChatRoom.SROOMNAME_FIELD_NUMBER;
                this.sRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasNMaxMembers() {
                return (this.bitField0_ & CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER) == CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER;
            }

            public final int getNMaxMembers() {
                return this.nMaxMembers_;
            }

            public final Builder setNMaxMembers(int i) {
                this.bitField0_ |= CSCreateChatRoom.NCURMEMBERS_FIELD_NUMBER;
                this.nMaxMembers_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNMaxMembers() {
                this.bitField0_ &= -5;
                this.nMaxMembers_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNCurMembers() {
                return (this.bitField0_ & CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER) == CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER;
            }

            public final int getNCurMembers() {
                return this.nCurMembers_;
            }

            public final Builder setNCurMembers(int i) {
                this.bitField0_ |= CSCreateChatRoom.NOWNERCREATE_FIELD_NUMBER;
                this.nCurMembers_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNCurMembers() {
                this.bitField0_ &= -9;
                this.nCurMembers_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLCreateUser() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLCreateUser() {
                return this.lCreateUser_;
            }

            public final Builder setLCreateUser(long j) {
                this.bitField0_ |= 16;
                this.lCreateUser_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateUser() {
                this.bitField0_ &= -17;
                this.lCreateUser_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIRoomType() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getIRoomType() {
                return this.iRoomType_;
            }

            public final Builder setIRoomType(int i) {
                this.bitField0_ |= 32;
                this.iRoomType_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIRoomType() {
                this.bitField0_ &= -33;
                this.iRoomType_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerInvite() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getNOwnerInvite() {
                return this.nOwnerInvite_;
            }

            public final Builder setNOwnerInvite(int i) {
                this.bitField0_ |= 64;
                this.nOwnerInvite_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerInvite() {
                this.bitField0_ &= -65;
                this.nOwnerInvite_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerCreate() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getNOwnerCreate() {
                return this.nOwnerCreate_;
            }

            public final Builder setNOwnerCreate(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.nOwnerCreate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerCreate() {
                this.bitField0_ &= -129;
                this.nOwnerCreate_ = 0;
                onChanged();
                return this;
            }

            private void ensureVUserBaseInfosIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    this.vUserBaseInfos_ = new ArrayList(this.vUserBaseInfos_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
            }

            public final List<UserBaseInfoNet> getVUserBaseInfosList() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUserBaseInfos_);
                }
                return this.vUserBaseInfosBuilder_.getMessageList();
            }

            public final int getVUserBaseInfosCount() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return this.vUserBaseInfos_.size();
                }
                return this.vUserBaseInfosBuilder_.getCount();
            }

            public final UserBaseInfoNet getVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNet) this.vUserBaseInfosBuilder_.getMessage(i);
            }

            public final Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUserBaseInfos_);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUserBaseInfos() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -257;
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.remove(i);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.vUserBaseInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
                if (this.vUserBaseInfosBuilder_ != null) {
                    return this.vUserBaseInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUserBaseInfos_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList() {
                return getVUserBaseInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfosBuilder_ = new RepeatedFieldBuilder(this.vUserBaseInfos_, (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY, getParentForChildren(), isClean());
                    this.vUserBaseInfos_ = null;
                }
                return this.vUserBaseInfosBuilder_;
            }
        }

        private CSCreateChatRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSCreateChatRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSCreateChatRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSCreateChatRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSCreateChatRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case NOWNERCREATE_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SROOMNAME_FIELD_NUMBER;
                            this.sRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= NCURMEMBERS_FIELD_NUMBER;
                            this.nMaxMembers_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= NOWNERCREATE_FIELD_NUMBER;
                            this.nCurMembers_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lCreateUser_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.iRoomType_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.nOwnerInvite_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.nOwnerCreate_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            if ((i & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                                this.vUserBaseInfos_ = new ArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            }
                            this.vUserBaseInfos_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aE;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aF.ensureFieldAccessorsInitialized(CSCreateChatRoom.class, Builder.class);
        }

        static {
            PARSER = new C11331();
            CSCreateChatRoom cSCreateChatRoom = new CSCreateChatRoom(true);
            defaultInstance = cSCreateChatRoom;
            cSCreateChatRoom.initFields();
        }

        public final Parser<CSCreateChatRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasSRoomName() {
            return (this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER;
        }

        public final String getSRoomName() {
            Object obj = this.sRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSRoomNameBytes() {
            Object obj = this.sRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasNMaxMembers() {
            return (this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER;
        }

        public final int getNMaxMembers() {
            return this.nMaxMembers_;
        }

        public final boolean hasNCurMembers() {
            return (this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER;
        }

        public final int getNCurMembers() {
            return this.nCurMembers_;
        }

        public final boolean hasLCreateUser() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLCreateUser() {
            return this.lCreateUser_;
        }

        public final boolean hasIRoomType() {
            return (this.bitField0_ & 32) == 32;
        }

        public final int getIRoomType() {
            return this.iRoomType_;
        }

        public final boolean hasNOwnerInvite() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getNOwnerInvite() {
            return this.nOwnerInvite_;
        }

        public final boolean hasNOwnerCreate() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final int getNOwnerCreate() {
            return this.nOwnerCreate_;
        }

        public final List<UserBaseInfoNet> getVUserBaseInfosList() {
            return this.vUserBaseInfos_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
            return this.vUserBaseInfos_;
        }

        public final int getVUserBaseInfosCount() {
            return this.vUserBaseInfos_.size();
        }

        public final UserBaseInfoNet getVUserBaseInfos(int i) {
            return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
        }

        private void initFields() {
            this.uuid_ = 0;
            this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.nMaxMembers_ = 0;
            this.nCurMembers_ = 0;
            this.lCreateUser_ = 0;
            this.iRoomType_ = 0;
            this.nOwnerInvite_ = 0;
            this.nOwnerCreate_ = 0;
            this.vUserBaseInfos_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNMaxMembers()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNCurMembers()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateUser()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasIRoomType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNOwnerInvite()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasNOwnerCreate()) {
                int i = 0;
                while (i < getVUserBaseInfosCount()) {
                    if (getVUserBaseInfos(i).isInitialized()) {
                        i += UUID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NMAXMEMBERS_FIELD_NUMBER, this.nMaxMembers_);
            }
            if ((this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NCURMEMBERS_FIELD_NUMBER, this.nCurMembers_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LCREATEUSER_FIELD_NUMBER, this.lCreateUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt32(IROOMTYPE_FIELD_NUMBER, this.iRoomType_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt32(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            for (int i = 0; i < this.vUserBaseInfos_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeBytesSize(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt32Size(NMAXMEMBERS_FIELD_NUMBER, this.nMaxMembers_);
            }
            if ((this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt32Size(NCURMEMBERS_FIELD_NUMBER, this.nCurMembers_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeInt64Size(LCREATEUSER_FIELD_NUMBER, this.lCreateUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeInt32Size(IROOMTYPE_FIELD_NUMBER, this.iRoomType_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeInt32Size(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i2 += CodedOutputStream.computeInt32Size(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            int i3 = i2;
            while (i < this.vUserBaseInfos_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i)) + i3;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSCreateChatRoom parseFrom(ByteString byteString) {
            return (CSCreateChatRoom) PARSER.parseFrom(byteString);
        }

        public static CSCreateChatRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateChatRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreateChatRoom parseFrom(byte[] bArr) {
            return (CSCreateChatRoom) PARSER.parseFrom(bArr);
        }

        public static CSCreateChatRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateChatRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreateChatRoom parseFrom(InputStream inputStream) {
            return (CSCreateChatRoom) PARSER.parseFrom(inputStream);
        }

        public static CSCreateChatRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateChatRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateChatRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSCreateChatRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreateChatRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateChatRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateChatRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSCreateChatRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreateChatRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateChatRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSCreateChatRoom cSCreateChatRoom) {
            return newBuilder().mergeFrom(cSCreateChatRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSCreateGameRoomOrBuilder extends MessageOrBuilder {
        int getBBuyIn();

        int getBBuyinControl();

        int getBGPSLimit();

        int getBIPLimit();

        int getBInsurance();

        int getBPrivateRoom();

        CREATE_ROOM_TYPE getECreateRoomType();

        GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType();

        GAME_ROOM_TYPE getEGameRoomType();

        int getIAnte();

        int getIGameRoomUserMaxNums();

        int getIMaxBuyinRatio();

        int getIMinBuyinRatio();

        long getLBigBlinds();

        long getLBuyIn();

        long getLDuration();

        long getLFromRoomID();

        long getLLeagueID();

        long getLSmallBlinds();

        String getSRoomName();

        ByteString getSRoomNameBytes();

        long getUuid();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasBBuyIn();

        boolean hasBBuyinControl();

        boolean hasBGPSLimit();

        boolean hasBIPLimit();

        boolean hasBInsurance();

        boolean hasBPrivateRoom();

        boolean hasECreateRoomType();

        boolean hasEGameRoomSeniorType();

        boolean hasEGameRoomType();

        boolean hasIAnte();

        boolean hasIGameRoomUserMaxNums();

        boolean hasIMaxBuyinRatio();

        boolean hasIMinBuyinRatio();

        boolean hasLBigBlinds();

        boolean hasLBuyIn();

        boolean hasLDuration();

        boolean hasLFromRoomID();

        boolean hasLLeagueID();

        boolean hasLSmallBlinds();

        boolean hasSRoomName();

        boolean hasUuid();
    }

    public static final class CSCreateGameRoom extends GeneratedMessage implements CSCreateGameRoomOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 16;
        public static final int BBUYIN_FIELD_NUMBER = 6;
        public static final int BGPSLIMIT_FIELD_NUMBER = 21;
        public static final int BINSURANCE_FIELD_NUMBER = 19;
        public static final int BIPLIMIT_FIELD_NUMBER = 20;
        public static final int BPRIVATEROOM_FIELD_NUMBER = 9;
        public static final int ECREATEROOMTYPE_FIELD_NUMBER = 12;
        public static final int EGAMEROOMSENIORTYPE_FIELD_NUMBER = 13;
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 11;
        public static final int IANTE_FIELD_NUMBER = 18;
        public static final int IGAMEROOMUSERMAXNUMS_FIELD_NUMBER = 17;
        public static final int IMAXBUYINRATIO_FIELD_NUMBER = 14;
        public static final int IMINBUYINRATIO_FIELD_NUMBER = 15;
        public static final int LBIGBLINDS_FIELD_NUMBER = 4;
        public static final int LBUYIN_FIELD_NUMBER = 5;
        public static final int LDURATION_FIELD_NUMBER = 7;
        public static final int LFROMROOMID_FIELD_NUMBER = 8;
        public static final int LLEAGUEID_FIELD_NUMBER = 22;
        public static final int LSMALLBLINDS_FIELD_NUMBER = 3;
        public static Parser<CSCreateGameRoom> PARSER = null;
        public static final int SROOMNAME_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 10;
        private static final CSCreateGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bBuyIn_;
        private int bBuyinControl_;
        private int bGPSLimit_;
        private int bIPLimit_;
        private int bInsurance_;
        private int bPrivateRoom_;
        private int bitField0_;
        private CREATE_ROOM_TYPE eCreateRoomType_;
        private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private int iAnte_;
        private int iGameRoomUserMaxNums_;
        private int iMaxBuyinRatio_;
        private int iMinBuyinRatio_;
        private long lBigBlinds_;
        private long lBuyIn_;
        private long lDuration_;
        private long lFromRoomID_;
        private long lLeagueID_;
        private long lSmallBlinds_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreateGameRoom.1 */
        class C11341 extends AbstractParser<CSCreateGameRoom> {
            C11341() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCreateGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreateGameRoomOrBuilder {
            private int bBuyIn_;
            private int bBuyinControl_;
            private int bGPSLimit_;
            private int bIPLimit_;
            private int bInsurance_;
            private int bPrivateRoom_;
            private int bitField0_;
            private CREATE_ROOM_TYPE eCreateRoomType_;
            private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private int iAnte_;
            private int iGameRoomUserMaxNums_;
            private int iMaxBuyinRatio_;
            private int iMinBuyinRatio_;
            private long lBigBlinds_;
            private long lBuyIn_;
            private long lDuration_;
            private long lFromRoomID_;
            private long lLeagueID_;
            private long lSmallBlinds_;
            private Object sRoomName_;
            private long uuid_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            static {
                fixHelper.fixfunc(new int[]{2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, DefaultRetryPolicy.DEFAULT_TIMEOUT_MS, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVUserBaseInfosIsMutable();

            private native RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable);

            public final native Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet);

            public final native Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m5982build();

            public final native CSCreateGameRoom m5983build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m5984buildPartial();

            public final native CSCreateGameRoom m5985buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5986clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5987clear();

            public final native Builder m5988clear();

            public final native Builder clearBBuyIn();

            public final native Builder clearBBuyinControl();

            public final native Builder clearBGPSLimit();

            public final native Builder clearBIPLimit();

            public final native Builder clearBInsurance();

            public final native Builder clearBPrivateRoom();

            public final native Builder clearECreateRoomType();

            public final native Builder clearEGameRoomSeniorType();

            public final native Builder clearEGameRoomType();

            public final native Builder clearIAnte();

            public final native Builder clearIGameRoomUserMaxNums();

            public final native Builder clearIMaxBuyinRatio();

            public final native Builder clearIMinBuyinRatio();

            public final native Builder clearLBigBlinds();

            public final native Builder clearLBuyIn();

            public final native Builder clearLDuration();

            public final native Builder clearLFromRoomID();

            public final native Builder clearLLeagueID();

            public final native Builder clearLSmallBlinds();

            public final native Builder clearSRoomName();

            public final native Builder clearUuid();

            public final native Builder clearVUserBaseInfos();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5989clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5990clone();

            public final native Builder m5991clone();

            public final native int getBBuyIn();

            public final native int getBBuyinControl();

            public final native int getBGPSLimit();

            public final native int getBIPLimit();

            public final native int getBInsurance();

            public final native int getBPrivateRoom();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m5992getDefaultInstanceForType();

            public final native CSCreateGameRoom m5993getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native CREATE_ROOM_TYPE getECreateRoomType();

            public final native GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType();

            public final native GAME_ROOM_TYPE getEGameRoomType();

            public final native int getIAnte();

            public final native int getIGameRoomUserMaxNums();

            public final native int getIMaxBuyinRatio();

            public final native int getIMinBuyinRatio();

            public final native long getLBigBlinds();

            public final native long getLBuyIn();

            public final native long getLDuration();

            public final native long getLFromRoomID();

            public final native long getLLeagueID();

            public final native long getLSmallBlinds();

            public final native String getSRoomName();

            public final native ByteString getSRoomNameBytes();

            public final native long getUuid();

            public final native UserBaseInfoNet getVUserBaseInfos(int i);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i);

            public final native List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList();

            public final native int getVUserBaseInfosCount();

            public final native List<UserBaseInfoNet> getVUserBaseInfosList();

            public final native UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

            public final native List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

            public final native boolean hasBBuyIn();

            public final native boolean hasBBuyinControl();

            public final native boolean hasBGPSLimit();

            public final native boolean hasBIPLimit();

            public final native boolean hasBInsurance();

            public final native boolean hasBPrivateRoom();

            public final native boolean hasECreateRoomType();

            public final native boolean hasEGameRoomSeniorType();

            public final native boolean hasEGameRoomType();

            public final native boolean hasIAnte();

            public final native boolean hasIGameRoomUserMaxNums();

            public final native boolean hasIMaxBuyinRatio();

            public final native boolean hasIMinBuyinRatio();

            public final native boolean hasLBigBlinds();

            public final native boolean hasLBuyIn();

            public final native boolean hasLDuration();

            public final native boolean hasLFromRoomID();

            public final native boolean hasLLeagueID();

            public final native boolean hasLSmallBlinds();

            public final native boolean hasSRoomName();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5994mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m5995mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m5996mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m5997mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m5998mergeFrom(Message message);

            public final native Builder mergeFrom(CSCreateGameRoom cSCreateGameRoom);

            public final native Builder removeVUserBaseInfos(int i);

            public final native Builder setBBuyIn(int i);

            public final native Builder setBBuyinControl(int i);

            public final native Builder setBGPSLimit(int i);

            public final native Builder setBIPLimit(int i);

            public final native Builder setBInsurance(int i);

            public final native Builder setBPrivateRoom(int i);

            public final native Builder setECreateRoomType(CREATE_ROOM_TYPE create_room_type);

            public final native Builder setEGameRoomSeniorType(GAME_ROOM_SENIOR_TYPE game_room_senior_type);

            public final native Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type);

            public final native Builder setIAnte(int i);

            public final native Builder setIGameRoomUserMaxNums(int i);

            public final native Builder setIMaxBuyinRatio(int i);

            public final native Builder setIMinBuyinRatio(int i);

            public final native Builder setLBigBlinds(long j);

            public final native Builder setLBuyIn(long j);

            public final native Builder setLDuration(long j);

            public final native Builder setLFromRoomID(long j);

            public final native Builder setLLeagueID(long j);

            public final native Builder setLSmallBlinds(long j);

            public final native Builder setSRoomName(String str);

            public final native Builder setSRoomNameBytes(ByteString byteString);

            public final native Builder setUuid(long j);

            public final native Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.bI;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSCreateGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSCreateGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSCreateGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSCreateGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSCreateGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case LFROMROOMID_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case IANTE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SROOMNAME_FIELD_NUMBER;
                            this.sRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LBIGBLINDS_FIELD_NUMBER;
                            this.lSmallBlinds_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= LFROMROOMID_FIELD_NUMBER;
                            this.lBigBlinds_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= BBUYINCONTROL_FIELD_NUMBER;
                            this.lBuyIn_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.bBuyIn_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.lDuration_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.lFromRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.bPrivateRoom_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            if ((i & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                                this.vUserBaseInfos_ = new ArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            }
                            this.vUserBaseInfos_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                                this.eGameRoomType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            readTag = codedInputStream.readEnum();
                            CREATE_ROOM_TYPE valueOf2 = CREATE_ROOM_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                                this.eCreateRoomType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ECREATEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_checkboxStyle /*104*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_SENIOR_TYPE valueOf3 = GAME_ROOM_SENIOR_TYPE.valueOf(readTag);
                            if (valueOf3 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                                this.eGameRoomSeniorType_ = valueOf3;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMSENIORTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_spinnerStyle /*112*/:
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            this.iMaxBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case 120:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                            this.iMinBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS /*128*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                            this.bBuyinControl_ = codedInputStream.readInt32();
                            break;
                        case 136:
                            this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                            this.iGameRoomUserMaxNums_ = codedInputStream.readInt32();
                            break;
                        case 144:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                            this.iAnte_ = codedInputStream.readInt32();
                            break;
                        case 152:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                            this.bInsurance_ = codedInputStream.readInt32();
                            break;
                        case 160:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                            this.bIPLimit_ = codedInputStream.readInt32();
                            break;
                        case 168:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                            this.bGPSLimit_ = codedInputStream.readInt32();
                            break;
                        case 176:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                            this.lLeagueID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bI;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bJ.ensureFieldAccessorsInitialized(CSCreateGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11341();
            CSCreateGameRoom cSCreateGameRoom = new CSCreateGameRoom(true);
            defaultInstance = cSCreateGameRoom;
            cSCreateGameRoom.initFields();
        }

        public final Parser<CSCreateGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasSRoomName() {
            return (this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER;
        }

        public final String getSRoomName() {
            Object obj = this.sRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSRoomNameBytes() {
            Object obj = this.sRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLSmallBlinds() {
            return (this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER;
        }

        public final long getLSmallBlinds() {
            return this.lSmallBlinds_;
        }

        public final boolean hasLBigBlinds() {
            return (this.bitField0_ & LFROMROOMID_FIELD_NUMBER) == LFROMROOMID_FIELD_NUMBER;
        }

        public final long getLBigBlinds() {
            return this.lBigBlinds_;
        }

        public final boolean hasLBuyIn() {
            return (this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER;
        }

        public final long getLBuyIn() {
            return this.lBuyIn_;
        }

        public final boolean hasBBuyIn() {
            return (this.bitField0_ & 32) == 32;
        }

        public final int getBBuyIn() {
            return this.bBuyIn_;
        }

        public final boolean hasLDuration() {
            return (this.bitField0_ & 64) == 64;
        }

        public final long getLDuration() {
            return this.lDuration_;
        }

        public final boolean hasLFromRoomID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final long getLFromRoomID() {
            return this.lFromRoomID_;
        }

        public final boolean hasBPrivateRoom() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final int getBPrivateRoom() {
            return this.bPrivateRoom_;
        }

        public final List<UserBaseInfoNet> getVUserBaseInfosList() {
            return this.vUserBaseInfos_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
            return this.vUserBaseInfos_;
        }

        public final int getVUserBaseInfosCount() {
            return this.vUserBaseInfos_.size();
        }

        public final UserBaseInfoNet getVUserBaseInfos(int i) {
            return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasECreateRoomType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final CREATE_ROOM_TYPE getECreateRoomType() {
            return this.eCreateRoomType_;
        }

        public final boolean hasEGameRoomSeniorType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType() {
            return this.eGameRoomSeniorType_;
        }

        public final boolean hasIMaxBuyinRatio() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final int getIMaxBuyinRatio() {
            return this.iMaxBuyinRatio_;
        }

        public final boolean hasIMinBuyinRatio() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
        }

        public final int getIMinBuyinRatio() {
            return this.iMinBuyinRatio_;
        }

        public final boolean hasBBuyinControl() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
        }

        public final int getBBuyinControl() {
            return this.bBuyinControl_;
        }

        public final boolean hasIGameRoomUserMaxNums() {
            return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
        }

        public final int getIGameRoomUserMaxNums() {
            return this.iGameRoomUserMaxNums_;
        }

        public final boolean hasIAnte() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
        }

        public final int getIAnte() {
            return this.iAnte_;
        }

        public final boolean hasBInsurance() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
        }

        public final int getBInsurance() {
            return this.bInsurance_;
        }

        public final boolean hasBIPLimit() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND;
        }

        public final int getBIPLimit() {
            return this.bIPLimit_;
        }

        public final boolean hasBGPSLimit() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
        }

        public final int getBGPSLimit() {
            return this.bGPSLimit_;
        }

        public final boolean hasLLeagueID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS;
        }

        public final long getLLeagueID() {
            return this.lLeagueID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lSmallBlinds_ = 0;
            this.lBigBlinds_ = 0;
            this.lBuyIn_ = 0;
            this.bBuyIn_ = 0;
            this.lDuration_ = 0;
            this.lFromRoomID_ = 0;
            this.bPrivateRoom_ = 0;
            this.vUserBaseInfos_ = Collections.emptyList();
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
            this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
            this.iMaxBuyinRatio_ = 0;
            this.iMinBuyinRatio_ = 0;
            this.bBuyinControl_ = 0;
            this.iGameRoomUserMaxNums_ = 0;
            this.iAnte_ = 0;
            this.bInsurance_ = 0;
            this.bIPLimit_ = 0;
            this.bGPSLimit_ = 0;
            this.lLeagueID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLSmallBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBigBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasBBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLDuration()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLFromRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasBPrivateRoom()) {
                int i = 0;
                while (i < getVUserBaseInfosCount()) {
                    if (getVUserBaseInfos(i).isInitialized()) {
                        i += UUID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & LFROMROOMID_FIELD_NUMBER) == LFROMROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt32(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt64(LFROMROOMID_FIELD_NUMBER, this.lFromRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            for (int i = 0; i < this.vUserBaseInfos_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i));
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeEnum(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeEnum(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeInt32(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                codedOutputStream.writeInt32(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                codedOutputStream.writeInt32(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                codedOutputStream.writeInt32(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                codedOutputStream.writeInt32(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                codedOutputStream.writeInt32(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                codedOutputStream.writeInt32(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                codedOutputStream.writeInt32(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                codedOutputStream.writeInt64(LLEAGUEID_FIELD_NUMBER, this.lLeagueID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeBytesSize(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & LFROMROOMID_FIELD_NUMBER) == LFROMROOMID_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeInt32Size(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeInt64Size(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i2 += CodedOutputStream.computeInt64Size(LFROMROOMID_FIELD_NUMBER, this.lFromRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeInt32Size(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            int i3 = i2;
            while (i < this.vUserBaseInfos_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i)) + i3;
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i3 += CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i3 += CodedOutputStream.computeEnumSize(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i3 += CodedOutputStream.computeEnumSize(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i3 += CodedOutputStream.computeInt32Size(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                i3 += CodedOutputStream.computeInt32Size(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                i3 += CodedOutputStream.computeInt32Size(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                i3 += CodedOutputStream.computeInt32Size(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                i3 += CodedOutputStream.computeInt32Size(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                i3 += CodedOutputStream.computeInt32Size(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                i3 += CodedOutputStream.computeInt32Size(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                i3 += CodedOutputStream.computeInt32Size(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                i3 += CodedOutputStream.computeInt64Size(LLEAGUEID_FIELD_NUMBER, this.lLeagueID_);
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSCreateGameRoom parseFrom(ByteString byteString) {
            return (CSCreateGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSCreateGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreateGameRoom parseFrom(byte[] bArr) {
            return (CSCreateGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSCreateGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreateGameRoom parseFrom(InputStream inputStream) {
            return (CSCreateGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSCreateGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSCreateGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreateGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSCreateGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreateGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSCreateGameRoom cSCreateGameRoom) {
            return newBuilder().mergeFrom(cSCreateGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSCreateQuickGameRoomOrBuilder extends MessageOrBuilder {
        int getBBuyIn();

        int getBBuyinControl();

        int getBGPSLimit();

        int getBIPLimit();

        int getBInsurance();

        GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType();

        GAME_ROOM_TYPE getEGameRoomType();

        int getIAnte();

        int getIGameRoomUserMaxNums();

        int getIMaxBuyinRatio();

        int getIMinBuyinRatio();

        long getLBigBlinds();

        long getLBuyIn();

        long getLDuration();

        long getLSmallBlinds();

        String getSRoomName();

        ByteString getSRoomNameBytes();

        long getUuid();

        boolean hasBBuyIn();

        boolean hasBBuyinControl();

        boolean hasBGPSLimit();

        boolean hasBIPLimit();

        boolean hasBInsurance();

        boolean hasEGameRoomSeniorType();

        boolean hasEGameRoomType();

        boolean hasIAnte();

        boolean hasIGameRoomUserMaxNums();

        boolean hasIMaxBuyinRatio();

        boolean hasIMinBuyinRatio();

        boolean hasLBigBlinds();

        boolean hasLBuyIn();

        boolean hasLDuration();

        boolean hasLSmallBlinds();

        boolean hasSRoomName();

        boolean hasUuid();
    }

    public static final class CSCreateQuickGameRoom extends GeneratedMessage implements CSCreateQuickGameRoomOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 11;
        public static final int BBUYIN_FIELD_NUMBER = 6;
        public static final int BGPSLIMIT_FIELD_NUMBER = 17;
        public static final int BINSURANCE_FIELD_NUMBER = 14;
        public static final int BIPLIMIT_FIELD_NUMBER = 16;
        public static final int EGAMEROOMSENIORTYPE_FIELD_NUMBER = 8;
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 15;
        public static final int IANTE_FIELD_NUMBER = 13;
        public static final int IGAMEROOMUSERMAXNUMS_FIELD_NUMBER = 12;
        public static final int IMAXBUYINRATIO_FIELD_NUMBER = 9;
        public static final int IMINBUYINRATIO_FIELD_NUMBER = 10;
        public static final int LBIGBLINDS_FIELD_NUMBER = 4;
        public static final int LBUYIN_FIELD_NUMBER = 5;
        public static final int LDURATION_FIELD_NUMBER = 7;
        public static final int LSMALLBLINDS_FIELD_NUMBER = 3;
        public static Parser<CSCreateQuickGameRoom> PARSER = null;
        public static final int SROOMNAME_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSCreateQuickGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bBuyIn_;
        private int bBuyinControl_;
        private int bGPSLimit_;
        private int bIPLimit_;
        private int bInsurance_;
        private int bitField0_;
        private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private int iAnte_;
        private int iGameRoomUserMaxNums_;
        private int iMaxBuyinRatio_;
        private int iMinBuyinRatio_;
        private long lBigBlinds_;
        private long lBuyIn_;
        private long lDuration_;
        private long lSmallBlinds_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom.1 */
        class C11351 extends AbstractParser<CSCreateQuickGameRoom> {
            static {
                fixHelper.fixfunc(new int[]{2178, 2179});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11351();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreateQuickGameRoomOrBuilder {
            private int bBuyIn_;
            private int bBuyinControl_;
            private int bGPSLimit_;
            private int bIPLimit_;
            private int bInsurance_;
            private int bitField0_;
            private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private int iAnte_;
            private int iGameRoomUserMaxNums_;
            private int iMaxBuyinRatio_;
            private int iMinBuyinRatio_;
            private long lBigBlinds_;
            private long lBuyIn_;
            private long lDuration_;
            private long lSmallBlinds_;
            private Object sRoomName_;
            private long uuid_;

            public final Builder setSRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER;
                this.sRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSRoomName() {
                this.bitField0_ &= -3;
                this.sRoomName_ = CSCreateQuickGameRoom.getDefaultInstance().getSRoomName();
                onChanged();
                return this;
            }

            public final Builder setSRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER;
                this.sRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLSmallBlinds() {
                return (this.bitField0_ & CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER) == CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER;
            }

            public final long getLSmallBlinds() {
                return this.lSmallBlinds_;
            }

            public final Builder setLSmallBlinds(long j) {
                this.bitField0_ |= CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER;
                this.lSmallBlinds_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLSmallBlinds() {
                this.bitField0_ &= -5;
                this.lSmallBlinds_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBigBlinds() {
                return (this.bitField0_ & CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER) == CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
            }

            public final long getLBigBlinds() {
                return this.lBigBlinds_;
            }

            public final Builder setLBigBlinds(long j) {
                this.bitField0_ |= CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                this.lBigBlinds_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBigBlinds() {
                this.bitField0_ &= -9;
                this.lBigBlinds_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBuyIn() {
                return (this.bitField0_ & CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER) == CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER;
            }

            public final long getLBuyIn() {
                return this.lBuyIn_;
            }

            public final Builder setLBuyIn(long j) {
                this.bitField0_ |= CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER;
                this.lBuyIn_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyIn() {
                this.bitField0_ &= -17;
                this.lBuyIn_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyIn() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getBBuyIn() {
                return this.bBuyIn_;
            }

            public final Builder setBBuyIn(int i) {
                this.bitField0_ |= 32;
                this.bBuyIn_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyIn() {
                this.bitField0_ &= -33;
                this.bBuyIn_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLDuration() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLDuration() {
                return this.lDuration_;
            }

            public final Builder setLDuration(long j) {
                this.bitField0_ |= 64;
                this.lDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLDuration() {
                this.bitField0_ &= -65;
                this.lDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomSeniorType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType() {
                return this.eGameRoomSeniorType_;
            }

            public final Builder setEGameRoomSeniorType(GAME_ROOM_SENIOR_TYPE game_room_senior_type) {
                if (game_room_senior_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.eGameRoomSeniorType_ = game_room_senior_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomSeniorType() {
                this.bitField0_ &= -129;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                onChanged();
                return this;
            }

            public final boolean hasIMaxBuyinRatio() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final int getIMaxBuyinRatio() {
                return this.iMaxBuyinRatio_;
            }

            public final Builder setIMaxBuyinRatio(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.iMaxBuyinRatio_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMaxBuyinRatio() {
                this.bitField0_ &= -257;
                this.iMaxBuyinRatio_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIMinBuyinRatio() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final int getIMinBuyinRatio() {
                return this.iMinBuyinRatio_;
            }

            public final Builder setIMinBuyinRatio(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.iMinBuyinRatio_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMinBuyinRatio() {
                this.bitField0_ &= -513;
                this.iMinBuyinRatio_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyinControl() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final int getBBuyinControl() {
                return this.bBuyinControl_;
            }

            public final Builder setBBuyinControl(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.bBuyinControl_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyinControl() {
                this.bitField0_ &= -1025;
                this.bBuyinControl_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIGameRoomUserMaxNums() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final int getIGameRoomUserMaxNums() {
                return this.iGameRoomUserMaxNums_;
            }

            public final Builder setIGameRoomUserMaxNums(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.iGameRoomUserMaxNums_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIGameRoomUserMaxNums() {
                this.bitField0_ &= -2049;
                this.iGameRoomUserMaxNums_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIAnte() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final int getIAnte() {
                return this.iAnte_;
            }

            public final Builder setIAnte(int i) {
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                this.iAnte_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIAnte() {
                this.bitField0_ &= -4097;
                this.iAnte_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBInsurance() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
            }

            public final int getBInsurance() {
                return this.bInsurance_;
            }

            public final Builder setBInsurance(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                this.bInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBInsurance() {
                this.bitField0_ &= -8193;
                this.bInsurance_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
            }

            public final GAME_ROOM_TYPE getEGameRoomType() {
                return this.eGameRoomType_;
            }

            public final Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type) {
                if (game_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                this.eGameRoomType_ = game_room_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomType() {
                this.bitField0_ &= -16385;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                onChanged();
                return this;
            }

            public final boolean hasBIPLimit() {
                return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
            }

            public final int getBIPLimit() {
                return this.bIPLimit_;
            }

            public final Builder setBIPLimit(int i) {
                this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                this.bIPLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBIPLimit() {
                this.bitField0_ &= -32769;
                this.bIPLimit_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBGPSLimit() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
            }

            public final int getBGPSLimit() {
                return this.bGPSLimit_;
            }

            public final Builder setBGPSLimit(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                this.bGPSLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBGPSLimit() {
                this.bitField0_ &= -65537;
                this.bGPSLimit_ = 0;
                onChanged();
                return this;
            }

            public static final Descriptor getDescriptor() {
                return TexasPoker.dQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dR.ensureFieldAccessorsInitialized(CSCreateQuickGameRoom.class, Builder.class);
            }

            private Builder() {
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSCreateQuickGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.lSmallBlinds_ = 0;
                this.bitField0_ &= -5;
                this.lBigBlinds_ = 0;
                this.bitField0_ &= -9;
                this.lBuyIn_ = 0;
                this.bitField0_ &= -17;
                this.bBuyIn_ = 0;
                this.bitField0_ &= -33;
                this.lDuration_ = 0;
                this.bitField0_ &= -65;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.bitField0_ &= -129;
                this.iMaxBuyinRatio_ = 0;
                this.bitField0_ &= -257;
                this.iMinBuyinRatio_ = 0;
                this.bitField0_ &= -513;
                this.bBuyinControl_ = 0;
                this.bitField0_ &= -1025;
                this.iGameRoomUserMaxNums_ = 0;
                this.bitField0_ &= -2049;
                this.iAnte_ = 0;
                this.bitField0_ &= -4097;
                this.bInsurance_ = 0;
                this.bitField0_ &= -8193;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.bitField0_ &= -16385;
                this.bIPLimit_ = 0;
                this.bitField0_ &= -32769;
                this.bGPSLimit_ = 0;
                this.bitField0_ &= -65537;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dQ;
            }

            public final CSCreateQuickGameRoom getDefaultInstanceForType() {
                return CSCreateQuickGameRoom.getDefaultInstance();
            }

            public final CSCreateQuickGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSCreateQuickGameRoom buildPartial() {
                int i = CSCreateQuickGameRoom.UUID_FIELD_NUMBER;
                CSCreateQuickGameRoom cSCreateQuickGameRoom = new CSCreateQuickGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSCreateQuickGameRoom.UUID_FIELD_NUMBER) != CSCreateQuickGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSCreateQuickGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER) == CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER) {
                    i |= CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER;
                }
                cSCreateQuickGameRoom.sRoomName_ = this.sRoomName_;
                if ((i2 & CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER) == CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER) {
                    i |= CSCreateQuickGameRoom.LBIGBLINDS_FIELD_NUMBER;
                }
                cSCreateQuickGameRoom.lSmallBlinds_ = this.lSmallBlinds_;
                if ((i2 & CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER) == CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                    i |= CSCreateQuickGameRoom.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                }
                cSCreateQuickGameRoom.lBigBlinds_ = this.lBigBlinds_;
                if ((i2 & CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER) == CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER) {
                    i |= CSCreateQuickGameRoom.BIPLIMIT_FIELD_NUMBER;
                }
                cSCreateQuickGameRoom.lBuyIn_ = this.lBuyIn_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSCreateQuickGameRoom.bBuyIn_ = this.bBuyIn_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSCreateQuickGameRoom.lDuration_ = this.lDuration_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSCreateQuickGameRoom.eGameRoomSeniorType_ = this.eGameRoomSeniorType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                cSCreateQuickGameRoom.iMaxBuyinRatio_ = this.iMaxBuyinRatio_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                cSCreateQuickGameRoom.iMinBuyinRatio_ = this.iMinBuyinRatio_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                cSCreateQuickGameRoom.bBuyinControl_ = this.bBuyinControl_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                cSCreateQuickGameRoom.iGameRoomUserMaxNums_ = this.iGameRoomUserMaxNums_;
                if ((i2 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                }
                cSCreateQuickGameRoom.iAnte_ = this.iAnte_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                }
                cSCreateQuickGameRoom.bInsurance_ = this.bInsurance_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_COPY;
                }
                cSCreateQuickGameRoom.eGameRoomType_ = this.eGameRoomType_;
                if ((i2 & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                    i |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                }
                cSCreateQuickGameRoom.bIPLimit_ = this.bIPLimit_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CUT;
                }
                cSCreateQuickGameRoom.bGPSLimit_ = this.bGPSLimit_;
                cSCreateQuickGameRoom.bitField0_ = i;
                onBuilt();
                return cSCreateQuickGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSCreateQuickGameRoom) {
                    return mergeFrom((CSCreateQuickGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSCreateQuickGameRoom cSCreateQuickGameRoom) {
                if (cSCreateQuickGameRoom != CSCreateQuickGameRoom.getDefaultInstance()) {
                    if (cSCreateQuickGameRoom.hasUuid()) {
                        setUuid(cSCreateQuickGameRoom.getUuid());
                    }
                    if (cSCreateQuickGameRoom.hasSRoomName()) {
                        this.bitField0_ |= CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER;
                        this.sRoomName_ = cSCreateQuickGameRoom.sRoomName_;
                        onChanged();
                    }
                    if (cSCreateQuickGameRoom.hasLSmallBlinds()) {
                        setLSmallBlinds(cSCreateQuickGameRoom.getLSmallBlinds());
                    }
                    if (cSCreateQuickGameRoom.hasLBigBlinds()) {
                        setLBigBlinds(cSCreateQuickGameRoom.getLBigBlinds());
                    }
                    if (cSCreateQuickGameRoom.hasLBuyIn()) {
                        setLBuyIn(cSCreateQuickGameRoom.getLBuyIn());
                    }
                    if (cSCreateQuickGameRoom.hasBBuyIn()) {
                        setBBuyIn(cSCreateQuickGameRoom.getBBuyIn());
                    }
                    if (cSCreateQuickGameRoom.hasLDuration()) {
                        setLDuration(cSCreateQuickGameRoom.getLDuration());
                    }
                    if (cSCreateQuickGameRoom.hasEGameRoomSeniorType()) {
                        setEGameRoomSeniorType(cSCreateQuickGameRoom.getEGameRoomSeniorType());
                    }
                    if (cSCreateQuickGameRoom.hasIMaxBuyinRatio()) {
                        setIMaxBuyinRatio(cSCreateQuickGameRoom.getIMaxBuyinRatio());
                    }
                    if (cSCreateQuickGameRoom.hasIMinBuyinRatio()) {
                        setIMinBuyinRatio(cSCreateQuickGameRoom.getIMinBuyinRatio());
                    }
                    if (cSCreateQuickGameRoom.hasBBuyinControl()) {
                        setBBuyinControl(cSCreateQuickGameRoom.getBBuyinControl());
                    }
                    if (cSCreateQuickGameRoom.hasIGameRoomUserMaxNums()) {
                        setIGameRoomUserMaxNums(cSCreateQuickGameRoom.getIGameRoomUserMaxNums());
                    }
                    if (cSCreateQuickGameRoom.hasIAnte()) {
                        setIAnte(cSCreateQuickGameRoom.getIAnte());
                    }
                    if (cSCreateQuickGameRoom.hasBInsurance()) {
                        setBInsurance(cSCreateQuickGameRoom.getBInsurance());
                    }
                    if (cSCreateQuickGameRoom.hasEGameRoomType()) {
                        setEGameRoomType(cSCreateQuickGameRoom.getEGameRoomType());
                    }
                    if (cSCreateQuickGameRoom.hasBIPLimit()) {
                        setBIPLimit(cSCreateQuickGameRoom.getBIPLimit());
                    }
                    if (cSCreateQuickGameRoom.hasBGPSLimit()) {
                        setBGPSLimit(cSCreateQuickGameRoom.getBGPSLimit());
                    }
                    mergeUnknownFields(cSCreateQuickGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasSRoomName() && hasLSmallBlinds() && hasLBigBlinds() && hasLBuyIn() && hasBBuyIn() && hasLDuration()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSCreateQuickGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSCreateQuickGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSCreateQuickGameRoom.UUID_FIELD_NUMBER) == CSCreateQuickGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSCreateQuickGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSRoomName() {
                return (this.bitField0_ & CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER) == CSCreateQuickGameRoom.SROOMNAME_FIELD_NUMBER;
            }

            public final String getSRoomName() {
                Object obj = this.sRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSRoomNameBytes() {
                Object obj = this.sRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }
        }

        private CSCreateQuickGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSCreateQuickGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSCreateQuickGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSCreateQuickGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSCreateQuickGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case EGAMEROOMSENIORTYPE_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SROOMNAME_FIELD_NUMBER;
                            this.sRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LBIGBLINDS_FIELD_NUMBER;
                            this.lSmallBlinds_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                            this.lBigBlinds_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= BIPLIMIT_FIELD_NUMBER;
                            this.lBuyIn_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.bBuyIn_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.lDuration_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_SENIOR_TYPE valueOf = GAME_ROOM_SENIOR_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                                this.eGameRoomSeniorType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMSENIORTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.iMaxBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.iMinBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.bBuyinControl_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                            this.iGameRoomUserMaxNums_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_checkboxStyle /*104*/:
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            this.iAnte_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_spinnerStyle /*112*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                            this.bInsurance_ = codedInputStream.readInt32();
                            break;
                        case 120:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf2 = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                                this.eGameRoomType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS /*128*/:
                            this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                            this.bIPLimit_ = codedInputStream.readInt32();
                            break;
                        case 136:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                            this.bGPSLimit_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dR.ensureFieldAccessorsInitialized(CSCreateQuickGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11351();
            CSCreateQuickGameRoom cSCreateQuickGameRoom = new CSCreateQuickGameRoom(true);
            defaultInstance = cSCreateQuickGameRoom;
            cSCreateQuickGameRoom.initFields();
        }

        public final Parser<CSCreateQuickGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasSRoomName() {
            return (this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER;
        }

        public final String getSRoomName() {
            Object obj = this.sRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSRoomNameBytes() {
            Object obj = this.sRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLSmallBlinds() {
            return (this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER;
        }

        public final long getLSmallBlinds() {
            return this.lSmallBlinds_;
        }

        public final boolean hasLBigBlinds() {
            return (this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER;
        }

        public final long getLBigBlinds() {
            return this.lBigBlinds_;
        }

        public final boolean hasLBuyIn() {
            return (this.bitField0_ & BIPLIMIT_FIELD_NUMBER) == BIPLIMIT_FIELD_NUMBER;
        }

        public final long getLBuyIn() {
            return this.lBuyIn_;
        }

        public final boolean hasBBuyIn() {
            return (this.bitField0_ & 32) == 32;
        }

        public final int getBBuyIn() {
            return this.bBuyIn_;
        }

        public final boolean hasLDuration() {
            return (this.bitField0_ & 64) == 64;
        }

        public final long getLDuration() {
            return this.lDuration_;
        }

        public final boolean hasEGameRoomSeniorType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType() {
            return this.eGameRoomSeniorType_;
        }

        public final boolean hasIMaxBuyinRatio() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final int getIMaxBuyinRatio() {
            return this.iMaxBuyinRatio_;
        }

        public final boolean hasIMinBuyinRatio() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final int getIMinBuyinRatio() {
            return this.iMinBuyinRatio_;
        }

        public final boolean hasBBuyinControl() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final int getBBuyinControl() {
            return this.bBuyinControl_;
        }

        public final boolean hasIGameRoomUserMaxNums() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final int getIGameRoomUserMaxNums() {
            return this.iGameRoomUserMaxNums_;
        }

        public final boolean hasIAnte() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final int getIAnte() {
            return this.iAnte_;
        }

        public final boolean hasBInsurance() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
        }

        public final int getBInsurance() {
            return this.bInsurance_;
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasBIPLimit() {
            return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
        }

        public final int getBIPLimit() {
            return this.bIPLimit_;
        }

        public final boolean hasBGPSLimit() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
        }

        public final int getBGPSLimit() {
            return this.bGPSLimit_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lSmallBlinds_ = 0;
            this.lBigBlinds_ = 0;
            this.lBuyIn_ = 0;
            this.bBuyIn_ = 0;
            this.lDuration_ = 0;
            this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
            this.iMaxBuyinRatio_ = 0;
            this.iMinBuyinRatio_ = 0;
            this.bBuyinControl_ = 0;
            this.iGameRoomUserMaxNums_ = 0;
            this.iAnte_ = 0;
            this.bInsurance_ = 0;
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.bIPLimit_ = 0;
            this.bGPSLimit_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLSmallBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBigBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasBBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLDuration()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & BIPLIMIT_FIELD_NUMBER) == BIPLIMIT_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt32(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeEnum(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt32(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeInt32(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeInt32(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                codedOutputStream.writeInt32(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                codedOutputStream.writeInt32(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                codedOutputStream.writeInt32(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & SROOMNAME_FIELD_NUMBER) == SROOMNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & LBIGBLINDS_FIELD_NUMBER) == LBIGBLINDS_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & BIPLIMIT_FIELD_NUMBER) == BIPLIMIT_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt32Size(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt64Size(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt32Size(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt32Size(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i += CodedOutputStream.computeInt32Size(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                i += CodedOutputStream.computeInt32Size(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                i += CodedOutputStream.computeInt32Size(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                i += CodedOutputStream.computeInt32Size(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSCreateQuickGameRoom parseFrom(ByteString byteString) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSCreateQuickGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreateQuickGameRoom parseFrom(byte[] bArr) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSCreateQuickGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreateQuickGameRoom parseFrom(InputStream inputStream) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSCreateQuickGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateQuickGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSCreateQuickGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreateQuickGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateQuickGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreateQuickGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSCreateQuickGameRoom cSCreateQuickGameRoom) {
            return newBuilder().mergeFrom(cSCreateQuickGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSCreateQuickSNGGameRoomOrBuilder extends MessageOrBuilder {
        int getBBuyinControl();

        int getBGPSLimit();

        int getBIPLimit();

        int getBPrivateRoom();

        CREATE_ROOM_TYPE getECreateRoomType();

        SNG_ROOM_TYPE getESNGRoomType();

        int getIGameRoomUserMaxNums();

        long getLFromRoomID();

        String getStrRoomName();

        ByteString getStrRoomNameBytes();

        long getUuid();

        boolean hasBBuyinControl();

        boolean hasBGPSLimit();

        boolean hasBIPLimit();

        boolean hasBPrivateRoom();

        boolean hasECreateRoomType();

        boolean hasESNGRoomType();

        boolean hasIGameRoomUserMaxNums();

        boolean hasLFromRoomID();

        boolean hasStrRoomName();

        boolean hasUuid();
    }

    public static final class CSCreateQuickSNGGameRoom extends GeneratedMessage implements CSCreateQuickSNGGameRoomOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 8;
        public static final int BGPSLIMIT_FIELD_NUMBER = 10;
        public static final int BIPLIMIT_FIELD_NUMBER = 9;
        public static final int BPRIVATEROOM_FIELD_NUMBER = 3;
        public static final int ECREATEROOMTYPE_FIELD_NUMBER = 5;
        public static final int ESNGROOMTYPE_FIELD_NUMBER = 4;
        public static final int IGAMEROOMUSERMAXNUMS_FIELD_NUMBER = 7;
        public static final int LFROMROOMID_FIELD_NUMBER = 6;
        public static Parser<CSCreateQuickSNGGameRoom> PARSER = null;
        public static final int STRROOMNAME_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSCreateQuickSNGGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bBuyinControl_;
        private int bGPSLimit_;
        private int bIPLimit_;
        private int bPrivateRoom_;
        private int bitField0_;
        private CREATE_ROOM_TYPE eCreateRoomType_;
        private SNG_ROOM_TYPE eSNGRoomType_;
        private int iGameRoomUserMaxNums_;
        private long lFromRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object strRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreateQuickSNGGameRoom.1 */
        class C11361 extends AbstractParser<CSCreateQuickSNGGameRoom> {
            C11361() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCreateQuickSNGGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreateQuickSNGGameRoomOrBuilder {
            private int bBuyinControl_;
            private int bGPSLimit_;
            private int bIPLimit_;
            private int bPrivateRoom_;
            private int bitField0_;
            private CREATE_ROOM_TYPE eCreateRoomType_;
            private SNG_ROOM_TYPE eSNGRoomType_;
            private int iGameRoomUserMaxNums_;
            private long lFromRoomID_;
            private Object strRoomName_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{R.AppCompatTheme_buttonStyle, R.AppCompatTheme_buttonStyleSmall, R.AppCompatTheme_checkboxStyle, R.AppCompatTheme_checkedTextViewStyle, R.AppCompatTheme_editTextStyle, R.AppCompatTheme_radioButtonStyle, R.AppCompatTheme_ratingBarStyle, R.AppCompatTheme_ratingBarStyleIndicator, R.AppCompatTheme_ratingBarStyleSmall, R.AppCompatTheme_seekBarStyle, R.AppCompatTheme_spinnerStyle, R.AppCompatTheme_switchStyle, R.AppCompatTheme_listMenuViewStyle, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, TransportMediator.KEYCODE_MEDIA_PLAY, TransportMediator.KEYCODE_MEDIA_PAUSE, AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS, 129, TransportMediator.KEYCODE_MEDIA_RECORD, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m5999build();

            public final native CSCreateQuickSNGGameRoom m6000build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6001buildPartial();

            public final native CSCreateQuickSNGGameRoom m6002buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6003clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6004clear();

            public final native Builder m6005clear();

            public final native Builder clearBBuyinControl();

            public final native Builder clearBGPSLimit();

            public final native Builder clearBIPLimit();

            public final native Builder clearBPrivateRoom();

            public final native Builder clearECreateRoomType();

            public final native Builder clearESNGRoomType();

            public final native Builder clearIGameRoomUserMaxNums();

            public final native Builder clearLFromRoomID();

            public final native Builder clearStrRoomName();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6006clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6007clone();

            public final native Builder m6008clone();

            public final native int getBBuyinControl();

            public final native int getBGPSLimit();

            public final native int getBIPLimit();

            public final native int getBPrivateRoom();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6009getDefaultInstanceForType();

            public final native CSCreateQuickSNGGameRoom m6010getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native CREATE_ROOM_TYPE getECreateRoomType();

            public final native SNG_ROOM_TYPE getESNGRoomType();

            public final native int getIGameRoomUserMaxNums();

            public final native long getLFromRoomID();

            public final native String getStrRoomName();

            public final native ByteString getStrRoomNameBytes();

            public final native long getUuid();

            public final native boolean hasBBuyinControl();

            public final native boolean hasBGPSLimit();

            public final native boolean hasBIPLimit();

            public final native boolean hasBPrivateRoom();

            public final native boolean hasECreateRoomType();

            public final native boolean hasESNGRoomType();

            public final native boolean hasIGameRoomUserMaxNums();

            public final native boolean hasLFromRoomID();

            public final native boolean hasStrRoomName();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6011mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6012mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6013mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6014mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6015mergeFrom(Message message);

            public final native Builder mergeFrom(CSCreateQuickSNGGameRoom cSCreateQuickSNGGameRoom);

            public final native Builder setBBuyinControl(int i);

            public final native Builder setBGPSLimit(int i);

            public final native Builder setBIPLimit(int i);

            public final native Builder setBPrivateRoom(int i);

            public final native Builder setECreateRoomType(CREATE_ROOM_TYPE create_room_type);

            public final native Builder setESNGRoomType(SNG_ROOM_TYPE sng_room_type);

            public final native Builder setIGameRoomUserMaxNums(int i);

            public final native Builder setLFromRoomID(long j);

            public final native Builder setStrRoomName(String str);

            public final native Builder setStrRoomNameBytes(ByteString byteString);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.dU;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSCreateQuickSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSCreateQuickSNGGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSCreateQuickSNGGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSCreateQuickSNGGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSCreateQuickSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case BBUYINCONTROL_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRROOMNAME_FIELD_NUMBER;
                            this.strRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= ESNGROOMTYPE_FIELD_NUMBER;
                            this.bPrivateRoom_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            SNG_ROOM_TYPE valueOf = SNG_ROOM_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= BBUYINCONTROL_FIELD_NUMBER;
                                this.eSNGRoomType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ESNGROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            readTag = codedInputStream.readEnum();
                            CREATE_ROOM_TYPE valueOf2 = CREATE_ROOM_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= 16;
                                this.eCreateRoomType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ECREATEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.lFromRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.iGameRoomUserMaxNums_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.bBuyinControl_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.bIPLimit_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.bGPSLimit_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dU;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dV.ensureFieldAccessorsInitialized(CSCreateQuickSNGGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11361();
            CSCreateQuickSNGGameRoom cSCreateQuickSNGGameRoom = new CSCreateQuickSNGGameRoom(true);
            defaultInstance = cSCreateQuickSNGGameRoom;
            cSCreateQuickSNGGameRoom.initFields();
        }

        public final Parser<CSCreateQuickSNGGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasStrRoomName() {
            return (this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER;
        }

        public final String getStrRoomName() {
            Object obj = this.strRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrRoomNameBytes() {
            Object obj = this.strRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasBPrivateRoom() {
            return (this.bitField0_ & ESNGROOMTYPE_FIELD_NUMBER) == ESNGROOMTYPE_FIELD_NUMBER;
        }

        public final int getBPrivateRoom() {
            return this.bPrivateRoom_;
        }

        public final boolean hasESNGRoomType() {
            return (this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER;
        }

        public final SNG_ROOM_TYPE getESNGRoomType() {
            return this.eSNGRoomType_;
        }

        public final boolean hasECreateRoomType() {
            return (this.bitField0_ & 16) == 16;
        }

        public final CREATE_ROOM_TYPE getECreateRoomType() {
            return this.eCreateRoomType_;
        }

        public final boolean hasLFromRoomID() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLFromRoomID() {
            return this.lFromRoomID_;
        }

        public final boolean hasIGameRoomUserMaxNums() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getIGameRoomUserMaxNums() {
            return this.iGameRoomUserMaxNums_;
        }

        public final boolean hasBBuyinControl() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final int getBBuyinControl() {
            return this.bBuyinControl_;
        }

        public final boolean hasBIPLimit() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final int getBIPLimit() {
            return this.bIPLimit_;
        }

        public final boolean hasBGPSLimit() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final int getBGPSLimit() {
            return this.bGPSLimit_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.bPrivateRoom_ = 0;
            this.eSNGRoomType_ = SNG_ROOM_TYPE.QUICK_SNG;
            this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
            this.lFromRoomID_ = 0;
            this.iGameRoomUserMaxNums_ = 0;
            this.bBuyinControl_ = 0;
            this.bIPLimit_ = 0;
            this.bGPSLimit_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStrRoomName()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & ESNGROOMTYPE_FIELD_NUMBER) == ESNGROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeInt32(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            if ((this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ESNGROOMTYPE_FIELD_NUMBER, this.eSNGRoomType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeEnum(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LFROMROOMID_FIELD_NUMBER, this.lFromRoomID_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt32(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & ESNGROOMTYPE_FIELD_NUMBER) == ESNGROOMTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            if ((this.bitField0_ & BBUYINCONTROL_FIELD_NUMBER) == BBUYINCONTROL_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(ESNGROOMTYPE_FIELD_NUMBER, this.eSNGRoomType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeEnumSize(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt64Size(LFROMROOMID_FIELD_NUMBER, this.lFromRoomID_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt32Size(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeInt32Size(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt32Size(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt32Size(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSCreateQuickSNGGameRoom parseFrom(ByteString byteString) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(byte[] bArr) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(InputStream inputStream) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateQuickSNGGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreateQuickSNGGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreateQuickSNGGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateQuickSNGGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSCreateQuickSNGGameRoom cSCreateQuickSNGGameRoom) {
            return newBuilder().mergeFrom(cSCreateQuickSNGGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSCreateSNGGameRoomOrBuilder extends MessageOrBuilder {
        int getBBuyinControl();

        int getBGPSLimit();

        int getBIPLimit();

        int getBPrivateRoom();

        CREATE_ROOM_TYPE getECreateRoomType();

        SNG_ROOM_TYPE getESNGRoomType();

        int getIGameRoomUserMaxNums();

        long getLFromRoomID();

        long getLLeagueID();

        String getStrRoomName();

        ByteString getStrRoomNameBytes();

        long getUuid();

        boolean hasBBuyinControl();

        boolean hasBGPSLimit();

        boolean hasBIPLimit();

        boolean hasBPrivateRoom();

        boolean hasECreateRoomType();

        boolean hasESNGRoomType();

        boolean hasIGameRoomUserMaxNums();

        boolean hasLFromRoomID();

        boolean hasLLeagueID();

        boolean hasStrRoomName();

        boolean hasUuid();
    }

    public static final class CSCreateSNGGameRoom extends GeneratedMessage implements CSCreateSNGGameRoomOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 8;
        public static final int BGPSLIMIT_FIELD_NUMBER = 10;
        public static final int BIPLIMIT_FIELD_NUMBER = 9;
        public static final int BPRIVATEROOM_FIELD_NUMBER = 3;
        public static final int ECREATEROOMTYPE_FIELD_NUMBER = 5;
        public static final int ESNGROOMTYPE_FIELD_NUMBER = 4;
        public static final int IGAMEROOMUSERMAXNUMS_FIELD_NUMBER = 7;
        public static final int LFROMROOMID_FIELD_NUMBER = 6;
        public static final int LLEAGUEID_FIELD_NUMBER = 11;
        public static Parser<CSCreateSNGGameRoom> PARSER = null;
        public static final int STRROOMNAME_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSCreateSNGGameRoom defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bBuyinControl_;
        private int bGPSLimit_;
        private int bIPLimit_;
        private int bPrivateRoom_;
        private int bitField0_;
        private CREATE_ROOM_TYPE eCreateRoomType_;
        private SNG_ROOM_TYPE eSNGRoomType_;
        private int iGameRoomUserMaxNums_;
        private long lFromRoomID_;
        private long lLeagueID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object strRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom.1 */
        class C11371 extends AbstractParser<CSCreateSNGGameRoom> {
            C11371() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCreateSNGGameRoom(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreateSNGGameRoomOrBuilder {
            private int bBuyinControl_;
            private int bGPSLimit_;
            private int bIPLimit_;
            private int bPrivateRoom_;
            private int bitField0_;
            private CREATE_ROOM_TYPE eCreateRoomType_;
            private SNG_ROOM_TYPE eSNGRoomType_;
            private int iGameRoomUserMaxNums_;
            private long lFromRoomID_;
            private long lLeagueID_;
            private Object strRoomName_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bU;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bV.ensureFieldAccessorsInitialized(CSCreateSNGGameRoom.class, Builder.class);
            }

            private Builder() {
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eSNGRoomType_ = SNG_ROOM_TYPE.QUICK_SNG;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eSNGRoomType_ = SNG_ROOM_TYPE.QUICK_SNG;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSCreateSNGGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.bPrivateRoom_ = 0;
                this.bitField0_ &= -5;
                this.eSNGRoomType_ = SNG_ROOM_TYPE.QUICK_SNG;
                this.bitField0_ &= -9;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                this.bitField0_ &= -17;
                this.lFromRoomID_ = 0;
                this.bitField0_ &= -33;
                this.iGameRoomUserMaxNums_ = 0;
                this.bitField0_ &= -65;
                this.bBuyinControl_ = 0;
                this.bitField0_ &= -129;
                this.bIPLimit_ = 0;
                this.bitField0_ &= -257;
                this.bGPSLimit_ = 0;
                this.bitField0_ &= -513;
                this.lLeagueID_ = 0;
                this.bitField0_ &= -1025;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bU;
            }

            public final CSCreateSNGGameRoom getDefaultInstanceForType() {
                return CSCreateSNGGameRoom.getDefaultInstance();
            }

            public final CSCreateSNGGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSCreateSNGGameRoom buildPartial() {
                int i = CSCreateSNGGameRoom.UUID_FIELD_NUMBER;
                CSCreateSNGGameRoom cSCreateSNGGameRoom = new CSCreateSNGGameRoom((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSCreateSNGGameRoom.UUID_FIELD_NUMBER) != CSCreateSNGGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSCreateSNGGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER) == CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER) {
                    i |= CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER;
                }
                cSCreateSNGGameRoom.strRoomName_ = this.strRoomName_;
                if ((i2 & CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER) == CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER) {
                    i |= CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER;
                }
                cSCreateSNGGameRoom.bPrivateRoom_ = this.bPrivateRoom_;
                if ((i2 & CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER) == CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER) {
                    i |= CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER;
                }
                cSCreateSNGGameRoom.eSNGRoomType_ = this.eSNGRoomType_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSCreateSNGGameRoom.eCreateRoomType_ = this.eCreateRoomType_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSCreateSNGGameRoom.lFromRoomID_ = this.lFromRoomID_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSCreateSNGGameRoom.iGameRoomUserMaxNums_ = this.iGameRoomUserMaxNums_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSCreateSNGGameRoom.bBuyinControl_ = this.bBuyinControl_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                cSCreateSNGGameRoom.bIPLimit_ = this.bIPLimit_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                cSCreateSNGGameRoom.bGPSLimit_ = this.bGPSLimit_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                cSCreateSNGGameRoom.lLeagueID_ = this.lLeagueID_;
                cSCreateSNGGameRoom.bitField0_ = i;
                onBuilt();
                return cSCreateSNGGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSCreateSNGGameRoom) {
                    return mergeFrom((CSCreateSNGGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSCreateSNGGameRoom cSCreateSNGGameRoom) {
                if (cSCreateSNGGameRoom != CSCreateSNGGameRoom.getDefaultInstance()) {
                    if (cSCreateSNGGameRoom.hasUuid()) {
                        setUuid(cSCreateSNGGameRoom.getUuid());
                    }
                    if (cSCreateSNGGameRoom.hasStrRoomName()) {
                        this.bitField0_ |= CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER;
                        this.strRoomName_ = cSCreateSNGGameRoom.strRoomName_;
                        onChanged();
                    }
                    if (cSCreateSNGGameRoom.hasBPrivateRoom()) {
                        setBPrivateRoom(cSCreateSNGGameRoom.getBPrivateRoom());
                    }
                    if (cSCreateSNGGameRoom.hasESNGRoomType()) {
                        setESNGRoomType(cSCreateSNGGameRoom.getESNGRoomType());
                    }
                    if (cSCreateSNGGameRoom.hasECreateRoomType()) {
                        setECreateRoomType(cSCreateSNGGameRoom.getECreateRoomType());
                    }
                    if (cSCreateSNGGameRoom.hasLFromRoomID()) {
                        setLFromRoomID(cSCreateSNGGameRoom.getLFromRoomID());
                    }
                    if (cSCreateSNGGameRoom.hasIGameRoomUserMaxNums()) {
                        setIGameRoomUserMaxNums(cSCreateSNGGameRoom.getIGameRoomUserMaxNums());
                    }
                    if (cSCreateSNGGameRoom.hasBBuyinControl()) {
                        setBBuyinControl(cSCreateSNGGameRoom.getBBuyinControl());
                    }
                    if (cSCreateSNGGameRoom.hasBIPLimit()) {
                        setBIPLimit(cSCreateSNGGameRoom.getBIPLimit());
                    }
                    if (cSCreateSNGGameRoom.hasBGPSLimit()) {
                        setBGPSLimit(cSCreateSNGGameRoom.getBGPSLimit());
                    }
                    if (cSCreateSNGGameRoom.hasLLeagueID()) {
                        setLLeagueID(cSCreateSNGGameRoom.getLLeagueID());
                    }
                    mergeUnknownFields(cSCreateSNGGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasStrRoomName()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSCreateSNGGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSCreateSNGGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSCreateSNGGameRoom.UUID_FIELD_NUMBER) == CSCreateSNGGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSCreateSNGGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrRoomName() {
                return (this.bitField0_ & CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER) == CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER;
            }

            public final String getStrRoomName() {
                Object obj = this.strRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrRoomNameBytes() {
                Object obj = this.strRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrRoomName() {
                this.bitField0_ &= -3;
                this.strRoomName_ = CSCreateSNGGameRoom.getDefaultInstance().getStrRoomName();
                onChanged();
                return this;
            }

            public final Builder setStrRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateSNGGameRoom.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasBPrivateRoom() {
                return (this.bitField0_ & CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER) == CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER;
            }

            public final int getBPrivateRoom() {
                return this.bPrivateRoom_;
            }

            public final Builder setBPrivateRoom(int i) {
                this.bitField0_ |= CSCreateSNGGameRoom.ESNGROOMTYPE_FIELD_NUMBER;
                this.bPrivateRoom_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBPrivateRoom() {
                this.bitField0_ &= -5;
                this.bPrivateRoom_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasESNGRoomType() {
                return (this.bitField0_ & CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER) == CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER;
            }

            public final SNG_ROOM_TYPE getESNGRoomType() {
                return this.eSNGRoomType_;
            }

            public final Builder setESNGRoomType(SNG_ROOM_TYPE sng_room_type) {
                if (sng_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSCreateSNGGameRoom.BBUYINCONTROL_FIELD_NUMBER;
                this.eSNGRoomType_ = sng_room_type;
                onChanged();
                return this;
            }

            public final Builder clearESNGRoomType() {
                this.bitField0_ &= -9;
                this.eSNGRoomType_ = SNG_ROOM_TYPE.QUICK_SNG;
                onChanged();
                return this;
            }

            public final boolean hasECreateRoomType() {
                return (this.bitField0_ & 16) == 16;
            }

            public final CREATE_ROOM_TYPE getECreateRoomType() {
                return this.eCreateRoomType_;
            }

            public final Builder setECreateRoomType(CREATE_ROOM_TYPE create_room_type) {
                if (create_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.eCreateRoomType_ = create_room_type;
                onChanged();
                return this;
            }

            public final Builder clearECreateRoomType() {
                this.bitField0_ &= -17;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                onChanged();
                return this;
            }

            public final boolean hasLFromRoomID() {
                return (this.bitField0_ & 32) == 32;
            }

            public final long getLFromRoomID() {
                return this.lFromRoomID_;
            }

            public final Builder setLFromRoomID(long j) {
                this.bitField0_ |= 32;
                this.lFromRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLFromRoomID() {
                this.bitField0_ &= -33;
                this.lFromRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIGameRoomUserMaxNums() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getIGameRoomUserMaxNums() {
                return this.iGameRoomUserMaxNums_;
            }

            public final Builder setIGameRoomUserMaxNums(int i) {
                this.bitField0_ |= 64;
                this.iGameRoomUserMaxNums_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIGameRoomUserMaxNums() {
                this.bitField0_ &= -65;
                this.iGameRoomUserMaxNums_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyinControl() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getBBuyinControl() {
                return this.bBuyinControl_;
            }

            public final Builder setBBuyinControl(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.bBuyinControl_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyinControl() {
                this.bitField0_ &= -129;
                this.bBuyinControl_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBIPLimit() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final int getBIPLimit() {
                return this.bIPLimit_;
            }

            public final Builder setBIPLimit(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.bIPLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBIPLimit() {
                this.bitField0_ &= -257;
                this.bIPLimit_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBGPSLimit() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final int getBGPSLimit() {
                return this.bGPSLimit_;
            }

            public final Builder setBGPSLimit(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.bGPSLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBGPSLimit() {
                this.bitField0_ &= -513;
                this.bGPSLimit_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLLeagueID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final long getLLeagueID() {
                return this.lLeagueID_;
            }

            public final Builder setLLeagueID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.lLeagueID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLLeagueID() {
                this.bitField0_ &= -1025;
                this.lLeagueID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSCreateSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSCreateSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSCreateSNGGameRoom cSCreateSNGGameRoom);

        private native CSCreateSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSCreateSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder builder, CSCreateSNGGameRoom cSCreateSNGGameRoom);

        private native CSCreateSNGGameRoom(boolean z);

        private native void initFields();

        public final native int getBBuyinControl();

        public final native int getBGPSLimit();

        public final native int getBIPLimit();

        public final native int getBPrivateRoom();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6016getDefaultInstanceForType();

        public final native CSCreateSNGGameRoom m6017getDefaultInstanceForType();

        public final native CREATE_ROOM_TYPE getECreateRoomType();

        public final native SNG_ROOM_TYPE getESNGRoomType();

        public final native int getIGameRoomUserMaxNums();

        public final native long getLFromRoomID();

        public final native long getLLeagueID();

        public final native Parser<CSCreateSNGGameRoom> getParserForType();

        public final native int getSerializedSize();

        public final native String getStrRoomName();

        public final native ByteString getStrRoomNameBytes();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasBBuyinControl();

        public final native boolean hasBGPSLimit();

        public final native boolean hasBIPLimit();

        public final native boolean hasBPrivateRoom();

        public final native boolean hasECreateRoomType();

        public final native boolean hasESNGRoomType();

        public final native boolean hasIGameRoomUserMaxNums();

        public final native boolean hasLFromRoomID();

        public final native boolean hasLLeagueID();

        public final native boolean hasStrRoomName();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6018newBuilderForType();

        public final native Builder m6019newBuilderForType();

        protected final native Builder m6020newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6021toBuilder();

        public final native Builder m6022toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSCreateSNGGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bU;
        }

        static void __clinit__() {
            PARSER = new C11371();
            CSCreateSNGGameRoom cSCreateSNGGameRoom = new CSCreateSNGGameRoom(true);
            defaultInstance = cSCreateSNGGameRoom;
            cSCreateSNGGameRoom.initFields();
        }

        public static CSCreateSNGGameRoom parseFrom(ByteString byteString) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSCreateSNGGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreateSNGGameRoom parseFrom(byte[] bArr) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSCreateSNGGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreateSNGGameRoom parseFrom(InputStream inputStream) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSCreateSNGGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateSNGGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSCreateSNGGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreateSNGGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateSNGGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreateSNGGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreateSNGGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreateSNGGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSCreateSNGGameRoom cSCreateSNGGameRoom) {
            return newBuilder().mergeFrom(cSCreateSNGGameRoom);
        }
    }

    public interface CSCreatorInsuranceSettingOrBuilder extends MessageOrBuilder {
        int getBCanInsurance();

        long getLGameRoomID();

        long getLSettedUuid();

        long getUuid();

        boolean hasBCanInsurance();

        boolean hasLGameRoomID();

        boolean hasLSettedUuid();

        boolean hasUuid();
    }

    public static final class CSCreatorInsuranceSetting extends GeneratedMessage implements CSCreatorInsuranceSettingOrBuilder {
        public static final int BCANINSURANCE_FIELD_NUMBER = 4;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static final int LSETTEDUUID_FIELD_NUMBER = 3;
        public static Parser<CSCreatorInsuranceSetting> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSCreatorInsuranceSetting defaultInstance;
        private static final long serialVersionUID = 0;
        private int bCanInsurance_;
        private int bitField0_;
        private long lGameRoomID_;
        private long lSettedUuid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting.1 */
        class C11381 extends AbstractParser<CSCreatorInsuranceSetting> {
            C11381() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSCreatorInsuranceSetting(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSCreatorInsuranceSettingOrBuilder {
            private int bCanInsurance_;
            private int bitField0_;
            private long lGameRoomID_;
            private long lSettedUuid_;
            private long uuid_;

            public final boolean hasLSettedUuid() {
                return (this.bitField0_ & CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER) == CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER;
            }

            public final long getLSettedUuid() {
                return this.lSettedUuid_;
            }

            public final Builder setLSettedUuid(long j) {
                this.bitField0_ |= CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER;
                this.lSettedUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLSettedUuid() {
                this.bitField0_ &= -5;
                this.lSettedUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBCanInsurance() {
                return (this.bitField0_ & 8) == 8;
            }

            public final int getBCanInsurance() {
                return this.bCanInsurance_;
            }

            public final Builder setBCanInsurance(int i) {
                this.bitField0_ |= 8;
                this.bCanInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBCanInsurance() {
                this.bitField0_ &= -9;
                this.bCanInsurance_ = 0;
                onChanged();
                return this;
            }

            public static final Descriptor getDescriptor() {
                return TexasPoker.gq;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gr.ensureFieldAccessorsInitialized(CSCreatorInsuranceSetting.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSCreatorInsuranceSetting.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lSettedUuid_ = 0;
                this.bitField0_ &= -5;
                this.bCanInsurance_ = 0;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gq;
            }

            public final CSCreatorInsuranceSetting getDefaultInstanceForType() {
                return CSCreatorInsuranceSetting.getDefaultInstance();
            }

            public final CSCreatorInsuranceSetting build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSCreatorInsuranceSetting buildPartial() {
                int i = CSCreatorInsuranceSetting.UUID_FIELD_NUMBER;
                CSCreatorInsuranceSetting cSCreatorInsuranceSetting = new CSCreatorInsuranceSetting(null);
                int i2 = this.bitField0_;
                if ((i2 & CSCreatorInsuranceSetting.UUID_FIELD_NUMBER) != CSCreatorInsuranceSetting.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSCreatorInsuranceSetting.uuid_ = this.uuid_;
                if ((i2 & CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER) == CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER;
                }
                cSCreatorInsuranceSetting.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER) == CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER) {
                    i |= CSCreatorInsuranceSetting.BCANINSURANCE_FIELD_NUMBER;
                }
                cSCreatorInsuranceSetting.lSettedUuid_ = this.lSettedUuid_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSCreatorInsuranceSetting.bCanInsurance_ = this.bCanInsurance_;
                cSCreatorInsuranceSetting.bitField0_ = i;
                onBuilt();
                return cSCreatorInsuranceSetting;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSCreatorInsuranceSetting) {
                    return mergeFrom((CSCreatorInsuranceSetting) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSCreatorInsuranceSetting cSCreatorInsuranceSetting) {
                if (cSCreatorInsuranceSetting != CSCreatorInsuranceSetting.getDefaultInstance()) {
                    if (cSCreatorInsuranceSetting.hasUuid()) {
                        setUuid(cSCreatorInsuranceSetting.getUuid());
                    }
                    if (cSCreatorInsuranceSetting.hasLGameRoomID()) {
                        setLGameRoomID(cSCreatorInsuranceSetting.getLGameRoomID());
                    }
                    if (cSCreatorInsuranceSetting.hasLSettedUuid()) {
                        setLSettedUuid(cSCreatorInsuranceSetting.getLSettedUuid());
                    }
                    if (cSCreatorInsuranceSetting.hasBCanInsurance()) {
                        setBCanInsurance(cSCreatorInsuranceSetting.getBCanInsurance());
                    }
                    mergeUnknownFields(cSCreatorInsuranceSetting.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSCreatorInsuranceSetting.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSCreatorInsuranceSetting$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSCreatorInsuranceSetting.UUID_FIELD_NUMBER) == CSCreatorInsuranceSetting.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSCreatorInsuranceSetting.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER) == CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSCreatorInsuranceSetting.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSCreatorInsuranceSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSCreatorInsuranceSetting(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSCreatorInsuranceSetting getDefaultInstance() {
            return defaultInstance;
        }

        public final CSCreatorInsuranceSetting getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSCreatorInsuranceSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= BCANINSURANCE_FIELD_NUMBER;
                            this.lSettedUuid_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.bCanInsurance_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gq;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gr.ensureFieldAccessorsInitialized(CSCreatorInsuranceSetting.class, Builder.class);
        }

        static {
            PARSER = new C11381();
            CSCreatorInsuranceSetting cSCreatorInsuranceSetting = new CSCreatorInsuranceSetting(true);
            defaultInstance = cSCreatorInsuranceSetting;
            cSCreatorInsuranceSetting.initFields();
        }

        public final Parser<CSCreatorInsuranceSetting> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLSettedUuid() {
            return (this.bitField0_ & BCANINSURANCE_FIELD_NUMBER) == BCANINSURANCE_FIELD_NUMBER;
        }

        public final long getLSettedUuid() {
            return this.lSettedUuid_;
        }

        public final boolean hasBCanInsurance() {
            return (this.bitField0_ & 8) == 8;
        }

        public final int getBCanInsurance() {
            return this.bCanInsurance_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lSettedUuid_ = 0;
            this.bCanInsurance_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & BCANINSURANCE_FIELD_NUMBER) == BCANINSURANCE_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSETTEDUUID_FIELD_NUMBER, this.lSettedUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt32(BCANINSURANCE_FIELD_NUMBER, this.bCanInsurance_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & BCANINSURANCE_FIELD_NUMBER) == BCANINSURANCE_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LSETTEDUUID_FIELD_NUMBER, this.lSettedUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt32Size(BCANINSURANCE_FIELD_NUMBER, this.bCanInsurance_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSCreatorInsuranceSetting parseFrom(ByteString byteString) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(byteString);
        }

        public static CSCreatorInsuranceSetting parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSCreatorInsuranceSetting parseFrom(byte[] bArr) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(bArr);
        }

        public static CSCreatorInsuranceSetting parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSCreatorInsuranceSetting parseFrom(InputStream inputStream) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(inputStream);
        }

        public static CSCreatorInsuranceSetting parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreatorInsuranceSetting parseDelimitedFrom(InputStream inputStream) {
            return (CSCreatorInsuranceSetting) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSCreatorInsuranceSetting parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreatorInsuranceSetting) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSCreatorInsuranceSetting parseFrom(CodedInputStream codedInputStream) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(codedInputStream);
        }

        public static CSCreatorInsuranceSetting parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSCreatorInsuranceSetting) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSCreatorInsuranceSetting cSCreatorInsuranceSetting) {
            return newBuilder().mergeFrom(cSCreatorInsuranceSetting);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSEnterGameRoomOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSEnterGameRoom extends GeneratedMessage implements CSEnterGameRoomOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSEnterGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSEnterGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSEnterGameRoom.1 */
        class C11391 extends AbstractParser<CSEnterGameRoom> {
            C11391() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSEnterGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSEnterGameRoomOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bR.ensureFieldAccessorsInitialized(CSEnterGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSEnterGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bQ;
            }

            public final CSEnterGameRoom getDefaultInstanceForType() {
                return CSEnterGameRoom.getDefaultInstance();
            }

            public final CSEnterGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSEnterGameRoom buildPartial() {
                int i = CSEnterGameRoom.UUID_FIELD_NUMBER;
                CSEnterGameRoom cSEnterGameRoom = new CSEnterGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSEnterGameRoom.UUID_FIELD_NUMBER) != CSEnterGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSEnterGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER;
                }
                cSEnterGameRoom.lGameRoomID_ = this.lGameRoomID_;
                cSEnterGameRoom.bitField0_ = i;
                onBuilt();
                return cSEnterGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSEnterGameRoom) {
                    return mergeFrom((CSEnterGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSEnterGameRoom cSEnterGameRoom) {
                if (cSEnterGameRoom != CSEnterGameRoom.getDefaultInstance()) {
                    if (cSEnterGameRoom.hasUuid()) {
                        setUuid(cSEnterGameRoom.getUuid());
                    }
                    if (cSEnterGameRoom.hasLGameRoomID()) {
                        setLGameRoomID(cSEnterGameRoom.getLGameRoomID());
                    }
                    mergeUnknownFields(cSEnterGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSEnterGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSEnterGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSEnterGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSEnterGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSEnterGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSEnterGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSEnterGameRoom.UUID_FIELD_NUMBER) == CSEnterGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSEnterGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSEnterGameRoom.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSEnterGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSEnterGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSEnterGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSEnterGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSEnterGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bR.ensureFieldAccessorsInitialized(CSEnterGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11391();
            CSEnterGameRoom cSEnterGameRoom = new CSEnterGameRoom(true);
            defaultInstance = cSEnterGameRoom;
            cSEnterGameRoom.initFields();
        }

        public final Parser<CSEnterGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSEnterGameRoom parseFrom(ByteString byteString) {
            return (CSEnterGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSEnterGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSEnterGameRoom parseFrom(byte[] bArr) {
            return (CSEnterGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSEnterGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSEnterGameRoom parseFrom(InputStream inputStream) {
            return (CSEnterGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSEnterGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSEnterGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSEnterGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSEnterGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSEnterGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSEnterGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSEnterGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSEnterGameRoom cSEnterGameRoom) {
            return newBuilder().mergeFrom(cSEnterGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSEnterQuickGameRoomOrBuilder extends MessageOrBuilder {
        String getSCryptCode();

        ByteString getSCryptCodeBytes();

        long getUuid();

        boolean hasSCryptCode();

        boolean hasUuid();
    }

    public static final class CSEnterQuickGameRoom extends GeneratedMessage implements CSEnterQuickGameRoomOrBuilder {
        public static Parser<CSEnterQuickGameRoom> PARSER = null;
        public static final int SCRYPTCODE_FIELD_NUMBER = 2;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSEnterQuickGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCryptCode_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom.1 */
        class C11401 extends AbstractParser<CSEnterQuickGameRoom> {
            C11401() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSEnterQuickGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSEnterQuickGameRoomOrBuilder {
            private int bitField0_;
            private Object sCryptCode_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dZ.ensureFieldAccessorsInitialized(CSEnterQuickGameRoom.class, Builder.class);
            }

            private Builder() {
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSEnterQuickGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dY;
            }

            public final CSEnterQuickGameRoom getDefaultInstanceForType() {
                return CSEnterQuickGameRoom.getDefaultInstance();
            }

            public final CSEnterQuickGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSEnterQuickGameRoom buildPartial() {
                int i = CSEnterQuickGameRoom.UUID_FIELD_NUMBER;
                CSEnterQuickGameRoom cSEnterQuickGameRoom = new CSEnterQuickGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSEnterQuickGameRoom.UUID_FIELD_NUMBER) != CSEnterQuickGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSEnterQuickGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER) == CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER) {
                    i |= CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER;
                }
                cSEnterQuickGameRoom.sCryptCode_ = this.sCryptCode_;
                cSEnterQuickGameRoom.bitField0_ = i;
                onBuilt();
                return cSEnterQuickGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSEnterQuickGameRoom) {
                    return mergeFrom((CSEnterQuickGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSEnterQuickGameRoom cSEnterQuickGameRoom) {
                if (cSEnterQuickGameRoom != CSEnterQuickGameRoom.getDefaultInstance()) {
                    if (cSEnterQuickGameRoom.hasUuid()) {
                        setUuid(cSEnterQuickGameRoom.getUuid());
                    }
                    if (cSEnterQuickGameRoom.hasSCryptCode()) {
                        this.bitField0_ |= CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER;
                        this.sCryptCode_ = cSEnterQuickGameRoom.sCryptCode_;
                        onChanged();
                    }
                    mergeUnknownFields(cSEnterQuickGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasSCryptCode()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSEnterQuickGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSEnterQuickGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSEnterQuickGameRoom.UUID_FIELD_NUMBER) == CSEnterQuickGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSEnterQuickGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSCryptCode() {
                return (this.bitField0_ & CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER) == CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER;
            }

            public final String getSCryptCode() {
                Object obj = this.sCryptCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCryptCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCryptCodeBytes() {
                Object obj = this.sCryptCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCryptCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCryptCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER;
                this.sCryptCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCryptCode() {
                this.bitField0_ &= -3;
                this.sCryptCode_ = CSEnterQuickGameRoom.getDefaultInstance().getSCryptCode();
                onChanged();
                return this;
            }

            public final Builder setSCryptCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSEnterQuickGameRoom.SCRYPTCODE_FIELD_NUMBER;
                this.sCryptCode_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSEnterQuickGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSEnterQuickGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSEnterQuickGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSEnterQuickGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSEnterQuickGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SCRYPTCODE_FIELD_NUMBER;
                            this.sCryptCode_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dY;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dZ.ensureFieldAccessorsInitialized(CSEnterQuickGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11401();
            CSEnterQuickGameRoom cSEnterQuickGameRoom = new CSEnterQuickGameRoom(true);
            defaultInstance = cSEnterQuickGameRoom;
            cSEnterQuickGameRoom.initFields();
        }

        public final Parser<CSEnterQuickGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasSCryptCode() {
            return (this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER;
        }

        public final String getSCryptCode() {
            Object obj = this.sCryptCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCryptCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCryptCodeBytes() {
            Object obj = this.sCryptCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCryptCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasSCryptCode()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SCRYPTCODE_FIELD_NUMBER, getSCryptCodeBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SCRYPTCODE_FIELD_NUMBER, getSCryptCodeBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSEnterQuickGameRoom parseFrom(ByteString byteString) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSEnterQuickGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSEnterQuickGameRoom parseFrom(byte[] bArr) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSEnterQuickGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSEnterQuickGameRoom parseFrom(InputStream inputStream) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSEnterQuickGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSEnterQuickGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSEnterQuickGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSEnterQuickGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterQuickGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSEnterQuickGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSEnterQuickGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSEnterQuickGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSEnterQuickGameRoom cSEnterQuickGameRoom) {
            return newBuilder().mergeFrom(cSEnterQuickGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSForceBBOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSForceBB extends GeneratedMessage implements CSForceBBOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSForceBB> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSForceBB defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSForceBB.1 */
        class C11411 extends AbstractParser<CSForceBB> {
            C11411() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSForceBB(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSForceBBOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gC;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gD.ensureFieldAccessorsInitialized(CSForceBB.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSForceBB.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gC;
            }

            public final CSForceBB getDefaultInstanceForType() {
                return CSForceBB.getDefaultInstance();
            }

            public final CSForceBB build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSForceBB buildPartial() {
                int i = CSForceBB.UUID_FIELD_NUMBER;
                CSForceBB cSForceBB = new CSForceBB(null);
                int i2 = this.bitField0_;
                if ((i2 & CSForceBB.UUID_FIELD_NUMBER) != CSForceBB.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSForceBB.uuid_ = this.uuid_;
                if ((i2 & CSForceBB.LGAMEROOMID_FIELD_NUMBER) == CSForceBB.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSForceBB.LGAMEROOMID_FIELD_NUMBER;
                }
                cSForceBB.lGameRoomID_ = this.lGameRoomID_;
                cSForceBB.bitField0_ = i;
                onBuilt();
                return cSForceBB;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSForceBB) {
                    return mergeFrom((CSForceBB) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSForceBB cSForceBB) {
                if (cSForceBB != CSForceBB.getDefaultInstance()) {
                    if (cSForceBB.hasUuid()) {
                        setUuid(cSForceBB.getUuid());
                    }
                    if (cSForceBB.hasLGameRoomID()) {
                        setLGameRoomID(cSForceBB.getLGameRoomID());
                    }
                    mergeUnknownFields(cSForceBB.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSForceBB.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSForceBB.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSForceBB) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSForceBB) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSForceBB.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSForceBB$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSForceBB.UUID_FIELD_NUMBER) == CSForceBB.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSForceBB.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSForceBB.LGAMEROOMID_FIELD_NUMBER) == CSForceBB.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSForceBB.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSForceBB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSForceBB(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSForceBB getDefaultInstance() {
            return defaultInstance;
        }

        public final CSForceBB getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSForceBB(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gC;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gD.ensureFieldAccessorsInitialized(CSForceBB.class, Builder.class);
        }

        static {
            PARSER = new C11411();
            CSForceBB cSForceBB = new CSForceBB(true);
            defaultInstance = cSForceBB;
            cSForceBB.initFields();
        }

        public final Parser<CSForceBB> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSForceBB parseFrom(ByteString byteString) {
            return (CSForceBB) PARSER.parseFrom(byteString);
        }

        public static CSForceBB parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceBB) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSForceBB parseFrom(byte[] bArr) {
            return (CSForceBB) PARSER.parseFrom(bArr);
        }

        public static CSForceBB parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceBB) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSForceBB parseFrom(InputStream inputStream) {
            return (CSForceBB) PARSER.parseFrom(inputStream);
        }

        public static CSForceBB parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceBB) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSForceBB parseDelimitedFrom(InputStream inputStream) {
            return (CSForceBB) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSForceBB parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceBB) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSForceBB parseFrom(CodedInputStream codedInputStream) {
            return (CSForceBB) PARSER.parseFrom(codedInputStream);
        }

        public static CSForceBB parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceBB) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSForceBB cSForceBB) {
            return newBuilder().mergeFrom(cSForceBB);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSForceStandupOrBuilder extends MessageOrBuilder {
        int getLForceStandUpUuid();

        long getLGameRoomID();

        long getUuid();

        boolean hasLForceStandUpUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSForceStandup extends GeneratedMessage implements CSForceStandupOrBuilder {
        public static final int LFORCESTANDUPUUID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSForceStandup> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSForceStandup defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int lForceStandUpUuid_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSForceStandup.1 */
        class C11421 extends AbstractParser<CSForceStandup> {
            static {
                fixHelper.fixfunc(new int[]{1405, 1406});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11421();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSForceStandupOrBuilder {
            private int bitField0_;
            private int lForceStandUpUuid_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.hm;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.hn.ensureFieldAccessorsInitialized(CSForceStandup.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSForceStandup.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lForceStandUpUuid_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.hm;
            }

            public final CSForceStandup getDefaultInstanceForType() {
                return CSForceStandup.getDefaultInstance();
            }

            public final CSForceStandup build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSForceStandup buildPartial() {
                int i = CSForceStandup.UUID_FIELD_NUMBER;
                CSForceStandup cSForceStandup = new CSForceStandup(null);
                int i2 = this.bitField0_;
                if ((i2 & CSForceStandup.UUID_FIELD_NUMBER) != CSForceStandup.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSForceStandup.uuid_ = this.uuid_;
                if ((i2 & CSForceStandup.LGAMEROOMID_FIELD_NUMBER) == CSForceStandup.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSForceStandup.LGAMEROOMID_FIELD_NUMBER;
                }
                cSForceStandup.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSForceStandup.lForceStandUpUuid_ = this.lForceStandUpUuid_;
                cSForceStandup.bitField0_ = i;
                onBuilt();
                return cSForceStandup;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSForceStandup) {
                    return mergeFrom((CSForceStandup) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSForceStandup cSForceStandup) {
                if (cSForceStandup != CSForceStandup.getDefaultInstance()) {
                    if (cSForceStandup.hasUuid()) {
                        setUuid(cSForceStandup.getUuid());
                    }
                    if (cSForceStandup.hasLGameRoomID()) {
                        setLGameRoomID(cSForceStandup.getLGameRoomID());
                    }
                    if (cSForceStandup.hasLForceStandUpUuid()) {
                        setLForceStandUpUuid(cSForceStandup.getLForceStandUpUuid());
                    }
                    mergeUnknownFields(cSForceStandup.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID() && hasLForceStandUpUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSForceStandup.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSForceStandup.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSForceStandup) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSForceStandup) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSForceStandup.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSForceStandup$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSForceStandup.UUID_FIELD_NUMBER) == CSForceStandup.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSForceStandup.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSForceStandup.LGAMEROOMID_FIELD_NUMBER) == CSForceStandup.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSForceStandup.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLForceStandUpUuid() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getLForceStandUpUuid() {
                return this.lForceStandUpUuid_;
            }

            public final Builder setLForceStandUpUuid(int i) {
                this.bitField0_ |= 4;
                this.lForceStandUpUuid_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLForceStandUpUuid() {
                this.bitField0_ &= -5;
                this.lForceStandUpUuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSForceStandup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSForceStandup(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSForceStandup getDefaultInstance() {
            return defaultInstance;
        }

        public final CSForceStandup getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSForceStandup(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lForceStandUpUuid_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.hm;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.hn.ensureFieldAccessorsInitialized(CSForceStandup.class, Builder.class);
        }

        static {
            PARSER = new C11421();
            CSForceStandup cSForceStandup = new CSForceStandup(true);
            defaultInstance = cSForceStandup;
            cSForceStandup.initFields();
        }

        public final Parser<CSForceStandup> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLForceStandUpUuid() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getLForceStandUpUuid() {
            return this.lForceStandUpUuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lForceStandUpUuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLForceStandUpUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(LFORCESTANDUPUUID_FIELD_NUMBER, this.lForceStandUpUuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(LFORCESTANDUPUUID_FIELD_NUMBER, this.lForceStandUpUuid_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSForceStandup parseFrom(ByteString byteString) {
            return (CSForceStandup) PARSER.parseFrom(byteString);
        }

        public static CSForceStandup parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceStandup) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSForceStandup parseFrom(byte[] bArr) {
            return (CSForceStandup) PARSER.parseFrom(bArr);
        }

        public static CSForceStandup parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceStandup) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSForceStandup parseFrom(InputStream inputStream) {
            return (CSForceStandup) PARSER.parseFrom(inputStream);
        }

        public static CSForceStandup parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceStandup) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSForceStandup parseDelimitedFrom(InputStream inputStream) {
            return (CSForceStandup) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSForceStandup parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceStandup) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSForceStandup parseFrom(CodedInputStream codedInputStream) {
            return (CSForceStandup) PARSER.parseFrom(codedInputStream);
        }

        public static CSForceStandup parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSForceStandup) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSForceStandup cSForceStandup) {
            return newBuilder().mergeFrom(cSForceStandup);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGameActionOrBuilder extends MessageOrBuilder {
        GAME_ACT_TYPE getEGameActType();

        long getLBettingID();

        long getLRoomID();

        long getLStacks();

        long getUuid();

        boolean hasEGameActType();

        boolean hasLBettingID();

        boolean hasLRoomID();

        boolean hasLStacks();

        boolean hasUuid();
    }

    public static final class CSGameAction extends GeneratedMessage implements CSGameActionOrBuilder {
        public static final int EGAMEACTTYPE_FIELD_NUMBER = 3;
        public static final int LBETTINGID_FIELD_NUMBER = 5;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static final int LSTACKS_FIELD_NUMBER = 4;
        public static Parser<CSGameAction> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGameAction defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ACT_TYPE eGameActType_;
        private long lBettingID_;
        private long lRoomID_;
        private long lStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGameAction.1 */
        class C11431 extends AbstractParser<CSGameAction> {
            C11431() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGameAction(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGameActionOrBuilder {
            private int bitField0_;
            private GAME_ACT_TYPE eGameActType_;
            private long lBettingID_;
            private long lRoomID_;
            private long lStacks_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.di;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dj.ensureFieldAccessorsInitialized(CSGameAction.class, Builder.class);
            }

            private Builder() {
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGameAction.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                this.bitField0_ &= -5;
                this.lStacks_ = 0;
                this.bitField0_ &= -9;
                this.lBettingID_ = 0;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.di;
            }

            public final CSGameAction getDefaultInstanceForType() {
                return CSGameAction.getDefaultInstance();
            }

            public final CSGameAction build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGameAction buildPartial() {
                int i = CSGameAction.UUID_FIELD_NUMBER;
                CSGameAction cSGameAction = new CSGameAction((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSGameAction.UUID_FIELD_NUMBER) != CSGameAction.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGameAction.uuid_ = this.uuid_;
                if ((i2 & CSGameAction.LROOMID_FIELD_NUMBER) == CSGameAction.LROOMID_FIELD_NUMBER) {
                    i |= CSGameAction.LROOMID_FIELD_NUMBER;
                }
                cSGameAction.lRoomID_ = this.lRoomID_;
                if ((i2 & CSGameAction.LSTACKS_FIELD_NUMBER) == CSGameAction.LSTACKS_FIELD_NUMBER) {
                    i |= CSGameAction.LSTACKS_FIELD_NUMBER;
                }
                cSGameAction.eGameActType_ = this.eGameActType_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSGameAction.lStacks_ = this.lStacks_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSGameAction.lBettingID_ = this.lBettingID_;
                cSGameAction.bitField0_ = i;
                onBuilt();
                return cSGameAction;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGameAction) {
                    return mergeFrom((CSGameAction) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGameAction cSGameAction) {
                if (cSGameAction != CSGameAction.getDefaultInstance()) {
                    if (cSGameAction.hasUuid()) {
                        setUuid(cSGameAction.getUuid());
                    }
                    if (cSGameAction.hasLRoomID()) {
                        setLRoomID(cSGameAction.getLRoomID());
                    }
                    if (cSGameAction.hasEGameActType()) {
                        setEGameActType(cSGameAction.getEGameActType());
                    }
                    if (cSGameAction.hasLStacks()) {
                        setLStacks(cSGameAction.getLStacks());
                    }
                    if (cSGameAction.hasLBettingID()) {
                        setLBettingID(cSGameAction.getLBettingID());
                    }
                    mergeUnknownFields(cSGameAction.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID() && hasEGameActType() && hasLStacks()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGameAction.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGameAction.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGameAction) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGameAction) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGameAction.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGameAction$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGameAction.UUID_FIELD_NUMBER) == CSGameAction.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGameAction.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGameAction.LROOMID_FIELD_NUMBER) == CSGameAction.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGameAction.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameActType() {
                return (this.bitField0_ & CSGameAction.LSTACKS_FIELD_NUMBER) == CSGameAction.LSTACKS_FIELD_NUMBER;
            }

            public final GAME_ACT_TYPE getEGameActType() {
                return this.eGameActType_;
            }

            public final Builder setEGameActType(GAME_ACT_TYPE game_act_type) {
                if (game_act_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSGameAction.LSTACKS_FIELD_NUMBER;
                this.eGameActType_ = game_act_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameActType() {
                this.bitField0_ &= -5;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                onChanged();
                return this;
            }

            public final boolean hasLStacks() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLStacks() {
                return this.lStacks_;
            }

            public final Builder setLStacks(long j) {
                this.bitField0_ |= 8;
                this.lStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStacks() {
                this.bitField0_ &= -9;
                this.lStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBettingID() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLBettingID() {
                return this.lBettingID_;
            }

            public final Builder setLBettingID(long j) {
                this.bitField0_ |= 16;
                this.lBettingID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBettingID() {
                this.bitField0_ &= -17;
                this.lBettingID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSGameAction(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSGameAction(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSGameAction cSGameAction);

        private native CSGameAction(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSGameAction(com.google.protobuf.GeneratedMessage.Builder builder, CSGameAction cSGameAction);

        private native CSGameAction(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6023getDefaultInstanceForType();

        public final native CSGameAction m6024getDefaultInstanceForType();

        public final native GAME_ACT_TYPE getEGameActType();

        public final native long getLBettingID();

        public final native long getLRoomID();

        public final native long getLStacks();

        public final native Parser<CSGameAction> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasEGameActType();

        public final native boolean hasLBettingID();

        public final native boolean hasLRoomID();

        public final native boolean hasLStacks();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6025newBuilderForType();

        public final native Builder m6026newBuilderForType();

        protected final native Builder m6027newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6028toBuilder();

        public final native Builder m6029toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSGameAction getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.di;
        }

        static void __clinit__() {
            PARSER = new C11431();
            CSGameAction cSGameAction = new CSGameAction(true);
            defaultInstance = cSGameAction;
            cSGameAction.initFields();
        }

        public static CSGameAction parseFrom(ByteString byteString) {
            return (CSGameAction) PARSER.parseFrom(byteString);
        }

        public static CSGameAction parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGameAction) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGameAction parseFrom(byte[] bArr) {
            return (CSGameAction) PARSER.parseFrom(bArr);
        }

        public static CSGameAction parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGameAction) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGameAction parseFrom(InputStream inputStream) {
            return (CSGameAction) PARSER.parseFrom(inputStream);
        }

        public static CSGameAction parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGameAction) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGameAction parseDelimitedFrom(InputStream inputStream) {
            return (CSGameAction) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGameAction parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGameAction) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGameAction parseFrom(CodedInputStream codedInputStream) {
            return (CSGameAction) PARSER.parseFrom(codedInputStream);
        }

        public static CSGameAction parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGameAction) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSGameAction cSGameAction) {
            return newBuilder().mergeFrom(cSGameAction);
        }
    }

    public interface CSGetAllBuyinControlsOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSGetAllBuyinControls extends GeneratedMessage implements CSGetAllBuyinControlsOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetAllBuyinControls> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetAllBuyinControls defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls.1 */
        class C11441 extends AbstractParser<CSGetAllBuyinControls> {
            static {
                fixHelper.fixfunc(new int[]{3164, 3165});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11441();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetAllBuyinControlsOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cS;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cT.ensureFieldAccessorsInitialized(CSGetAllBuyinControls.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetAllBuyinControls.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cS;
            }

            public final CSGetAllBuyinControls getDefaultInstanceForType() {
                return CSGetAllBuyinControls.getDefaultInstance();
            }

            public final CSGetAllBuyinControls build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetAllBuyinControls buildPartial() {
                int i = CSGetAllBuyinControls.UUID_FIELD_NUMBER;
                CSGetAllBuyinControls cSGetAllBuyinControls = new CSGetAllBuyinControls(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetAllBuyinControls.UUID_FIELD_NUMBER) != CSGetAllBuyinControls.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetAllBuyinControls.uuid_ = this.uuid_;
                if ((i2 & CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER) == CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER;
                }
                cSGetAllBuyinControls.lGameRoomID_ = this.lGameRoomID_;
                cSGetAllBuyinControls.bitField0_ = i;
                onBuilt();
                return cSGetAllBuyinControls;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetAllBuyinControls) {
                    return mergeFrom((CSGetAllBuyinControls) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetAllBuyinControls cSGetAllBuyinControls) {
                if (cSGetAllBuyinControls != CSGetAllBuyinControls.getDefaultInstance()) {
                    if (cSGetAllBuyinControls.hasUuid()) {
                        setUuid(cSGetAllBuyinControls.getUuid());
                    }
                    if (cSGetAllBuyinControls.hasLGameRoomID()) {
                        setLGameRoomID(cSGetAllBuyinControls.getLGameRoomID());
                    }
                    mergeUnknownFields(cSGetAllBuyinControls.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetAllBuyinControls.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetAllBuyinControls$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetAllBuyinControls.UUID_FIELD_NUMBER) == CSGetAllBuyinControls.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetAllBuyinControls.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER) == CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSGetAllBuyinControls.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetAllBuyinControls(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetAllBuyinControls(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetAllBuyinControls getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetAllBuyinControls getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetAllBuyinControls(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cS;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cT.ensureFieldAccessorsInitialized(CSGetAllBuyinControls.class, Builder.class);
        }

        static {
            PARSER = new C11441();
            CSGetAllBuyinControls cSGetAllBuyinControls = new CSGetAllBuyinControls(true);
            defaultInstance = cSGetAllBuyinControls;
            cSGetAllBuyinControls.initFields();
        }

        public final Parser<CSGetAllBuyinControls> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetAllBuyinControls parseFrom(ByteString byteString) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(byteString);
        }

        public static CSGetAllBuyinControls parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetAllBuyinControls parseFrom(byte[] bArr) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(bArr);
        }

        public static CSGetAllBuyinControls parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetAllBuyinControls parseFrom(InputStream inputStream) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(inputStream);
        }

        public static CSGetAllBuyinControls parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetAllBuyinControls parseDelimitedFrom(InputStream inputStream) {
            return (CSGetAllBuyinControls) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetAllBuyinControls parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetAllBuyinControls) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetAllBuyinControls parseFrom(CodedInputStream codedInputStream) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetAllBuyinControls parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetAllBuyinControls) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetAllBuyinControls cSGetAllBuyinControls) {
            return newBuilder().mergeFrom(cSGetAllBuyinControls);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetChatRoomGamesByRoomIDOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGetChatRoomGamesByRoomID extends GeneratedMessage implements CSGetChatRoomGamesByRoomIDOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetChatRoomGamesByRoomID> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetChatRoomGamesByRoomID defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID.1 */
        class C11451 extends AbstractParser<CSGetChatRoomGamesByRoomID> {
            C11451() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetChatRoomGamesByRoomID(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetChatRoomGamesByRoomIDOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bk;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bl.ensureFieldAccessorsInitialized(CSGetChatRoomGamesByRoomID.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetChatRoomGamesByRoomID.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bk;
            }

            public final CSGetChatRoomGamesByRoomID getDefaultInstanceForType() {
                return CSGetChatRoomGamesByRoomID.getDefaultInstance();
            }

            public final CSGetChatRoomGamesByRoomID build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetChatRoomGamesByRoomID buildPartial() {
                int i = CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER;
                CSGetChatRoomGamesByRoomID cSGetChatRoomGamesByRoomID = new CSGetChatRoomGamesByRoomID(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER) != CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetChatRoomGamesByRoomID.uuid_ = this.uuid_;
                if ((i2 & CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER) {
                    i |= CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER;
                }
                cSGetChatRoomGamesByRoomID.lRoomID_ = this.lRoomID_;
                cSGetChatRoomGamesByRoomID.bitField0_ = i;
                onBuilt();
                return cSGetChatRoomGamesByRoomID;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetChatRoomGamesByRoomID) {
                    return mergeFrom((CSGetChatRoomGamesByRoomID) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetChatRoomGamesByRoomID cSGetChatRoomGamesByRoomID) {
                if (cSGetChatRoomGamesByRoomID != CSGetChatRoomGamesByRoomID.getDefaultInstance()) {
                    if (cSGetChatRoomGamesByRoomID.hasUuid()) {
                        setUuid(cSGetChatRoomGamesByRoomID.getUuid());
                    }
                    if (cSGetChatRoomGamesByRoomID.hasLRoomID()) {
                        setLRoomID(cSGetChatRoomGamesByRoomID.getLRoomID());
                    }
                    mergeUnknownFields(cSGetChatRoomGamesByRoomID.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetChatRoomGamesByRoomID.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetChatRoomGamesByRoomID$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER) == CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetChatRoomGamesByRoomID.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGetChatRoomGamesByRoomID.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetChatRoomGamesByRoomID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetChatRoomGamesByRoomID(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetChatRoomGamesByRoomID getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetChatRoomGamesByRoomID getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetChatRoomGamesByRoomID(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bk;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bl.ensureFieldAccessorsInitialized(CSGetChatRoomGamesByRoomID.class, Builder.class);
        }

        static {
            PARSER = new C11451();
            CSGetChatRoomGamesByRoomID cSGetChatRoomGamesByRoomID = new CSGetChatRoomGamesByRoomID(true);
            defaultInstance = cSGetChatRoomGamesByRoomID;
            cSGetChatRoomGamesByRoomID.initFields();
        }

        public final Parser<CSGetChatRoomGamesByRoomID> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(ByteString byteString) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(byteString);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(byte[] bArr) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(bArr);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(InputStream inputStream) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(inputStream);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomGamesByRoomID parseDelimitedFrom(InputStream inputStream) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetChatRoomGamesByRoomID parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(CodedInputStream codedInputStream) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetChatRoomGamesByRoomID parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomGamesByRoomID) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetChatRoomGamesByRoomID cSGetChatRoomGamesByRoomID) {
            return newBuilder().mergeFrom(cSGetChatRoomGamesByRoomID);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetChatRoomInfoByRoomIDOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGetChatRoomInfoByRoomID extends GeneratedMessage implements CSGetChatRoomInfoByRoomIDOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetChatRoomInfoByRoomID> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetChatRoomInfoByRoomID defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID.1 */
        class C11461 extends AbstractParser<CSGetChatRoomInfoByRoomID> {
            C11461() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetChatRoomInfoByRoomID(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetChatRoomInfoByRoomIDOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bc;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bd.ensureFieldAccessorsInitialized(CSGetChatRoomInfoByRoomID.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetChatRoomInfoByRoomID.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bc;
            }

            public final CSGetChatRoomInfoByRoomID getDefaultInstanceForType() {
                return CSGetChatRoomInfoByRoomID.getDefaultInstance();
            }

            public final CSGetChatRoomInfoByRoomID build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetChatRoomInfoByRoomID buildPartial() {
                int i = CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER;
                CSGetChatRoomInfoByRoomID cSGetChatRoomInfoByRoomID = new CSGetChatRoomInfoByRoomID(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER) != CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetChatRoomInfoByRoomID.uuid_ = this.uuid_;
                if ((i2 & CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER) {
                    i |= CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
                }
                cSGetChatRoomInfoByRoomID.lRoomID_ = this.lRoomID_;
                cSGetChatRoomInfoByRoomID.bitField0_ = i;
                onBuilt();
                return cSGetChatRoomInfoByRoomID;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetChatRoomInfoByRoomID) {
                    return mergeFrom((CSGetChatRoomInfoByRoomID) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetChatRoomInfoByRoomID cSGetChatRoomInfoByRoomID) {
                if (cSGetChatRoomInfoByRoomID != CSGetChatRoomInfoByRoomID.getDefaultInstance()) {
                    if (cSGetChatRoomInfoByRoomID.hasUuid()) {
                        setUuid(cSGetChatRoomInfoByRoomID.getUuid());
                    }
                    if (cSGetChatRoomInfoByRoomID.hasLRoomID()) {
                        setLRoomID(cSGetChatRoomInfoByRoomID.getLRoomID());
                    }
                    mergeUnknownFields(cSGetChatRoomInfoByRoomID.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByRoomID.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetChatRoomInfoByRoomID$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER) == CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetChatRoomInfoByRoomID.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGetChatRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetChatRoomInfoByRoomID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetChatRoomInfoByRoomID(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetChatRoomInfoByRoomID getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetChatRoomInfoByRoomID getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetChatRoomInfoByRoomID(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bc;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bd.ensureFieldAccessorsInitialized(CSGetChatRoomInfoByRoomID.class, Builder.class);
        }

        static {
            PARSER = new C11461();
            CSGetChatRoomInfoByRoomID cSGetChatRoomInfoByRoomID = new CSGetChatRoomInfoByRoomID(true);
            defaultInstance = cSGetChatRoomInfoByRoomID;
            cSGetChatRoomInfoByRoomID.initFields();
        }

        public final Parser<CSGetChatRoomInfoByRoomID> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(ByteString byteString) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(byteString);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(byte[] bArr) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(bArr);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(InputStream inputStream) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(inputStream);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByRoomID parseDelimitedFrom(InputStream inputStream) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetChatRoomInfoByRoomID parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(CodedInputStream codedInputStream) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetChatRoomInfoByRoomID parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByRoomID) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetChatRoomInfoByRoomID cSGetChatRoomInfoByRoomID) {
            return newBuilder().mergeFrom(cSGetChatRoomInfoByRoomID);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetChatRoomInfoByUuidOrBuilder extends MessageOrBuilder {
        int getLNum();

        int getLStartIndex();

        long getUuid();

        boolean hasLNum();

        boolean hasLStartIndex();

        boolean hasUuid();
    }

    public static final class CSGetChatRoomInfoByUuid extends GeneratedMessage implements CSGetChatRoomInfoByUuidOrBuilder {
        public static final int LNUM_FIELD_NUMBER = 3;
        public static final int LSTARTINDEX_FIELD_NUMBER = 2;
        public static Parser<CSGetChatRoomInfoByUuid> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetChatRoomInfoByUuid defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int lNum_;
        private int lStartIndex_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid.1 */
        class C11471 extends AbstractParser<CSGetChatRoomInfoByUuid> {
            C11471() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetChatRoomInfoByUuid(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetChatRoomInfoByUuidOrBuilder {
            private int bitField0_;
            private int lNum_;
            private int lStartIndex_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aZ.ensureFieldAccessorsInitialized(CSGetChatRoomInfoByUuid.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetChatRoomInfoByUuid.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lStartIndex_ = 0;
                this.bitField0_ &= -3;
                this.lNum_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aY;
            }

            public final CSGetChatRoomInfoByUuid getDefaultInstanceForType() {
                return CSGetChatRoomInfoByUuid.getDefaultInstance();
            }

            public final CSGetChatRoomInfoByUuid build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetChatRoomInfoByUuid buildPartial() {
                int i = CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER;
                CSGetChatRoomInfoByUuid cSGetChatRoomInfoByUuid = new CSGetChatRoomInfoByUuid(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER) != CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetChatRoomInfoByUuid.uuid_ = this.uuid_;
                if ((i2 & CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER) == CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER) {
                    i |= CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER;
                }
                cSGetChatRoomInfoByUuid.lStartIndex_ = this.lStartIndex_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSGetChatRoomInfoByUuid.lNum_ = this.lNum_;
                cSGetChatRoomInfoByUuid.bitField0_ = i;
                onBuilt();
                return cSGetChatRoomInfoByUuid;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetChatRoomInfoByUuid) {
                    return mergeFrom((CSGetChatRoomInfoByUuid) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetChatRoomInfoByUuid cSGetChatRoomInfoByUuid) {
                if (cSGetChatRoomInfoByUuid != CSGetChatRoomInfoByUuid.getDefaultInstance()) {
                    if (cSGetChatRoomInfoByUuid.hasUuid()) {
                        setUuid(cSGetChatRoomInfoByUuid.getUuid());
                    }
                    if (cSGetChatRoomInfoByUuid.hasLStartIndex()) {
                        setLStartIndex(cSGetChatRoomInfoByUuid.getLStartIndex());
                    }
                    if (cSGetChatRoomInfoByUuid.hasLNum()) {
                        setLNum(cSGetChatRoomInfoByUuid.getLNum());
                    }
                    mergeUnknownFields(cSGetChatRoomInfoByUuid.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetChatRoomInfoByUuid.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetChatRoomInfoByUuid$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER) == CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetChatRoomInfoByUuid.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLStartIndex() {
                return (this.bitField0_ & CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER) == CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER;
            }

            public final int getLStartIndex() {
                return this.lStartIndex_;
            }

            public final Builder setLStartIndex(int i) {
                this.bitField0_ |= CSGetChatRoomInfoByUuid.LSTARTINDEX_FIELD_NUMBER;
                this.lStartIndex_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLStartIndex() {
                this.bitField0_ &= -3;
                this.lStartIndex_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLNum() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getLNum() {
                return this.lNum_;
            }

            public final Builder setLNum(int i) {
                this.bitField0_ |= 4;
                this.lNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLNum() {
                this.bitField0_ &= -5;
                this.lNum_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetChatRoomInfoByUuid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetChatRoomInfoByUuid(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetChatRoomInfoByUuid getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetChatRoomInfoByUuid getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetChatRoomInfoByUuid(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LSTARTINDEX_FIELD_NUMBER;
                            this.lStartIndex_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aY;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aZ.ensureFieldAccessorsInitialized(CSGetChatRoomInfoByUuid.class, Builder.class);
        }

        static {
            PARSER = new C11471();
            CSGetChatRoomInfoByUuid cSGetChatRoomInfoByUuid = new CSGetChatRoomInfoByUuid(true);
            defaultInstance = cSGetChatRoomInfoByUuid;
            cSGetChatRoomInfoByUuid.initFields();
        }

        public final Parser<CSGetChatRoomInfoByUuid> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLStartIndex() {
            return (this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER;
        }

        public final int getLStartIndex() {
            return this.lStartIndex_;
        }

        public final boolean hasLNum() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getLNum() {
            return this.lNum_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lStartIndex_ = 0;
            this.lNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER) {
                codedOutputStream.writeInt32(LSTARTINDEX_FIELD_NUMBER, this.lStartIndex_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(LNUM_FIELD_NUMBER, this.lNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(LSTARTINDEX_FIELD_NUMBER, this.lStartIndex_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(LNUM_FIELD_NUMBER, this.lNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetChatRoomInfoByUuid parseFrom(ByteString byteString) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(byteString);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(byte[] bArr) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(bArr);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(InputStream inputStream) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(inputStream);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByUuid parseDelimitedFrom(InputStream inputStream) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetChatRoomInfoByUuid parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(CodedInputStream codedInputStream) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetChatRoomInfoByUuid parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomInfoByUuid) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetChatRoomInfoByUuid cSGetChatRoomInfoByUuid) {
            return newBuilder().mergeFrom(cSGetChatRoomInfoByUuid);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetChatRoomUsersByRoomIDOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGetChatRoomUsersByRoomID extends GeneratedMessage implements CSGetChatRoomUsersByRoomIDOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetChatRoomUsersByRoomID> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetChatRoomUsersByRoomID defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID.1 */
        class C11481 extends AbstractParser<CSGetChatRoomUsersByRoomID> {
            C11481() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetChatRoomUsersByRoomID(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetChatRoomUsersByRoomIDOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bg;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bh.ensureFieldAccessorsInitialized(CSGetChatRoomUsersByRoomID.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetChatRoomUsersByRoomID.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bg;
            }

            public final CSGetChatRoomUsersByRoomID getDefaultInstanceForType() {
                return CSGetChatRoomUsersByRoomID.getDefaultInstance();
            }

            public final CSGetChatRoomUsersByRoomID build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetChatRoomUsersByRoomID buildPartial() {
                int i = CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER;
                CSGetChatRoomUsersByRoomID cSGetChatRoomUsersByRoomID = new CSGetChatRoomUsersByRoomID(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER) != CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetChatRoomUsersByRoomID.uuid_ = this.uuid_;
                if ((i2 & CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER) {
                    i |= CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER;
                }
                cSGetChatRoomUsersByRoomID.lRoomID_ = this.lRoomID_;
                cSGetChatRoomUsersByRoomID.bitField0_ = i;
                onBuilt();
                return cSGetChatRoomUsersByRoomID;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetChatRoomUsersByRoomID) {
                    return mergeFrom((CSGetChatRoomUsersByRoomID) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetChatRoomUsersByRoomID cSGetChatRoomUsersByRoomID) {
                if (cSGetChatRoomUsersByRoomID != CSGetChatRoomUsersByRoomID.getDefaultInstance()) {
                    if (cSGetChatRoomUsersByRoomID.hasUuid()) {
                        setUuid(cSGetChatRoomUsersByRoomID.getUuid());
                    }
                    if (cSGetChatRoomUsersByRoomID.hasLRoomID()) {
                        setLRoomID(cSGetChatRoomUsersByRoomID.getLRoomID());
                    }
                    mergeUnknownFields(cSGetChatRoomUsersByRoomID.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetChatRoomUsersByRoomID.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetChatRoomUsersByRoomID$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER) == CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetChatRoomUsersByRoomID.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER) == CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGetChatRoomUsersByRoomID.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetChatRoomUsersByRoomID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetChatRoomUsersByRoomID(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetChatRoomUsersByRoomID getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetChatRoomUsersByRoomID getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetChatRoomUsersByRoomID(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bg;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bh.ensureFieldAccessorsInitialized(CSGetChatRoomUsersByRoomID.class, Builder.class);
        }

        static {
            PARSER = new C11481();
            CSGetChatRoomUsersByRoomID cSGetChatRoomUsersByRoomID = new CSGetChatRoomUsersByRoomID(true);
            defaultInstance = cSGetChatRoomUsersByRoomID;
            cSGetChatRoomUsersByRoomID.initFields();
        }

        public final Parser<CSGetChatRoomUsersByRoomID> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(ByteString byteString) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(byteString);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(byte[] bArr) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(bArr);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(InputStream inputStream) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(inputStream);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomUsersByRoomID parseDelimitedFrom(InputStream inputStream) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetChatRoomUsersByRoomID parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(CodedInputStream codedInputStream) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetChatRoomUsersByRoomID parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetChatRoomUsersByRoomID) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetChatRoomUsersByRoomID cSGetChatRoomUsersByRoomID) {
            return newBuilder().mergeFrom(cSGetChatRoomUsersByRoomID);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetDefaultSettingOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSGetDefaultSetting extends GeneratedMessage implements CSGetDefaultSettingOrBuilder {
        public static Parser<CSGetDefaultSetting> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetDefaultSetting defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetDefaultSetting.1 */
        class C11491 extends AbstractParser<CSGetDefaultSetting> {
            C11491() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetDefaultSetting(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetDefaultSettingOrBuilder {
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ai;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aj.ensureFieldAccessorsInitialized(CSGetDefaultSetting.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetDefaultSetting.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ai;
            }

            public final CSGetDefaultSetting getDefaultInstanceForType() {
                return CSGetDefaultSetting.getDefaultInstance();
            }

            public final CSGetDefaultSetting build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetDefaultSetting buildPartial() {
                int i = CSGetDefaultSetting.UUID_FIELD_NUMBER;
                CSGetDefaultSetting cSGetDefaultSetting = new CSGetDefaultSetting(null);
                if ((this.bitField0_ & CSGetDefaultSetting.UUID_FIELD_NUMBER) != CSGetDefaultSetting.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetDefaultSetting.uuid_ = this.uuid_;
                cSGetDefaultSetting.bitField0_ = i;
                onBuilt();
                return cSGetDefaultSetting;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetDefaultSetting) {
                    return mergeFrom((CSGetDefaultSetting) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetDefaultSetting cSGetDefaultSetting) {
                if (cSGetDefaultSetting != CSGetDefaultSetting.getDefaultInstance()) {
                    if (cSGetDefaultSetting.hasUuid()) {
                        setUuid(cSGetDefaultSetting.getUuid());
                    }
                    mergeUnknownFields(cSGetDefaultSetting.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetDefaultSetting.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetDefaultSetting.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetDefaultSetting) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetDefaultSetting) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetDefaultSetting.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetDefaultSetting$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetDefaultSetting.UUID_FIELD_NUMBER) == CSGetDefaultSetting.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetDefaultSetting.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetDefaultSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetDefaultSetting(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetDefaultSetting getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetDefaultSetting getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetDefaultSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ai;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aj.ensureFieldAccessorsInitialized(CSGetDefaultSetting.class, Builder.class);
        }

        static {
            PARSER = new C11491();
            CSGetDefaultSetting cSGetDefaultSetting = new CSGetDefaultSetting(true);
            defaultInstance = cSGetDefaultSetting;
            cSGetDefaultSetting.initFields();
        }

        public final Parser<CSGetDefaultSetting> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetDefaultSetting parseFrom(ByteString byteString) {
            return (CSGetDefaultSetting) PARSER.parseFrom(byteString);
        }

        public static CSGetDefaultSetting parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetDefaultSetting) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetDefaultSetting parseFrom(byte[] bArr) {
            return (CSGetDefaultSetting) PARSER.parseFrom(bArr);
        }

        public static CSGetDefaultSetting parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetDefaultSetting) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetDefaultSetting parseFrom(InputStream inputStream) {
            return (CSGetDefaultSetting) PARSER.parseFrom(inputStream);
        }

        public static CSGetDefaultSetting parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetDefaultSetting) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetDefaultSetting parseDelimitedFrom(InputStream inputStream) {
            return (CSGetDefaultSetting) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetDefaultSetting parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetDefaultSetting) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetDefaultSetting parseFrom(CodedInputStream codedInputStream) {
            return (CSGetDefaultSetting) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetDefaultSetting parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetDefaultSetting) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetDefaultSetting cSGetDefaultSetting) {
            return newBuilder().mergeFrom(cSGetDefaultSetting);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetFrontPageInfoOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSGetFrontPageInfo extends GeneratedMessage implements CSGetFrontPageInfoOrBuilder {
        public static Parser<CSGetFrontPageInfo> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetFrontPageInfo defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo.1 */
        class C11501 extends AbstractParser<CSGetFrontPageInfo> {
            static {
                fixHelper.fixfunc(new int[]{2094, 2095});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11501();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetFrontPageInfoOrBuilder {
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fA;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fB.ensureFieldAccessorsInitialized(CSGetFrontPageInfo.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetFrontPageInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fA;
            }

            public final CSGetFrontPageInfo getDefaultInstanceForType() {
                return CSGetFrontPageInfo.getDefaultInstance();
            }

            public final CSGetFrontPageInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetFrontPageInfo buildPartial() {
                int i = CSGetFrontPageInfo.UUID_FIELD_NUMBER;
                CSGetFrontPageInfo cSGetFrontPageInfo = new CSGetFrontPageInfo((com.google.protobuf.GeneratedMessage.Builder) this, null);
                if ((this.bitField0_ & CSGetFrontPageInfo.UUID_FIELD_NUMBER) != CSGetFrontPageInfo.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetFrontPageInfo.uuid_ = this.uuid_;
                cSGetFrontPageInfo.bitField0_ = i;
                onBuilt();
                return cSGetFrontPageInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetFrontPageInfo) {
                    return mergeFrom((CSGetFrontPageInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetFrontPageInfo cSGetFrontPageInfo) {
                if (cSGetFrontPageInfo != CSGetFrontPageInfo.getDefaultInstance()) {
                    if (cSGetFrontPageInfo.hasUuid()) {
                        setUuid(cSGetFrontPageInfo.getUuid());
                    }
                    mergeUnknownFields(cSGetFrontPageInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetFrontPageInfo$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetFrontPageInfo.UUID_FIELD_NUMBER) == CSGetFrontPageInfo.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetFrontPageInfo.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSGetFrontPageInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSGetFrontPageInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSGetFrontPageInfo cSGetFrontPageInfo);

        private native CSGetFrontPageInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSGetFrontPageInfo(com.google.protobuf.GeneratedMessage.Builder builder, CSGetFrontPageInfo cSGetFrontPageInfo);

        private native CSGetFrontPageInfo(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6030getDefaultInstanceForType();

        public final native CSGetFrontPageInfo m6031getDefaultInstanceForType();

        public final native Parser<CSGetFrontPageInfo> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6032newBuilderForType();

        public final native Builder m6033newBuilderForType();

        protected final native Builder m6034newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6035toBuilder();

        public final native Builder m6036toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSGetFrontPageInfo getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fA;
        }

        static void __clinit__() {
            PARSER = new C11501();
            CSGetFrontPageInfo cSGetFrontPageInfo = new CSGetFrontPageInfo(true);
            defaultInstance = cSGetFrontPageInfo;
            cSGetFrontPageInfo.initFields();
        }

        public static CSGetFrontPageInfo parseFrom(ByteString byteString) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(byteString);
        }

        public static CSGetFrontPageInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetFrontPageInfo parseFrom(byte[] bArr) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(bArr);
        }

        public static CSGetFrontPageInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetFrontPageInfo parseFrom(InputStream inputStream) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(inputStream);
        }

        public static CSGetFrontPageInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfo parseDelimitedFrom(InputStream inputStream) {
            return (CSGetFrontPageInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetFrontPageInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfo parseFrom(CodedInputStream codedInputStream) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetFrontPageInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSGetFrontPageInfo cSGetFrontPageInfo) {
            return newBuilder().mergeFrom(cSGetFrontPageInfo);
        }
    }

    public interface CSGetFrontPageInfoV2OrBuilder extends MessageOrBuilder {
        int getINum();

        int getIOffset();

        long getUuid();

        boolean hasINum();

        boolean hasIOffset();

        boolean hasUuid();
    }

    public static final class CSGetFrontPageInfoV2 extends GeneratedMessage implements CSGetFrontPageInfoV2OrBuilder {
        public static final int INUM_FIELD_NUMBER = 3;
        public static final int IOFFSET_FIELD_NUMBER = 2;
        public static Parser<CSGetFrontPageInfoV2> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetFrontPageInfoV2 defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iNum_;
        private int iOffset_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2.1 */
        class C11511 extends AbstractParser<CSGetFrontPageInfoV2> {
            C11511() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetFrontPageInfoV2(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetFrontPageInfoV2OrBuilder {
            private int bitField0_;
            private int iNum_;
            private int iOffset_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fE;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fF.ensureFieldAccessorsInitialized(CSGetFrontPageInfoV2.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetFrontPageInfoV2.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.iOffset_ = 0;
                this.bitField0_ &= -3;
                this.iNum_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fE;
            }

            public final CSGetFrontPageInfoV2 getDefaultInstanceForType() {
                return CSGetFrontPageInfoV2.getDefaultInstance();
            }

            public final CSGetFrontPageInfoV2 build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetFrontPageInfoV2 buildPartial() {
                int i = CSGetFrontPageInfoV2.UUID_FIELD_NUMBER;
                CSGetFrontPageInfoV2 cSGetFrontPageInfoV2 = new CSGetFrontPageInfoV2(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetFrontPageInfoV2.UUID_FIELD_NUMBER) != CSGetFrontPageInfoV2.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetFrontPageInfoV2.uuid_ = this.uuid_;
                if ((i2 & CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER) == CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER) {
                    i |= CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER;
                }
                cSGetFrontPageInfoV2.iOffset_ = this.iOffset_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSGetFrontPageInfoV2.iNum_ = this.iNum_;
                cSGetFrontPageInfoV2.bitField0_ = i;
                onBuilt();
                return cSGetFrontPageInfoV2;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetFrontPageInfoV2) {
                    return mergeFrom((CSGetFrontPageInfoV2) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetFrontPageInfoV2 cSGetFrontPageInfoV2) {
                if (cSGetFrontPageInfoV2 != CSGetFrontPageInfoV2.getDefaultInstance()) {
                    if (cSGetFrontPageInfoV2.hasUuid()) {
                        setUuid(cSGetFrontPageInfoV2.getUuid());
                    }
                    if (cSGetFrontPageInfoV2.hasIOffset()) {
                        setIOffset(cSGetFrontPageInfoV2.getIOffset());
                    }
                    if (cSGetFrontPageInfoV2.hasINum()) {
                        setINum(cSGetFrontPageInfoV2.getINum());
                    }
                    mergeUnknownFields(cSGetFrontPageInfoV2.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasIOffset() && hasINum()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV2.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetFrontPageInfoV2$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetFrontPageInfoV2.UUID_FIELD_NUMBER) == CSGetFrontPageInfoV2.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetFrontPageInfoV2.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIOffset() {
                return (this.bitField0_ & CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER) == CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER;
            }

            public final int getIOffset() {
                return this.iOffset_;
            }

            public final Builder setIOffset(int i) {
                this.bitField0_ |= CSGetFrontPageInfoV2.IOFFSET_FIELD_NUMBER;
                this.iOffset_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIOffset() {
                this.bitField0_ &= -3;
                this.iOffset_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasINum() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getINum() {
                return this.iNum_;
            }

            public final Builder setINum(int i) {
                this.bitField0_ |= 4;
                this.iNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearINum() {
                this.bitField0_ &= -5;
                this.iNum_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetFrontPageInfoV2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetFrontPageInfoV2(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetFrontPageInfoV2 getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetFrontPageInfoV2 getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetFrontPageInfoV2(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= IOFFSET_FIELD_NUMBER;
                            this.iOffset_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.iNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fE;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fF.ensureFieldAccessorsInitialized(CSGetFrontPageInfoV2.class, Builder.class);
        }

        static {
            PARSER = new C11511();
            CSGetFrontPageInfoV2 cSGetFrontPageInfoV2 = new CSGetFrontPageInfoV2(true);
            defaultInstance = cSGetFrontPageInfoV2;
            cSGetFrontPageInfoV2.initFields();
        }

        public final Parser<CSGetFrontPageInfoV2> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasIOffset() {
            return (this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER;
        }

        public final int getIOffset() {
            return this.iOffset_;
        }

        public final boolean hasINum() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getINum() {
            return this.iNum_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.iOffset_ = 0;
            this.iNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasIOffset()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasINum()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(INUM_FIELD_NUMBER, this.iNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(INUM_FIELD_NUMBER, this.iNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetFrontPageInfoV2 parseFrom(ByteString byteString) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(byteString);
        }

        public static CSGetFrontPageInfoV2 parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV2 parseFrom(byte[] bArr) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(bArr);
        }

        public static CSGetFrontPageInfoV2 parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV2 parseFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(inputStream);
        }

        public static CSGetFrontPageInfoV2 parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV2 parseDelimitedFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV2) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetFrontPageInfoV2 parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV2) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV2 parseFrom(CodedInputStream codedInputStream) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetFrontPageInfoV2 parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV2) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetFrontPageInfoV2 cSGetFrontPageInfoV2) {
            return newBuilder().mergeFrom(cSGetFrontPageInfoV2);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetFrontPageInfoV3OrBuilder extends MessageOrBuilder {
        int getINum();

        int getIOffset();

        long getUuid();

        boolean hasINum();

        boolean hasIOffset();

        boolean hasUuid();
    }

    public static final class CSGetFrontPageInfoV3 extends GeneratedMessage implements CSGetFrontPageInfoV3OrBuilder {
        public static final int INUM_FIELD_NUMBER = 3;
        public static final int IOFFSET_FIELD_NUMBER = 2;
        public static Parser<CSGetFrontPageInfoV3> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetFrontPageInfoV3 defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iNum_;
        private int iOffset_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV3.1 */
        class C11521 extends AbstractParser<CSGetFrontPageInfoV3> {
            C11521() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetFrontPageInfoV3(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetFrontPageInfoV3OrBuilder {
            private int bitField0_;
            private int iNum_;
            private int iOffset_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6037build();

            public final native CSGetFrontPageInfoV3 m6038build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6039buildPartial();

            public final native CSGetFrontPageInfoV3 m6040buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6041clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6042clear();

            public final native Builder m6043clear();

            public final native Builder clearINum();

            public final native Builder clearIOffset();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6044clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6045clone();

            public final native Builder m6046clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6047getDefaultInstanceForType();

            public final native CSGetFrontPageInfoV3 m6048getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native int getINum();

            public final native int getIOffset();

            public final native long getUuid();

            public final native boolean hasINum();

            public final native boolean hasIOffset();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6049mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6050mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6051mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6052mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6053mergeFrom(Message message);

            public final native Builder mergeFrom(CSGetFrontPageInfoV3 cSGetFrontPageInfoV3);

            public final native Builder setINum(int i);

            public final native Builder setIOffset(int i);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.fI;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSGetFrontPageInfoV3(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetFrontPageInfoV3(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetFrontPageInfoV3 getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetFrontPageInfoV3 getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetFrontPageInfoV3(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= IOFFSET_FIELD_NUMBER;
                            this.iOffset_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.iNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fI;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fJ.ensureFieldAccessorsInitialized(CSGetFrontPageInfoV3.class, Builder.class);
        }

        static {
            PARSER = new C11521();
            CSGetFrontPageInfoV3 cSGetFrontPageInfoV3 = new CSGetFrontPageInfoV3(true);
            defaultInstance = cSGetFrontPageInfoV3;
            cSGetFrontPageInfoV3.initFields();
        }

        public final Parser<CSGetFrontPageInfoV3> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasIOffset() {
            return (this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER;
        }

        public final int getIOffset() {
            return this.iOffset_;
        }

        public final boolean hasINum() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getINum() {
            return this.iNum_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.iOffset_ = 0;
            this.iNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasIOffset()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasINum()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(INUM_FIELD_NUMBER, this.iNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(INUM_FIELD_NUMBER, this.iNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetFrontPageInfoV3 parseFrom(ByteString byteString) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(byteString);
        }

        public static CSGetFrontPageInfoV3 parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV3 parseFrom(byte[] bArr) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(bArr);
        }

        public static CSGetFrontPageInfoV3 parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV3 parseFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(inputStream);
        }

        public static CSGetFrontPageInfoV3 parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV3 parseDelimitedFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV3) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetFrontPageInfoV3 parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV3) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV3 parseFrom(CodedInputStream codedInputStream) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetFrontPageInfoV3 parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV3) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetFrontPageInfoV3 cSGetFrontPageInfoV3) {
            return newBuilder().mergeFrom(cSGetFrontPageInfoV3);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSGetFrontPageInfoV4OrBuilder extends MessageOrBuilder {
        int getINum();

        int getIOffset();

        long getUuid();

        boolean hasINum();

        boolean hasIOffset();

        boolean hasUuid();
    }

    public static final class CSGetFrontPageInfoV4 extends GeneratedMessage implements CSGetFrontPageInfoV4OrBuilder {
        public static final int INUM_FIELD_NUMBER = 3;
        public static final int IOFFSET_FIELD_NUMBER = 2;
        public static Parser<CSGetFrontPageInfoV4> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetFrontPageInfoV4 defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iNum_;
        private int iOffset_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4.1 */
        class C11531 extends AbstractParser<CSGetFrontPageInfoV4> {
            C11531() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetFrontPageInfoV4(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetFrontPageInfoV4OrBuilder {
            private int bitField0_;
            private int iNum_;
            private int iOffset_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fM;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fN.ensureFieldAccessorsInitialized(CSGetFrontPageInfoV4.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetFrontPageInfoV4.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.iOffset_ = 0;
                this.bitField0_ &= -3;
                this.iNum_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fM;
            }

            public final CSGetFrontPageInfoV4 getDefaultInstanceForType() {
                return CSGetFrontPageInfoV4.getDefaultInstance();
            }

            public final CSGetFrontPageInfoV4 build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetFrontPageInfoV4 buildPartial() {
                int i = CSGetFrontPageInfoV4.UUID_FIELD_NUMBER;
                CSGetFrontPageInfoV4 cSGetFrontPageInfoV4 = new CSGetFrontPageInfoV4(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetFrontPageInfoV4.UUID_FIELD_NUMBER) != CSGetFrontPageInfoV4.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetFrontPageInfoV4.uuid_ = this.uuid_;
                if ((i2 & CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER) == CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER) {
                    i |= CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER;
                }
                cSGetFrontPageInfoV4.iOffset_ = this.iOffset_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSGetFrontPageInfoV4.iNum_ = this.iNum_;
                cSGetFrontPageInfoV4.bitField0_ = i;
                onBuilt();
                return cSGetFrontPageInfoV4;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetFrontPageInfoV4) {
                    return mergeFrom((CSGetFrontPageInfoV4) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetFrontPageInfoV4 cSGetFrontPageInfoV4) {
                if (cSGetFrontPageInfoV4 != CSGetFrontPageInfoV4.getDefaultInstance()) {
                    if (cSGetFrontPageInfoV4.hasUuid()) {
                        setUuid(cSGetFrontPageInfoV4.getUuid());
                    }
                    if (cSGetFrontPageInfoV4.hasIOffset()) {
                        setIOffset(cSGetFrontPageInfoV4.getIOffset());
                    }
                    if (cSGetFrontPageInfoV4.hasINum()) {
                        setINum(cSGetFrontPageInfoV4.getINum());
                    }
                    mergeUnknownFields(cSGetFrontPageInfoV4.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasIOffset() && hasINum()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetFrontPageInfoV4.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetFrontPageInfoV4$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetFrontPageInfoV4.UUID_FIELD_NUMBER) == CSGetFrontPageInfoV4.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetFrontPageInfoV4.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIOffset() {
                return (this.bitField0_ & CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER) == CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER;
            }

            public final int getIOffset() {
                return this.iOffset_;
            }

            public final Builder setIOffset(int i) {
                this.bitField0_ |= CSGetFrontPageInfoV4.IOFFSET_FIELD_NUMBER;
                this.iOffset_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIOffset() {
                this.bitField0_ &= -3;
                this.iOffset_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasINum() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getINum() {
                return this.iNum_;
            }

            public final Builder setINum(int i) {
                this.bitField0_ |= 4;
                this.iNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearINum() {
                this.bitField0_ &= -5;
                this.iNum_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetFrontPageInfoV4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetFrontPageInfoV4(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetFrontPageInfoV4 getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetFrontPageInfoV4 getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetFrontPageInfoV4(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= IOFFSET_FIELD_NUMBER;
                            this.iOffset_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.iNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fM;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fN.ensureFieldAccessorsInitialized(CSGetFrontPageInfoV4.class, Builder.class);
        }

        static {
            PARSER = new C11531();
            CSGetFrontPageInfoV4 cSGetFrontPageInfoV4 = new CSGetFrontPageInfoV4(true);
            defaultInstance = cSGetFrontPageInfoV4;
            cSGetFrontPageInfoV4.initFields();
        }

        public final Parser<CSGetFrontPageInfoV4> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasIOffset() {
            return (this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER;
        }

        public final int getIOffset() {
            return this.iOffset_;
        }

        public final boolean hasINum() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getINum() {
            return this.iNum_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.iOffset_ = 0;
            this.iNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasIOffset()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasINum()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(INUM_FIELD_NUMBER, this.iNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & IOFFSET_FIELD_NUMBER) == IOFFSET_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(IOFFSET_FIELD_NUMBER, this.iOffset_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(INUM_FIELD_NUMBER, this.iNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetFrontPageInfoV4 parseFrom(ByteString byteString) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(byteString);
        }

        public static CSGetFrontPageInfoV4 parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV4 parseFrom(byte[] bArr) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(bArr);
        }

        public static CSGetFrontPageInfoV4 parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV4 parseFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(inputStream);
        }

        public static CSGetFrontPageInfoV4 parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV4 parseDelimitedFrom(InputStream inputStream) {
            return (CSGetFrontPageInfoV4) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetFrontPageInfoV4 parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV4) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetFrontPageInfoV4 parseFrom(CodedInputStream codedInputStream) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetFrontPageInfoV4 parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetFrontPageInfoV4) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetFrontPageInfoV4 cSGetFrontPageInfoV4) {
            return newBuilder().mergeFrom(cSGetFrontPageInfoV4);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetGameRoomInfoOrBuilder extends MessageOrBuilder {
        int getLNum();

        int getLStartIndex();

        long getUuid();

        boolean hasLNum();

        boolean hasLStartIndex();

        boolean hasUuid();
    }

    public static final class CSGetGameRoomInfo extends GeneratedMessage implements CSGetGameRoomInfoOrBuilder {
        public static final int LNUM_FIELD_NUMBER = 3;
        public static final int LSTARTINDEX_FIELD_NUMBER = 2;
        public static Parser<CSGetGameRoomInfo> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetGameRoomInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int lNum_;
        private int lStartIndex_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetGameRoomInfo.1 */
        class C11541 extends AbstractParser<CSGetGameRoomInfo> {
            C11541() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetGameRoomInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetGameRoomInfoOrBuilder {
            private int bitField0_;
            private int lNum_;
            private int lStartIndex_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6054build();

            public final native CSGetGameRoomInfo m6055build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6056buildPartial();

            public final native CSGetGameRoomInfo m6057buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6058clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6059clear();

            public final native Builder m6060clear();

            public final native Builder clearLNum();

            public final native Builder clearLStartIndex();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6061clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6062clone();

            public final native Builder m6063clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6064getDefaultInstanceForType();

            public final native CSGetGameRoomInfo m6065getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native int getLNum();

            public final native int getLStartIndex();

            public final native long getUuid();

            public final native boolean hasLNum();

            public final native boolean hasLStartIndex();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6066mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6067mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6068mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6069mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6070mergeFrom(Message message);

            public final native Builder mergeFrom(CSGetGameRoomInfo cSGetGameRoomInfo);

            public final native Builder setLNum(int i);

            public final native Builder setLStartIndex(int i);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.bM;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSGetGameRoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetGameRoomInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetGameRoomInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetGameRoomInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetGameRoomInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LSTARTINDEX_FIELD_NUMBER;
                            this.lStartIndex_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bM;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bN.ensureFieldAccessorsInitialized(CSGetGameRoomInfo.class, Builder.class);
        }

        static {
            PARSER = new C11541();
            CSGetGameRoomInfo cSGetGameRoomInfo = new CSGetGameRoomInfo(true);
            defaultInstance = cSGetGameRoomInfo;
            cSGetGameRoomInfo.initFields();
        }

        public final Parser<CSGetGameRoomInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLStartIndex() {
            return (this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER;
        }

        public final int getLStartIndex() {
            return this.lStartIndex_;
        }

        public final boolean hasLNum() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getLNum() {
            return this.lNum_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lStartIndex_ = 0;
            this.lNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER) {
                codedOutputStream.writeInt32(LSTARTINDEX_FIELD_NUMBER, this.lStartIndex_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(LNUM_FIELD_NUMBER, this.lNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LSTARTINDEX_FIELD_NUMBER) == LSTARTINDEX_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(LSTARTINDEX_FIELD_NUMBER, this.lStartIndex_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(LNUM_FIELD_NUMBER, this.lNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetGameRoomInfo parseFrom(ByteString byteString) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(byteString);
        }

        public static CSGetGameRoomInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetGameRoomInfo parseFrom(byte[] bArr) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(bArr);
        }

        public static CSGetGameRoomInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetGameRoomInfo parseFrom(InputStream inputStream) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(inputStream);
        }

        public static CSGetGameRoomInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomInfo parseDelimitedFrom(InputStream inputStream) {
            return (CSGetGameRoomInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetGameRoomInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomInfo parseFrom(CodedInputStream codedInputStream) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetGameRoomInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetGameRoomInfo cSGetGameRoomInfo) {
            return newBuilder().mergeFrom(cSGetGameRoomInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSGetGameRoomInfoByRoomIDOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGetGameRoomInfoByRoomID extends GeneratedMessage implements CSGetGameRoomInfoByRoomIDOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 1;
        public static Parser<CSGetGameRoomInfoByRoomID> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 2;
        private static final CSGetGameRoomInfoByRoomID defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID.1 */
        class C11551 extends AbstractParser<CSGetGameRoomInfoByRoomID> {
            C11551() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetGameRoomInfoByRoomID(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetGameRoomInfoByRoomIDOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fU;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fV.ensureFieldAccessorsInitialized(CSGetGameRoomInfoByRoomID.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetGameRoomInfoByRoomID.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lRoomID_ = 0;
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fU;
            }

            public final CSGetGameRoomInfoByRoomID getDefaultInstanceForType() {
                return CSGetGameRoomInfoByRoomID.getDefaultInstance();
            }

            public final CSGetGameRoomInfoByRoomID build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetGameRoomInfoByRoomID buildPartial() {
                int i = CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
                CSGetGameRoomInfoByRoomID cSGetGameRoomInfoByRoomID = new CSGetGameRoomInfoByRoomID(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER) != CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetGameRoomInfoByRoomID.lRoomID_ = this.lRoomID_;
                if ((i2 & CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER) == CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER) {
                    i |= CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER;
                }
                cSGetGameRoomInfoByRoomID.uuid_ = this.uuid_;
                cSGetGameRoomInfoByRoomID.bitField0_ = i;
                onBuilt();
                return cSGetGameRoomInfoByRoomID;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetGameRoomInfoByRoomID) {
                    return mergeFrom((CSGetGameRoomInfoByRoomID) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetGameRoomInfoByRoomID cSGetGameRoomInfoByRoomID) {
                if (cSGetGameRoomInfoByRoomID != CSGetGameRoomInfoByRoomID.getDefaultInstance()) {
                    if (cSGetGameRoomInfoByRoomID.hasLRoomID()) {
                        setLRoomID(cSGetGameRoomInfoByRoomID.getLRoomID());
                    }
                    if (cSGetGameRoomInfoByRoomID.hasUuid()) {
                        setUuid(cSGetGameRoomInfoByRoomID.getUuid());
                    }
                    mergeUnknownFields(cSGetGameRoomInfoByRoomID.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetGameRoomInfoByRoomID.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetGameRoomInfoByRoomID$Builder");
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER) == CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGetGameRoomInfoByRoomID.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER) == CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetGameRoomInfoByRoomID.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -3;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetGameRoomInfoByRoomID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetGameRoomInfoByRoomID(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetGameRoomInfoByRoomID getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetGameRoomInfoByRoomID getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetGameRoomInfoByRoomID(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LROOMID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LROOMID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fU;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fV.ensureFieldAccessorsInitialized(CSGetGameRoomInfoByRoomID.class, Builder.class);
        }

        static {
            PARSER = new C11551();
            CSGetGameRoomInfoByRoomID cSGetGameRoomInfoByRoomID = new CSGetGameRoomInfoByRoomID(true);
            defaultInstance = cSGetGameRoomInfoByRoomID;
            cSGetGameRoomInfoByRoomID.initFields();
        }

        public final Parser<CSGetGameRoomInfoByRoomID> getParserForType() {
            return PARSER;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.lRoomID_ = 0;
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_) + 0;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(ByteString byteString) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(byteString);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(byte[] bArr) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(bArr);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(InputStream inputStream) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(inputStream);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomInfoByRoomID parseDelimitedFrom(InputStream inputStream) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetGameRoomInfoByRoomID parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(CodedInputStream codedInputStream) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetGameRoomInfoByRoomID parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomInfoByRoomID) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetGameRoomInfoByRoomID cSGetGameRoomInfoByRoomID) {
            return newBuilder().mergeFrom(cSGetGameRoomInfoByRoomID);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGetGameRoomLeagueClubsOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSGetGameRoomLeagueClubs extends GeneratedMessage implements CSGetGameRoomLeagueClubsOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetGameRoomLeagueClubs> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetGameRoomLeagueClubs defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetGameRoomLeagueClubs.1 */
        class C11561 extends AbstractParser<CSGetGameRoomLeagueClubs> {
            C11561() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetGameRoomLeagueClubs(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetGameRoomLeagueClubsOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6071build();

            public final native CSGetGameRoomLeagueClubs m6072build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6073buildPartial();

            public final native CSGetGameRoomLeagueClubs m6074buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6075clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6076clear();

            public final native Builder m6077clear();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6078clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6079clone();

            public final native Builder m6080clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6081getDefaultInstanceForType();

            public final native CSGetGameRoomLeagueClubs m6082getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6083mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6084mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6085mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6086mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6087mergeFrom(Message message);

            public final native Builder mergeFrom(CSGetGameRoomLeagueClubs cSGetGameRoomLeagueClubs);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.he;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSGetGameRoomLeagueClubs(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetGameRoomLeagueClubs(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetGameRoomLeagueClubs getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetGameRoomLeagueClubs getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetGameRoomLeagueClubs(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.he;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.hf.ensureFieldAccessorsInitialized(CSGetGameRoomLeagueClubs.class, Builder.class);
        }

        static {
            PARSER = new C11561();
            CSGetGameRoomLeagueClubs cSGetGameRoomLeagueClubs = new CSGetGameRoomLeagueClubs(true);
            defaultInstance = cSGetGameRoomLeagueClubs;
            cSGetGameRoomLeagueClubs.initFields();
        }

        public final Parser<CSGetGameRoomLeagueClubs> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetGameRoomLeagueClubs parseFrom(ByteString byteString) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(byteString);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(byte[] bArr) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(bArr);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(InputStream inputStream) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(inputStream);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomLeagueClubs parseDelimitedFrom(InputStream inputStream) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetGameRoomLeagueClubs parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(CodedInputStream codedInputStream) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetGameRoomLeagueClubs parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameRoomLeagueClubs) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetGameRoomLeagueClubs cSGetGameRoomLeagueClubs) {
            return newBuilder().mergeFrom(cSGetGameRoomLeagueClubs);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSGetGameSettingOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSGetGameSetting extends GeneratedMessage implements CSGetGameSettingOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetGameSetting> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetGameSetting defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetGameSetting.1 */
        class C11571 extends AbstractParser<CSGetGameSetting> {
            C11571() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetGameSetting(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetGameSettingOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6088build();

            public final native CSGetGameSetting m6089build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6090buildPartial();

            public final native CSGetGameSetting m6091buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6092clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6093clear();

            public final native Builder m6094clear();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6095clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6096clone();

            public final native Builder m6097clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6098getDefaultInstanceForType();

            public final native CSGetGameSetting m6099getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6100mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6101mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6102mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6103mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6104mergeFrom(Message message);

            public final native Builder mergeFrom(CSGetGameSetting cSGetGameSetting);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gG;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSGetGameSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetGameSetting(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetGameSetting getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetGameSetting getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetGameSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gG;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gH.ensureFieldAccessorsInitialized(CSGetGameSetting.class, Builder.class);
        }

        static {
            PARSER = new C11571();
            CSGetGameSetting cSGetGameSetting = new CSGetGameSetting(true);
            defaultInstance = cSGetGameSetting;
            cSGetGameSetting.initFields();
        }

        public final Parser<CSGetGameSetting> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetGameSetting parseFrom(ByteString byteString) {
            return (CSGetGameSetting) PARSER.parseFrom(byteString);
        }

        public static CSGetGameSetting parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameSetting) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetGameSetting parseFrom(byte[] bArr) {
            return (CSGetGameSetting) PARSER.parseFrom(bArr);
        }

        public static CSGetGameSetting parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameSetting) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetGameSetting parseFrom(InputStream inputStream) {
            return (CSGetGameSetting) PARSER.parseFrom(inputStream);
        }

        public static CSGetGameSetting parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameSetting) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameSetting parseDelimitedFrom(InputStream inputStream) {
            return (CSGetGameSetting) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetGameSetting parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameSetting) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetGameSetting parseFrom(CodedInputStream codedInputStream) {
            return (CSGetGameSetting) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetGameSetting parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetGameSetting) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetGameSetting cSGetGameSetting) {
            return newBuilder().mergeFrom(cSGetGameSetting);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSGetQuickGameRoomOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSGetQuickGameRoom extends GeneratedMessage implements CSGetQuickGameRoomOrBuilder {
        public static Parser<CSGetQuickGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetQuickGameRoom defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetQuickGameRoom.1 */
        class C11581 extends AbstractParser<CSGetQuickGameRoom> {
            C11581() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetQuickGameRoom(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetQuickGameRoomOrBuilder {
            private int bitField0_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{755, 756, 757, 758, 759, 760, 761, 762, 763, 764, WBConstants.SDK_ACTIVITY_FOR_RESULT_CODE, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6112build();

            public final native CSGetQuickGameRoom m6113build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6114buildPartial();

            public final native CSGetQuickGameRoom m6115buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6116clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6117clear();

            public final native Builder m6118clear();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6119clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6120clone();

            public final native Builder m6121clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6122getDefaultInstanceForType();

            public final native CSGetQuickGameRoom m6123getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getUuid();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6124mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6125mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6126mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6127mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6128mergeFrom(Message message);

            public final native Builder mergeFrom(CSGetQuickGameRoom cSGetQuickGameRoom);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.eg;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSGetQuickGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSGetQuickGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSGetQuickGameRoom cSGetQuickGameRoom);

        private native CSGetQuickGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSGetQuickGameRoom(com.google.protobuf.GeneratedMessage.Builder builder, CSGetQuickGameRoom cSGetQuickGameRoom);

        private native CSGetQuickGameRoom(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6105getDefaultInstanceForType();

        public final native CSGetQuickGameRoom m6106getDefaultInstanceForType();

        public final native Parser<CSGetQuickGameRoom> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6107newBuilderForType();

        public final native Builder m6108newBuilderForType();

        protected final native Builder m6109newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6110toBuilder();

        public final native Builder m6111toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSGetQuickGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eg;
        }

        static void __clinit__() {
            PARSER = new C11581();
            CSGetQuickGameRoom cSGetQuickGameRoom = new CSGetQuickGameRoom(true);
            defaultInstance = cSGetQuickGameRoom;
            cSGetQuickGameRoom.initFields();
        }

        public static CSGetQuickGameRoom parseFrom(ByteString byteString) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSGetQuickGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetQuickGameRoom parseFrom(byte[] bArr) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSGetQuickGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetQuickGameRoom parseFrom(InputStream inputStream) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSGetQuickGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetQuickGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSGetQuickGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetQuickGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetQuickGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetQuickGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetQuickGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetQuickGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSGetQuickGameRoom cSGetQuickGameRoom) {
            return newBuilder().mergeFrom(cSGetQuickGameRoom);
        }
    }

    public interface CSGetUserGameInfoInRoomOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGetUserGameInfoInRoom extends GeneratedMessage implements CSGetUserGameInfoInRoomOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGetUserGameInfoInRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGetUserGameInfoInRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom.1 */
        class C11591 extends AbstractParser<CSGetUserGameInfoInRoom> {
            C11591() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGetUserGameInfoInRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGetUserGameInfoInRoomOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fR.ensureFieldAccessorsInitialized(CSGetUserGameInfoInRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGetUserGameInfoInRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fQ;
            }

            public final CSGetUserGameInfoInRoom getDefaultInstanceForType() {
                return CSGetUserGameInfoInRoom.getDefaultInstance();
            }

            public final CSGetUserGameInfoInRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGetUserGameInfoInRoom buildPartial() {
                int i = CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER;
                CSGetUserGameInfoInRoom cSGetUserGameInfoInRoom = new CSGetUserGameInfoInRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER) != CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGetUserGameInfoInRoom.uuid_ = this.uuid_;
                if ((i2 & CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER) == CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER;
                }
                cSGetUserGameInfoInRoom.lRoomID_ = this.lRoomID_;
                cSGetUserGameInfoInRoom.bitField0_ = i;
                onBuilt();
                return cSGetUserGameInfoInRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGetUserGameInfoInRoom) {
                    return mergeFrom((CSGetUserGameInfoInRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGetUserGameInfoInRoom cSGetUserGameInfoInRoom) {
                if (cSGetUserGameInfoInRoom != CSGetUserGameInfoInRoom.getDefaultInstance()) {
                    if (cSGetUserGameInfoInRoom.hasUuid()) {
                        setUuid(cSGetUserGameInfoInRoom.getUuid());
                    }
                    if (cSGetUserGameInfoInRoom.hasLRoomID()) {
                        setLRoomID(cSGetUserGameInfoInRoom.getLRoomID());
                    }
                    mergeUnknownFields(cSGetUserGameInfoInRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGetUserGameInfoInRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGetUserGameInfoInRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER) == CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGetUserGameInfoInRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER) == CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGetUserGameInfoInRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGetUserGameInfoInRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGetUserGameInfoInRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGetUserGameInfoInRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGetUserGameInfoInRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGetUserGameInfoInRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fR.ensureFieldAccessorsInitialized(CSGetUserGameInfoInRoom.class, Builder.class);
        }

        static {
            PARSER = new C11591();
            CSGetUserGameInfoInRoom cSGetUserGameInfoInRoom = new CSGetUserGameInfoInRoom(true);
            defaultInstance = cSGetUserGameInfoInRoom;
            cSGetUserGameInfoInRoom.initFields();
        }

        public final Parser<CSGetUserGameInfoInRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGetUserGameInfoInRoom parseFrom(ByteString byteString) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(byteString);
        }

        public static CSGetUserGameInfoInRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGetUserGameInfoInRoom parseFrom(byte[] bArr) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(bArr);
        }

        public static CSGetUserGameInfoInRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGetUserGameInfoInRoom parseFrom(InputStream inputStream) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(inputStream);
        }

        public static CSGetUserGameInfoInRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetUserGameInfoInRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSGetUserGameInfoInRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGetUserGameInfoInRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetUserGameInfoInRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGetUserGameInfoInRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSGetUserGameInfoInRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGetUserGameInfoInRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGetUserGameInfoInRoom cSGetUserGameInfoInRoom) {
            return newBuilder().mergeFrom(cSGetUserGameInfoInRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGiveMoneyOrBuilder extends MessageOrBuilder {
        long getLPopularity();

        long getLRoomID();

        long getUuid();

        boolean hasLPopularity();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSGiveMoney extends GeneratedMessage implements CSGiveMoneyOrBuilder {
        public static final int LPOPULARITY_FIELD_NUMBER = 3;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSGiveMoney> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSGiveMoney defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lPopularity_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGiveMoney.1 */
        class C11601 extends AbstractParser<CSGiveMoney> {
            C11601() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGiveMoney(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGiveMoneyOrBuilder {
            private int bitField0_;
            private long lPopularity_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.co;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cp.ensureFieldAccessorsInitialized(CSGiveMoney.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGiveMoney.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lPopularity_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.co;
            }

            public final CSGiveMoney getDefaultInstanceForType() {
                return CSGiveMoney.getDefaultInstance();
            }

            public final CSGiveMoney build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGiveMoney buildPartial() {
                int i = CSGiveMoney.UUID_FIELD_NUMBER;
                CSGiveMoney cSGiveMoney = new CSGiveMoney(null);
                int i2 = this.bitField0_;
                if ((i2 & CSGiveMoney.UUID_FIELD_NUMBER) != CSGiveMoney.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGiveMoney.uuid_ = this.uuid_;
                if ((i2 & CSGiveMoney.LROOMID_FIELD_NUMBER) == CSGiveMoney.LROOMID_FIELD_NUMBER) {
                    i |= CSGiveMoney.LROOMID_FIELD_NUMBER;
                }
                cSGiveMoney.lRoomID_ = this.lRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSGiveMoney.lPopularity_ = this.lPopularity_;
                cSGiveMoney.bitField0_ = i;
                onBuilt();
                return cSGiveMoney;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGiveMoney) {
                    return mergeFrom((CSGiveMoney) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGiveMoney cSGiveMoney) {
                if (cSGiveMoney != CSGiveMoney.getDefaultInstance()) {
                    if (cSGiveMoney.hasUuid()) {
                        setUuid(cSGiveMoney.getUuid());
                    }
                    if (cSGiveMoney.hasLRoomID()) {
                        setLRoomID(cSGiveMoney.getLRoomID());
                    }
                    if (cSGiveMoney.hasLPopularity()) {
                        setLPopularity(cSGiveMoney.getLPopularity());
                    }
                    mergeUnknownFields(cSGiveMoney.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID() && hasLPopularity()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGiveMoney.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGiveMoney.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGiveMoney) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGiveMoney) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGiveMoney.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGiveMoney$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGiveMoney.UUID_FIELD_NUMBER) == CSGiveMoney.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGiveMoney.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSGiveMoney.LROOMID_FIELD_NUMBER) == CSGiveMoney.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSGiveMoney.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLPopularity() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLPopularity() {
                return this.lPopularity_;
            }

            public final Builder setLPopularity(long j) {
                this.bitField0_ |= 4;
                this.lPopularity_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPopularity() {
                this.bitField0_ &= -5;
                this.lPopularity_ = 0;
                onChanged();
                return this;
            }
        }

        private CSGiveMoney(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGiveMoney(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGiveMoney getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGiveMoney getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGiveMoney(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lPopularity_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.co;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cp.ensureFieldAccessorsInitialized(CSGiveMoney.class, Builder.class);
        }

        static {
            PARSER = new C11601();
            CSGiveMoney cSGiveMoney = new CSGiveMoney(true);
            defaultInstance = cSGiveMoney;
            cSGiveMoney.initFields();
        }

        public final Parser<CSGiveMoney> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasLPopularity() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLPopularity() {
            return this.lPopularity_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.lPopularity_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLPopularity()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LPOPULARITY_FIELD_NUMBER, this.lPopularity_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LPOPULARITY_FIELD_NUMBER, this.lPopularity_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGiveMoney parseFrom(ByteString byteString) {
            return (CSGiveMoney) PARSER.parseFrom(byteString);
        }

        public static CSGiveMoney parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoney) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGiveMoney parseFrom(byte[] bArr) {
            return (CSGiveMoney) PARSER.parseFrom(bArr);
        }

        public static CSGiveMoney parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoney) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGiveMoney parseFrom(InputStream inputStream) {
            return (CSGiveMoney) PARSER.parseFrom(inputStream);
        }

        public static CSGiveMoney parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoney) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGiveMoney parseDelimitedFrom(InputStream inputStream) {
            return (CSGiveMoney) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGiveMoney parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoney) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGiveMoney parseFrom(CodedInputStream codedInputStream) {
            return (CSGiveMoney) PARSER.parseFrom(codedInputStream);
        }

        public static CSGiveMoney parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoney) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGiveMoney cSGiveMoney) {
            return newBuilder().mergeFrom(cSGiveMoney);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSGiveMoneyPushMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSGiveMoneyPushMsgRsp extends GeneratedMessage implements CSGiveMoneyPushMsgRspOrBuilder {
        public static Parser<CSGiveMoneyPushMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSGiveMoneyPushMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp.1 */
        class C11611 extends AbstractParser<CSGiveMoneyPushMsgRsp> {
            C11611() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSGiveMoneyPushMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSGiveMoneyPushMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cw;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cx.ensureFieldAccessorsInitialized(CSGiveMoneyPushMsgRsp.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSGiveMoneyPushMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cw;
            }

            public final CSGiveMoneyPushMsgRsp getDefaultInstanceForType() {
                return CSGiveMoneyPushMsgRsp.getDefaultInstance();
            }

            public final CSGiveMoneyPushMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSGiveMoneyPushMsgRsp buildPartial() {
                int i = CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER;
                CSGiveMoneyPushMsgRsp cSGiveMoneyPushMsgRsp = new CSGiveMoneyPushMsgRsp(null);
                if ((this.bitField0_ & CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER) != CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSGiveMoneyPushMsgRsp.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSGiveMoneyPushMsgRsp.VMSGIDS_FIELD_NUMBER) == CSGiveMoneyPushMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSGiveMoneyPushMsgRsp.vMsgIds_ = this.vMsgIds_;
                cSGiveMoneyPushMsgRsp.bitField0_ = i;
                onBuilt();
                return cSGiveMoneyPushMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSGiveMoneyPushMsgRsp) {
                    return mergeFrom((CSGiveMoneyPushMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSGiveMoneyPushMsgRsp cSGiveMoneyPushMsgRsp) {
                if (cSGiveMoneyPushMsgRsp != CSGiveMoneyPushMsgRsp.getDefaultInstance()) {
                    if (cSGiveMoneyPushMsgRsp.hasUuid()) {
                        setUuid(cSGiveMoneyPushMsgRsp.getUuid());
                    }
                    if (!cSGiveMoneyPushMsgRsp.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSGiveMoneyPushMsgRsp.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSGiveMoneyPushMsgRsp.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSGiveMoneyPushMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSGiveMoneyPushMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSGiveMoneyPushMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER) == CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSGiveMoneyPushMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSGiveMoneyPushMsgRsp.VMSGIDS_FIELD_NUMBER) != CSGiveMoneyPushMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSGiveMoneyPushMsgRsp.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSGiveMoneyPushMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSGiveMoneyPushMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSGiveMoneyPushMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSGiveMoneyPushMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSGiveMoneyPushMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cw;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cx.ensureFieldAccessorsInitialized(CSGiveMoneyPushMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C11611();
            CSGiveMoneyPushMsgRsp cSGiveMoneyPushMsgRsp = new CSGiveMoneyPushMsgRsp(true);
            defaultInstance = cSGiveMoneyPushMsgRsp;
            cSGiveMoneyPushMsgRsp.initFields();
        }

        public final Parser<CSGiveMoneyPushMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(ByteString byteString) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(byte[] bArr) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(InputStream inputStream) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSGiveMoneyPushMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSGiveMoneyPushMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSGiveMoneyPushMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSGiveMoneyPushMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSGiveMoneyPushMsgRsp cSGiveMoneyPushMsgRsp) {
            return newBuilder().mergeFrom(cSGiveMoneyPushMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSHelloOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSHello extends GeneratedMessage implements CSHelloOrBuilder {
        public static Parser<CSHello> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSHello defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSHello.1 */
        class C11621 extends AbstractParser<CSHello> {
            C11621() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSHello(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSHelloOrBuilder {
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aa;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ab.ensureFieldAccessorsInitialized(CSHello.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSHello.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aa;
            }

            public final CSHello getDefaultInstanceForType() {
                return CSHello.getDefaultInstance();
            }

            public final CSHello build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSHello buildPartial() {
                int i = CSHello.UUID_FIELD_NUMBER;
                CSHello cSHello = new CSHello(null);
                if ((this.bitField0_ & CSHello.UUID_FIELD_NUMBER) != CSHello.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSHello.uuid_ = this.uuid_;
                cSHello.bitField0_ = i;
                onBuilt();
                return cSHello;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSHello) {
                    return mergeFrom((CSHello) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSHello cSHello) {
                if (cSHello != CSHello.getDefaultInstance()) {
                    if (cSHello.hasUuid()) {
                        setUuid(cSHello.getUuid());
                    }
                    mergeUnknownFields(cSHello.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSHello.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSHello.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSHello) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSHello) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSHello.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSHello$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSHello.UUID_FIELD_NUMBER) == CSHello.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSHello.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSHello(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSHello(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSHello getDefaultInstance() {
            return defaultInstance;
        }

        public final CSHello getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSHello(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aa;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ab.ensureFieldAccessorsInitialized(CSHello.class, Builder.class);
        }

        static {
            PARSER = new C11621();
            CSHello cSHello = new CSHello(true);
            defaultInstance = cSHello;
            cSHello.initFields();
        }

        public final Parser<CSHello> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSHello parseFrom(ByteString byteString) {
            return (CSHello) PARSER.parseFrom(byteString);
        }

        public static CSHello parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHello) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSHello parseFrom(byte[] bArr) {
            return (CSHello) PARSER.parseFrom(bArr);
        }

        public static CSHello parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHello) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSHello parseFrom(InputStream inputStream) {
            return (CSHello) PARSER.parseFrom(inputStream);
        }

        public static CSHello parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHello) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSHello parseDelimitedFrom(InputStream inputStream) {
            return (CSHello) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSHello parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHello) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSHello parseFrom(CodedInputStream codedInputStream) {
            return (CSHello) PARSER.parseFrom(codedInputStream);
        }

        public static CSHello parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHello) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSHello cSHello) {
            return newBuilder().mergeFrom(cSHello);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSHelloGameOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSHelloGame extends GeneratedMessage implements CSHelloGameOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSHelloGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSHelloGame defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSHelloGame.1 */
        class C11631 extends AbstractParser<CSHelloGame> {
            C11631() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSHelloGame(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSHelloGameOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ae;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.af.ensureFieldAccessorsInitialized(CSHelloGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSHelloGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ae;
            }

            public final CSHelloGame getDefaultInstanceForType() {
                return CSHelloGame.getDefaultInstance();
            }

            public final CSHelloGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSHelloGame buildPartial() {
                int i = CSHelloGame.UUID_FIELD_NUMBER;
                CSHelloGame cSHelloGame = new CSHelloGame(null);
                int i2 = this.bitField0_;
                if ((i2 & CSHelloGame.UUID_FIELD_NUMBER) != CSHelloGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSHelloGame.uuid_ = this.uuid_;
                if ((i2 & CSHelloGame.LGAMEROOMID_FIELD_NUMBER) == CSHelloGame.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSHelloGame.LGAMEROOMID_FIELD_NUMBER;
                }
                cSHelloGame.lGameRoomID_ = this.lGameRoomID_;
                cSHelloGame.bitField0_ = i;
                onBuilt();
                return cSHelloGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSHelloGame) {
                    return mergeFrom((CSHelloGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSHelloGame cSHelloGame) {
                if (cSHelloGame != CSHelloGame.getDefaultInstance()) {
                    if (cSHelloGame.hasUuid()) {
                        setUuid(cSHelloGame.getUuid());
                    }
                    if (cSHelloGame.hasLGameRoomID()) {
                        setLGameRoomID(cSHelloGame.getLGameRoomID());
                    }
                    mergeUnknownFields(cSHelloGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSHelloGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSHelloGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSHelloGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSHelloGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSHelloGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSHelloGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSHelloGame.UUID_FIELD_NUMBER) == CSHelloGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSHelloGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSHelloGame.LGAMEROOMID_FIELD_NUMBER) == CSHelloGame.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSHelloGame.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSHelloGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSHelloGame(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSHelloGame getDefaultInstance() {
            return defaultInstance;
        }

        public final CSHelloGame getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSHelloGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ae;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.af.ensureFieldAccessorsInitialized(CSHelloGame.class, Builder.class);
        }

        static {
            PARSER = new C11631();
            CSHelloGame cSHelloGame = new CSHelloGame(true);
            defaultInstance = cSHelloGame;
            cSHelloGame.initFields();
        }

        public final Parser<CSHelloGame> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSHelloGame parseFrom(ByteString byteString) {
            return (CSHelloGame) PARSER.parseFrom(byteString);
        }

        public static CSHelloGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHelloGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSHelloGame parseFrom(byte[] bArr) {
            return (CSHelloGame) PARSER.parseFrom(bArr);
        }

        public static CSHelloGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHelloGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSHelloGame parseFrom(InputStream inputStream) {
            return (CSHelloGame) PARSER.parseFrom(inputStream);
        }

        public static CSHelloGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHelloGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSHelloGame parseDelimitedFrom(InputStream inputStream) {
            return (CSHelloGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSHelloGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHelloGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSHelloGame parseFrom(CodedInputStream codedInputStream) {
            return (CSHelloGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSHelloGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSHelloGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSHelloGame cSHelloGame) {
            return newBuilder().mergeFrom(cSHelloGame);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSKickUserGameRoomOrBuilder extends MessageOrBuilder {
        long getLKickOffUuid();

        long getLRoomID();

        long getUuid();

        boolean hasLKickOffUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSKickUserGameRoom extends GeneratedMessage implements CSKickUserGameRoomOrBuilder {
        public static final int LKICKOFFUUID_FIELD_NUMBER = 3;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSKickUserGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSKickUserGameRoom defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lKickOffUuid_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSKickUserGameRoom.1 */
        class C11641 extends AbstractParser<CSKickUserGameRoom> {
            C11641() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSKickUserGameRoom(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSKickUserGameRoomOrBuilder {
            private int bitField0_;
            private long lKickOffUuid_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dC;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dD.ensureFieldAccessorsInitialized(CSKickUserGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSKickUserGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lKickOffUuid_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dC;
            }

            public final CSKickUserGameRoom getDefaultInstanceForType() {
                return CSKickUserGameRoom.getDefaultInstance();
            }

            public final CSKickUserGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSKickUserGameRoom buildPartial() {
                int i = CSKickUserGameRoom.UUID_FIELD_NUMBER;
                CSKickUserGameRoom cSKickUserGameRoom = new CSKickUserGameRoom((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSKickUserGameRoom.UUID_FIELD_NUMBER) != CSKickUserGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSKickUserGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSKickUserGameRoom.LROOMID_FIELD_NUMBER) == CSKickUserGameRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSKickUserGameRoom.LROOMID_FIELD_NUMBER;
                }
                cSKickUserGameRoom.lRoomID_ = this.lRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSKickUserGameRoom.lKickOffUuid_ = this.lKickOffUuid_;
                cSKickUserGameRoom.bitField0_ = i;
                onBuilt();
                return cSKickUserGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSKickUserGameRoom) {
                    return mergeFrom((CSKickUserGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSKickUserGameRoom cSKickUserGameRoom) {
                if (cSKickUserGameRoom != CSKickUserGameRoom.getDefaultInstance()) {
                    if (cSKickUserGameRoom.hasUuid()) {
                        setUuid(cSKickUserGameRoom.getUuid());
                    }
                    if (cSKickUserGameRoom.hasLRoomID()) {
                        setLRoomID(cSKickUserGameRoom.getLRoomID());
                    }
                    if (cSKickUserGameRoom.hasLKickOffUuid()) {
                        setLKickOffUuid(cSKickUserGameRoom.getLKickOffUuid());
                    }
                    mergeUnknownFields(cSKickUserGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID() && hasLKickOffUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSKickUserGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSKickUserGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSKickUserGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSKickUserGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSKickUserGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSKickUserGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSKickUserGameRoom.UUID_FIELD_NUMBER) == CSKickUserGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSKickUserGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSKickUserGameRoom.LROOMID_FIELD_NUMBER) == CSKickUserGameRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSKickUserGameRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLKickOffUuid() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLKickOffUuid() {
                return this.lKickOffUuid_;
            }

            public final Builder setLKickOffUuid(long j) {
                this.bitField0_ |= 4;
                this.lKickOffUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLKickOffUuid() {
                this.bitField0_ &= -5;
                this.lKickOffUuid_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSKickUserGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSKickUserGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSKickUserGameRoom cSKickUserGameRoom);

        private native CSKickUserGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSKickUserGameRoom(com.google.protobuf.GeneratedMessage.Builder builder, CSKickUserGameRoom cSKickUserGameRoom);

        private native CSKickUserGameRoom(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6129getDefaultInstanceForType();

        public final native CSKickUserGameRoom m6130getDefaultInstanceForType();

        public final native long getLKickOffUuid();

        public final native long getLRoomID();

        public final native Parser<CSKickUserGameRoom> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasLKickOffUuid();

        public final native boolean hasLRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6131newBuilderForType();

        public final native Builder m6132newBuilderForType();

        protected final native Builder m6133newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6134toBuilder();

        public final native Builder m6135toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSKickUserGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dC;
        }

        static void __clinit__() {
            PARSER = new C11641();
            CSKickUserGameRoom cSKickUserGameRoom = new CSKickUserGameRoom(true);
            defaultInstance = cSKickUserGameRoom;
            cSKickUserGameRoom.initFields();
        }

        public static CSKickUserGameRoom parseFrom(ByteString byteString) {
            return (CSKickUserGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSKickUserGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSKickUserGameRoom parseFrom(byte[] bArr) {
            return (CSKickUserGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSKickUserGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSKickUserGameRoom parseFrom(InputStream inputStream) {
            return (CSKickUserGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSKickUserGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSKickUserGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSKickUserGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSKickUserGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSKickUserGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSKickUserGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSKickUserGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSKickUserGameRoom cSKickUserGameRoom) {
            return newBuilder().mergeFrom(cSKickUserGameRoom);
        }
    }

    public interface CSKickUserInGameOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        int getLKickUserUuid();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasLKickUserUuid();

        boolean hasUuid();
    }

    public static final class CSKickUserInGame extends GeneratedMessage implements CSKickUserInGameOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static final int LKICKUSERUUID_FIELD_NUMBER = 3;
        public static Parser<CSKickUserInGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSKickUserInGame defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private int lKickUserUuid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSKickUserInGame.1 */
        class C11651 extends AbstractParser<CSKickUserInGame> {
            C11651() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSKickUserInGame(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSKickUserInGameOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private int lKickUserUuid_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gO;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gP.ensureFieldAccessorsInitialized(CSKickUserInGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSKickUserInGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lKickUserUuid_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gO;
            }

            public final CSKickUserInGame getDefaultInstanceForType() {
                return CSKickUserInGame.getDefaultInstance();
            }

            public final CSKickUserInGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSKickUserInGame buildPartial() {
                int i = CSKickUserInGame.UUID_FIELD_NUMBER;
                CSKickUserInGame cSKickUserInGame = new CSKickUserInGame(null);
                int i2 = this.bitField0_;
                if ((i2 & CSKickUserInGame.UUID_FIELD_NUMBER) != CSKickUserInGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSKickUserInGame.uuid_ = this.uuid_;
                if ((i2 & CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER) == CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER;
                }
                cSKickUserInGame.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSKickUserInGame.lKickUserUuid_ = this.lKickUserUuid_;
                cSKickUserInGame.bitField0_ = i;
                onBuilt();
                return cSKickUserInGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSKickUserInGame) {
                    return mergeFrom((CSKickUserInGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSKickUserInGame cSKickUserInGame) {
                if (cSKickUserInGame != CSKickUserInGame.getDefaultInstance()) {
                    if (cSKickUserInGame.hasUuid()) {
                        setUuid(cSKickUserInGame.getUuid());
                    }
                    if (cSKickUserInGame.hasLGameRoomID()) {
                        setLGameRoomID(cSKickUserInGame.getLGameRoomID());
                    }
                    if (cSKickUserInGame.hasLKickUserUuid()) {
                        setLKickUserUuid(cSKickUserInGame.getLKickUserUuid());
                    }
                    mergeUnknownFields(cSKickUserInGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSKickUserInGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSKickUserInGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSKickUserInGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSKickUserInGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSKickUserInGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSKickUserInGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSKickUserInGame.UUID_FIELD_NUMBER) == CSKickUserInGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSKickUserInGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER) == CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSKickUserInGame.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLKickUserUuid() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getLKickUserUuid() {
                return this.lKickUserUuid_;
            }

            public final Builder setLKickUserUuid(int i) {
                this.bitField0_ |= 4;
                this.lKickUserUuid_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLKickUserUuid() {
                this.bitField0_ &= -5;
                this.lKickUserUuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSKickUserInGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSKickUserInGame(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSKickUserInGame getDefaultInstance() {
            return defaultInstance;
        }

        public final CSKickUserInGame getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSKickUserInGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lKickUserUuid_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gO;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gP.ensureFieldAccessorsInitialized(CSKickUserInGame.class, Builder.class);
        }

        static {
            PARSER = new C11651();
            CSKickUserInGame cSKickUserInGame = new CSKickUserInGame(true);
            defaultInstance = cSKickUserInGame;
            cSKickUserInGame.initFields();
        }

        public final Parser<CSKickUserInGame> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLKickUserUuid() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getLKickUserUuid() {
            return this.lKickUserUuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lKickUserUuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(LKICKUSERUUID_FIELD_NUMBER, this.lKickUserUuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(LKICKUSERUUID_FIELD_NUMBER, this.lKickUserUuid_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSKickUserInGame parseFrom(ByteString byteString) {
            return (CSKickUserInGame) PARSER.parseFrom(byteString);
        }

        public static CSKickUserInGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserInGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSKickUserInGame parseFrom(byte[] bArr) {
            return (CSKickUserInGame) PARSER.parseFrom(bArr);
        }

        public static CSKickUserInGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserInGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSKickUserInGame parseFrom(InputStream inputStream) {
            return (CSKickUserInGame) PARSER.parseFrom(inputStream);
        }

        public static CSKickUserInGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserInGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSKickUserInGame parseDelimitedFrom(InputStream inputStream) {
            return (CSKickUserInGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSKickUserInGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserInGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSKickUserInGame parseFrom(CodedInputStream codedInputStream) {
            return (CSKickUserInGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSKickUserInGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSKickUserInGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSKickUserInGame cSKickUserInGame) {
            return newBuilder().mergeFrom(cSKickUserInGame);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLeaveChatRoomOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSLeaveChatRoom extends GeneratedMessage implements CSLeaveChatRoomOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSLeaveChatRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSLeaveChatRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLeaveChatRoom.1 */
        class C11661 extends AbstractParser<CSLeaveChatRoom> {
            C11661() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLeaveChatRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLeaveChatRoomOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bo;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bp.ensureFieldAccessorsInitialized(CSLeaveChatRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLeaveChatRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bo;
            }

            public final CSLeaveChatRoom getDefaultInstanceForType() {
                return CSLeaveChatRoom.getDefaultInstance();
            }

            public final CSLeaveChatRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLeaveChatRoom buildPartial() {
                int i = CSLeaveChatRoom.UUID_FIELD_NUMBER;
                CSLeaveChatRoom cSLeaveChatRoom = new CSLeaveChatRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSLeaveChatRoom.UUID_FIELD_NUMBER) != CSLeaveChatRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLeaveChatRoom.uuid_ = this.uuid_;
                if ((i2 & CSLeaveChatRoom.LROOMID_FIELD_NUMBER) == CSLeaveChatRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSLeaveChatRoom.LROOMID_FIELD_NUMBER;
                }
                cSLeaveChatRoom.lRoomID_ = this.lRoomID_;
                cSLeaveChatRoom.bitField0_ = i;
                onBuilt();
                return cSLeaveChatRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLeaveChatRoom) {
                    return mergeFrom((CSLeaveChatRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLeaveChatRoom cSLeaveChatRoom) {
                if (cSLeaveChatRoom != CSLeaveChatRoom.getDefaultInstance()) {
                    if (cSLeaveChatRoom.hasUuid()) {
                        setUuid(cSLeaveChatRoom.getUuid());
                    }
                    if (cSLeaveChatRoom.hasLRoomID()) {
                        setLRoomID(cSLeaveChatRoom.getLRoomID());
                    }
                    mergeUnknownFields(cSLeaveChatRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLeaveChatRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLeaveChatRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveChatRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveChatRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLeaveChatRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLeaveChatRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSLeaveChatRoom.UUID_FIELD_NUMBER) == CSLeaveChatRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSLeaveChatRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSLeaveChatRoom.LROOMID_FIELD_NUMBER) == CSLeaveChatRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSLeaveChatRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSLeaveChatRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLeaveChatRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLeaveChatRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLeaveChatRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLeaveChatRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bo;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bp.ensureFieldAccessorsInitialized(CSLeaveChatRoom.class, Builder.class);
        }

        static {
            PARSER = new C11661();
            CSLeaveChatRoom cSLeaveChatRoom = new CSLeaveChatRoom(true);
            defaultInstance = cSLeaveChatRoom;
            cSLeaveChatRoom.initFields();
        }

        public final Parser<CSLeaveChatRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLeaveChatRoom parseFrom(ByteString byteString) {
            return (CSLeaveChatRoom) PARSER.parseFrom(byteString);
        }

        public static CSLeaveChatRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveChatRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLeaveChatRoom parseFrom(byte[] bArr) {
            return (CSLeaveChatRoom) PARSER.parseFrom(bArr);
        }

        public static CSLeaveChatRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveChatRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLeaveChatRoom parseFrom(InputStream inputStream) {
            return (CSLeaveChatRoom) PARSER.parseFrom(inputStream);
        }

        public static CSLeaveChatRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveChatRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveChatRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSLeaveChatRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLeaveChatRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveChatRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveChatRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSLeaveChatRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSLeaveChatRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveChatRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLeaveChatRoom cSLeaveChatRoom) {
            return newBuilder().mergeFrom(cSLeaveChatRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLeaveGameRoomOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSLeaveGameRoom extends GeneratedMessage implements CSLeaveGameRoomOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSLeaveGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSLeaveGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLeaveGameRoom.1 */
        class C11671 extends AbstractParser<CSLeaveGameRoom> {
            C11671() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLeaveGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLeaveGameRoomOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dG;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dH.ensureFieldAccessorsInitialized(CSLeaveGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLeaveGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dG;
            }

            public final CSLeaveGameRoom getDefaultInstanceForType() {
                return CSLeaveGameRoom.getDefaultInstance();
            }

            public final CSLeaveGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLeaveGameRoom buildPartial() {
                int i = CSLeaveGameRoom.UUID_FIELD_NUMBER;
                CSLeaveGameRoom cSLeaveGameRoom = new CSLeaveGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSLeaveGameRoom.UUID_FIELD_NUMBER) != CSLeaveGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLeaveGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSLeaveGameRoom.LROOMID_FIELD_NUMBER) == CSLeaveGameRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSLeaveGameRoom.LROOMID_FIELD_NUMBER;
                }
                cSLeaveGameRoom.lRoomID_ = this.lRoomID_;
                cSLeaveGameRoom.bitField0_ = i;
                onBuilt();
                return cSLeaveGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLeaveGameRoom) {
                    return mergeFrom((CSLeaveGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLeaveGameRoom cSLeaveGameRoom) {
                if (cSLeaveGameRoom != CSLeaveGameRoom.getDefaultInstance()) {
                    if (cSLeaveGameRoom.hasUuid()) {
                        setUuid(cSLeaveGameRoom.getUuid());
                    }
                    if (cSLeaveGameRoom.hasLRoomID()) {
                        setLRoomID(cSLeaveGameRoom.getLRoomID());
                    }
                    mergeUnknownFields(cSLeaveGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLeaveGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLeaveGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLeaveGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLeaveGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSLeaveGameRoom.UUID_FIELD_NUMBER) == CSLeaveGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSLeaveGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSLeaveGameRoom.LROOMID_FIELD_NUMBER) == CSLeaveGameRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSLeaveGameRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSLeaveGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLeaveGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLeaveGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLeaveGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLeaveGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dG;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dH.ensureFieldAccessorsInitialized(CSLeaveGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11671();
            CSLeaveGameRoom cSLeaveGameRoom = new CSLeaveGameRoom(true);
            defaultInstance = cSLeaveGameRoom;
            cSLeaveGameRoom.initFields();
        }

        public final Parser<CSLeaveGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLeaveGameRoom parseFrom(ByteString byteString) {
            return (CSLeaveGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSLeaveGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLeaveGameRoom parseFrom(byte[] bArr) {
            return (CSLeaveGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSLeaveGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLeaveGameRoom parseFrom(InputStream inputStream) {
            return (CSLeaveGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSLeaveGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSLeaveGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLeaveGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSLeaveGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSLeaveGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLeaveGameRoom cSLeaveGameRoom) {
            return newBuilder().mergeFrom(cSLeaveGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLeaveSNGGameRoomOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSLeaveSNGGameRoom extends GeneratedMessage implements CSLeaveSNGGameRoomOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSLeaveSNGGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSLeaveSNGGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom.1 */
        class C11681 extends AbstractParser<CSLeaveSNGGameRoom> {
            C11681() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLeaveSNGGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLeaveSNGGameRoomOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cg;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ch.ensureFieldAccessorsInitialized(CSLeaveSNGGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLeaveSNGGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cg;
            }

            public final CSLeaveSNGGameRoom getDefaultInstanceForType() {
                return CSLeaveSNGGameRoom.getDefaultInstance();
            }

            public final CSLeaveSNGGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLeaveSNGGameRoom buildPartial() {
                int i = CSLeaveSNGGameRoom.UUID_FIELD_NUMBER;
                CSLeaveSNGGameRoom cSLeaveSNGGameRoom = new CSLeaveSNGGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSLeaveSNGGameRoom.UUID_FIELD_NUMBER) != CSLeaveSNGGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLeaveSNGGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
                }
                cSLeaveSNGGameRoom.lGameRoomID_ = this.lGameRoomID_;
                cSLeaveSNGGameRoom.bitField0_ = i;
                onBuilt();
                return cSLeaveSNGGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLeaveSNGGameRoom) {
                    return mergeFrom((CSLeaveSNGGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLeaveSNGGameRoom cSLeaveSNGGameRoom) {
                if (cSLeaveSNGGameRoom != CSLeaveSNGGameRoom.getDefaultInstance()) {
                    if (cSLeaveSNGGameRoom.hasUuid()) {
                        setUuid(cSLeaveSNGGameRoom.getUuid());
                    }
                    if (cSLeaveSNGGameRoom.hasLGameRoomID()) {
                        setLGameRoomID(cSLeaveSNGGameRoom.getLGameRoomID());
                    }
                    mergeUnknownFields(cSLeaveSNGGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLeaveSNGGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLeaveSNGGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSLeaveSNGGameRoom.UUID_FIELD_NUMBER) == CSLeaveSNGGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSLeaveSNGGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSLeaveSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSLeaveSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLeaveSNGGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLeaveSNGGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLeaveSNGGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLeaveSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cg;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ch.ensureFieldAccessorsInitialized(CSLeaveSNGGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11681();
            CSLeaveSNGGameRoom cSLeaveSNGGameRoom = new CSLeaveSNGGameRoom(true);
            defaultInstance = cSLeaveSNGGameRoom;
            cSLeaveSNGGameRoom.initFields();
        }

        public final Parser<CSLeaveSNGGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLeaveSNGGameRoom parseFrom(ByteString byteString) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSLeaveSNGGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLeaveSNGGameRoom parseFrom(byte[] bArr) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSLeaveSNGGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLeaveSNGGameRoom parseFrom(InputStream inputStream) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSLeaveSNGGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveSNGGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSLeaveSNGGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLeaveSNGGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveSNGGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLeaveSNGGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSLeaveSNGGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLeaveSNGGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLeaveSNGGameRoom cSLeaveSNGGameRoom) {
            return newBuilder().mergeFrom(cSLeaveSNGGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLoginOrBuilder extends MessageOrBuilder {
        DEVICE_TYPE getEDeviceType();

        LANGUAGE_TYPE getELanguageType();

        String getSCountryCode();

        ByteString getSCountryCodeBytes();

        String getStrID();

        ByteString getStrIDBytes();

        String getStrIosToken();

        ByteString getStrIosTokenBytes();

        String getStrPWD();

        ByteString getStrPWDBytes();

        String getStrPhoneType();

        ByteString getStrPhoneTypeBytes();

        String getStrSSOToken();

        ByteString getStrSSOTokenBytes();

        String getStrScreenSize();

        ByteString getStrScreenSizeBytes();

        String getStrSysVersion();

        ByteString getStrSysVersionBytes();

        boolean hasEDeviceType();

        boolean hasELanguageType();

        boolean hasSCountryCode();

        boolean hasStrID();

        boolean hasStrIosToken();

        boolean hasStrPWD();

        boolean hasStrPhoneType();

        boolean hasStrSSOToken();

        boolean hasStrScreenSize();

        boolean hasStrSysVersion();
    }

    public static final class CSLogin extends GeneratedMessage implements CSLoginOrBuilder {
        public static final int EDEVICETYPE_FIELD_NUMBER = 8;
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 9;
        public static Parser<CSLogin> PARSER = null;
        public static final int SCOUNTRYCODE_FIELD_NUMBER = 10;
        public static final int STRID_FIELD_NUMBER = 1;
        public static final int STRIOSTOKEN_FIELD_NUMBER = 3;
        public static final int STRPHONETYPE_FIELD_NUMBER = 6;
        public static final int STRPWD_FIELD_NUMBER = 2;
        public static final int STRSCREENSIZE_FIELD_NUMBER = 7;
        public static final int STRSSOTOKEN_FIELD_NUMBER = 4;
        public static final int STRSYSVERSION_FIELD_NUMBER = 5;
        private static final CSLogin defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCountryCode_;
        private Object strID_;
        private Object strIosToken_;
        private Object strPWD_;
        private Object strPhoneType_;
        private Object strSSOToken_;
        private Object strScreenSize_;
        private Object strSysVersion_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLogin.1 */
        class C11691 extends AbstractParser<CSLogin> {
            C11691() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLogin(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLoginOrBuilder {
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object sCountryCode_;
            private Object strID_;
            private Object strIosToken_;
            private Object strPWD_;
            private Object strPhoneType_;
            private Object strSSOToken_;
            private Object strScreenSize_;
            private Object strSysVersion_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8259C;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8260D.ensureFieldAccessorsInitialized(CSLogin.class, Builder.class);
            }

            private Builder() {
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPWD_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPWD_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLogin.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -2;
                this.strPWD_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -65;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -129;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -257;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -513;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8259C;
            }

            public final CSLogin getDefaultInstanceForType() {
                return CSLogin.getDefaultInstance();
            }

            public final CSLogin build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLogin buildPartial() {
                int i = CSLogin.STRID_FIELD_NUMBER;
                CSLogin cSLogin = new CSLogin(null);
                int i2 = this.bitField0_;
                if ((i2 & CSLogin.STRID_FIELD_NUMBER) != CSLogin.STRID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLogin.strID_ = this.strID_;
                if ((i2 & CSLogin.STRPWD_FIELD_NUMBER) == CSLogin.STRPWD_FIELD_NUMBER) {
                    i |= CSLogin.STRPWD_FIELD_NUMBER;
                }
                cSLogin.strPWD_ = this.strPWD_;
                if ((i2 & CSLogin.STRSSOTOKEN_FIELD_NUMBER) == CSLogin.STRSSOTOKEN_FIELD_NUMBER) {
                    i |= CSLogin.STRSSOTOKEN_FIELD_NUMBER;
                }
                cSLogin.strIosToken_ = this.strIosToken_;
                if ((i2 & CSLogin.EDEVICETYPE_FIELD_NUMBER) == CSLogin.EDEVICETYPE_FIELD_NUMBER) {
                    i |= CSLogin.EDEVICETYPE_FIELD_NUMBER;
                }
                cSLogin.strSSOToken_ = this.strSSOToken_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSLogin.strSysVersion_ = this.strSysVersion_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSLogin.strPhoneType_ = this.strPhoneType_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSLogin.strScreenSize_ = this.strScreenSize_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSLogin.eDeviceType_ = this.eDeviceType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                cSLogin.eLanguageType_ = this.eLanguageType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                cSLogin.sCountryCode_ = this.sCountryCode_;
                cSLogin.bitField0_ = i;
                onBuilt();
                return cSLogin;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLogin) {
                    return mergeFrom((CSLogin) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLogin cSLogin) {
                if (cSLogin != CSLogin.getDefaultInstance()) {
                    if (cSLogin.hasStrID()) {
                        this.bitField0_ |= CSLogin.STRID_FIELD_NUMBER;
                        this.strID_ = cSLogin.strID_;
                        onChanged();
                    }
                    if (cSLogin.hasStrPWD()) {
                        this.bitField0_ |= CSLogin.STRPWD_FIELD_NUMBER;
                        this.strPWD_ = cSLogin.strPWD_;
                        onChanged();
                    }
                    if (cSLogin.hasStrIosToken()) {
                        this.bitField0_ |= CSLogin.STRSSOTOKEN_FIELD_NUMBER;
                        this.strIosToken_ = cSLogin.strIosToken_;
                        onChanged();
                    }
                    if (cSLogin.hasStrSSOToken()) {
                        this.bitField0_ |= CSLogin.EDEVICETYPE_FIELD_NUMBER;
                        this.strSSOToken_ = cSLogin.strSSOToken_;
                        onChanged();
                    }
                    if (cSLogin.hasStrSysVersion()) {
                        this.bitField0_ |= 16;
                        this.strSysVersion_ = cSLogin.strSysVersion_;
                        onChanged();
                    }
                    if (cSLogin.hasStrPhoneType()) {
                        this.bitField0_ |= 32;
                        this.strPhoneType_ = cSLogin.strPhoneType_;
                        onChanged();
                    }
                    if (cSLogin.hasStrScreenSize()) {
                        this.bitField0_ |= 64;
                        this.strScreenSize_ = cSLogin.strScreenSize_;
                        onChanged();
                    }
                    if (cSLogin.hasEDeviceType()) {
                        setEDeviceType(cSLogin.getEDeviceType());
                    }
                    if (cSLogin.hasELanguageType()) {
                        setELanguageType(cSLogin.getELanguageType());
                    }
                    if (cSLogin.hasSCountryCode()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                        this.sCountryCode_ = cSLogin.sCountryCode_;
                        onChanged();
                    }
                    mergeUnknownFields(cSLogin.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStrID() && hasStrPWD() && hasStrIosToken()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLogin.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLogin.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLogin) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLogin) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLogin.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLogin$Builder");
            }

            public final boolean hasStrID() {
                return (this.bitField0_ & CSLogin.STRID_FIELD_NUMBER) == CSLogin.STRID_FIELD_NUMBER;
            }

            public final String getStrID() {
                Object obj = this.strID_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strID_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIDBytes() {
                Object obj = this.strID_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strID_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrID(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRID_FIELD_NUMBER;
                this.strID_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrID() {
                this.bitField0_ &= -2;
                this.strID_ = CSLogin.getDefaultInstance().getStrID();
                onChanged();
                return this;
            }

            public final Builder setStrIDBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRID_FIELD_NUMBER;
                this.strID_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrPWD() {
                return (this.bitField0_ & CSLogin.STRPWD_FIELD_NUMBER) == CSLogin.STRPWD_FIELD_NUMBER;
            }

            public final String getStrPWD() {
                Object obj = this.strPWD_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPWD_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPWDBytes() {
                Object obj = this.strPWD_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPWD_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPWD(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRPWD_FIELD_NUMBER;
                this.strPWD_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPWD() {
                this.bitField0_ &= -3;
                this.strPWD_ = CSLogin.getDefaultInstance().getStrPWD();
                onChanged();
                return this;
            }

            public final Builder setStrPWDBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRPWD_FIELD_NUMBER;
                this.strPWD_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrIosToken() {
                return (this.bitField0_ & CSLogin.STRSSOTOKEN_FIELD_NUMBER) == CSLogin.STRSSOTOKEN_FIELD_NUMBER;
            }

            public final String getStrIosToken() {
                Object obj = this.strIosToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosTokenBytes() {
                Object obj = this.strIosToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRSSOTOKEN_FIELD_NUMBER;
                this.strIosToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosToken() {
                this.bitField0_ &= -5;
                this.strIosToken_ = CSLogin.getDefaultInstance().getStrIosToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.STRSSOTOKEN_FIELD_NUMBER;
                this.strIosToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSSOToken() {
                return (this.bitField0_ & CSLogin.EDEVICETYPE_FIELD_NUMBER) == CSLogin.EDEVICETYPE_FIELD_NUMBER;
            }

            public final String getStrSSOToken() {
                Object obj = this.strSSOToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSSOToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSSOTokenBytes() {
                Object obj = this.strSSOToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSSOToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSSOToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.EDEVICETYPE_FIELD_NUMBER;
                this.strSSOToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSSOToken() {
                this.bitField0_ &= -9;
                this.strSSOToken_ = CSLogin.getDefaultInstance().getStrSSOToken();
                onChanged();
                return this;
            }

            public final Builder setStrSSOTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLogin.EDEVICETYPE_FIELD_NUMBER;
                this.strSSOToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSysVersion() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getStrSysVersion() {
                Object obj = this.strSysVersion_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSysVersion_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSysVersionBytes() {
                Object obj = this.strSysVersion_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSysVersion_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSysVersion(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strSysVersion_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSysVersion() {
                this.bitField0_ &= -17;
                this.strSysVersion_ = CSLogin.getDefaultInstance().getStrSysVersion();
                onChanged();
                return this;
            }

            public final Builder setStrSysVersionBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strSysVersion_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrPhoneType() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getStrPhoneType() {
                Object obj = this.strPhoneType_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPhoneType_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPhoneTypeBytes() {
                Object obj = this.strPhoneType_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPhoneType_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPhoneType(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strPhoneType_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPhoneType() {
                this.bitField0_ &= -33;
                this.strPhoneType_ = CSLogin.getDefaultInstance().getStrPhoneType();
                onChanged();
                return this;
            }

            public final Builder setStrPhoneTypeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strPhoneType_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrScreenSize() {
                return (this.bitField0_ & 64) == 64;
            }

            public final String getStrScreenSize() {
                Object obj = this.strScreenSize_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strScreenSize_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrScreenSizeBytes() {
                Object obj = this.strScreenSize_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strScreenSize_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrScreenSize(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.strScreenSize_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrScreenSize() {
                this.bitField0_ &= -65;
                this.strScreenSize_ = CSLogin.getDefaultInstance().getStrScreenSize();
                onChanged();
                return this;
            }

            public final Builder setStrScreenSizeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.strScreenSize_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -129;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -257;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }

            public final boolean hasSCountryCode() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final String getSCountryCode() {
                Object obj = this.sCountryCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCountryCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCountryCodeBytes() {
                Object obj = this.sCountryCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCountryCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCountryCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sCountryCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCountryCode() {
                this.bitField0_ &= -513;
                this.sCountryCode_ = CSLogin.getDefaultInstance().getSCountryCode();
                onChanged();
                return this;
            }

            public final Builder setSCountryCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sCountryCode_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLogin(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLogin getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLogin getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLogin(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STRID_FIELD_NUMBER;
                            break;
                        case SCOUNTRYCODE_FIELD_NUMBER /*10*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRID_FIELD_NUMBER;
                            this.strID_ = readBytes;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRPWD_FIELD_NUMBER;
                            this.strPWD_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRSSOTOKEN_FIELD_NUMBER;
                            this.strIosToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= EDEVICETYPE_FIELD_NUMBER;
                            this.strSSOToken_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.strSysVersion_ = readBytes;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.strPhoneType_ = readBytes;
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.strScreenSize_ = readBytes;
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                                this.eDeviceType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf2 = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                                this.eLanguageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.sCountryCode_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STRID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8259C;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8260D.ensureFieldAccessorsInitialized(CSLogin.class, Builder.class);
        }

        static {
            PARSER = new C11691();
            CSLogin cSLogin = new CSLogin(true);
            defaultInstance = cSLogin;
            cSLogin.initFields();
        }

        public final Parser<CSLogin> getParserForType() {
            return PARSER;
        }

        public final boolean hasStrID() {
            return (this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER;
        }

        public final String getStrID() {
            Object obj = this.strID_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strID_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIDBytes() {
            Object obj = this.strID_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strID_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrPWD() {
            return (this.bitField0_ & STRPWD_FIELD_NUMBER) == STRPWD_FIELD_NUMBER;
        }

        public final String getStrPWD() {
            Object obj = this.strPWD_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPWD_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPWDBytes() {
            Object obj = this.strPWD_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPWD_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrIosToken() {
            return (this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER;
        }

        public final String getStrIosToken() {
            Object obj = this.strIosToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosTokenBytes() {
            Object obj = this.strIosToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSSOToken() {
            return (this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER;
        }

        public final String getStrSSOToken() {
            Object obj = this.strSSOToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSSOToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSSOTokenBytes() {
            Object obj = this.strSSOToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSSOToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSysVersion() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getStrSysVersion() {
            Object obj = this.strSysVersion_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSysVersion_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSysVersionBytes() {
            Object obj = this.strSysVersion_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSysVersion_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrPhoneType() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getStrPhoneType() {
            Object obj = this.strPhoneType_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPhoneType_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPhoneTypeBytes() {
            Object obj = this.strPhoneType_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPhoneType_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrScreenSize() {
            return (this.bitField0_ & 64) == 64;
        }

        public final String getStrScreenSize() {
            Object obj = this.strScreenSize_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strScreenSize_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrScreenSizeBytes() {
            Object obj = this.strScreenSize_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strScreenSize_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        public final boolean hasSCountryCode() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final String getSCountryCode() {
            Object obj = this.sCountryCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCountryCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCountryCodeBytes() {
            Object obj = this.sCountryCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCountryCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strPWD_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
            this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStrID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStrPWD()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStrIosToken()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRID_FIELD_NUMBER, getStrIDBytes());
            }
            if ((this.bitField0_ & STRPWD_FIELD_NUMBER) == STRPWD_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRPWD_FIELD_NUMBER, getStrPWDBytes());
            }
            if ((this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeBytes(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER) {
                i = CodedOutputStream.computeBytesSize(STRID_FIELD_NUMBER, getStrIDBytes()) + 0;
            }
            if ((this.bitField0_ & STRPWD_FIELD_NUMBER) == STRPWD_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRPWD_FIELD_NUMBER, getStrPWDBytes());
            }
            if ((this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeBytesSize(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLogin parseFrom(ByteString byteString) {
            return (CSLogin) PARSER.parseFrom(byteString);
        }

        public static CSLogin parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogin) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLogin parseFrom(byte[] bArr) {
            return (CSLogin) PARSER.parseFrom(bArr);
        }

        public static CSLogin parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogin) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLogin parseFrom(InputStream inputStream) {
            return (CSLogin) PARSER.parseFrom(inputStream);
        }

        public static CSLogin parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogin) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLogin parseDelimitedFrom(InputStream inputStream) {
            return (CSLogin) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLogin parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogin) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLogin parseFrom(CodedInputStream codedInputStream) {
            return (CSLogin) PARSER.parseFrom(codedInputStream);
        }

        public static CSLogin parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogin) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLogin cSLogin) {
            return newBuilder().mergeFrom(cSLogin);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLoginThirdPartyOrBuilder extends MessageOrBuilder {
        DEVICE_TYPE getEDeviceType();

        ID_TYPE getEIDType();

        LANGUAGE_TYPE getELanguageType();

        int getIGender();

        String getStrCover();

        ByteString getStrCoverBytes();

        String getStrID();

        ByteString getStrIDBytes();

        String getStrIosToken();

        ByteString getStrIosTokenBytes();

        String getStrNick();

        ByteString getStrNickBytes();

        String getStrPhoneType();

        ByteString getStrPhoneTypeBytes();

        String getStrSSOToken();

        ByteString getStrSSOTokenBytes();

        String getStrScreenSize();

        ByteString getStrScreenSizeBytes();

        String getStrSysVersion();

        ByteString getStrSysVersionBytes();

        boolean hasEDeviceType();

        boolean hasEIDType();

        boolean hasELanguageType();

        boolean hasIGender();

        boolean hasStrCover();

        boolean hasStrID();

        boolean hasStrIosToken();

        boolean hasStrNick();

        boolean hasStrPhoneType();

        boolean hasStrSSOToken();

        boolean hasStrScreenSize();

        boolean hasStrSysVersion();
    }

    public static final class CSLoginThirdParty extends GeneratedMessage implements CSLoginThirdPartyOrBuilder {
        public static final int EDEVICETYPE_FIELD_NUMBER = 3;
        public static final int EIDTYPE_FIELD_NUMBER = 2;
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 12;
        public static final int IGENDER_FIELD_NUMBER = 11;
        public static Parser<CSLoginThirdParty> PARSER = null;
        public static final int STRCOVER_FIELD_NUMBER = 9;
        public static final int STRID_FIELD_NUMBER = 1;
        public static final int STRIOSTOKEN_FIELD_NUMBER = 4;
        public static final int STRNICK_FIELD_NUMBER = 10;
        public static final int STRPHONETYPE_FIELD_NUMBER = 7;
        public static final int STRSCREENSIZE_FIELD_NUMBER = 8;
        public static final int STRSSOTOKEN_FIELD_NUMBER = 5;
        public static final int STRSYSVERSION_FIELD_NUMBER = 6;
        private static final CSLoginThirdParty defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private ID_TYPE eIDType_;
        private LANGUAGE_TYPE eLanguageType_;
        private int iGender_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object strCover_;
        private Object strID_;
        private Object strIosToken_;
        private Object strNick_;
        private Object strPhoneType_;
        private Object strSSOToken_;
        private Object strScreenSize_;
        private Object strSysVersion_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLoginThirdParty.1 */
        class C11701 extends AbstractParser<CSLoginThirdParty> {
            C11701() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLoginThirdParty(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLoginThirdPartyOrBuilder {
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private ID_TYPE eIDType_;
            private LANGUAGE_TYPE eLanguageType_;
            private int iGender_;
            private Object strCover_;
            private Object strID_;
            private Object strIosToken_;
            private Object strNick_;
            private Object strPhoneType_;
            private Object strSSOToken_;
            private Object strScreenSize_;
            private Object strSysVersion_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8263G;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8264H.ensureFieldAccessorsInitialized(CSLoginThirdParty.class, Builder.class);
            }

            private Builder() {
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eIDType_ = ID_TYPE.ID_TYPE_SINAWEIBO;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strCover_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strNick_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eIDType_ = ID_TYPE.ID_TYPE_SINAWEIBO;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strCover_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strNick_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLoginThirdParty.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -2;
                this.eIDType_ = ID_TYPE.ID_TYPE_SINAWEIBO;
                this.bitField0_ &= -3;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -5;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -65;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -129;
                this.strCover_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -257;
                this.strNick_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -513;
                this.iGender_ = 0;
                this.bitField0_ &= -1025;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -2049;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8263G;
            }

            public final CSLoginThirdParty getDefaultInstanceForType() {
                return CSLoginThirdParty.getDefaultInstance();
            }

            public final CSLoginThirdParty build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLoginThirdParty buildPartial() {
                int i = CSLoginThirdParty.STRID_FIELD_NUMBER;
                CSLoginThirdParty cSLoginThirdParty = new CSLoginThirdParty(null);
                int i2 = this.bitField0_;
                if ((i2 & CSLoginThirdParty.STRID_FIELD_NUMBER) != CSLoginThirdParty.STRID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLoginThirdParty.strID_ = this.strID_;
                if ((i2 & CSLoginThirdParty.EIDTYPE_FIELD_NUMBER) == CSLoginThirdParty.EIDTYPE_FIELD_NUMBER) {
                    i |= CSLoginThirdParty.EIDTYPE_FIELD_NUMBER;
                }
                cSLoginThirdParty.eIDType_ = this.eIDType_;
                if ((i2 & CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER) == CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER) {
                    i |= CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER;
                }
                cSLoginThirdParty.eDeviceType_ = this.eDeviceType_;
                if ((i2 & CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER) == CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER) {
                    i |= CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER;
                }
                cSLoginThirdParty.strIosToken_ = this.strIosToken_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSLoginThirdParty.strSSOToken_ = this.strSSOToken_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSLoginThirdParty.strSysVersion_ = this.strSysVersion_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSLoginThirdParty.strPhoneType_ = this.strPhoneType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSLoginThirdParty.strScreenSize_ = this.strScreenSize_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                cSLoginThirdParty.strCover_ = this.strCover_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                cSLoginThirdParty.strNick_ = this.strNick_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                cSLoginThirdParty.iGender_ = this.iGender_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                cSLoginThirdParty.eLanguageType_ = this.eLanguageType_;
                cSLoginThirdParty.bitField0_ = i;
                onBuilt();
                return cSLoginThirdParty;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLoginThirdParty) {
                    return mergeFrom((CSLoginThirdParty) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLoginThirdParty cSLoginThirdParty) {
                if (cSLoginThirdParty != CSLoginThirdParty.getDefaultInstance()) {
                    if (cSLoginThirdParty.hasStrID()) {
                        this.bitField0_ |= CSLoginThirdParty.STRID_FIELD_NUMBER;
                        this.strID_ = cSLoginThirdParty.strID_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasEIDType()) {
                        setEIDType(cSLoginThirdParty.getEIDType());
                    }
                    if (cSLoginThirdParty.hasEDeviceType()) {
                        setEDeviceType(cSLoginThirdParty.getEDeviceType());
                    }
                    if (cSLoginThirdParty.hasStrIosToken()) {
                        this.bitField0_ |= CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER;
                        this.strIosToken_ = cSLoginThirdParty.strIosToken_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrSSOToken()) {
                        this.bitField0_ |= 16;
                        this.strSSOToken_ = cSLoginThirdParty.strSSOToken_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrSysVersion()) {
                        this.bitField0_ |= 32;
                        this.strSysVersion_ = cSLoginThirdParty.strSysVersion_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrPhoneType()) {
                        this.bitField0_ |= 64;
                        this.strPhoneType_ = cSLoginThirdParty.strPhoneType_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrScreenSize()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                        this.strScreenSize_ = cSLoginThirdParty.strScreenSize_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrCover()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                        this.strCover_ = cSLoginThirdParty.strCover_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasStrNick()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                        this.strNick_ = cSLoginThirdParty.strNick_;
                        onChanged();
                    }
                    if (cSLoginThirdParty.hasIGender()) {
                        setIGender(cSLoginThirdParty.getIGender());
                    }
                    if (cSLoginThirdParty.hasELanguageType()) {
                        setELanguageType(cSLoginThirdParty.getELanguageType());
                    }
                    mergeUnknownFields(cSLoginThirdParty.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStrID() && hasEIDType() && hasStrIosToken()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLoginThirdParty.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLoginThirdParty.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLoginThirdParty) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLoginThirdParty) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLoginThirdParty.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLoginThirdParty$Builder");
            }

            public final boolean hasStrID() {
                return (this.bitField0_ & CSLoginThirdParty.STRID_FIELD_NUMBER) == CSLoginThirdParty.STRID_FIELD_NUMBER;
            }

            public final String getStrID() {
                Object obj = this.strID_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strID_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIDBytes() {
                Object obj = this.strID_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strID_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrID(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.STRID_FIELD_NUMBER;
                this.strID_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrID() {
                this.bitField0_ &= -2;
                this.strID_ = CSLoginThirdParty.getDefaultInstance().getStrID();
                onChanged();
                return this;
            }

            public final Builder setStrIDBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.STRID_FIELD_NUMBER;
                this.strID_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEIDType() {
                return (this.bitField0_ & CSLoginThirdParty.EIDTYPE_FIELD_NUMBER) == CSLoginThirdParty.EIDTYPE_FIELD_NUMBER;
            }

            public final ID_TYPE getEIDType() {
                return this.eIDType_;
            }

            public final Builder setEIDType(ID_TYPE id_type) {
                if (id_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.EIDTYPE_FIELD_NUMBER;
                this.eIDType_ = id_type;
                onChanged();
                return this;
            }

            public final Builder clearEIDType() {
                this.bitField0_ &= -3;
                this.eIDType_ = ID_TYPE.ID_TYPE_SINAWEIBO;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER) == CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.STRIOSTOKEN_FIELD_NUMBER;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -5;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasStrIosToken() {
                return (this.bitField0_ & CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER) == CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER;
            }

            public final String getStrIosToken() {
                Object obj = this.strIosToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosTokenBytes() {
                Object obj = this.strIosToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER;
                this.strIosToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosToken() {
                this.bitField0_ &= -9;
                this.strIosToken_ = CSLoginThirdParty.getDefaultInstance().getStrIosToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSLoginThirdParty.STRSCREENSIZE_FIELD_NUMBER;
                this.strIosToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSSOToken() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getStrSSOToken() {
                Object obj = this.strSSOToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSSOToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSSOTokenBytes() {
                Object obj = this.strSSOToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSSOToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSSOToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strSSOToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSSOToken() {
                this.bitField0_ &= -17;
                this.strSSOToken_ = CSLoginThirdParty.getDefaultInstance().getStrSSOToken();
                onChanged();
                return this;
            }

            public final Builder setStrSSOTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strSSOToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSysVersion() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getStrSysVersion() {
                Object obj = this.strSysVersion_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSysVersion_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSysVersionBytes() {
                Object obj = this.strSysVersion_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSysVersion_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSysVersion(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strSysVersion_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSysVersion() {
                this.bitField0_ &= -33;
                this.strSysVersion_ = CSLoginThirdParty.getDefaultInstance().getStrSysVersion();
                onChanged();
                return this;
            }

            public final Builder setStrSysVersionBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strSysVersion_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrPhoneType() {
                return (this.bitField0_ & 64) == 64;
            }

            public final String getStrPhoneType() {
                Object obj = this.strPhoneType_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPhoneType_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPhoneTypeBytes() {
                Object obj = this.strPhoneType_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPhoneType_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPhoneType(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.strPhoneType_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPhoneType() {
                this.bitField0_ &= -65;
                this.strPhoneType_ = CSLoginThirdParty.getDefaultInstance().getStrPhoneType();
                onChanged();
                return this;
            }

            public final Builder setStrPhoneTypeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.strPhoneType_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrScreenSize() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final String getStrScreenSize() {
                Object obj = this.strScreenSize_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strScreenSize_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrScreenSizeBytes() {
                Object obj = this.strScreenSize_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strScreenSize_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrScreenSize(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.strScreenSize_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrScreenSize() {
                this.bitField0_ &= -129;
                this.strScreenSize_ = CSLoginThirdParty.getDefaultInstance().getStrScreenSize();
                onChanged();
                return this;
            }

            public final Builder setStrScreenSizeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.strScreenSize_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrCover() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final String getStrCover() {
                Object obj = this.strCover_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strCover_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrCoverBytes() {
                Object obj = this.strCover_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strCover_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrCover(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.strCover_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrCover() {
                this.bitField0_ &= -257;
                this.strCover_ = CSLoginThirdParty.getDefaultInstance().getStrCover();
                onChanged();
                return this;
            }

            public final Builder setStrCoverBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.strCover_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrNick() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final String getStrNick() {
                Object obj = this.strNick_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strNick_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrNickBytes() {
                Object obj = this.strNick_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strNick_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrNick(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.strNick_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrNick() {
                this.bitField0_ &= -513;
                this.strNick_ = CSLoginThirdParty.getDefaultInstance().getStrNick();
                onChanged();
                return this;
            }

            public final Builder setStrNickBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.strNick_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasIGender() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final int getIGender() {
                return this.iGender_;
            }

            public final Builder setIGender(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.iGender_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIGender() {
                this.bitField0_ &= -1025;
                this.iGender_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -2049;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }
        }

        private CSLoginThirdParty(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLoginThirdParty(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLoginThirdParty getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLoginThirdParty getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLoginThirdParty(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STRID_FIELD_NUMBER;
                            break;
                        case STRNICK_FIELD_NUMBER /*10*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRID_FIELD_NUMBER;
                            this.strID_ = readBytes;
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            ID_TYPE valueOf = ID_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EIDTYPE_FIELD_NUMBER;
                                this.eIDType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EIDTYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf2 = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= STRIOSTOKEN_FIELD_NUMBER;
                                this.eDeviceType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRSCREENSIZE_FIELD_NUMBER;
                            this.strIosToken_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.strSSOToken_ = readBytes;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.strSysVersion_ = readBytes;
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.strPhoneType_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.strScreenSize_ = readBytes;
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.strCover_ = readBytes;
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.strNick_ = readBytes;
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.iGender_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf3 = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf3 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                                this.eLanguageType_ = valueOf3;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STRID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8263G;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8264H.ensureFieldAccessorsInitialized(CSLoginThirdParty.class, Builder.class);
        }

        static {
            PARSER = new C11701();
            CSLoginThirdParty cSLoginThirdParty = new CSLoginThirdParty(true);
            defaultInstance = cSLoginThirdParty;
            cSLoginThirdParty.initFields();
        }

        public final Parser<CSLoginThirdParty> getParserForType() {
            return PARSER;
        }

        public final boolean hasStrID() {
            return (this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER;
        }

        public final String getStrID() {
            Object obj = this.strID_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strID_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIDBytes() {
            Object obj = this.strID_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strID_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEIDType() {
            return (this.bitField0_ & EIDTYPE_FIELD_NUMBER) == EIDTYPE_FIELD_NUMBER;
        }

        public final ID_TYPE getEIDType() {
            return this.eIDType_;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasStrIosToken() {
            return (this.bitField0_ & STRSCREENSIZE_FIELD_NUMBER) == STRSCREENSIZE_FIELD_NUMBER;
        }

        public final String getStrIosToken() {
            Object obj = this.strIosToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosTokenBytes() {
            Object obj = this.strIosToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSSOToken() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getStrSSOToken() {
            Object obj = this.strSSOToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSSOToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSSOTokenBytes() {
            Object obj = this.strSSOToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSSOToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSysVersion() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getStrSysVersion() {
            Object obj = this.strSysVersion_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSysVersion_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSysVersionBytes() {
            Object obj = this.strSysVersion_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSysVersion_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrPhoneType() {
            return (this.bitField0_ & 64) == 64;
        }

        public final String getStrPhoneType() {
            Object obj = this.strPhoneType_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPhoneType_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPhoneTypeBytes() {
            Object obj = this.strPhoneType_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPhoneType_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrScreenSize() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final String getStrScreenSize() {
            Object obj = this.strScreenSize_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strScreenSize_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrScreenSizeBytes() {
            Object obj = this.strScreenSize_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strScreenSize_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrCover() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final String getStrCover() {
            Object obj = this.strCover_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strCover_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrCoverBytes() {
            Object obj = this.strCover_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strCover_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrNick() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final String getStrNick() {
            Object obj = this.strNick_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strNick_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrNickBytes() {
            Object obj = this.strNick_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strNick_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasIGender() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final int getIGender() {
            return this.iGender_;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        private void initFields() {
            this.strID_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eIDType_ = ID_TYPE.ID_TYPE_SINAWEIBO;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strCover_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strNick_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.iGender_ = 0;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStrID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEIDType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStrIosToken()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRID_FIELD_NUMBER, getStrIDBytes());
            }
            if ((this.bitField0_ & EIDTYPE_FIELD_NUMBER) == EIDTYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EIDTYPE_FIELD_NUMBER, this.eIDType_.getNumber());
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & STRSCREENSIZE_FIELD_NUMBER) == STRSCREENSIZE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeBytes(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeBytes(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(STRCOVER_FIELD_NUMBER, getStrCoverBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(STRNICK_FIELD_NUMBER, getStrNickBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt32(IGENDER_FIELD_NUMBER, this.iGender_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STRID_FIELD_NUMBER) == STRID_FIELD_NUMBER) {
                i = CodedOutputStream.computeBytesSize(STRID_FIELD_NUMBER, getStrIDBytes()) + 0;
            }
            if ((this.bitField0_ & EIDTYPE_FIELD_NUMBER) == EIDTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EIDTYPE_FIELD_NUMBER, this.eIDType_.getNumber());
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & STRSCREENSIZE_FIELD_NUMBER) == STRSCREENSIZE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeBytesSize(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeBytesSize(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(STRCOVER_FIELD_NUMBER, getStrCoverBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(STRNICK_FIELD_NUMBER, getStrNickBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(IGENDER_FIELD_NUMBER, this.iGender_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLoginThirdParty parseFrom(ByteString byteString) {
            return (CSLoginThirdParty) PARSER.parseFrom(byteString);
        }

        public static CSLoginThirdParty parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLoginThirdParty) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLoginThirdParty parseFrom(byte[] bArr) {
            return (CSLoginThirdParty) PARSER.parseFrom(bArr);
        }

        public static CSLoginThirdParty parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLoginThirdParty) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLoginThirdParty parseFrom(InputStream inputStream) {
            return (CSLoginThirdParty) PARSER.parseFrom(inputStream);
        }

        public static CSLoginThirdParty parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLoginThirdParty) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLoginThirdParty parseDelimitedFrom(InputStream inputStream) {
            return (CSLoginThirdParty) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLoginThirdParty parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLoginThirdParty) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLoginThirdParty parseFrom(CodedInputStream codedInputStream) {
            return (CSLoginThirdParty) PARSER.parseFrom(codedInputStream);
        }

        public static CSLoginThirdParty parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLoginThirdParty) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLoginThirdParty cSLoginThirdParty) {
            return newBuilder().mergeFrom(cSLoginThirdParty);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSLogoutOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSLogout extends GeneratedMessage implements CSLogoutOrBuilder {
        public static Parser<CSLogout> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSLogout defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSLogout.1 */
        class C11711 extends AbstractParser<CSLogout> {
            C11711() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSLogout(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSLogoutOrBuilder {
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.as;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.at.ensureFieldAccessorsInitialized(CSLogout.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSLogout.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.as;
            }

            public final CSLogout getDefaultInstanceForType() {
                return CSLogout.getDefaultInstance();
            }

            public final CSLogout build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSLogout buildPartial() {
                int i = CSLogout.UUID_FIELD_NUMBER;
                CSLogout cSLogout = new CSLogout(null);
                if ((this.bitField0_ & CSLogout.UUID_FIELD_NUMBER) != CSLogout.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSLogout.uuid_ = this.uuid_;
                cSLogout.bitField0_ = i;
                onBuilt();
                return cSLogout;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSLogout) {
                    return mergeFrom((CSLogout) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSLogout cSLogout) {
                if (cSLogout != CSLogout.getDefaultInstance()) {
                    if (cSLogout.hasUuid()) {
                        setUuid(cSLogout.getUuid());
                    }
                    mergeUnknownFields(cSLogout.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSLogout.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSLogout.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSLogout) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSLogout) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSLogout.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSLogout$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSLogout.UUID_FIELD_NUMBER) == CSLogout.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSLogout.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSLogout(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSLogout(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSLogout getDefaultInstance() {
            return defaultInstance;
        }

        public final CSLogout getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSLogout(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.as;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.at.ensureFieldAccessorsInitialized(CSLogout.class, Builder.class);
        }

        static {
            PARSER = new C11711();
            CSLogout cSLogout = new CSLogout(true);
            defaultInstance = cSLogout;
            cSLogout.initFields();
        }

        public final Parser<CSLogout> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSLogout parseFrom(ByteString byteString) {
            return (CSLogout) PARSER.parseFrom(byteString);
        }

        public static CSLogout parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogout) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSLogout parseFrom(byte[] bArr) {
            return (CSLogout) PARSER.parseFrom(bArr);
        }

        public static CSLogout parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogout) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSLogout parseFrom(InputStream inputStream) {
            return (CSLogout) PARSER.parseFrom(inputStream);
        }

        public static CSLogout parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogout) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSLogout parseDelimitedFrom(InputStream inputStream) {
            return (CSLogout) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSLogout parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogout) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSLogout parseFrom(CodedInputStream codedInputStream) {
            return (CSLogout) PARSER.parseFrom(codedInputStream);
        }

        public static CSLogout parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSLogout) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSLogout cSLogout) {
            return newBuilder().mergeFrom(cSLogout);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSPauseGameOrBuilder extends MessageOrBuilder {
        int getBPauseGame();

        long getLGameRoomID();

        long getUuid();

        boolean hasBPauseGame();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSPauseGame extends GeneratedMessage implements CSPauseGameOrBuilder {
        public static final int BPAUSEGAME_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSPauseGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSPauseGame defaultInstance;
        private static final long serialVersionUID = 0;
        private int bPauseGame_;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSPauseGame.1 */
        class C11721 extends AbstractParser<CSPauseGame> {
            C11721() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSPauseGame(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSPauseGameOrBuilder {
            private int bPauseGame_;
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, ServiceOptions.UNINTERPRETED_OPTION_FIELD_NUMBER, PointerIconCompat.TYPE_DEFAULT, AidTask.WHAT_LOAD_AID_SUC, AidTask.WHAT_LOAD_AID_ERR, PointerIconCompat.TYPE_HELP, PointerIconCompat.TYPE_WAIT, 1005, PointerIconCompat.TYPE_CELL, PointerIconCompat.TYPE_CROSSHAIR});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6136build();

            public final native CSPauseGame m6137build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6138buildPartial();

            public final native CSPauseGame m6139buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6140clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6141clear();

            public final native Builder m6142clear();

            public final native Builder clearBPauseGame();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6143clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6144clone();

            public final native Builder m6145clone();

            public final native int getBPauseGame();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6146getDefaultInstanceForType();

            public final native CSPauseGame m6147getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasBPauseGame();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6148mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6149mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6150mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6151mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6152mergeFrom(Message message);

            public final native Builder mergeFrom(CSPauseGame cSPauseGame);

            public final native Builder setBPauseGame(int i);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.cM;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSPauseGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSPauseGame(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSPauseGame getDefaultInstance() {
            return defaultInstance;
        }

        public final CSPauseGame getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSPauseGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.bPauseGame_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cM;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cN.ensureFieldAccessorsInitialized(CSPauseGame.class, Builder.class);
        }

        static {
            PARSER = new C11721();
            CSPauseGame cSPauseGame = new CSPauseGame(true);
            defaultInstance = cSPauseGame;
            cSPauseGame.initFields();
        }

        public final Parser<CSPauseGame> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasBPauseGame() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getBPauseGame() {
            return this.bPauseGame_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.bPauseGame_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasBPauseGame()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(BPAUSEGAME_FIELD_NUMBER, this.bPauseGame_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(BPAUSEGAME_FIELD_NUMBER, this.bPauseGame_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSPauseGame parseFrom(ByteString byteString) {
            return (CSPauseGame) PARSER.parseFrom(byteString);
        }

        public static CSPauseGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPauseGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSPauseGame parseFrom(byte[] bArr) {
            return (CSPauseGame) PARSER.parseFrom(bArr);
        }

        public static CSPauseGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPauseGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSPauseGame parseFrom(InputStream inputStream) {
            return (CSPauseGame) PARSER.parseFrom(inputStream);
        }

        public static CSPauseGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPauseGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSPauseGame parseDelimitedFrom(InputStream inputStream) {
            return (CSPauseGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSPauseGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPauseGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSPauseGame parseFrom(CodedInputStream codedInputStream) {
            return (CSPauseGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSPauseGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPauseGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSPauseGame cSPauseGame) {
            return newBuilder().mergeFrom(cSPauseGame);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSPushMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSPushMsgRsp extends GeneratedMessage implements CSPushMsgRspOrBuilder {
        public static Parser<CSPushMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSPushMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSPushMsgRsp.1 */
        class C11731 extends AbstractParser<CSPushMsgRsp> {
            static {
                fixHelper.fixfunc(new int[]{2552, 2553});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11731();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSPushMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            static {
                fixHelper.fixfunc(new int[]{709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVMsgIdsIsMutable();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVMsgIds(Iterable<? extends Long> iterable);

            public final native Builder addVMsgIds(long j);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6153build();

            public final native CSPushMsgRsp m6154build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6155buildPartial();

            public final native CSPushMsgRsp m6156buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6157clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6158clear();

            public final native Builder m6159clear();

            public final native Builder clearUuid();

            public final native Builder clearVMsgIds();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6160clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6161clone();

            public final native Builder m6162clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6163getDefaultInstanceForType();

            public final native CSPushMsgRsp m6164getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getUuid();

            public final native long getVMsgIds(int i);

            public final native int getVMsgIdsCount();

            public final native List<Long> getVMsgIdsList();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6165mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6166mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6167mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6168mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6169mergeFrom(Message message);

            public final native Builder mergeFrom(CSPushMsgRsp cSPushMsgRsp);

            public final native Builder setUuid(long j);

            public final native Builder setVMsgIds(int i, long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.eW;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSPushMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSPushMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSPushMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSPushMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSPushMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eW;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eX.ensureFieldAccessorsInitialized(CSPushMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C11731();
            CSPushMsgRsp cSPushMsgRsp = new CSPushMsgRsp(true);
            defaultInstance = cSPushMsgRsp;
            cSPushMsgRsp.initFields();
        }

        public final Parser<CSPushMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSPushMsgRsp parseFrom(ByteString byteString) {
            return (CSPushMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSPushMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPushMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSPushMsgRsp parseFrom(byte[] bArr) {
            return (CSPushMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSPushMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPushMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSPushMsgRsp parseFrom(InputStream inputStream) {
            return (CSPushMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSPushMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPushMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSPushMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSPushMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSPushMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPushMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSPushMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSPushMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSPushMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSPushMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSPushMsgRsp cSPushMsgRsp) {
            return newBuilder().mergeFrom(cSPushMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSQuickLoginOrBuilder extends MessageOrBuilder {
        DEVICE_TYPE getEDeviceType();

        LANGUAGE_TYPE getELanguageType();

        String getStrIosToken();

        ByteString getStrIosTokenBytes();

        String getStrPhoneType();

        ByteString getStrPhoneTypeBytes();

        String getStrSSOToken();

        ByteString getStrSSOTokenBytes();

        String getStrScreenSize();

        ByteString getStrScreenSizeBytes();

        String getStrSysVersion();

        ByteString getStrSysVersionBytes();

        long getUuid();

        boolean hasEDeviceType();

        boolean hasELanguageType();

        boolean hasStrIosToken();

        boolean hasStrPhoneType();

        boolean hasStrSSOToken();

        boolean hasStrScreenSize();

        boolean hasStrSysVersion();

        boolean hasUuid();
    }

    public static final class CSQuickLogin extends GeneratedMessage implements CSQuickLoginOrBuilder {
        public static final int EDEVICETYPE_FIELD_NUMBER = 7;
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 8;
        public static Parser<CSQuickLogin> PARSER = null;
        public static final int STRIOSTOKEN_FIELD_NUMBER = 2;
        public static final int STRPHONETYPE_FIELD_NUMBER = 5;
        public static final int STRSCREENSIZE_FIELD_NUMBER = 6;
        public static final int STRSSOTOKEN_FIELD_NUMBER = 3;
        public static final int STRSYSVERSION_FIELD_NUMBER = 4;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSQuickLogin defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object strIosToken_;
        private Object strPhoneType_;
        private Object strSSOToken_;
        private Object strScreenSize_;
        private Object strSysVersion_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSQuickLogin.1 */
        class C11741 extends AbstractParser<CSQuickLogin> {
            C11741() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSQuickLogin(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSQuickLoginOrBuilder {
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object strIosToken_;
            private Object strPhoneType_;
            private Object strSSOToken_;
            private Object strScreenSize_;
            private Object strSysVersion_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8267K;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8268L.ensureFieldAccessorsInitialized(CSQuickLogin.class, Builder.class);
            }

            private Builder() {
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSQuickLogin.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -65;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8267K;
            }

            public final CSQuickLogin getDefaultInstanceForType() {
                return CSQuickLogin.getDefaultInstance();
            }

            public final CSQuickLogin build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSQuickLogin buildPartial() {
                int i = CSQuickLogin.UUID_FIELD_NUMBER;
                CSQuickLogin cSQuickLogin = new CSQuickLogin(null);
                int i2 = this.bitField0_;
                if ((i2 & CSQuickLogin.UUID_FIELD_NUMBER) != CSQuickLogin.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSQuickLogin.uuid_ = this.uuid_;
                if ((i2 & CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER) == CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER) {
                    i |= CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER;
                }
                cSQuickLogin.strIosToken_ = this.strIosToken_;
                if ((i2 & CSQuickLogin.STRSYSVERSION_FIELD_NUMBER) == CSQuickLogin.STRSYSVERSION_FIELD_NUMBER) {
                    i |= CSQuickLogin.STRSYSVERSION_FIELD_NUMBER;
                }
                cSQuickLogin.strSSOToken_ = this.strSSOToken_;
                if ((i2 & CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER) == CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER) {
                    i |= CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER;
                }
                cSQuickLogin.strSysVersion_ = this.strSysVersion_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSQuickLogin.strPhoneType_ = this.strPhoneType_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSQuickLogin.strScreenSize_ = this.strScreenSize_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSQuickLogin.eDeviceType_ = this.eDeviceType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSQuickLogin.eLanguageType_ = this.eLanguageType_;
                cSQuickLogin.bitField0_ = i;
                onBuilt();
                return cSQuickLogin;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSQuickLogin) {
                    return mergeFrom((CSQuickLogin) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSQuickLogin cSQuickLogin) {
                if (cSQuickLogin != CSQuickLogin.getDefaultInstance()) {
                    if (cSQuickLogin.hasUuid()) {
                        setUuid(cSQuickLogin.getUuid());
                    }
                    if (cSQuickLogin.hasStrIosToken()) {
                        this.bitField0_ |= CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER;
                        this.strIosToken_ = cSQuickLogin.strIosToken_;
                        onChanged();
                    }
                    if (cSQuickLogin.hasStrSSOToken()) {
                        this.bitField0_ |= CSQuickLogin.STRSYSVERSION_FIELD_NUMBER;
                        this.strSSOToken_ = cSQuickLogin.strSSOToken_;
                        onChanged();
                    }
                    if (cSQuickLogin.hasStrSysVersion()) {
                        this.bitField0_ |= CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER;
                        this.strSysVersion_ = cSQuickLogin.strSysVersion_;
                        onChanged();
                    }
                    if (cSQuickLogin.hasStrPhoneType()) {
                        this.bitField0_ |= 16;
                        this.strPhoneType_ = cSQuickLogin.strPhoneType_;
                        onChanged();
                    }
                    if (cSQuickLogin.hasStrScreenSize()) {
                        this.bitField0_ |= 32;
                        this.strScreenSize_ = cSQuickLogin.strScreenSize_;
                        onChanged();
                    }
                    if (cSQuickLogin.hasEDeviceType()) {
                        setEDeviceType(cSQuickLogin.getEDeviceType());
                    }
                    if (cSQuickLogin.hasELanguageType()) {
                        setELanguageType(cSQuickLogin.getELanguageType());
                    }
                    mergeUnknownFields(cSQuickLogin.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasStrIosToken()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSQuickLogin.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSQuickLogin.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSQuickLogin) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSQuickLogin) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSQuickLogin.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSQuickLogin$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSQuickLogin.UUID_FIELD_NUMBER) == CSQuickLogin.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSQuickLogin.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrIosToken() {
                return (this.bitField0_ & CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER) == CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER;
            }

            public final String getStrIosToken() {
                Object obj = this.strIosToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosTokenBytes() {
                Object obj = this.strIosToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER;
                this.strIosToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosToken() {
                this.bitField0_ &= -3;
                this.strIosToken_ = CSQuickLogin.getDefaultInstance().getStrIosToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.STRIOSTOKEN_FIELD_NUMBER;
                this.strIosToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSSOToken() {
                return (this.bitField0_ & CSQuickLogin.STRSYSVERSION_FIELD_NUMBER) == CSQuickLogin.STRSYSVERSION_FIELD_NUMBER;
            }

            public final String getStrSSOToken() {
                Object obj = this.strSSOToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSSOToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSSOTokenBytes() {
                Object obj = this.strSSOToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSSOToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSSOToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.STRSYSVERSION_FIELD_NUMBER;
                this.strSSOToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSSOToken() {
                this.bitField0_ &= -5;
                this.strSSOToken_ = CSQuickLogin.getDefaultInstance().getStrSSOToken();
                onChanged();
                return this;
            }

            public final Builder setStrSSOTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.STRSYSVERSION_FIELD_NUMBER;
                this.strSSOToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSysVersion() {
                return (this.bitField0_ & CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER) == CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER;
            }

            public final String getStrSysVersion() {
                Object obj = this.strSysVersion_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSysVersion_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSysVersionBytes() {
                Object obj = this.strSysVersion_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSysVersion_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSysVersion(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER;
                this.strSysVersion_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSysVersion() {
                this.bitField0_ &= -9;
                this.strSysVersion_ = CSQuickLogin.getDefaultInstance().getStrSysVersion();
                onChanged();
                return this;
            }

            public final Builder setStrSysVersionBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSQuickLogin.ELANGUAGETYPE_FIELD_NUMBER;
                this.strSysVersion_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrPhoneType() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getStrPhoneType() {
                Object obj = this.strPhoneType_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPhoneType_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPhoneTypeBytes() {
                Object obj = this.strPhoneType_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPhoneType_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPhoneType(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strPhoneType_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPhoneType() {
                this.bitField0_ &= -17;
                this.strPhoneType_ = CSQuickLogin.getDefaultInstance().getStrPhoneType();
                onChanged();
                return this;
            }

            public final Builder setStrPhoneTypeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strPhoneType_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrScreenSize() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getStrScreenSize() {
                Object obj = this.strScreenSize_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strScreenSize_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrScreenSizeBytes() {
                Object obj = this.strScreenSize_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strScreenSize_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrScreenSize(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strScreenSize_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrScreenSize() {
                this.bitField0_ &= -33;
                this.strScreenSize_ = CSQuickLogin.getDefaultInstance().getStrScreenSize();
                onChanged();
                return this;
            }

            public final Builder setStrScreenSizeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strScreenSize_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & 64) == 64;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -65;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -129;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }
        }

        private CSQuickLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSQuickLogin(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSQuickLogin getDefaultInstance() {
            return defaultInstance;
        }

        public final CSQuickLogin getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSQuickLogin(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case ELANGUAGETYPE_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRIOSTOKEN_FIELD_NUMBER;
                            this.strIosToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRSYSVERSION_FIELD_NUMBER;
                            this.strSSOToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= ELANGUAGETYPE_FIELD_NUMBER;
                            this.strSysVersion_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.strPhoneType_ = readBytes;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.strScreenSize_ = readBytes;
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 64;
                                this.eDeviceType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf2 = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                                this.eLanguageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8267K;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8268L.ensureFieldAccessorsInitialized(CSQuickLogin.class, Builder.class);
        }

        static {
            PARSER = new C11741();
            CSQuickLogin cSQuickLogin = new CSQuickLogin(true);
            defaultInstance = cSQuickLogin;
            cSQuickLogin.initFields();
        }

        public final Parser<CSQuickLogin> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasStrIosToken() {
            return (this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER;
        }

        public final String getStrIosToken() {
            Object obj = this.strIosToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosTokenBytes() {
            Object obj = this.strIosToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSSOToken() {
            return (this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER;
        }

        public final String getStrSSOToken() {
            Object obj = this.strSSOToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSSOToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSSOTokenBytes() {
            Object obj = this.strSSOToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSSOToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSysVersion() {
            return (this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER;
        }

        public final String getStrSysVersion() {
            Object obj = this.strSysVersion_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSysVersion_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSysVersionBytes() {
            Object obj = this.strSysVersion_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSysVersion_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrPhoneType() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getStrPhoneType() {
            Object obj = this.strPhoneType_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPhoneType_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPhoneTypeBytes() {
            Object obj = this.strPhoneType_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPhoneType_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrScreenSize() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getStrScreenSize() {
            Object obj = this.strScreenSize_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strScreenSize_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrScreenSizeBytes() {
            Object obj = this.strScreenSize_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strScreenSize_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & 64) == 64;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStrIosToken()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSQuickLogin parseFrom(ByteString byteString) {
            return (CSQuickLogin) PARSER.parseFrom(byteString);
        }

        public static CSQuickLogin parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuickLogin) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSQuickLogin parseFrom(byte[] bArr) {
            return (CSQuickLogin) PARSER.parseFrom(bArr);
        }

        public static CSQuickLogin parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuickLogin) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSQuickLogin parseFrom(InputStream inputStream) {
            return (CSQuickLogin) PARSER.parseFrom(inputStream);
        }

        public static CSQuickLogin parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuickLogin) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSQuickLogin parseDelimitedFrom(InputStream inputStream) {
            return (CSQuickLogin) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSQuickLogin parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuickLogin) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSQuickLogin parseFrom(CodedInputStream codedInputStream) {
            return (CSQuickLogin) PARSER.parseFrom(codedInputStream);
        }

        public static CSQuickLogin parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuickLogin) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSQuickLogin cSQuickLogin) {
            return newBuilder().mergeFrom(cSQuickLogin);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSQuitQuickGameRoomOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSQuitQuickGameRoom extends GeneratedMessage implements CSQuitQuickGameRoomOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSQuitQuickGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSQuitQuickGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom.1 */
        class C11751 extends AbstractParser<CSQuitQuickGameRoom> {
            C11751() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSQuitQuickGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSQuitQuickGameRoomOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ek;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.el.ensureFieldAccessorsInitialized(CSQuitQuickGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSQuitQuickGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ek;
            }

            public final CSQuitQuickGameRoom getDefaultInstanceForType() {
                return CSQuitQuickGameRoom.getDefaultInstance();
            }

            public final CSQuitQuickGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSQuitQuickGameRoom buildPartial() {
                int i = CSQuitQuickGameRoom.UUID_FIELD_NUMBER;
                CSQuitQuickGameRoom cSQuitQuickGameRoom = new CSQuitQuickGameRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSQuitQuickGameRoom.UUID_FIELD_NUMBER) != CSQuitQuickGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSQuitQuickGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER) == CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER;
                }
                cSQuitQuickGameRoom.lRoomID_ = this.lRoomID_;
                cSQuitQuickGameRoom.bitField0_ = i;
                onBuilt();
                return cSQuitQuickGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSQuitQuickGameRoom) {
                    return mergeFrom((CSQuitQuickGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSQuitQuickGameRoom cSQuitQuickGameRoom) {
                if (cSQuitQuickGameRoom != CSQuitQuickGameRoom.getDefaultInstance()) {
                    if (cSQuitQuickGameRoom.hasUuid()) {
                        setUuid(cSQuitQuickGameRoom.getUuid());
                    }
                    if (cSQuitQuickGameRoom.hasLRoomID()) {
                        setLRoomID(cSQuitQuickGameRoom.getLRoomID());
                    }
                    mergeUnknownFields(cSQuitQuickGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSQuitQuickGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSQuitQuickGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSQuitQuickGameRoom.UUID_FIELD_NUMBER) == CSQuitQuickGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSQuitQuickGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER) == CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSQuitQuickGameRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSQuitQuickGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSQuitQuickGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSQuitQuickGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSQuitQuickGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSQuitQuickGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ek;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.el.ensureFieldAccessorsInitialized(CSQuitQuickGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C11751();
            CSQuitQuickGameRoom cSQuitQuickGameRoom = new CSQuitQuickGameRoom(true);
            defaultInstance = cSQuitQuickGameRoom;
            cSQuitQuickGameRoom.initFields();
        }

        public final Parser<CSQuitQuickGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSQuitQuickGameRoom parseFrom(ByteString byteString) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSQuitQuickGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSQuitQuickGameRoom parseFrom(byte[] bArr) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSQuitQuickGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSQuitQuickGameRoom parseFrom(InputStream inputStream) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSQuitQuickGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSQuitQuickGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSQuitQuickGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSQuitQuickGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuitQuickGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSQuitQuickGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSQuitQuickGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSQuitQuickGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSQuitQuickGameRoom cSQuitQuickGameRoom) {
            return newBuilder().mergeFrom(cSQuitQuickGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSReconnectOrBuilder extends MessageOrBuilder {
        DEVICE_TYPE getEDeviceType();

        LANGUAGE_TYPE getELanguageType();

        String getSAccessToken();

        ByteString getSAccessTokenBytes();

        String getStrIosToken();

        ByteString getStrIosTokenBytes();

        String getStrPhoneType();

        ByteString getStrPhoneTypeBytes();

        String getStrSSOToken();

        ByteString getStrSSOTokenBytes();

        String getStrScreenSize();

        ByteString getStrScreenSizeBytes();

        String getStrSysVersion();

        ByteString getStrSysVersionBytes();

        long getUuid();

        boolean hasEDeviceType();

        boolean hasELanguageType();

        boolean hasSAccessToken();

        boolean hasStrIosToken();

        boolean hasStrPhoneType();

        boolean hasStrSSOToken();

        boolean hasStrScreenSize();

        boolean hasStrSysVersion();

        boolean hasUuid();
    }

    public static final class CSReconnect extends GeneratedMessage implements CSReconnectOrBuilder {
        public static final int EDEVICETYPE_FIELD_NUMBER = 7;
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 8;
        public static Parser<CSReconnect> PARSER = null;
        public static final int SACCESSTOKEN_FIELD_NUMBER = 9;
        public static final int STRIOSTOKEN_FIELD_NUMBER = 2;
        public static final int STRPHONETYPE_FIELD_NUMBER = 5;
        public static final int STRSCREENSIZE_FIELD_NUMBER = 6;
        public static final int STRSSOTOKEN_FIELD_NUMBER = 3;
        public static final int STRSYSVERSION_FIELD_NUMBER = 4;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSReconnect defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sAccessToken_;
        private Object strIosToken_;
        private Object strPhoneType_;
        private Object strSSOToken_;
        private Object strScreenSize_;
        private Object strSysVersion_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSReconnect.1 */
        class C11761 extends AbstractParser<CSReconnect> {
            C11761() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSReconnect(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSReconnectOrBuilder {
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object sAccessToken_;
            private Object strIosToken_;
            private Object strPhoneType_;
            private Object strSSOToken_;
            private Object strScreenSize_;
            private Object strSysVersion_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8271O;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8272P.ensureFieldAccessorsInitialized(CSReconnect.class, Builder.class);
            }

            private Builder() {
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.sAccessToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.sAccessToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSReconnect.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -65;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -129;
                this.sAccessToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -257;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8271O;
            }

            public final CSReconnect getDefaultInstanceForType() {
                return CSReconnect.getDefaultInstance();
            }

            public final CSReconnect build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSReconnect buildPartial() {
                int i = CSReconnect.UUID_FIELD_NUMBER;
                CSReconnect cSReconnect = new CSReconnect(null);
                int i2 = this.bitField0_;
                if ((i2 & CSReconnect.UUID_FIELD_NUMBER) != CSReconnect.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSReconnect.uuid_ = this.uuid_;
                if ((i2 & CSReconnect.STRIOSTOKEN_FIELD_NUMBER) == CSReconnect.STRIOSTOKEN_FIELD_NUMBER) {
                    i |= CSReconnect.STRIOSTOKEN_FIELD_NUMBER;
                }
                cSReconnect.strIosToken_ = this.strIosToken_;
                if ((i2 & CSReconnect.STRSYSVERSION_FIELD_NUMBER) == CSReconnect.STRSYSVERSION_FIELD_NUMBER) {
                    i |= CSReconnect.STRSYSVERSION_FIELD_NUMBER;
                }
                cSReconnect.strSSOToken_ = this.strSSOToken_;
                if ((i2 & CSReconnect.ELANGUAGETYPE_FIELD_NUMBER) == CSReconnect.ELANGUAGETYPE_FIELD_NUMBER) {
                    i |= CSReconnect.ELANGUAGETYPE_FIELD_NUMBER;
                }
                cSReconnect.strSysVersion_ = this.strSysVersion_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSReconnect.strPhoneType_ = this.strPhoneType_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSReconnect.strScreenSize_ = this.strScreenSize_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSReconnect.eDeviceType_ = this.eDeviceType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSReconnect.eLanguageType_ = this.eLanguageType_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                cSReconnect.sAccessToken_ = this.sAccessToken_;
                cSReconnect.bitField0_ = i;
                onBuilt();
                return cSReconnect;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSReconnect) {
                    return mergeFrom((CSReconnect) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSReconnect cSReconnect) {
                if (cSReconnect != CSReconnect.getDefaultInstance()) {
                    if (cSReconnect.hasUuid()) {
                        setUuid(cSReconnect.getUuid());
                    }
                    if (cSReconnect.hasStrIosToken()) {
                        this.bitField0_ |= CSReconnect.STRIOSTOKEN_FIELD_NUMBER;
                        this.strIosToken_ = cSReconnect.strIosToken_;
                        onChanged();
                    }
                    if (cSReconnect.hasStrSSOToken()) {
                        this.bitField0_ |= CSReconnect.STRSYSVERSION_FIELD_NUMBER;
                        this.strSSOToken_ = cSReconnect.strSSOToken_;
                        onChanged();
                    }
                    if (cSReconnect.hasStrSysVersion()) {
                        this.bitField0_ |= CSReconnect.ELANGUAGETYPE_FIELD_NUMBER;
                        this.strSysVersion_ = cSReconnect.strSysVersion_;
                        onChanged();
                    }
                    if (cSReconnect.hasStrPhoneType()) {
                        this.bitField0_ |= 16;
                        this.strPhoneType_ = cSReconnect.strPhoneType_;
                        onChanged();
                    }
                    if (cSReconnect.hasStrScreenSize()) {
                        this.bitField0_ |= 32;
                        this.strScreenSize_ = cSReconnect.strScreenSize_;
                        onChanged();
                    }
                    if (cSReconnect.hasEDeviceType()) {
                        setEDeviceType(cSReconnect.getEDeviceType());
                    }
                    if (cSReconnect.hasELanguageType()) {
                        setELanguageType(cSReconnect.getELanguageType());
                    }
                    if (cSReconnect.hasSAccessToken()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                        this.sAccessToken_ = cSReconnect.sAccessToken_;
                        onChanged();
                    }
                    mergeUnknownFields(cSReconnect.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSReconnect.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSReconnect.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSReconnect) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSReconnect) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSReconnect.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSReconnect$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSReconnect.UUID_FIELD_NUMBER) == CSReconnect.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSReconnect.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrIosToken() {
                return (this.bitField0_ & CSReconnect.STRIOSTOKEN_FIELD_NUMBER) == CSReconnect.STRIOSTOKEN_FIELD_NUMBER;
            }

            public final String getStrIosToken() {
                Object obj = this.strIosToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosTokenBytes() {
                Object obj = this.strIosToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.STRIOSTOKEN_FIELD_NUMBER;
                this.strIosToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosToken() {
                this.bitField0_ &= -3;
                this.strIosToken_ = CSReconnect.getDefaultInstance().getStrIosToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.STRIOSTOKEN_FIELD_NUMBER;
                this.strIosToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSSOToken() {
                return (this.bitField0_ & CSReconnect.STRSYSVERSION_FIELD_NUMBER) == CSReconnect.STRSYSVERSION_FIELD_NUMBER;
            }

            public final String getStrSSOToken() {
                Object obj = this.strSSOToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSSOToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSSOTokenBytes() {
                Object obj = this.strSSOToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSSOToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSSOToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.STRSYSVERSION_FIELD_NUMBER;
                this.strSSOToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSSOToken() {
                this.bitField0_ &= -5;
                this.strSSOToken_ = CSReconnect.getDefaultInstance().getStrSSOToken();
                onChanged();
                return this;
            }

            public final Builder setStrSSOTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.STRSYSVERSION_FIELD_NUMBER;
                this.strSSOToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSysVersion() {
                return (this.bitField0_ & CSReconnect.ELANGUAGETYPE_FIELD_NUMBER) == CSReconnect.ELANGUAGETYPE_FIELD_NUMBER;
            }

            public final String getStrSysVersion() {
                Object obj = this.strSysVersion_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSysVersion_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSysVersionBytes() {
                Object obj = this.strSysVersion_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSysVersion_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSysVersion(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.ELANGUAGETYPE_FIELD_NUMBER;
                this.strSysVersion_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSysVersion() {
                this.bitField0_ &= -9;
                this.strSysVersion_ = CSReconnect.getDefaultInstance().getStrSysVersion();
                onChanged();
                return this;
            }

            public final Builder setStrSysVersionBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSReconnect.ELANGUAGETYPE_FIELD_NUMBER;
                this.strSysVersion_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrPhoneType() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getStrPhoneType() {
                Object obj = this.strPhoneType_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPhoneType_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPhoneTypeBytes() {
                Object obj = this.strPhoneType_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPhoneType_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPhoneType(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strPhoneType_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPhoneType() {
                this.bitField0_ &= -17;
                this.strPhoneType_ = CSReconnect.getDefaultInstance().getStrPhoneType();
                onChanged();
                return this;
            }

            public final Builder setStrPhoneTypeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strPhoneType_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrScreenSize() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getStrScreenSize() {
                Object obj = this.strScreenSize_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strScreenSize_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrScreenSizeBytes() {
                Object obj = this.strScreenSize_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strScreenSize_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrScreenSize(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strScreenSize_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrScreenSize() {
                this.bitField0_ &= -33;
                this.strScreenSize_ = CSReconnect.getDefaultInstance().getStrScreenSize();
                onChanged();
                return this;
            }

            public final Builder setStrScreenSizeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.strScreenSize_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & 64) == 64;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -65;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -129;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }

            public final boolean hasSAccessToken() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final String getSAccessToken() {
                Object obj = this.sAccessToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sAccessToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSAccessTokenBytes() {
                Object obj = this.sAccessToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sAccessToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSAccessToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.sAccessToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSAccessToken() {
                this.bitField0_ &= -257;
                this.sAccessToken_ = CSReconnect.getDefaultInstance().getSAccessToken();
                onChanged();
                return this;
            }

            public final Builder setSAccessTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.sAccessToken_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSReconnect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSReconnect(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSReconnect getDefaultInstance() {
            return defaultInstance;
        }

        public final CSReconnect getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSReconnect(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case ELANGUAGETYPE_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRIOSTOKEN_FIELD_NUMBER;
                            this.strIosToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRSYSVERSION_FIELD_NUMBER;
                            this.strSSOToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= ELANGUAGETYPE_FIELD_NUMBER;
                            this.strSysVersion_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.strPhoneType_ = readBytes;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.strScreenSize_ = readBytes;
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 64;
                                this.eDeviceType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf2 = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                                this.eLanguageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.sAccessToken_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8271O;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8272P.ensureFieldAccessorsInitialized(CSReconnect.class, Builder.class);
        }

        static {
            PARSER = new C11761();
            CSReconnect cSReconnect = new CSReconnect(true);
            defaultInstance = cSReconnect;
            cSReconnect.initFields();
        }

        public final Parser<CSReconnect> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasStrIosToken() {
            return (this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER;
        }

        public final String getStrIosToken() {
            Object obj = this.strIosToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosTokenBytes() {
            Object obj = this.strIosToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSSOToken() {
            return (this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER;
        }

        public final String getStrSSOToken() {
            Object obj = this.strSSOToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSSOToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSSOTokenBytes() {
            Object obj = this.strSSOToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSSOToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSysVersion() {
            return (this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER;
        }

        public final String getStrSysVersion() {
            Object obj = this.strSysVersion_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSysVersion_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSysVersionBytes() {
            Object obj = this.strSysVersion_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSysVersion_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrPhoneType() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getStrPhoneType() {
            Object obj = this.strPhoneType_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPhoneType_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPhoneTypeBytes() {
            Object obj = this.strPhoneType_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPhoneType_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrScreenSize() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getStrScreenSize() {
            Object obj = this.strScreenSize_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strScreenSize_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrScreenSizeBytes() {
            Object obj = this.strScreenSize_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strScreenSize_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & 64) == 64;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        public final boolean hasSAccessToken() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final String getSAccessToken() {
            Object obj = this.sAccessToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sAccessToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSAccessTokenBytes() {
            Object obj = this.sAccessToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sAccessToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSysVersion_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strPhoneType_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strScreenSize_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
            this.sAccessToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(SACCESSTOKEN_FIELD_NUMBER, getSAccessTokenBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & STRIOSTOKEN_FIELD_NUMBER) == STRIOSTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & STRSYSVERSION_FIELD_NUMBER) == STRSYSVERSION_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & ELANGUAGETYPE_FIELD_NUMBER) == ELANGUAGETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRSYSVERSION_FIELD_NUMBER, getStrSysVersionBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(STRPHONETYPE_FIELD_NUMBER, getStrPhoneTypeBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(STRSCREENSIZE_FIELD_NUMBER, getStrScreenSizeBytes());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(SACCESSTOKEN_FIELD_NUMBER, getSAccessTokenBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSReconnect parseFrom(ByteString byteString) {
            return (CSReconnect) PARSER.parseFrom(byteString);
        }

        public static CSReconnect parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReconnect) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSReconnect parseFrom(byte[] bArr) {
            return (CSReconnect) PARSER.parseFrom(bArr);
        }

        public static CSReconnect parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReconnect) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSReconnect parseFrom(InputStream inputStream) {
            return (CSReconnect) PARSER.parseFrom(inputStream);
        }

        public static CSReconnect parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReconnect) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSReconnect parseDelimitedFrom(InputStream inputStream) {
            return (CSReconnect) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSReconnect parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReconnect) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSReconnect parseFrom(CodedInputStream codedInputStream) {
            return (CSReconnect) PARSER.parseFrom(codedInputStream);
        }

        public static CSReconnect parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReconnect) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSReconnect cSReconnect) {
            return newBuilder().mergeFrom(cSReconnect);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSRegetVerifyCodeOrBuilder extends MessageOrBuilder {
        LANGUAGE_TYPE getELanguageType();

        String getSCountryCode();

        ByteString getSCountryCodeBytes();

        String getSPhoneNumber();

        ByteString getSPhoneNumberBytes();

        boolean hasELanguageType();

        boolean hasSCountryCode();

        boolean hasSPhoneNumber();
    }

    public static final class CSRegetVerifyCode extends GeneratedMessage implements CSRegetVerifyCodeOrBuilder {
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 3;
        public static Parser<CSRegetVerifyCode> PARSER = null;
        public static final int SCOUNTRYCODE_FIELD_NUMBER = 2;
        public static final int SPHONENUMBER_FIELD_NUMBER = 1;
        private static final CSRegetVerifyCode defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCountryCode_;
        private Object sPhoneNumber_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSRegetVerifyCode.1 */
        class C11771 extends AbstractParser<CSRegetVerifyCode> {
            C11771() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSRegetVerifyCode(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSRegetVerifyCodeOrBuilder {
            private int bitField0_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object sCountryCode_;
            private Object sPhoneNumber_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8308y;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8309z.ensureFieldAccessorsInitialized(CSRegetVerifyCode.class, Builder.class);
            }

            private Builder() {
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSRegetVerifyCode.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -2;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8308y;
            }

            public final CSRegetVerifyCode getDefaultInstanceForType() {
                return CSRegetVerifyCode.getDefaultInstance();
            }

            public final CSRegetVerifyCode build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSRegetVerifyCode buildPartial() {
                int i = CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                CSRegetVerifyCode cSRegetVerifyCode = new CSRegetVerifyCode(null);
                int i2 = this.bitField0_;
                if ((i2 & CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER) != CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER) {
                    i = 0;
                }
                cSRegetVerifyCode.sPhoneNumber_ = this.sPhoneNumber_;
                if ((i2 & CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) == CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) {
                    i |= CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                }
                cSRegetVerifyCode.sCountryCode_ = this.sCountryCode_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSRegetVerifyCode.eLanguageType_ = this.eLanguageType_;
                cSRegetVerifyCode.bitField0_ = i;
                onBuilt();
                return cSRegetVerifyCode;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSRegetVerifyCode) {
                    return mergeFrom((CSRegetVerifyCode) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSRegetVerifyCode cSRegetVerifyCode) {
                if (cSRegetVerifyCode != CSRegetVerifyCode.getDefaultInstance()) {
                    if (cSRegetVerifyCode.hasSPhoneNumber()) {
                        this.bitField0_ |= CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                        this.sPhoneNumber_ = cSRegetVerifyCode.sPhoneNumber_;
                        onChanged();
                    }
                    if (cSRegetVerifyCode.hasSCountryCode()) {
                        this.bitField0_ |= CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                        this.sCountryCode_ = cSRegetVerifyCode.sCountryCode_;
                        onChanged();
                    }
                    if (cSRegetVerifyCode.hasELanguageType()) {
                        setELanguageType(cSRegetVerifyCode.getELanguageType());
                    }
                    mergeUnknownFields(cSRegetVerifyCode.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasSPhoneNumber()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSRegetVerifyCode.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSRegetVerifyCode.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSRegetVerifyCode) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSRegetVerifyCode) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSRegetVerifyCode.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSRegetVerifyCode$Builder");
            }

            public final boolean hasSPhoneNumber() {
                return (this.bitField0_ & CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER) == CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER;
            }

            public final String getSPhoneNumber() {
                Object obj = this.sPhoneNumber_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sPhoneNumber_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSPhoneNumberBytes() {
                Object obj = this.sPhoneNumber_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sPhoneNumber_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSPhoneNumber(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                this.sPhoneNumber_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSPhoneNumber() {
                this.bitField0_ &= -2;
                this.sPhoneNumber_ = CSRegetVerifyCode.getDefaultInstance().getSPhoneNumber();
                onChanged();
                return this;
            }

            public final Builder setSPhoneNumberBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegetVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                this.sPhoneNumber_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSCountryCode() {
                return (this.bitField0_ & CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) == CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
            }

            public final String getSCountryCode() {
                Object obj = this.sCountryCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCountryCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCountryCodeBytes() {
                Object obj = this.sCountryCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCountryCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCountryCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                this.sCountryCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCountryCode() {
                this.bitField0_ &= -3;
                this.sCountryCode_ = CSRegetVerifyCode.getDefaultInstance().getSCountryCode();
                onChanged();
                return this;
            }

            public final Builder setSCountryCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegetVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                this.sCountryCode_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & 4) == 4;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 4;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -5;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }
        }

        private CSRegetVerifyCode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSRegetVerifyCode(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSRegetVerifyCode getDefaultInstance() {
            return defaultInstance;
        }

        public final CSRegetVerifyCode getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSRegetVerifyCode(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = SPHONENUMBER_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPHONENUMBER_FIELD_NUMBER;
                            this.sPhoneNumber_ = readBytes;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SCOUNTRYCODE_FIELD_NUMBER;
                            this.sCountryCode_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 4;
                                this.eLanguageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = SPHONENUMBER_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8308y;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8309z.ensureFieldAccessorsInitialized(CSRegetVerifyCode.class, Builder.class);
        }

        static {
            PARSER = new C11771();
            CSRegetVerifyCode cSRegetVerifyCode = new CSRegetVerifyCode(true);
            defaultInstance = cSRegetVerifyCode;
            cSRegetVerifyCode.initFields();
        }

        public final Parser<CSRegetVerifyCode> getParserForType() {
            return PARSER;
        }

        public final boolean hasSPhoneNumber() {
            return (this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER;
        }

        public final String getSPhoneNumber() {
            Object obj = this.sPhoneNumber_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPhoneNumber_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPhoneNumberBytes() {
            Object obj = this.sPhoneNumber_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPhoneNumber_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSCountryCode() {
            return (this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER;
        }

        public final String getSCountryCode() {
            Object obj = this.sCountryCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCountryCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCountryCodeBytes() {
            Object obj = this.sCountryCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCountryCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & 4) == 4;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        private void initFields() {
            this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasSPhoneNumber()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes());
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                i = CodedOutputStream.computeBytesSize(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes()) + 0;
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSRegetVerifyCode parseFrom(ByteString byteString) {
            return (CSRegetVerifyCode) PARSER.parseFrom(byteString);
        }

        public static CSRegetVerifyCode parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegetVerifyCode) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSRegetVerifyCode parseFrom(byte[] bArr) {
            return (CSRegetVerifyCode) PARSER.parseFrom(bArr);
        }

        public static CSRegetVerifyCode parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegetVerifyCode) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSRegetVerifyCode parseFrom(InputStream inputStream) {
            return (CSRegetVerifyCode) PARSER.parseFrom(inputStream);
        }

        public static CSRegetVerifyCode parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegetVerifyCode) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSRegetVerifyCode parseDelimitedFrom(InputStream inputStream) {
            return (CSRegetVerifyCode) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSRegetVerifyCode parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegetVerifyCode) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSRegetVerifyCode parseFrom(CodedInputStream codedInputStream) {
            return (CSRegetVerifyCode) PARSER.parseFrom(codedInputStream);
        }

        public static CSRegetVerifyCode parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegetVerifyCode) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSRegetVerifyCode cSRegetVerifyCode) {
            return newBuilder().mergeFrom(cSRegetVerifyCode);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSRegisterOrBuilder extends MessageOrBuilder {
        String getPwd();

        ByteString getPwdBytes();

        UserBaseInfoNet getStUserBaseInfo();

        UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

        boolean hasPwd();

        boolean hasStUserBaseInfo();
    }

    public static final class CSRegister extends GeneratedMessage implements CSRegisterOrBuilder {
        public static Parser<CSRegister> PARSER = null;
        public static final int PWD_FIELD_NUMBER = 2;
        public static final int STUSERBASEINFO_FIELD_NUMBER = 1;
        private static final CSRegister defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object pwd_;
        private UserBaseInfoNet stUserBaseInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSRegister.1 */
        class C11781 extends AbstractParser<CSRegister> {
            C11781() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSRegister(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSRegisterOrBuilder {
            private int bitField0_;
            private Object pwd_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoBuilder_;
            private UserBaseInfoNet stUserBaseInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8296m;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8297n.ensureFieldAccessorsInitialized(CSRegister.class, Builder.class);
            }

            private Builder() {
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.pwd_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.pwd_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSRegister.alwaysUseFieldBuilders) {
                    getStUserBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.pwd_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8296m;
            }

            public final CSRegister getDefaultInstanceForType() {
                return CSRegister.getDefaultInstance();
            }

            public final CSRegister build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSRegister buildPartial() {
                CSRegister cSRegister = new CSRegister((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & CSRegister.STUSERBASEINFO_FIELD_NUMBER) == CSRegister.STUSERBASEINFO_FIELD_NUMBER) {
                    i2 = CSRegister.STUSERBASEINFO_FIELD_NUMBER;
                }
                if (this.stUserBaseInfoBuilder_ == null) {
                    cSRegister.stUserBaseInfo_ = this.stUserBaseInfo_;
                } else {
                    cSRegister.stUserBaseInfo_ = (UserBaseInfoNet) this.stUserBaseInfoBuilder_.build();
                }
                if ((i & CSRegister.PWD_FIELD_NUMBER) == CSRegister.PWD_FIELD_NUMBER) {
                    i2 |= CSRegister.PWD_FIELD_NUMBER;
                }
                cSRegister.pwd_ = this.pwd_;
                cSRegister.bitField0_ = i2;
                onBuilt();
                return cSRegister;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSRegister) {
                    return mergeFrom((CSRegister) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSRegister cSRegister) {
                if (cSRegister != CSRegister.getDefaultInstance()) {
                    if (cSRegister.hasStUserBaseInfo()) {
                        mergeStUserBaseInfo(cSRegister.getStUserBaseInfo());
                    }
                    if (cSRegister.hasPwd()) {
                        this.bitField0_ |= CSRegister.PWD_FIELD_NUMBER;
                        this.pwd_ = cSRegister.pwd_;
                        onChanged();
                    }
                    mergeUnknownFields(cSRegister.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStUserBaseInfo() && hasPwd() && getStUserBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSRegister.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSRegister.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSRegister) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSRegister) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSRegister.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSRegister$Builder");
            }

            public final boolean hasStUserBaseInfo() {
                return (this.bitField0_ & CSRegister.STUSERBASEINFO_FIELD_NUMBER) == CSRegister.STUSERBASEINFO_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    return this.stUserBaseInfo_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ != null) {
                    this.stUserBaseInfoBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfo_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= CSRegister.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStUserBaseInfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= CSRegister.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & CSRegister.STUSERBASEINFO_FIELD_NUMBER) != CSRegister.STUSERBASEINFO_FIELD_NUMBER || this.stUserBaseInfo_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfo_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfo_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfo_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= CSRegister.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoBuilder() {
                this.bitField0_ |= CSRegister.STUSERBASEINFO_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
                if (this.stUserBaseInfoBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfo_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoFieldBuilder() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfoBuilder_ = new SingleFieldBuilder(getStUserBaseInfo(), getParentForChildren(), isClean());
                    this.stUserBaseInfo_ = null;
                }
                return this.stUserBaseInfoBuilder_;
            }

            public final boolean hasPwd() {
                return (this.bitField0_ & CSRegister.PWD_FIELD_NUMBER) == CSRegister.PWD_FIELD_NUMBER;
            }

            public final String getPwd() {
                Object obj = this.pwd_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.pwd_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getPwdBytes() {
                Object obj = this.pwd_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.pwd_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setPwd(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegister.PWD_FIELD_NUMBER;
                this.pwd_ = str;
                onChanged();
                return this;
            }

            public final Builder clearPwd() {
                this.bitField0_ &= -3;
                this.pwd_ = CSRegister.getDefaultInstance().getPwd();
                onChanged();
                return this;
            }

            public final Builder setPwdBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSRegister.PWD_FIELD_NUMBER;
                this.pwd_ = byteString;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSRegister(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSRegister(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSRegister cSRegister);

        private native CSRegister(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSRegister(com.google.protobuf.GeneratedMessage.Builder builder, CSRegister cSRegister);

        private native CSRegister(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6170getDefaultInstanceForType();

        public final native CSRegister m6171getDefaultInstanceForType();

        public final native Parser<CSRegister> getParserForType();

        public final native String getPwd();

        public final native ByteString getPwdBytes();

        public final native int getSerializedSize();

        public final native UserBaseInfoNet getStUserBaseInfo();

        public final native UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

        public final native UnknownFieldSet getUnknownFields();

        public final native boolean hasPwd();

        public final native boolean hasStUserBaseInfo();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6172newBuilderForType();

        public final native Builder m6173newBuilderForType();

        protected final native Builder m6174newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6175toBuilder();

        public final native Builder m6176toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSRegister getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8296m;
        }

        static void __clinit__() {
            PARSER = new C11781();
            CSRegister cSRegister = new CSRegister(true);
            defaultInstance = cSRegister;
            cSRegister.initFields();
        }

        public static CSRegister parseFrom(ByteString byteString) {
            return (CSRegister) PARSER.parseFrom(byteString);
        }

        public static CSRegister parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegister) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSRegister parseFrom(byte[] bArr) {
            return (CSRegister) PARSER.parseFrom(bArr);
        }

        public static CSRegister parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegister) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSRegister parseFrom(InputStream inputStream) {
            return (CSRegister) PARSER.parseFrom(inputStream);
        }

        public static CSRegister parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegister) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSRegister parseDelimitedFrom(InputStream inputStream) {
            return (CSRegister) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSRegister parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegister) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSRegister parseFrom(CodedInputStream codedInputStream) {
            return (CSRegister) PARSER.parseFrom(codedInputStream);
        }

        public static CSRegister parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRegister) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSRegister cSRegister) {
            return newBuilder().mergeFrom(cSRegister);
        }
    }

    public interface CSRemoveChatRoomOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSRemoveChatRoom extends GeneratedMessage implements CSRemoveChatRoomOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSRemoveChatRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSRemoveChatRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSRemoveChatRoom.1 */
        class C11791 extends AbstractParser<CSRemoveChatRoom> {
            C11791() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSRemoveChatRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSRemoveChatRoomOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bs;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bt.ensureFieldAccessorsInitialized(CSRemoveChatRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSRemoveChatRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bs;
            }

            public final CSRemoveChatRoom getDefaultInstanceForType() {
                return CSRemoveChatRoom.getDefaultInstance();
            }

            public final CSRemoveChatRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSRemoveChatRoom buildPartial() {
                int i = CSRemoveChatRoom.UUID_FIELD_NUMBER;
                CSRemoveChatRoom cSRemoveChatRoom = new CSRemoveChatRoom(null);
                int i2 = this.bitField0_;
                if ((i2 & CSRemoveChatRoom.UUID_FIELD_NUMBER) != CSRemoveChatRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSRemoveChatRoom.uuid_ = this.uuid_;
                if ((i2 & CSRemoveChatRoom.LROOMID_FIELD_NUMBER) == CSRemoveChatRoom.LROOMID_FIELD_NUMBER) {
                    i |= CSRemoveChatRoom.LROOMID_FIELD_NUMBER;
                }
                cSRemoveChatRoom.lRoomID_ = this.lRoomID_;
                cSRemoveChatRoom.bitField0_ = i;
                onBuilt();
                return cSRemoveChatRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSRemoveChatRoom) {
                    return mergeFrom((CSRemoveChatRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSRemoveChatRoom cSRemoveChatRoom) {
                if (cSRemoveChatRoom != CSRemoveChatRoom.getDefaultInstance()) {
                    if (cSRemoveChatRoom.hasUuid()) {
                        setUuid(cSRemoveChatRoom.getUuid());
                    }
                    if (cSRemoveChatRoom.hasLRoomID()) {
                        setLRoomID(cSRemoveChatRoom.getLRoomID());
                    }
                    mergeUnknownFields(cSRemoveChatRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSRemoveChatRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSRemoveChatRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSRemoveChatRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSRemoveChatRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSRemoveChatRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSRemoveChatRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSRemoveChatRoom.UUID_FIELD_NUMBER) == CSRemoveChatRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSRemoveChatRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSRemoveChatRoom.LROOMID_FIELD_NUMBER) == CSRemoveChatRoom.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSRemoveChatRoom.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSRemoveChatRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSRemoveChatRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSRemoveChatRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSRemoveChatRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSRemoveChatRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bs;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bt.ensureFieldAccessorsInitialized(CSRemoveChatRoom.class, Builder.class);
        }

        static {
            PARSER = new C11791();
            CSRemoveChatRoom cSRemoveChatRoom = new CSRemoveChatRoom(true);
            defaultInstance = cSRemoveChatRoom;
            cSRemoveChatRoom.initFields();
        }

        public final Parser<CSRemoveChatRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSRemoveChatRoom parseFrom(ByteString byteString) {
            return (CSRemoveChatRoom) PARSER.parseFrom(byteString);
        }

        public static CSRemoveChatRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSRemoveChatRoom parseFrom(byte[] bArr) {
            return (CSRemoveChatRoom) PARSER.parseFrom(bArr);
        }

        public static CSRemoveChatRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSRemoveChatRoom parseFrom(InputStream inputStream) {
            return (CSRemoveChatRoom) PARSER.parseFrom(inputStream);
        }

        public static CSRemoveChatRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSRemoveChatRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSRemoveChatRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSRemoveChatRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSRemoveChatRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSRemoveChatRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSRemoveChatRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSRemoveChatRoom cSRemoveChatRoom) {
            return newBuilder().mergeFrom(cSRemoveChatRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSRemoveChatRoomUserOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSRemoveChatRoomUser extends GeneratedMessage implements CSRemoveChatRoomUserOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSRemoveChatRoomUser> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 3;
        private static final CSRemoveChatRoomUser defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser.1 */
        class C11801 extends AbstractParser<CSRemoveChatRoomUser> {
            C11801() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSRemoveChatRoomUser(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSRemoveChatRoomUserOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aR.ensureFieldAccessorsInitialized(CSRemoveChatRoomUser.class, Builder.class);
            }

            private Builder() {
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSRemoveChatRoomUser.alwaysUseFieldBuilders) {
                    getVUserBaseInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aQ;
            }

            public final CSRemoveChatRoomUser getDefaultInstanceForType() {
                return CSRemoveChatRoomUser.getDefaultInstance();
            }

            public final CSRemoveChatRoomUser build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSRemoveChatRoomUser buildPartial() {
                int i = CSRemoveChatRoomUser.UUID_FIELD_NUMBER;
                CSRemoveChatRoomUser cSRemoveChatRoomUser = new CSRemoveChatRoomUser(null);
                int i2 = this.bitField0_;
                if ((i2 & CSRemoveChatRoomUser.UUID_FIELD_NUMBER) != CSRemoveChatRoomUser.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSRemoveChatRoomUser.uuid_ = this.uuid_;
                if ((i2 & CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER) == CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER) {
                    i |= CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER;
                }
                cSRemoveChatRoomUser.lRoomID_ = this.lRoomID_;
                if (this.vUserBaseInfosBuilder_ == null) {
                    if ((this.bitField0_ & 4) == 4) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                        this.bitField0_ &= -5;
                    }
                    cSRemoveChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfos_;
                } else {
                    cSRemoveChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfosBuilder_.build();
                }
                cSRemoveChatRoomUser.bitField0_ = i;
                onBuilt();
                return cSRemoveChatRoomUser;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSRemoveChatRoomUser) {
                    return mergeFrom((CSRemoveChatRoomUser) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSRemoveChatRoomUser cSRemoveChatRoomUser) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (cSRemoveChatRoomUser != CSRemoveChatRoomUser.getDefaultInstance()) {
                    if (cSRemoveChatRoomUser.hasUuid()) {
                        setUuid(cSRemoveChatRoomUser.getUuid());
                    }
                    if (cSRemoveChatRoomUser.hasLRoomID()) {
                        setLRoomID(cSRemoveChatRoomUser.getLRoomID());
                    }
                    if (this.vUserBaseInfosBuilder_ == null) {
                        if (!cSRemoveChatRoomUser.vUserBaseInfos_.isEmpty()) {
                            if (this.vUserBaseInfos_.isEmpty()) {
                                this.vUserBaseInfos_ = cSRemoveChatRoomUser.vUserBaseInfos_;
                                this.bitField0_ &= -5;
                            } else {
                                ensureVUserBaseInfosIsMutable();
                                this.vUserBaseInfos_.addAll(cSRemoveChatRoomUser.vUserBaseInfos_);
                            }
                            onChanged();
                        }
                    } else if (!cSRemoveChatRoomUser.vUserBaseInfos_.isEmpty()) {
                        if (this.vUserBaseInfosBuilder_.isEmpty()) {
                            this.vUserBaseInfosBuilder_.dispose();
                            this.vUserBaseInfosBuilder_ = null;
                            this.vUserBaseInfos_ = cSRemoveChatRoomUser.vUserBaseInfos_;
                            this.bitField0_ &= -5;
                            if (CSRemoveChatRoomUser.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVUserBaseInfosFieldBuilder();
                            }
                            this.vUserBaseInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vUserBaseInfosBuilder_.addAllMessages(cSRemoveChatRoomUser.vUserBaseInfos_);
                        }
                    }
                    mergeUnknownFields(cSRemoveChatRoomUser.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasLRoomID()) {
                    return false;
                }
                for (int i = 0; i < getVUserBaseInfosCount(); i += CSRemoveChatRoomUser.UUID_FIELD_NUMBER) {
                    if (!getVUserBaseInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSRemoveChatRoomUser.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSRemoveChatRoomUser$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSRemoveChatRoomUser.UUID_FIELD_NUMBER) == CSRemoveChatRoomUser.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSRemoveChatRoomUser.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER) == CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSRemoveChatRoomUser.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            private void ensureVUserBaseInfosIsMutable() {
                if ((this.bitField0_ & 4) != 4) {
                    this.vUserBaseInfos_ = new ArrayList(this.vUserBaseInfos_);
                    this.bitField0_ |= 4;
                }
            }

            public final List<UserBaseInfoNet> getVUserBaseInfosList() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUserBaseInfos_);
                }
                return this.vUserBaseInfosBuilder_.getMessageList();
            }

            public final int getVUserBaseInfosCount() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return this.vUserBaseInfos_.size();
                }
                return this.vUserBaseInfosBuilder_.getCount();
            }

            public final UserBaseInfoNet getVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNet) this.vUserBaseInfosBuilder_.getMessage(i);
            }

            public final Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUserBaseInfos_);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUserBaseInfos() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.remove(i);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.vUserBaseInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
                if (this.vUserBaseInfosBuilder_ != null) {
                    return this.vUserBaseInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUserBaseInfos_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList() {
                return getVUserBaseInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfosBuilder_ = new RepeatedFieldBuilder(this.vUserBaseInfos_, (this.bitField0_ & 4) == 4, getParentForChildren(), isClean());
                    this.vUserBaseInfos_ = null;
                }
                return this.vUserBaseInfosBuilder_;
            }
        }

        private CSRemoveChatRoomUser(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSRemoveChatRoomUser(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSRemoveChatRoomUser getDefaultInstance() {
            return defaultInstance;
        }

        public final CSRemoveChatRoomUser getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSRemoveChatRoomUser(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            if ((i & 4) != 4) {
                                this.vUserBaseInfos_ = new ArrayList();
                                i |= 4;
                            }
                            this.vUserBaseInfos_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & 4) == 4) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & 4) == 4) {
                this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aR.ensureFieldAccessorsInitialized(CSRemoveChatRoomUser.class, Builder.class);
        }

        static {
            PARSER = new C11801();
            CSRemoveChatRoomUser cSRemoveChatRoomUser = new CSRemoveChatRoomUser(true);
            defaultInstance = cSRemoveChatRoomUser;
            cSRemoveChatRoomUser.initFields();
        }

        public final Parser<CSRemoveChatRoomUser> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final List<UserBaseInfoNet> getVUserBaseInfosList() {
            return this.vUserBaseInfos_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
            return this.vUserBaseInfos_;
        }

        public final int getVUserBaseInfosCount() {
            return this.vUserBaseInfos_.size();
        }

        public final UserBaseInfoNet getVUserBaseInfos(int i) {
            return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.vUserBaseInfos_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                int i = 0;
                while (i < getVUserBaseInfosCount()) {
                    if (getVUserBaseInfos(i).isInitialized()) {
                        i += UUID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            for (int i = 0; i < this.vUserBaseInfos_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            int i3 = i2;
            while (i < this.vUserBaseInfos_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i)) + i3;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSRemoveChatRoomUser parseFrom(ByteString byteString) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(byteString);
        }

        public static CSRemoveChatRoomUser parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSRemoveChatRoomUser parseFrom(byte[] bArr) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(bArr);
        }

        public static CSRemoveChatRoomUser parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSRemoveChatRoomUser parseFrom(InputStream inputStream) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(inputStream);
        }

        public static CSRemoveChatRoomUser parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSRemoveChatRoomUser parseDelimitedFrom(InputStream inputStream) {
            return (CSRemoveChatRoomUser) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSRemoveChatRoomUser parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoomUser) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSRemoveChatRoomUser parseFrom(CodedInputStream codedInputStream) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(codedInputStream);
        }

        public static CSRemoveChatRoomUser parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSRemoveChatRoomUser) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSRemoveChatRoomUser cSRemoveChatRoomUser) {
            return newBuilder().mergeFrom(cSRemoveChatRoomUser);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSResetBuyinRatioOrBuilder extends MessageOrBuilder {
        int getIMaxBuyinRatio();

        int getIMinBuyinRatio();

        long getLRoomID();

        long getUuid();

        boolean hasIMaxBuyinRatio();

        boolean hasIMinBuyinRatio();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSResetBuyinRatio extends GeneratedMessage implements CSResetBuyinRatioOrBuilder {
        public static final int IMAXBUYINRATIO_FIELD_NUMBER = 3;
        public static final int IMINBUYINRATIO_FIELD_NUMBER = 4;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSResetBuyinRatio> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSResetBuyinRatio defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iMaxBuyinRatio_;
        private int iMinBuyinRatio_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSResetBuyinRatio.1 */
        class C11811 extends AbstractParser<CSResetBuyinRatio> {
            C11811() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSResetBuyinRatio(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSResetBuyinRatioOrBuilder {
            private int bitField0_;
            private int iMaxBuyinRatio_;
            private int iMinBuyinRatio_;
            private long lRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6177build();

            public final native CSResetBuyinRatio m6178build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6179buildPartial();

            public final native CSResetBuyinRatio m6180buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6181clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6182clear();

            public final native Builder m6183clear();

            public final native Builder clearIMaxBuyinRatio();

            public final native Builder clearIMinBuyinRatio();

            public final native Builder clearLRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6184clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6185clone();

            public final native Builder m6186clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6187getDefaultInstanceForType();

            public final native CSResetBuyinRatio m6188getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native int getIMaxBuyinRatio();

            public final native int getIMinBuyinRatio();

            public final native long getLRoomID();

            public final native long getUuid();

            public final native boolean hasIMaxBuyinRatio();

            public final native boolean hasIMinBuyinRatio();

            public final native boolean hasLRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6189mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6190mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6191mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6192mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6193mergeFrom(Message message);

            public final native Builder mergeFrom(CSResetBuyinRatio cSResetBuyinRatio);

            public final native Builder setIMaxBuyinRatio(int i);

            public final native Builder setIMinBuyinRatio(int i);

            public final native Builder setLRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.ey;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSResetBuyinRatio(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSResetBuyinRatio(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSResetBuyinRatio getDefaultInstance() {
            return defaultInstance;
        }

        public final CSResetBuyinRatio getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSResetBuyinRatio(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= IMINBUYINRATIO_FIELD_NUMBER;
                            this.iMaxBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.iMinBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ey;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ez.ensureFieldAccessorsInitialized(CSResetBuyinRatio.class, Builder.class);
        }

        static {
            PARSER = new C11811();
            CSResetBuyinRatio cSResetBuyinRatio = new CSResetBuyinRatio(true);
            defaultInstance = cSResetBuyinRatio;
            cSResetBuyinRatio.initFields();
        }

        public final Parser<CSResetBuyinRatio> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasIMaxBuyinRatio() {
            return (this.bitField0_ & IMINBUYINRATIO_FIELD_NUMBER) == IMINBUYINRATIO_FIELD_NUMBER;
        }

        public final int getIMaxBuyinRatio() {
            return this.iMaxBuyinRatio_;
        }

        public final boolean hasIMinBuyinRatio() {
            return (this.bitField0_ & 8) == 8;
        }

        public final int getIMinBuyinRatio() {
            return this.iMinBuyinRatio_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.iMaxBuyinRatio_ = 0;
            this.iMinBuyinRatio_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & IMINBUYINRATIO_FIELD_NUMBER) == IMINBUYINRATIO_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt32(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & IMINBUYINRATIO_FIELD_NUMBER) == IMINBUYINRATIO_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt32Size(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSResetBuyinRatio parseFrom(ByteString byteString) {
            return (CSResetBuyinRatio) PARSER.parseFrom(byteString);
        }

        public static CSResetBuyinRatio parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetBuyinRatio) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSResetBuyinRatio parseFrom(byte[] bArr) {
            return (CSResetBuyinRatio) PARSER.parseFrom(bArr);
        }

        public static CSResetBuyinRatio parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetBuyinRatio) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSResetBuyinRatio parseFrom(InputStream inputStream) {
            return (CSResetBuyinRatio) PARSER.parseFrom(inputStream);
        }

        public static CSResetBuyinRatio parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetBuyinRatio) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetBuyinRatio parseDelimitedFrom(InputStream inputStream) {
            return (CSResetBuyinRatio) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSResetBuyinRatio parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetBuyinRatio) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetBuyinRatio parseFrom(CodedInputStream codedInputStream) {
            return (CSResetBuyinRatio) PARSER.parseFrom(codedInputStream);
        }

        public static CSResetBuyinRatio parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetBuyinRatio) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSResetBuyinRatio cSResetBuyinRatio) {
            return newBuilder().mergeFrom(cSResetBuyinRatio);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSResetPwdUploadPhonenumberOrBuilder extends MessageOrBuilder {
        LANGUAGE_TYPE getELanguageType();

        String getSCountryCode();

        ByteString getSCountryCodeBytes();

        String getSPhoneNumber();

        ByteString getSPhoneNumberBytes();

        boolean hasELanguageType();

        boolean hasSCountryCode();

        boolean hasSPhoneNumber();
    }

    public static final class CSResetPwdUploadPhonenumber extends GeneratedMessage implements CSResetPwdUploadPhonenumberOrBuilder {
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 3;
        public static Parser<CSResetPwdUploadPhonenumber> PARSER = null;
        public static final int SCOUNTRYCODE_FIELD_NUMBER = 2;
        public static final int SPHONENUMBER_FIELD_NUMBER = 1;
        private static final CSResetPwdUploadPhonenumber defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCountryCode_;
        private Object sPhoneNumber_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSResetPwdUploadPhonenumber.1 */
        class C11821 extends AbstractParser<CSResetPwdUploadPhonenumber> {
            C11821() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSResetPwdUploadPhonenumber(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSResetPwdUploadPhonenumberOrBuilder {
            private int bitField0_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object sCountryCode_;
            private Object sPhoneNumber_;

            static {
                fixHelper.fixfunc(new int[]{PointerIconCompat.TYPE_NO_DROP, PointerIconCompat.TYPE_ALL_SCROLL, PointerIconCompat.TYPE_HORIZONTAL_DOUBLE_ARROW, PointerIconCompat.TYPE_VERTICAL_DOUBLE_ARROW, PointerIconCompat.TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW, PointerIconCompat.TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW, PointerIconCompat.TYPE_ZOOM_IN, PointerIconCompat.TYPE_ZOOM_OUT, PointerIconCompat.TYPE_GRAB, PointerIconCompat.TYPE_GRABBING, 1022, 1023, AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT, InputDeviceCompat.SOURCE_GAMEPAD, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6194build();

            public final native CSResetPwdUploadPhonenumber m6195build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6196buildPartial();

            public final native CSResetPwdUploadPhonenumber m6197buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6198clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6199clear();

            public final native Builder m6200clear();

            public final native Builder clearELanguageType();

            public final native Builder clearSCountryCode();

            public final native Builder clearSPhoneNumber();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6201clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6202clone();

            public final native Builder m6203clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6204getDefaultInstanceForType();

            public final native CSResetPwdUploadPhonenumber m6205getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native LANGUAGE_TYPE getELanguageType();

            public final native String getSCountryCode();

            public final native ByteString getSCountryCodeBytes();

            public final native String getSPhoneNumber();

            public final native ByteString getSPhoneNumberBytes();

            public final native boolean hasELanguageType();

            public final native boolean hasSCountryCode();

            public final native boolean hasSPhoneNumber();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6206mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6207mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6208mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6209mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6210mergeFrom(Message message);

            public final native Builder mergeFrom(CSResetPwdUploadPhonenumber cSResetPwdUploadPhonenumber);

            public final native Builder setELanguageType(LANGUAGE_TYPE language_type);

            public final native Builder setSCountryCode(String str);

            public final native Builder setSCountryCodeBytes(ByteString byteString);

            public final native Builder setSPhoneNumber(String str);

            public final native Builder setSPhoneNumberBytes(ByteString byteString);

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8275S;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSResetPwdUploadPhonenumber(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSResetPwdUploadPhonenumber(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSResetPwdUploadPhonenumber getDefaultInstance() {
            return defaultInstance;
        }

        public final CSResetPwdUploadPhonenumber getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSResetPwdUploadPhonenumber(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = SPHONENUMBER_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPHONENUMBER_FIELD_NUMBER;
                            this.sPhoneNumber_ = readBytes;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SCOUNTRYCODE_FIELD_NUMBER;
                            this.sCountryCode_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 4;
                                this.eLanguageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = SPHONENUMBER_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8275S;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8276T.ensureFieldAccessorsInitialized(CSResetPwdUploadPhonenumber.class, Builder.class);
        }

        static {
            PARSER = new C11821();
            CSResetPwdUploadPhonenumber cSResetPwdUploadPhonenumber = new CSResetPwdUploadPhonenumber(true);
            defaultInstance = cSResetPwdUploadPhonenumber;
            cSResetPwdUploadPhonenumber.initFields();
        }

        public final Parser<CSResetPwdUploadPhonenumber> getParserForType() {
            return PARSER;
        }

        public final boolean hasSPhoneNumber() {
            return (this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER;
        }

        public final String getSPhoneNumber() {
            Object obj = this.sPhoneNumber_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPhoneNumber_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPhoneNumberBytes() {
            Object obj = this.sPhoneNumber_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPhoneNumber_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSCountryCode() {
            return (this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER;
        }

        public final String getSCountryCode() {
            Object obj = this.sCountryCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCountryCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCountryCodeBytes() {
            Object obj = this.sCountryCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCountryCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & 4) == 4;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        private void initFields() {
            this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasSPhoneNumber()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes());
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                i = CodedOutputStream.computeBytesSize(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes()) + 0;
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSResetPwdUploadPhonenumber parseFrom(ByteString byteString) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(byteString);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(byte[] bArr) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(bArr);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(InputStream inputStream) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(inputStream);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetPwdUploadPhonenumber parseDelimitedFrom(InputStream inputStream) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSResetPwdUploadPhonenumber parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(CodedInputStream codedInputStream) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(codedInputStream);
        }

        public static CSResetPwdUploadPhonenumber parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdUploadPhonenumber) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSResetPwdUploadPhonenumber cSResetPwdUploadPhonenumber) {
            return newBuilder().mergeFrom(cSResetPwdUploadPhonenumber);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSResetPwdVerifyCodeOrBuilder extends MessageOrBuilder {
        String getSCountryCode();

        ByteString getSCountryCodeBytes();

        String getSNewPassword();

        ByteString getSNewPasswordBytes();

        String getSPhoneNumber();

        ByteString getSPhoneNumberBytes();

        String getSVeryifyCode();

        ByteString getSVeryifyCodeBytes();

        boolean hasSCountryCode();

        boolean hasSNewPassword();

        boolean hasSPhoneNumber();

        boolean hasSVeryifyCode();
    }

    public static final class CSResetPwdVerifyCode extends GeneratedMessage implements CSResetPwdVerifyCodeOrBuilder {
        public static Parser<CSResetPwdVerifyCode> PARSER = null;
        public static final int SCOUNTRYCODE_FIELD_NUMBER = 4;
        public static final int SNEWPASSWORD_FIELD_NUMBER = 3;
        public static final int SPHONENUMBER_FIELD_NUMBER = 1;
        public static final int SVERYIFYCODE_FIELD_NUMBER = 2;
        private static final CSResetPwdVerifyCode defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCountryCode_;
        private Object sNewPassword_;
        private Object sPhoneNumber_;
        private Object sVeryifyCode_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode.1 */
        class C11831 extends AbstractParser<CSResetPwdVerifyCode> {
            C11831() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSResetPwdVerifyCode(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSResetPwdVerifyCodeOrBuilder {
            private int bitField0_;
            private Object sCountryCode_;
            private Object sNewPassword_;
            private Object sPhoneNumber_;
            private Object sVeryifyCode_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8279W;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8280X.ensureFieldAccessorsInitialized(CSResetPwdVerifyCode.class, Builder.class);
            }

            private Builder() {
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sNewPassword_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sNewPassword_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSResetPwdVerifyCode.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -2;
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.sNewPassword_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8279W;
            }

            public final CSResetPwdVerifyCode getDefaultInstanceForType() {
                return CSResetPwdVerifyCode.getDefaultInstance();
            }

            public final CSResetPwdVerifyCode build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSResetPwdVerifyCode buildPartial() {
                int i = CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                CSResetPwdVerifyCode cSResetPwdVerifyCode = new CSResetPwdVerifyCode(null);
                int i2 = this.bitField0_;
                if ((i2 & CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER) != CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER) {
                    i = 0;
                }
                cSResetPwdVerifyCode.sPhoneNumber_ = this.sPhoneNumber_;
                if ((i2 & CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER) == CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER) {
                    i |= CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                }
                cSResetPwdVerifyCode.sVeryifyCode_ = this.sVeryifyCode_;
                if ((i2 & CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) == CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) {
                    i |= CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                }
                cSResetPwdVerifyCode.sNewPassword_ = this.sNewPassword_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSResetPwdVerifyCode.sCountryCode_ = this.sCountryCode_;
                cSResetPwdVerifyCode.bitField0_ = i;
                onBuilt();
                return cSResetPwdVerifyCode;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSResetPwdVerifyCode) {
                    return mergeFrom((CSResetPwdVerifyCode) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSResetPwdVerifyCode cSResetPwdVerifyCode) {
                if (cSResetPwdVerifyCode != CSResetPwdVerifyCode.getDefaultInstance()) {
                    if (cSResetPwdVerifyCode.hasSPhoneNumber()) {
                        this.bitField0_ |= CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                        this.sPhoneNumber_ = cSResetPwdVerifyCode.sPhoneNumber_;
                        onChanged();
                    }
                    if (cSResetPwdVerifyCode.hasSVeryifyCode()) {
                        this.bitField0_ |= CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                        this.sVeryifyCode_ = cSResetPwdVerifyCode.sVeryifyCode_;
                        onChanged();
                    }
                    if (cSResetPwdVerifyCode.hasSNewPassword()) {
                        this.bitField0_ |= CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                        this.sNewPassword_ = cSResetPwdVerifyCode.sNewPassword_;
                        onChanged();
                    }
                    if (cSResetPwdVerifyCode.hasSCountryCode()) {
                        this.bitField0_ |= 8;
                        this.sCountryCode_ = cSResetPwdVerifyCode.sCountryCode_;
                        onChanged();
                    }
                    mergeUnknownFields(cSResetPwdVerifyCode.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasSPhoneNumber() && hasSVeryifyCode() && hasSNewPassword()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSResetPwdVerifyCode.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSResetPwdVerifyCode$Builder");
            }

            public final boolean hasSPhoneNumber() {
                return (this.bitField0_ & CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER) == CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER;
            }

            public final String getSPhoneNumber() {
                Object obj = this.sPhoneNumber_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sPhoneNumber_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSPhoneNumberBytes() {
                Object obj = this.sPhoneNumber_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sPhoneNumber_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSPhoneNumber(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                this.sPhoneNumber_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSPhoneNumber() {
                this.bitField0_ &= -2;
                this.sPhoneNumber_ = CSResetPwdVerifyCode.getDefaultInstance().getSPhoneNumber();
                onChanged();
                return this;
            }

            public final Builder setSPhoneNumberBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SPHONENUMBER_FIELD_NUMBER;
                this.sPhoneNumber_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSVeryifyCode() {
                return (this.bitField0_ & CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER) == CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
            }

            public final String getSVeryifyCode() {
                Object obj = this.sVeryifyCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sVeryifyCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSVeryifyCodeBytes() {
                Object obj = this.sVeryifyCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sVeryifyCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSVeryifyCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                this.sVeryifyCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSVeryifyCode() {
                this.bitField0_ &= -3;
                this.sVeryifyCode_ = CSResetPwdVerifyCode.getDefaultInstance().getSVeryifyCode();
                onChanged();
                return this;
            }

            public final Builder setSVeryifyCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                this.sVeryifyCode_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSNewPassword() {
                return (this.bitField0_ & CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER) == CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
            }

            public final String getSNewPassword() {
                Object obj = this.sNewPassword_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sNewPassword_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSNewPasswordBytes() {
                Object obj = this.sNewPassword_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sNewPassword_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSNewPassword(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                this.sNewPassword_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSNewPassword() {
                this.bitField0_ &= -5;
                this.sNewPassword_ = CSResetPwdVerifyCode.getDefaultInstance().getSNewPassword();
                onChanged();
                return this;
            }

            public final Builder setSNewPasswordBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSResetPwdVerifyCode.SCOUNTRYCODE_FIELD_NUMBER;
                this.sNewPassword_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSCountryCode() {
                return (this.bitField0_ & 8) == 8;
            }

            public final String getSCountryCode() {
                Object obj = this.sCountryCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCountryCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCountryCodeBytes() {
                Object obj = this.sCountryCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCountryCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCountryCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.sCountryCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCountryCode() {
                this.bitField0_ &= -9;
                this.sCountryCode_ = CSResetPwdVerifyCode.getDefaultInstance().getSCountryCode();
                onChanged();
                return this;
            }

            public final Builder setSCountryCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.sCountryCode_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSResetPwdVerifyCode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSResetPwdVerifyCode(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSResetPwdVerifyCode getDefaultInstance() {
            return defaultInstance;
        }

        public final CSResetPwdVerifyCode getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSResetPwdVerifyCode(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = SPHONENUMBER_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPHONENUMBER_FIELD_NUMBER;
                            this.sPhoneNumber_ = readBytes;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SVERYIFYCODE_FIELD_NUMBER;
                            this.sVeryifyCode_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SCOUNTRYCODE_FIELD_NUMBER;
                            this.sNewPassword_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.sCountryCode_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = SPHONENUMBER_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8279W;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8280X.ensureFieldAccessorsInitialized(CSResetPwdVerifyCode.class, Builder.class);
        }

        static {
            PARSER = new C11831();
            CSResetPwdVerifyCode cSResetPwdVerifyCode = new CSResetPwdVerifyCode(true);
            defaultInstance = cSResetPwdVerifyCode;
            cSResetPwdVerifyCode.initFields();
        }

        public final Parser<CSResetPwdVerifyCode> getParserForType() {
            return PARSER;
        }

        public final boolean hasSPhoneNumber() {
            return (this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER;
        }

        public final String getSPhoneNumber() {
            Object obj = this.sPhoneNumber_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPhoneNumber_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPhoneNumberBytes() {
            Object obj = this.sPhoneNumber_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPhoneNumber_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSVeryifyCode() {
            return (this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER;
        }

        public final String getSVeryifyCode() {
            Object obj = this.sVeryifyCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sVeryifyCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSVeryifyCodeBytes() {
            Object obj = this.sVeryifyCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sVeryifyCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSNewPassword() {
            return (this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER;
        }

        public final String getSNewPassword() {
            Object obj = this.sNewPassword_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sNewPassword_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSNewPasswordBytes() {
            Object obj = this.sNewPassword_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sNewPassword_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSCountryCode() {
            return (this.bitField0_ & 8) == 8;
        }

        public final String getSCountryCode() {
            Object obj = this.sCountryCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCountryCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCountryCodeBytes() {
            Object obj = this.sCountryCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCountryCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sNewPassword_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasSPhoneNumber()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSVeryifyCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasSNewPassword()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes());
            }
            if ((this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SVERYIFYCODE_FIELD_NUMBER, getSVeryifyCodeBytes());
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SNEWPASSWORD_FIELD_NUMBER, getSNewPasswordBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBytes(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                i = CodedOutputStream.computeBytesSize(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes()) + 0;
            }
            if ((this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SVERYIFYCODE_FIELD_NUMBER, getSVeryifyCodeBytes());
            }
            if ((this.bitField0_ & SCOUNTRYCODE_FIELD_NUMBER) == SCOUNTRYCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SNEWPASSWORD_FIELD_NUMBER, getSNewPasswordBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeBytesSize(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSResetPwdVerifyCode parseFrom(ByteString byteString) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(byteString);
        }

        public static CSResetPwdVerifyCode parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSResetPwdVerifyCode parseFrom(byte[] bArr) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(bArr);
        }

        public static CSResetPwdVerifyCode parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSResetPwdVerifyCode parseFrom(InputStream inputStream) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(inputStream);
        }

        public static CSResetPwdVerifyCode parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetPwdVerifyCode parseDelimitedFrom(InputStream inputStream) {
            return (CSResetPwdVerifyCode) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSResetPwdVerifyCode parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdVerifyCode) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSResetPwdVerifyCode parseFrom(CodedInputStream codedInputStream) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(codedInputStream);
        }

        public static CSResetPwdVerifyCode parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSResetPwdVerifyCode) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSResetPwdVerifyCode cSResetPwdVerifyCode) {
            return newBuilder().mergeFrom(cSResetPwdVerifyCode);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSReturnGameOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSReturnGame extends GeneratedMessage implements CSReturnGameOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSReturnGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSReturnGame defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSReturnGame.1 */
        class C11841 extends AbstractParser<CSReturnGame> {
            C11841() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSReturnGame(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSReturnGameOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eG;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eH.ensureFieldAccessorsInitialized(CSReturnGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSReturnGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eG;
            }

            public final CSReturnGame getDefaultInstanceForType() {
                return CSReturnGame.getDefaultInstance();
            }

            public final CSReturnGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSReturnGame buildPartial() {
                int i = CSReturnGame.UUID_FIELD_NUMBER;
                CSReturnGame cSReturnGame = new CSReturnGame((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSReturnGame.UUID_FIELD_NUMBER) != CSReturnGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSReturnGame.uuid_ = this.uuid_;
                if ((i2 & CSReturnGame.LGAMEROOMID_FIELD_NUMBER) == CSReturnGame.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSReturnGame.LGAMEROOMID_FIELD_NUMBER;
                }
                cSReturnGame.lGameRoomID_ = this.lGameRoomID_;
                cSReturnGame.bitField0_ = i;
                onBuilt();
                return cSReturnGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSReturnGame) {
                    return mergeFrom((CSReturnGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSReturnGame cSReturnGame) {
                if (cSReturnGame != CSReturnGame.getDefaultInstance()) {
                    if (cSReturnGame.hasUuid()) {
                        setUuid(cSReturnGame.getUuid());
                    }
                    if (cSReturnGame.hasLGameRoomID()) {
                        setLGameRoomID(cSReturnGame.getLGameRoomID());
                    }
                    mergeUnknownFields(cSReturnGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSReturnGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSReturnGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSReturnGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSReturnGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSReturnGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSReturnGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSReturnGame.UUID_FIELD_NUMBER) == CSReturnGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSReturnGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSReturnGame.LGAMEROOMID_FIELD_NUMBER) == CSReturnGame.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSReturnGame.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSReturnGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSReturnGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSReturnGame cSReturnGame);

        private native CSReturnGame(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSReturnGame(com.google.protobuf.GeneratedMessage.Builder builder, CSReturnGame cSReturnGame);

        private native CSReturnGame(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6211getDefaultInstanceForType();

        public final native CSReturnGame m6212getDefaultInstanceForType();

        public final native long getLGameRoomID();

        public final native Parser<CSReturnGame> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6213newBuilderForType();

        public final native Builder m6214newBuilderForType();

        protected final native Builder m6215newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6216toBuilder();

        public final native Builder m6217toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSReturnGame getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eG;
        }

        static void __clinit__() {
            PARSER = new C11841();
            CSReturnGame cSReturnGame = new CSReturnGame(true);
            defaultInstance = cSReturnGame;
            cSReturnGame.initFields();
        }

        public static CSReturnGame parseFrom(ByteString byteString) {
            return (CSReturnGame) PARSER.parseFrom(byteString);
        }

        public static CSReturnGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReturnGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSReturnGame parseFrom(byte[] bArr) {
            return (CSReturnGame) PARSER.parseFrom(bArr);
        }

        public static CSReturnGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReturnGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSReturnGame parseFrom(InputStream inputStream) {
            return (CSReturnGame) PARSER.parseFrom(inputStream);
        }

        public static CSReturnGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReturnGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSReturnGame parseDelimitedFrom(InputStream inputStream) {
            return (CSReturnGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSReturnGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReturnGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSReturnGame parseFrom(CodedInputStream codedInputStream) {
            return (CSReturnGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSReturnGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSReturnGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSReturnGame cSReturnGame) {
            return newBuilder().mergeFrom(cSReturnGame);
        }
    }

    public interface CSSendMsgOrBuilder extends MessageOrBuilder {
        CHAT_MESSAGE_TYPE getEChatMessageType();

        CHAT_TYPE getETalkType();

        long getLDuration();

        long getLMsgId();

        long getLTalkwith();

        String getSMsg();

        ByteString getSMsgBytes();

        NetPageShareInfoNet getStNetPageShareInfoNet();

        NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder();

        PicPackageInfoNet getStPicPackageInfo();

        PicPackageInfoNetOrBuilder getStPicPackageInfoOrBuilder();

        PokerProcessInfo getStPokerProcessBaseInfo();

        PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder();

        ShareBillInfoNet getStShareBillInfo();

        ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder();

        SharePokerHistoryInfo getStSharePokerHistoryInfo();

        SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder();

        long getUuid();

        String getVExtras(int i);

        ByteString getVExtrasBytes(int i);

        int getVExtrasCount();

        ProtocolStringList getVExtrasList();

        ByteString getVVoiceDatas();

        boolean hasEChatMessageType();

        boolean hasETalkType();

        boolean hasLDuration();

        boolean hasLMsgId();

        boolean hasLTalkwith();

        boolean hasSMsg();

        boolean hasStNetPageShareInfoNet();

        boolean hasStPicPackageInfo();

        boolean hasStPokerProcessBaseInfo();

        boolean hasStShareBillInfo();

        boolean hasStSharePokerHistoryInfo();

        boolean hasUuid();

        boolean hasVVoiceDatas();
    }

    public static final class CSSendMsg extends GeneratedMessage implements CSSendMsgOrBuilder {
        public static final int ECHATMESSAGETYPE_FIELD_NUMBER = 4;
        public static final int ETALKTYPE_FIELD_NUMBER = 3;
        public static final int LDURATION_FIELD_NUMBER = 11;
        public static final int LMSGID_FIELD_NUMBER = 10;
        public static final int LTALKWITH_FIELD_NUMBER = 2;
        public static Parser<CSSendMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 5;
        public static final int STNETPAGESHAREINFONET_FIELD_NUMBER = 12;
        public static final int STPICPACKAGEINFO_FIELD_NUMBER = 9;
        public static final int STPOKERPROCESSBASEINFO_FIELD_NUMBER = 8;
        public static final int STSHAREBILLINFO_FIELD_NUMBER = 7;
        public static final int STSHAREPOKERHISTORYINFO_FIELD_NUMBER = 13;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VEXTRAS_FIELD_NUMBER = 14;
        public static final int VVOICEDATAS_FIELD_NUMBER = 6;
        private static final CSSendMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private CHAT_MESSAGE_TYPE eChatMessageType_;
        private CHAT_TYPE eTalkType_;
        private long lDuration_;
        private long lMsgId_;
        private long lTalkwith_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private NetPageShareInfoNet stNetPageShareInfoNet_;
        private PicPackageInfoNet stPicPackageInfo_;
        private PokerProcessInfo stPokerProcessBaseInfo_;
        private ShareBillInfoNet stShareBillInfo_;
        private SharePokerHistoryInfo stSharePokerHistoryInfo_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private LazyStringList vExtras_;
        private ByteString vVoiceDatas_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSendMsg.1 */
        class C11851 extends AbstractParser<CSSendMsg> {
            C11851() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSendMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSendMsgOrBuilder {
            private int bitField0_;
            private CHAT_MESSAGE_TYPE eChatMessageType_;
            private CHAT_TYPE eTalkType_;
            private long lDuration_;
            private long lMsgId_;
            private long lTalkwith_;
            private Object sMsg_;
            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> stNetPageShareInfoNetBuilder_;
            private NetPageShareInfoNet stNetPageShareInfoNet_;
            private SingleFieldBuilder<PicPackageInfoNet, Builder, PicPackageInfoNetOrBuilder> stPicPackageInfoBuilder_;
            private PicPackageInfoNet stPicPackageInfo_;
            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> stPokerProcessBaseInfoBuilder_;
            private PokerProcessInfo stPokerProcessBaseInfo_;
            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> stShareBillInfoBuilder_;
            private ShareBillInfoNet stShareBillInfo_;
            private SingleFieldBuilder<SharePokerHistoryInfo, com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder, SharePokerHistoryInfoOrBuilder> stSharePokerHistoryInfoBuilder_;
            private SharePokerHistoryInfo stSharePokerHistoryInfo_;
            private long uuid_;
            private LazyStringList vExtras_;
            private ByteString vVoiceDatas_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eQ;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eR.ensureFieldAccessorsInitialized(CSSendMsg.class, Builder.class);
            }

            private Builder() {
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.stPicPackageInfo_ = PicPackageInfoNet.getDefaultInstance();
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                this.vExtras_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.stPicPackageInfo_ = PicPackageInfoNet.getDefaultInstance();
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                this.vExtras_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSSendMsg.alwaysUseFieldBuilders) {
                    getStShareBillInfoFieldBuilder();
                    getStPokerProcessBaseInfoFieldBuilder();
                    getStPicPackageInfoFieldBuilder();
                    getStNetPageShareInfoNetFieldBuilder();
                    getStSharePokerHistoryInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lTalkwith_ = 0;
                this.bitField0_ &= -3;
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.bitField0_ &= -5;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.bitField0_ &= -9;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.bitField0_ &= -33;
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -65;
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                if (this.stPicPackageInfoBuilder_ == null) {
                    this.stPicPackageInfo_ = PicPackageInfoNet.getDefaultInstance();
                } else {
                    this.stPicPackageInfoBuilder_.clear();
                }
                this.bitField0_ &= -257;
                this.lMsgId_ = 0;
                this.bitField0_ &= -513;
                this.lDuration_ = 0;
                this.bitField0_ &= -1025;
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -2049;
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.clear();
                }
                this.bitField0_ &= -4097;
                this.vExtras_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -8193;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eQ;
            }

            public final CSSendMsg getDefaultInstanceForType() {
                return CSSendMsg.getDefaultInstance();
            }

            public final CSSendMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSendMsg buildPartial() {
                int i;
                int i2 = CSSendMsg.UUID_FIELD_NUMBER;
                CSSendMsg cSSendMsg = new CSSendMsg(null);
                int i3 = this.bitField0_;
                if ((i3 & CSSendMsg.UUID_FIELD_NUMBER) != CSSendMsg.UUID_FIELD_NUMBER) {
                    i2 = 0;
                }
                cSSendMsg.uuid_ = this.uuid_;
                if ((i3 & CSSendMsg.LTALKWITH_FIELD_NUMBER) == CSSendMsg.LTALKWITH_FIELD_NUMBER) {
                    i2 |= CSSendMsg.LTALKWITH_FIELD_NUMBER;
                }
                cSSendMsg.lTalkwith_ = this.lTalkwith_;
                if ((i3 & CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER) == CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER;
                }
                cSSendMsg.eTalkType_ = this.eTalkType_;
                if ((i3 & CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER) == CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER) {
                    i2 |= CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER;
                }
                cSSendMsg.eChatMessageType_ = this.eChatMessageType_;
                if ((i3 & 16) == 16) {
                    i2 |= 16;
                }
                cSSendMsg.sMsg_ = this.sMsg_;
                if ((i3 & 32) == 32) {
                    i2 |= 32;
                }
                cSSendMsg.vVoiceDatas_ = this.vVoiceDatas_;
                if ((i3 & 64) == 64) {
                    i = i2 | 64;
                } else {
                    i = i2;
                }
                if (this.stShareBillInfoBuilder_ == null) {
                    cSSendMsg.stShareBillInfo_ = this.stShareBillInfo_;
                } else {
                    cSSendMsg.stShareBillInfo_ = (ShareBillInfoNet) this.stShareBillInfoBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    cSSendMsg.stPokerProcessBaseInfo_ = this.stPokerProcessBaseInfo_;
                } else {
                    cSSendMsg.stPokerProcessBaseInfo_ = (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                if (this.stPicPackageInfoBuilder_ == null) {
                    cSSendMsg.stPicPackageInfo_ = this.stPicPackageInfo_;
                } else {
                    cSSendMsg.stPicPackageInfo_ = (PicPackageInfoNet) this.stPicPackageInfoBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                cSSendMsg.lMsgId_ = this.lMsgId_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                cSSendMsg.lDuration_ = this.lDuration_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    cSSendMsg.stNetPageShareInfoNet_ = this.stNetPageShareInfoNet_;
                } else {
                    cSSendMsg.stNetPageShareInfoNet_ = (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.build();
                }
                if ((i3 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                }
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    cSSendMsg.stSharePokerHistoryInfo_ = this.stSharePokerHistoryInfo_;
                } else {
                    cSSendMsg.stSharePokerHistoryInfo_ = (SharePokerHistoryInfo) this.stSharePokerHistoryInfoBuilder_.build();
                }
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    this.vExtras_ = this.vExtras_.getUnmodifiableView();
                    this.bitField0_ &= -8193;
                }
                cSSendMsg.vExtras_ = this.vExtras_;
                cSSendMsg.bitField0_ = i;
                onBuilt();
                return cSSendMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSendMsg) {
                    return mergeFrom((CSSendMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSendMsg cSSendMsg) {
                if (cSSendMsg != CSSendMsg.getDefaultInstance()) {
                    if (cSSendMsg.hasUuid()) {
                        setUuid(cSSendMsg.getUuid());
                    }
                    if (cSSendMsg.hasLTalkwith()) {
                        setLTalkwith(cSSendMsg.getLTalkwith());
                    }
                    if (cSSendMsg.hasETalkType()) {
                        setETalkType(cSSendMsg.getETalkType());
                    }
                    if (cSSendMsg.hasEChatMessageType()) {
                        setEChatMessageType(cSSendMsg.getEChatMessageType());
                    }
                    if (cSSendMsg.hasSMsg()) {
                        this.bitField0_ |= 16;
                        this.sMsg_ = cSSendMsg.sMsg_;
                        onChanged();
                    }
                    if (cSSendMsg.hasVVoiceDatas()) {
                        setVVoiceDatas(cSSendMsg.getVVoiceDatas());
                    }
                    if (cSSendMsg.hasStShareBillInfo()) {
                        mergeStShareBillInfo(cSSendMsg.getStShareBillInfo());
                    }
                    if (cSSendMsg.hasStPokerProcessBaseInfo()) {
                        mergeStPokerProcessBaseInfo(cSSendMsg.getStPokerProcessBaseInfo());
                    }
                    if (cSSendMsg.hasStPicPackageInfo()) {
                        mergeStPicPackageInfo(cSSendMsg.getStPicPackageInfo());
                    }
                    if (cSSendMsg.hasLMsgId()) {
                        setLMsgId(cSSendMsg.getLMsgId());
                    }
                    if (cSSendMsg.hasLDuration()) {
                        setLDuration(cSSendMsg.getLDuration());
                    }
                    if (cSSendMsg.hasStNetPageShareInfoNet()) {
                        mergeStNetPageShareInfoNet(cSSendMsg.getStNetPageShareInfoNet());
                    }
                    if (cSSendMsg.hasStSharePokerHistoryInfo()) {
                        mergeStSharePokerHistoryInfo(cSSendMsg.getStSharePokerHistoryInfo());
                    }
                    if (!cSSendMsg.vExtras_.isEmpty()) {
                        if (this.vExtras_.isEmpty()) {
                            this.vExtras_ = cSSendMsg.vExtras_;
                            this.bitField0_ &= -8193;
                        } else {
                            ensureVExtrasIsMutable();
                            this.vExtras_.addAll(cSSendMsg.vExtras_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSSendMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasLTalkwith() || !hasETalkType() || !hasEChatMessageType() || !hasLMsgId()) {
                    return false;
                }
                if (hasStShareBillInfo() && !getStShareBillInfo().isInitialized()) {
                    return false;
                }
                if (hasStPokerProcessBaseInfo() && !getStPokerProcessBaseInfo().isInitialized()) {
                    return false;
                }
                if (hasStPicPackageInfo() && !getStPicPackageInfo().isInitialized()) {
                    return false;
                }
                if (hasStNetPageShareInfoNet() && !getStNetPageShareInfoNet().isInitialized()) {
                    return false;
                }
                if (!hasStSharePokerHistoryInfo() || getStSharePokerHistoryInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSendMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSendMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSendMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSendMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSendMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSendMsg$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSendMsg.UUID_FIELD_NUMBER) == CSSendMsg.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSendMsg.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLTalkwith() {
                return (this.bitField0_ & CSSendMsg.LTALKWITH_FIELD_NUMBER) == CSSendMsg.LTALKWITH_FIELD_NUMBER;
            }

            public final long getLTalkwith() {
                return this.lTalkwith_;
            }

            public final Builder setLTalkwith(long j) {
                this.bitField0_ |= CSSendMsg.LTALKWITH_FIELD_NUMBER;
                this.lTalkwith_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLTalkwith() {
                this.bitField0_ &= -3;
                this.lTalkwith_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasETalkType() {
                return (this.bitField0_ & CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER) == CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER;
            }

            public final CHAT_TYPE getETalkType() {
                return this.eTalkType_;
            }

            public final Builder setETalkType(CHAT_TYPE chat_type) {
                if (chat_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsg.ECHATMESSAGETYPE_FIELD_NUMBER;
                this.eTalkType_ = chat_type;
                onChanged();
                return this;
            }

            public final Builder clearETalkType() {
                this.bitField0_ &= -5;
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                onChanged();
                return this;
            }

            public final boolean hasEChatMessageType() {
                return (this.bitField0_ & CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER) == CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER;
            }

            public final CHAT_MESSAGE_TYPE getEChatMessageType() {
                return this.eChatMessageType_;
            }

            public final Builder setEChatMessageType(CHAT_MESSAGE_TYPE chat_message_type) {
                if (chat_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsg.STPOKERPROCESSBASEINFO_FIELD_NUMBER;
                this.eChatMessageType_ = chat_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEChatMessageType() {
                this.bitField0_ &= -9;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                onChanged();
                return this;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -17;
                this.sMsg_ = CSSendMsg.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasVVoiceDatas() {
                return (this.bitField0_ & 32) == 32;
            }

            public final ByteString getVVoiceDatas() {
                return this.vVoiceDatas_;
            }

            public final Builder setVVoiceDatas(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.vVoiceDatas_ = byteString;
                onChanged();
                return this;
            }

            public final Builder clearVVoiceDatas() {
                this.bitField0_ &= -33;
                this.vVoiceDatas_ = CSSendMsg.getDefaultInstance().getVVoiceDatas();
                onChanged();
                return this;
            }

            public final boolean hasStShareBillInfo() {
                return (this.bitField0_ & 64) == 64;
            }

            public final ShareBillInfoNet getStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    return this.stShareBillInfo_;
                }
                return (ShareBillInfoNet) this.stShareBillInfoBuilder_.getMessage();
            }

            public final Builder setStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ != null) {
                    this.stShareBillInfoBuilder_.setMessage(shareBillInfoNet);
                } else if (shareBillInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stShareBillInfo_ = shareBillInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder setStShareBillInfo(com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder builder) {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder mergeStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ == null) {
                    if ((this.bitField0_ & 64) != 64 || this.stShareBillInfo_ == ShareBillInfoNet.getDefaultInstance()) {
                        this.stShareBillInfo_ = shareBillInfoNet;
                    } else {
                        this.stShareBillInfo_ = ShareBillInfoNet.newBuilder(this.stShareBillInfo_).mergeFrom(shareBillInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.mergeFrom(shareBillInfoNet);
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder clearStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -65;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder getStShareBillInfoBuilder() {
                this.bitField0_ |= 64;
                onChanged();
                return (com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder) getStShareBillInfoFieldBuilder().getBuilder();
            }

            public final ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder() {
                if (this.stShareBillInfoBuilder_ != null) {
                    return (ShareBillInfoNetOrBuilder) this.stShareBillInfoBuilder_.getMessageOrBuilder();
                }
                return this.stShareBillInfo_;
            }

            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> getStShareBillInfoFieldBuilder() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfoBuilder_ = new SingleFieldBuilder(getStShareBillInfo(), getParentForChildren(), isClean());
                    this.stShareBillInfo_ = null;
                }
                return this.stShareBillInfoBuilder_;
            }

            public final boolean hasStPokerProcessBaseInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final PokerProcessInfo getStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    return this.stPokerProcessBaseInfo_;
                }
                return (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.getMessage();
            }

            public final Builder setStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(pokerProcessInfo);
                } else if (pokerProcessInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder setStPokerProcessBaseInfo(com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder builder) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder mergeStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) != AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS || this.stPokerProcessBaseInfo_ == PokerProcessInfo.getDefaultInstance()) {
                        this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    } else {
                        this.stPokerProcessBaseInfo_ = PokerProcessInfo.newBuilder(this.stPokerProcessBaseInfo_).mergeFrom(pokerProcessInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.mergeFrom(pokerProcessInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder clearStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder getStPokerProcessBaseInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder) getStPokerProcessBaseInfoFieldBuilder().getBuilder();
            }

            public final PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    return (PokerProcessInfoOrBuilder) this.stPokerProcessBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stPokerProcessBaseInfo_;
            }

            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> getStPokerProcessBaseInfoFieldBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfoBuilder_ = new SingleFieldBuilder(getStPokerProcessBaseInfo(), getParentForChildren(), isClean());
                    this.stPokerProcessBaseInfo_ = null;
                }
                return this.stPokerProcessBaseInfoBuilder_;
            }

            public final boolean hasStPicPackageInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final PicPackageInfoNet getStPicPackageInfo() {
                if (this.stPicPackageInfoBuilder_ == null) {
                    return this.stPicPackageInfo_;
                }
                return (PicPackageInfoNet) this.stPicPackageInfoBuilder_.getMessage();
            }

            public final Builder setStPicPackageInfo(PicPackageInfoNet picPackageInfoNet) {
                if (this.stPicPackageInfoBuilder_ != null) {
                    this.stPicPackageInfoBuilder_.setMessage(picPackageInfoNet);
                } else if (picPackageInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stPicPackageInfo_ = picPackageInfoNet;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder setStPicPackageInfo(Builder builder) {
                if (this.stPicPackageInfoBuilder_ == null) {
                    this.stPicPackageInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stPicPackageInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder mergeStPicPackageInfo(PicPackageInfoNet picPackageInfoNet) {
                if (this.stPicPackageInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY || this.stPicPackageInfo_ == PicPackageInfoNet.getDefaultInstance()) {
                        this.stPicPackageInfo_ = picPackageInfoNet;
                    } else {
                        this.stPicPackageInfo_ = PicPackageInfoNet.newBuilder(this.stPicPackageInfo_).mergeFrom(picPackageInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stPicPackageInfoBuilder_.mergeFrom(picPackageInfoNet);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder clearStPicPackageInfo() {
                if (this.stPicPackageInfoBuilder_ == null) {
                    this.stPicPackageInfo_ = PicPackageInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stPicPackageInfoBuilder_.clear();
                }
                this.bitField0_ &= -257;
                return this;
            }

            public final Builder getStPicPackageInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                onChanged();
                return (Builder) getStPicPackageInfoFieldBuilder().getBuilder();
            }

            public final PicPackageInfoNetOrBuilder getStPicPackageInfoOrBuilder() {
                if (this.stPicPackageInfoBuilder_ != null) {
                    return (PicPackageInfoNetOrBuilder) this.stPicPackageInfoBuilder_.getMessageOrBuilder();
                }
                return this.stPicPackageInfo_;
            }

            private SingleFieldBuilder<PicPackageInfoNet, Builder, PicPackageInfoNetOrBuilder> getStPicPackageInfoFieldBuilder() {
                if (this.stPicPackageInfoBuilder_ == null) {
                    this.stPicPackageInfoBuilder_ = new SingleFieldBuilder(getStPicPackageInfo(), getParentForChildren(), isClean());
                    this.stPicPackageInfo_ = null;
                }
                return this.stPicPackageInfoBuilder_;
            }

            public final boolean hasLMsgId() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLMsgId() {
                return this.lMsgId_;
            }

            public final Builder setLMsgId(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.lMsgId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgId() {
                this.bitField0_ &= -513;
                this.lMsgId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLDuration() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final long getLDuration() {
                return this.lDuration_;
            }

            public final Builder setLDuration(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.lDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLDuration() {
                this.bitField0_ &= -1025;
                this.lDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStNetPageShareInfoNet() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final NetPageShareInfoNet getStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    return this.stNetPageShareInfoNet_;
                }
                return (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.getMessage();
            }

            public final Builder setStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    this.stNetPageShareInfoNetBuilder_.setMessage(netPageShareInfoNet);
                } else if (netPageShareInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder setStNetPageShareInfoNet(Builder builder) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder mergeStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) != AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT || this.stNetPageShareInfoNet_ == NetPageShareInfoNet.getDefaultInstance()) {
                        this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    } else {
                        this.stNetPageShareInfoNet_ = NetPageShareInfoNet.newBuilder(this.stNetPageShareInfoNet_).mergeFrom(netPageShareInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.mergeFrom(netPageShareInfoNet);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder clearStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -2049;
                return this;
            }

            public final Builder getStNetPageShareInfoNetBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                onChanged();
                return (Builder) getStNetPageShareInfoNetFieldBuilder().getBuilder();
            }

            public final NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    return (NetPageShareInfoNetOrBuilder) this.stNetPageShareInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stNetPageShareInfoNet_;
            }

            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> getStNetPageShareInfoNetFieldBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNetBuilder_ = new SingleFieldBuilder(getStNetPageShareInfoNet(), getParentForChildren(), isClean());
                    this.stNetPageShareInfoNet_ = null;
                }
                return this.stNetPageShareInfoNetBuilder_;
            }

            public final boolean hasStSharePokerHistoryInfo() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final SharePokerHistoryInfo getStSharePokerHistoryInfo() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    return this.stSharePokerHistoryInfo_;
                }
                return (SharePokerHistoryInfo) this.stSharePokerHistoryInfoBuilder_.getMessage();
            }

            public final Builder setStSharePokerHistoryInfo(SharePokerHistoryInfo sharePokerHistoryInfo) {
                if (this.stSharePokerHistoryInfoBuilder_ != null) {
                    this.stSharePokerHistoryInfoBuilder_.setMessage(sharePokerHistoryInfo);
                } else if (sharePokerHistoryInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stSharePokerHistoryInfo_ = sharePokerHistoryInfo;
                    onChanged();
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder setStSharePokerHistoryInfo(com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder builder) {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder mergeStSharePokerHistoryInfo(SharePokerHistoryInfo sharePokerHistoryInfo) {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) != CodedOutputStream.DEFAULT_BUFFER_SIZE || this.stSharePokerHistoryInfo_ == SharePokerHistoryInfo.getDefaultInstance()) {
                        this.stSharePokerHistoryInfo_ = sharePokerHistoryInfo;
                    } else {
                        this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.newBuilder(this.stSharePokerHistoryInfo_).mergeFrom(sharePokerHistoryInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.mergeFrom(sharePokerHistoryInfo);
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder clearStSharePokerHistoryInfo() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.clear();
                }
                this.bitField0_ &= -4097;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder getStSharePokerHistoryInfoBuilder() {
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder) getStSharePokerHistoryInfoFieldBuilder().getBuilder();
            }

            public final SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder() {
                if (this.stSharePokerHistoryInfoBuilder_ != null) {
                    return (SharePokerHistoryInfoOrBuilder) this.stSharePokerHistoryInfoBuilder_.getMessageOrBuilder();
                }
                return this.stSharePokerHistoryInfo_;
            }

            private SingleFieldBuilder<SharePokerHistoryInfo, com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder, SharePokerHistoryInfoOrBuilder> getStSharePokerHistoryInfoFieldBuilder() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfoBuilder_ = new SingleFieldBuilder(getStSharePokerHistoryInfo(), getParentForChildren(), isClean());
                    this.stSharePokerHistoryInfo_ = null;
                }
                return this.stSharePokerHistoryInfoBuilder_;
            }

            private void ensureVExtrasIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) != AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    this.vExtras_ = new LazyStringArrayList(this.vExtras_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                }
            }

            public final ProtocolStringList getVExtrasList() {
                return this.vExtras_.getUnmodifiableView();
            }

            public final int getVExtrasCount() {
                return this.vExtras_.size();
            }

            public final String getVExtras(int i) {
                return (String) this.vExtras_.get(i);
            }

            public final ByteString getVExtrasBytes(int i) {
                return this.vExtras_.getByteString(i);
            }

            public final Builder setVExtras(int i, String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.set(i, str);
                onChanged();
                return this;
            }

            public final Builder addVExtras(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.add(str);
                onChanged();
                return this;
            }

            public final Builder addAllVExtras(Iterable<String> iterable) {
                ensureVExtrasIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vExtras_);
                onChanged();
                return this;
            }

            public final Builder clearVExtras() {
                this.vExtras_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -8193;
                onChanged();
                return this;
            }

            public final Builder addVExtrasBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.add(byteString);
                onChanged();
                return this;
            }
        }

        private CSSendMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSendMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSendMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSendMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSendMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case STPOKERPROCESSBASEINFO_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LTALKWITH_FIELD_NUMBER;
                            this.lTalkwith_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_TYPE valueOf = CHAT_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= ECHATMESSAGETYPE_FIELD_NUMBER;
                                this.eTalkType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ETALKTYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_MESSAGE_TYPE valueOf2 = CHAT_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= STPOKERPROCESSBASEINFO_FIELD_NUMBER;
                                this.eChatMessageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ECHATMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.sMsg_ = readBytes;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            this.bitField0_ |= 32;
                            this.vVoiceDatas_ = codedInputStream.readBytes();
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & 64) == 64) {
                                toBuilder = this.stShareBillInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stShareBillInfo_ = (ShareBillInfoNet) codedInputStream.readMessage(ShareBillInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stShareBillInfo_);
                                this.stShareBillInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= 64;
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder toBuilder2;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                                toBuilder2 = this.stPokerProcessBaseInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stPokerProcessBaseInfo_ = (PokerProcessInfo) codedInputStream.readMessage(PokerProcessInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stPokerProcessBaseInfo_);
                                this.stPokerProcessBaseInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            Builder toBuilder3;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                                toBuilder3 = this.stPicPackageInfo_.toBuilder();
                            } else {
                                toBuilder3 = null;
                            }
                            this.stPicPackageInfo_ = (PicPackageInfoNet) codedInputStream.readMessage(PicPackageInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder3 != null) {
                                toBuilder3.mergeFrom(this.stPicPackageInfo_);
                                this.stPicPackageInfo_ = toBuilder3.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.lMsgId_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.lDuration_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_buttonBarPositiveButtonStyle /*98*/:
                            Builder toBuilder4;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                                toBuilder4 = this.stNetPageShareInfoNet_.toBuilder();
                            } else {
                                toBuilder4 = null;
                            }
                            this.stNetPageShareInfoNet_ = (NetPageShareInfoNet) codedInputStream.readMessage(NetPageShareInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder4 != null) {
                                toBuilder4.mergeFrom(this.stNetPageShareInfoNet_);
                                this.stNetPageShareInfoNet_ = toBuilder4.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                            break;
                        case R.AppCompatTheme_editTextStyle /*106*/:
                            com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder toBuilder5;
                            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                                toBuilder5 = this.stSharePokerHistoryInfo_.toBuilder();
                            } else {
                                toBuilder5 = null;
                            }
                            this.stSharePokerHistoryInfo_ = (SharePokerHistoryInfo) codedInputStream.readMessage(SharePokerHistoryInfo.PARSER, extensionRegistryLite);
                            if (toBuilder5 != null) {
                                toBuilder5.mergeFrom(this.stSharePokerHistoryInfo_);
                                this.stSharePokerHistoryInfo_ = toBuilder5.buildPartial();
                            }
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            break;
                        case R.AppCompatTheme_listMenuViewStyle /*114*/:
                            readBytes = codedInputStream.readBytes();
                            if ((i & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) != AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                                this.vExtras_ = new LazyStringArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                            }
                            this.vExtras_.add(readBytes);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                        this.vExtras_ = this.vExtras_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                this.vExtras_ = this.vExtras_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eQ;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eR.ensureFieldAccessorsInitialized(CSSendMsg.class, Builder.class);
        }

        static {
            PARSER = new C11851();
            CSSendMsg cSSendMsg = new CSSendMsg(true);
            defaultInstance = cSSendMsg;
            cSSendMsg.initFields();
        }

        public final Parser<CSSendMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLTalkwith() {
            return (this.bitField0_ & LTALKWITH_FIELD_NUMBER) == LTALKWITH_FIELD_NUMBER;
        }

        public final long getLTalkwith() {
            return this.lTalkwith_;
        }

        public final boolean hasETalkType() {
            return (this.bitField0_ & ECHATMESSAGETYPE_FIELD_NUMBER) == ECHATMESSAGETYPE_FIELD_NUMBER;
        }

        public final CHAT_TYPE getETalkType() {
            return this.eTalkType_;
        }

        public final boolean hasEChatMessageType() {
            return (this.bitField0_ & STPOKERPROCESSBASEINFO_FIELD_NUMBER) == STPOKERPROCESSBASEINFO_FIELD_NUMBER;
        }

        public final CHAT_MESSAGE_TYPE getEChatMessageType() {
            return this.eChatMessageType_;
        }

        public final boolean hasSMsg() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getSMsg() {
            Object obj = this.sMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSMsgBytes() {
            Object obj = this.sMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasVVoiceDatas() {
            return (this.bitField0_ & 32) == 32;
        }

        public final ByteString getVVoiceDatas() {
            return this.vVoiceDatas_;
        }

        public final boolean hasStShareBillInfo() {
            return (this.bitField0_ & 64) == 64;
        }

        public final ShareBillInfoNet getStShareBillInfo() {
            return this.stShareBillInfo_;
        }

        public final ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder() {
            return this.stShareBillInfo_;
        }

        public final boolean hasStPokerProcessBaseInfo() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final PokerProcessInfo getStPokerProcessBaseInfo() {
            return this.stPokerProcessBaseInfo_;
        }

        public final PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder() {
            return this.stPokerProcessBaseInfo_;
        }

        public final boolean hasStPicPackageInfo() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final PicPackageInfoNet getStPicPackageInfo() {
            return this.stPicPackageInfo_;
        }

        public final PicPackageInfoNetOrBuilder getStPicPackageInfoOrBuilder() {
            return this.stPicPackageInfo_;
        }

        public final boolean hasLMsgId() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLMsgId() {
            return this.lMsgId_;
        }

        public final boolean hasLDuration() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final long getLDuration() {
            return this.lDuration_;
        }

        public final boolean hasStNetPageShareInfoNet() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final NetPageShareInfoNet getStNetPageShareInfoNet() {
            return this.stNetPageShareInfoNet_;
        }

        public final NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder() {
            return this.stNetPageShareInfoNet_;
        }

        public final boolean hasStSharePokerHistoryInfo() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final SharePokerHistoryInfo getStSharePokerHistoryInfo() {
            return this.stSharePokerHistoryInfo_;
        }

        public final SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder() {
            return this.stSharePokerHistoryInfo_;
        }

        public final ProtocolStringList getVExtrasList() {
            return this.vExtras_;
        }

        public final int getVExtrasCount() {
            return this.vExtras_.size();
        }

        public final String getVExtras(int i) {
            return (String) this.vExtras_.get(i);
        }

        public final ByteString getVExtrasBytes(int i) {
            return this.vExtras_.getByteString(i);
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lTalkwith_ = 0;
            this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
            this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
            this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.vVoiceDatas_ = ByteString.EMPTY;
            this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
            this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
            this.stPicPackageInfo_ = PicPackageInfoNet.getDefaultInstance();
            this.lMsgId_ = 0;
            this.lDuration_ = 0;
            this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
            this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
            this.vExtras_ = LazyStringArrayList.EMPTY;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLTalkwith()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasETalkType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEChatMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLMsgId()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStShareBillInfo() && !getStShareBillInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStPokerProcessBaseInfo() && !getStPokerProcessBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStPicPackageInfo() && !getStPicPackageInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStNetPageShareInfoNet() && !getStNetPageShareInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStSharePokerHistoryInfo() || getStSharePokerHistoryInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LTALKWITH_FIELD_NUMBER) == LTALKWITH_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LTALKWITH_FIELD_NUMBER, this.lTalkwith_);
            }
            if ((this.bitField0_ & ECHATMESSAGETYPE_FIELD_NUMBER) == ECHATMESSAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ETALKTYPE_FIELD_NUMBER, this.eTalkType_.getNumber());
            }
            if ((this.bitField0_ & STPOKERPROCESSBASEINFO_FIELD_NUMBER) == STPOKERPROCESSBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ECHATMESSAGETYPE_FIELD_NUMBER, this.eChatMessageType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeMessage(STSHAREBILLINFO_FIELD_NUMBER, this.stShareBillInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeMessage(STPOKERPROCESSBASEINFO_FIELD_NUMBER, this.stPokerProcessBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeMessage(STPICPACKAGEINFO_FIELD_NUMBER, this.stPicPackageInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgId_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt64(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeMessage(STNETPAGESHAREINFONET_FIELD_NUMBER, this.stNetPageShareInfoNet_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeMessage(STSHAREPOKERHISTORYINFO_FIELD_NUMBER, this.stSharePokerHistoryInfo_);
            }
            for (int i = 0; i < this.vExtras_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeBytes(VEXTRAS_FIELD_NUMBER, this.vExtras_.getByteString(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & LTALKWITH_FIELD_NUMBER) == LTALKWITH_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LTALKWITH_FIELD_NUMBER, this.lTalkwith_);
            }
            if ((this.bitField0_ & ECHATMESSAGETYPE_FIELD_NUMBER) == ECHATMESSAGETYPE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(ETALKTYPE_FIELD_NUMBER, this.eTalkType_.getNumber());
            }
            if ((this.bitField0_ & STPOKERPROCESSBASEINFO_FIELD_NUMBER) == STPOKERPROCESSBASEINFO_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(ECHATMESSAGETYPE_FIELD_NUMBER, this.eChatMessageType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeBytesSize(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeBytesSize(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeMessageSize(STSHAREBILLINFO_FIELD_NUMBER, this.stShareBillInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i2 += CodedOutputStream.computeMessageSize(STPOKERPROCESSBASEINFO_FIELD_NUMBER, this.stPokerProcessBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeMessageSize(STPICPACKAGEINFO_FIELD_NUMBER, this.stPicPackageInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgId_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i2 += CodedOutputStream.computeInt64Size(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i2 += CodedOutputStream.computeMessageSize(STNETPAGESHAREINFONET_FIELD_NUMBER, this.stNetPageShareInfoNet_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i2 += CodedOutputStream.computeMessageSize(STSHAREPOKERHISTORYINFO_FIELD_NUMBER, this.stSharePokerHistoryInfo_);
            }
            int i3 = 0;
            while (i < this.vExtras_.size()) {
                i3 += CodedOutputStream.computeBytesSizeNoTag(this.vExtras_.getByteString(i));
                i += UUID_FIELD_NUMBER;
            }
            i2 = ((i2 + i3) + (getVExtrasList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSendMsg parseFrom(ByteString byteString) {
            return (CSSendMsg) PARSER.parseFrom(byteString);
        }

        public static CSSendMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSendMsg parseFrom(byte[] bArr) {
            return (CSSendMsg) PARSER.parseFrom(bArr);
        }

        public static CSSendMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSendMsg parseFrom(InputStream inputStream) {
            return (CSSendMsg) PARSER.parseFrom(inputStream);
        }

        public static CSSendMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSendMsg parseDelimitedFrom(InputStream inputStream) {
            return (CSSendMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSendMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSendMsg parseFrom(CodedInputStream codedInputStream) {
            return (CSSendMsg) PARSER.parseFrom(codedInputStream);
        }

        public static CSSendMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSendMsg cSSendMsg) {
            return newBuilder().mergeFrom(cSSendMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSendMsgToAllOrBuilder extends MessageOrBuilder {
        CHAT_MESSAGE_TYPE getEChatMessageType();

        long getLDuration();

        long getLMsgId();

        String getSMsg();

        ByteString getSMsgBytes();

        NetPageShareInfoNet getStNetPageShareInfoNet();

        NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder();

        PokerProcessInfo getStPokerProcessBaseInfo();

        PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder();

        ShareBillInfoNet getStShareBillInfo();

        ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder();

        long getUuid();

        ByteString getVVoiceDatas();

        boolean hasEChatMessageType();

        boolean hasLDuration();

        boolean hasLMsgId();

        boolean hasSMsg();

        boolean hasStNetPageShareInfoNet();

        boolean hasStPokerProcessBaseInfo();

        boolean hasStShareBillInfo();

        boolean hasUuid();

        boolean hasVVoiceDatas();
    }

    public static final class CSSendMsgToAll extends GeneratedMessage implements CSSendMsgToAllOrBuilder {
        public static final int ECHATMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int LDURATION_FIELD_NUMBER = 8;
        public static final int LMSGID_FIELD_NUMBER = 7;
        public static Parser<CSSendMsgToAll> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 3;
        public static final int STNETPAGESHAREINFONET_FIELD_NUMBER = 9;
        public static final int STPOKERPROCESSBASEINFO_FIELD_NUMBER = 6;
        public static final int STSHAREBILLINFO_FIELD_NUMBER = 5;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VVOICEDATAS_FIELD_NUMBER = 4;
        private static final CSSendMsgToAll defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private CHAT_MESSAGE_TYPE eChatMessageType_;
        private long lDuration_;
        private long lMsgId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private NetPageShareInfoNet stNetPageShareInfoNet_;
        private PokerProcessInfo stPokerProcessBaseInfo_;
        private ShareBillInfoNet stShareBillInfo_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private ByteString vVoiceDatas_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSendMsgToAll.1 */
        class C11861 extends AbstractParser<CSSendMsgToAll> {
            C11861() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSendMsgToAll(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSendMsgToAllOrBuilder {
            private int bitField0_;
            private CHAT_MESSAGE_TYPE eChatMessageType_;
            private long lDuration_;
            private long lMsgId_;
            private Object sMsg_;
            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> stNetPageShareInfoNetBuilder_;
            private NetPageShareInfoNet stNetPageShareInfoNet_;
            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> stPokerProcessBaseInfoBuilder_;
            private PokerProcessInfo stPokerProcessBaseInfo_;
            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> stShareBillInfoBuilder_;
            private ShareBillInfoNet stShareBillInfo_;
            private long uuid_;
            private ByteString vVoiceDatas_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fq;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fr.ensureFieldAccessorsInitialized(CSSendMsgToAll.class, Builder.class);
            }

            private Builder() {
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSSendMsgToAll.alwaysUseFieldBuilders) {
                    getStShareBillInfoFieldBuilder();
                    getStPokerProcessBaseInfoFieldBuilder();
                    getStNetPageShareInfoNetFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.bitField0_ &= -3;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.bitField0_ &= -9;
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                this.lMsgId_ = 0;
                this.bitField0_ &= -65;
                this.lDuration_ = 0;
                this.bitField0_ &= -129;
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -257;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fq;
            }

            public final CSSendMsgToAll getDefaultInstanceForType() {
                return CSSendMsgToAll.getDefaultInstance();
            }

            public final CSSendMsgToAll build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSendMsgToAll buildPartial() {
                int i;
                int i2 = CSSendMsgToAll.UUID_FIELD_NUMBER;
                CSSendMsgToAll cSSendMsgToAll = new CSSendMsgToAll((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i3 = this.bitField0_;
                if ((i3 & CSSendMsgToAll.UUID_FIELD_NUMBER) != CSSendMsgToAll.UUID_FIELD_NUMBER) {
                    i2 = 0;
                }
                cSSendMsgToAll.uuid_ = this.uuid_;
                if ((i3 & CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER) == CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER;
                }
                cSSendMsgToAll.eChatMessageType_ = this.eChatMessageType_;
                if ((i3 & CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER) == CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER) {
                    i2 |= CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER;
                }
                cSSendMsgToAll.sMsg_ = this.sMsg_;
                if ((i3 & CSSendMsgToAll.LDURATION_FIELD_NUMBER) == CSSendMsgToAll.LDURATION_FIELD_NUMBER) {
                    i2 |= CSSendMsgToAll.LDURATION_FIELD_NUMBER;
                }
                cSSendMsgToAll.vVoiceDatas_ = this.vVoiceDatas_;
                if ((i3 & 16) == 16) {
                    i = i2 | 16;
                } else {
                    i = i2;
                }
                if (this.stShareBillInfoBuilder_ == null) {
                    cSSendMsgToAll.stShareBillInfo_ = this.stShareBillInfo_;
                } else {
                    cSSendMsgToAll.stShareBillInfo_ = (ShareBillInfoNet) this.stShareBillInfoBuilder_.build();
                }
                if ((i3 & 32) == 32) {
                    i |= 32;
                }
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    cSSendMsgToAll.stPokerProcessBaseInfo_ = this.stPokerProcessBaseInfo_;
                } else {
                    cSSendMsgToAll.stPokerProcessBaseInfo_ = (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.build();
                }
                if ((i3 & 64) == 64) {
                    i |= 64;
                }
                cSSendMsgToAll.lMsgId_ = this.lMsgId_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                cSSendMsgToAll.lDuration_ = this.lDuration_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    cSSendMsgToAll.stNetPageShareInfoNet_ = this.stNetPageShareInfoNet_;
                } else {
                    cSSendMsgToAll.stNetPageShareInfoNet_ = (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.build();
                }
                cSSendMsgToAll.bitField0_ = i;
                onBuilt();
                return cSSendMsgToAll;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSendMsgToAll) {
                    return mergeFrom((CSSendMsgToAll) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSendMsgToAll cSSendMsgToAll) {
                if (cSSendMsgToAll != CSSendMsgToAll.getDefaultInstance()) {
                    if (cSSendMsgToAll.hasUuid()) {
                        setUuid(cSSendMsgToAll.getUuid());
                    }
                    if (cSSendMsgToAll.hasEChatMessageType()) {
                        setEChatMessageType(cSSendMsgToAll.getEChatMessageType());
                    }
                    if (cSSendMsgToAll.hasSMsg()) {
                        this.bitField0_ |= CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER;
                        this.sMsg_ = cSSendMsgToAll.sMsg_;
                        onChanged();
                    }
                    if (cSSendMsgToAll.hasVVoiceDatas()) {
                        setVVoiceDatas(cSSendMsgToAll.getVVoiceDatas());
                    }
                    if (cSSendMsgToAll.hasStShareBillInfo()) {
                        mergeStShareBillInfo(cSSendMsgToAll.getStShareBillInfo());
                    }
                    if (cSSendMsgToAll.hasStPokerProcessBaseInfo()) {
                        mergeStPokerProcessBaseInfo(cSSendMsgToAll.getStPokerProcessBaseInfo());
                    }
                    if (cSSendMsgToAll.hasLMsgId()) {
                        setLMsgId(cSSendMsgToAll.getLMsgId());
                    }
                    if (cSSendMsgToAll.hasLDuration()) {
                        setLDuration(cSSendMsgToAll.getLDuration());
                    }
                    if (cSSendMsgToAll.hasStNetPageShareInfoNet()) {
                        mergeStNetPageShareInfoNet(cSSendMsgToAll.getStNetPageShareInfoNet());
                    }
                    mergeUnknownFields(cSSendMsgToAll.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasEChatMessageType() || !hasLMsgId()) {
                    return false;
                }
                if (hasStShareBillInfo() && !getStShareBillInfo().isInitialized()) {
                    return false;
                }
                if (hasStPokerProcessBaseInfo() && !getStPokerProcessBaseInfo().isInitialized()) {
                    return false;
                }
                if (!hasStNetPageShareInfoNet() || getStNetPageShareInfoNet().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSendMsgToAll.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSendMsgToAll.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSendMsgToAll) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSendMsgToAll) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSendMsgToAll.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSendMsgToAll$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSendMsgToAll.UUID_FIELD_NUMBER) == CSSendMsgToAll.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSendMsgToAll.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEChatMessageType() {
                return (this.bitField0_ & CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER) == CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER;
            }

            public final CHAT_MESSAGE_TYPE getEChatMessageType() {
                return this.eChatMessageType_;
            }

            public final Builder setEChatMessageType(CHAT_MESSAGE_TYPE chat_message_type) {
                if (chat_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsgToAll.ECHATMESSAGETYPE_FIELD_NUMBER;
                this.eChatMessageType_ = chat_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEChatMessageType() {
                this.bitField0_ &= -3;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                onChanged();
                return this;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER) == CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -5;
                this.sMsg_ = CSSendMsgToAll.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsgToAll.VVOICEDATAS_FIELD_NUMBER;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasVVoiceDatas() {
                return (this.bitField0_ & CSSendMsgToAll.LDURATION_FIELD_NUMBER) == CSSendMsgToAll.LDURATION_FIELD_NUMBER;
            }

            public final ByteString getVVoiceDatas() {
                return this.vVoiceDatas_;
            }

            public final Builder setVVoiceDatas(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSendMsgToAll.LDURATION_FIELD_NUMBER;
                this.vVoiceDatas_ = byteString;
                onChanged();
                return this;
            }

            public final Builder clearVVoiceDatas() {
                this.bitField0_ &= -9;
                this.vVoiceDatas_ = CSSendMsgToAll.getDefaultInstance().getVVoiceDatas();
                onChanged();
                return this;
            }

            public final boolean hasStShareBillInfo() {
                return (this.bitField0_ & 16) == 16;
            }

            public final ShareBillInfoNet getStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    return this.stShareBillInfo_;
                }
                return (ShareBillInfoNet) this.stShareBillInfoBuilder_.getMessage();
            }

            public final Builder setStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ != null) {
                    this.stShareBillInfoBuilder_.setMessage(shareBillInfoNet);
                } else if (shareBillInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stShareBillInfo_ = shareBillInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder setStShareBillInfo(com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder builder) {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder mergeStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ == null) {
                    if ((this.bitField0_ & 16) != 16 || this.stShareBillInfo_ == ShareBillInfoNet.getDefaultInstance()) {
                        this.stShareBillInfo_ = shareBillInfoNet;
                    } else {
                        this.stShareBillInfo_ = ShareBillInfoNet.newBuilder(this.stShareBillInfo_).mergeFrom(shareBillInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.mergeFrom(shareBillInfoNet);
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder clearStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder getStShareBillInfoBuilder() {
                this.bitField0_ |= 16;
                onChanged();
                return (com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder) getStShareBillInfoFieldBuilder().getBuilder();
            }

            public final ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder() {
                if (this.stShareBillInfoBuilder_ != null) {
                    return (ShareBillInfoNetOrBuilder) this.stShareBillInfoBuilder_.getMessageOrBuilder();
                }
                return this.stShareBillInfo_;
            }

            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> getStShareBillInfoFieldBuilder() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfoBuilder_ = new SingleFieldBuilder(getStShareBillInfo(), getParentForChildren(), isClean());
                    this.stShareBillInfo_ = null;
                }
                return this.stShareBillInfoBuilder_;
            }

            public final boolean hasStPokerProcessBaseInfo() {
                return (this.bitField0_ & 32) == 32;
            }

            public final PokerProcessInfo getStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    return this.stPokerProcessBaseInfo_;
                }
                return (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.getMessage();
            }

            public final Builder setStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(pokerProcessInfo);
                } else if (pokerProcessInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    onChanged();
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder setStPokerProcessBaseInfo(com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder builder) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder mergeStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 32) != 32 || this.stPokerProcessBaseInfo_ == PokerProcessInfo.getDefaultInstance()) {
                        this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    } else {
                        this.stPokerProcessBaseInfo_ = PokerProcessInfo.newBuilder(this.stPokerProcessBaseInfo_).mergeFrom(pokerProcessInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.mergeFrom(pokerProcessInfo);
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder clearStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder getStPokerProcessBaseInfoBuilder() {
                this.bitField0_ |= 32;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder) getStPokerProcessBaseInfoFieldBuilder().getBuilder();
            }

            public final PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    return (PokerProcessInfoOrBuilder) this.stPokerProcessBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stPokerProcessBaseInfo_;
            }

            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> getStPokerProcessBaseInfoFieldBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfoBuilder_ = new SingleFieldBuilder(getStPokerProcessBaseInfo(), getParentForChildren(), isClean());
                    this.stPokerProcessBaseInfo_ = null;
                }
                return this.stPokerProcessBaseInfoBuilder_;
            }

            public final boolean hasLMsgId() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLMsgId() {
                return this.lMsgId_;
            }

            public final Builder setLMsgId(long j) {
                this.bitField0_ |= 64;
                this.lMsgId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgId() {
                this.bitField0_ &= -65;
                this.lMsgId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLDuration() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLDuration() {
                return this.lDuration_;
            }

            public final Builder setLDuration(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLDuration() {
                this.bitField0_ &= -129;
                this.lDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStNetPageShareInfoNet() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final NetPageShareInfoNet getStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    return this.stNetPageShareInfoNet_;
                }
                return (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.getMessage();
            }

            public final Builder setStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    this.stNetPageShareInfoNetBuilder_.setMessage(netPageShareInfoNet);
                } else if (netPageShareInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder setStNetPageShareInfoNet(Builder builder) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder mergeStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY || this.stNetPageShareInfoNet_ == NetPageShareInfoNet.getDefaultInstance()) {
                        this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    } else {
                        this.stNetPageShareInfoNet_ = NetPageShareInfoNet.newBuilder(this.stNetPageShareInfoNet_).mergeFrom(netPageShareInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.mergeFrom(netPageShareInfoNet);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder clearStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -257;
                return this;
            }

            public final Builder getStNetPageShareInfoNetBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                onChanged();
                return (Builder) getStNetPageShareInfoNetFieldBuilder().getBuilder();
            }

            public final NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    return (NetPageShareInfoNetOrBuilder) this.stNetPageShareInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stNetPageShareInfoNet_;
            }

            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> getStNetPageShareInfoNetFieldBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNetBuilder_ = new SingleFieldBuilder(getStNetPageShareInfoNet(), getParentForChildren(), isClean());
                    this.stNetPageShareInfoNet_ = null;
                }
                return this.stNetPageShareInfoNetBuilder_;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSendMsgToAll(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSendMsgToAll(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSendMsgToAll cSSendMsgToAll);

        private native CSSendMsgToAll(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSendMsgToAll(com.google.protobuf.GeneratedMessage.Builder builder, CSSendMsgToAll cSSendMsgToAll);

        private native CSSendMsgToAll(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6218getDefaultInstanceForType();

        public final native CSSendMsgToAll m6219getDefaultInstanceForType();

        public final native CHAT_MESSAGE_TYPE getEChatMessageType();

        public final native long getLDuration();

        public final native long getLMsgId();

        public final native Parser<CSSendMsgToAll> getParserForType();

        public final native String getSMsg();

        public final native ByteString getSMsgBytes();

        public final native int getSerializedSize();

        public final native NetPageShareInfoNet getStNetPageShareInfoNet();

        public final native NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder();

        public final native PokerProcessInfo getStPokerProcessBaseInfo();

        public final native PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder();

        public final native ShareBillInfoNet getStShareBillInfo();

        public final native ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native ByteString getVVoiceDatas();

        public final native boolean hasEChatMessageType();

        public final native boolean hasLDuration();

        public final native boolean hasLMsgId();

        public final native boolean hasSMsg();

        public final native boolean hasStNetPageShareInfoNet();

        public final native boolean hasStPokerProcessBaseInfo();

        public final native boolean hasStShareBillInfo();

        public final native boolean hasUuid();

        public final native boolean hasVVoiceDatas();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6220newBuilderForType();

        public final native Builder m6221newBuilderForType();

        protected final native Builder m6222newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6223toBuilder();

        public final native Builder m6224toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSendMsgToAll getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fq;
        }

        static void __clinit__() {
            PARSER = new C11861();
            CSSendMsgToAll cSSendMsgToAll = new CSSendMsgToAll(true);
            defaultInstance = cSSendMsgToAll;
            cSSendMsgToAll.initFields();
        }

        public static CSSendMsgToAll parseFrom(ByteString byteString) {
            return (CSSendMsgToAll) PARSER.parseFrom(byteString);
        }

        public static CSSendMsgToAll parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsgToAll) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSendMsgToAll parseFrom(byte[] bArr) {
            return (CSSendMsgToAll) PARSER.parseFrom(bArr);
        }

        public static CSSendMsgToAll parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsgToAll) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSendMsgToAll parseFrom(InputStream inputStream) {
            return (CSSendMsgToAll) PARSER.parseFrom(inputStream);
        }

        public static CSSendMsgToAll parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsgToAll) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSendMsgToAll parseDelimitedFrom(InputStream inputStream) {
            return (CSSendMsgToAll) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSendMsgToAll parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsgToAll) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSendMsgToAll parseFrom(CodedInputStream codedInputStream) {
            return (CSSendMsgToAll) PARSER.parseFrom(codedInputStream);
        }

        public static CSSendMsgToAll parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSendMsgToAll) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSendMsgToAll cSSendMsgToAll) {
            return newBuilder().mergeFrom(cSSendMsgToAll);
        }
    }

    public interface CSSetBuyinControlStateOrBuilder extends MessageOrBuilder {
        int getBBuyinControl();

        long getLGameRoomID();

        long getUuid();

        boolean hasBBuyinControl();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSSetBuyinControlState extends GeneratedMessage implements CSSetBuyinControlStateOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSetBuyinControlState> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSetBuyinControlState defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bBuyinControl_;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetBuyinControlState.1 */
        class C11871 extends AbstractParser<CSSetBuyinControlState> {
            C11871() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetBuyinControlState(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetBuyinControlStateOrBuilder {
            private int bBuyinControl_;
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cI;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cJ.ensureFieldAccessorsInitialized(CSSetBuyinControlState.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSetBuyinControlState.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.bBuyinControl_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cI;
            }

            public final CSSetBuyinControlState getDefaultInstanceForType() {
                return CSSetBuyinControlState.getDefaultInstance();
            }

            public final CSSetBuyinControlState build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetBuyinControlState buildPartial() {
                int i = CSSetBuyinControlState.UUID_FIELD_NUMBER;
                CSSetBuyinControlState cSSetBuyinControlState = new CSSetBuyinControlState((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetBuyinControlState.UUID_FIELD_NUMBER) != CSSetBuyinControlState.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetBuyinControlState.uuid_ = this.uuid_;
                if ((i2 & CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER) == CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER;
                }
                cSSetBuyinControlState.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSSetBuyinControlState.bBuyinControl_ = this.bBuyinControl_;
                cSSetBuyinControlState.bitField0_ = i;
                onBuilt();
                return cSSetBuyinControlState;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetBuyinControlState) {
                    return mergeFrom((CSSetBuyinControlState) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetBuyinControlState cSSetBuyinControlState) {
                if (cSSetBuyinControlState != CSSetBuyinControlState.getDefaultInstance()) {
                    if (cSSetBuyinControlState.hasUuid()) {
                        setUuid(cSSetBuyinControlState.getUuid());
                    }
                    if (cSSetBuyinControlState.hasLGameRoomID()) {
                        setLGameRoomID(cSSetBuyinControlState.getLGameRoomID());
                    }
                    if (cSSetBuyinControlState.hasBBuyinControl()) {
                        setBBuyinControl(cSSetBuyinControlState.getBBuyinControl());
                    }
                    mergeUnknownFields(cSSetBuyinControlState.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetBuyinControlState.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetBuyinControlState.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetBuyinControlState) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetBuyinControlState) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetBuyinControlState.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetBuyinControlState$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetBuyinControlState.UUID_FIELD_NUMBER) == CSSetBuyinControlState.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetBuyinControlState.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER) == CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSSetBuyinControlState.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyinControl() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getBBuyinControl() {
                return this.bBuyinControl_;
            }

            public final Builder setBBuyinControl(int i) {
                this.bitField0_ |= 4;
                this.bBuyinControl_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyinControl() {
                this.bitField0_ &= -5;
                this.bBuyinControl_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSetBuyinControlState(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSetBuyinControlState(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSetBuyinControlState cSSetBuyinControlState);

        private native CSSetBuyinControlState(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSetBuyinControlState(com.google.protobuf.GeneratedMessage.Builder builder, CSSetBuyinControlState cSSetBuyinControlState);

        private native CSSetBuyinControlState(boolean z);

        private native void initFields();

        public final native int getBBuyinControl();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6225getDefaultInstanceForType();

        public final native CSSetBuyinControlState m6226getDefaultInstanceForType();

        public final native long getLGameRoomID();

        public final native Parser<CSSetBuyinControlState> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasBBuyinControl();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6227newBuilderForType();

        public final native Builder m6228newBuilderForType();

        protected final native Builder m6229newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6230toBuilder();

        public final native Builder m6231toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSetBuyinControlState getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cI;
        }

        static void __clinit__() {
            PARSER = new C11871();
            CSSetBuyinControlState cSSetBuyinControlState = new CSSetBuyinControlState(true);
            defaultInstance = cSSetBuyinControlState;
            cSSetBuyinControlState.initFields();
        }

        public static CSSetBuyinControlState parseFrom(ByteString byteString) {
            return (CSSetBuyinControlState) PARSER.parseFrom(byteString);
        }

        public static CSSetBuyinControlState parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetBuyinControlState) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetBuyinControlState parseFrom(byte[] bArr) {
            return (CSSetBuyinControlState) PARSER.parseFrom(bArr);
        }

        public static CSSetBuyinControlState parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetBuyinControlState) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetBuyinControlState parseFrom(InputStream inputStream) {
            return (CSSetBuyinControlState) PARSER.parseFrom(inputStream);
        }

        public static CSSetBuyinControlState parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetBuyinControlState) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetBuyinControlState parseDelimitedFrom(InputStream inputStream) {
            return (CSSetBuyinControlState) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetBuyinControlState parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetBuyinControlState) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetBuyinControlState parseFrom(CodedInputStream codedInputStream) {
            return (CSSetBuyinControlState) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetBuyinControlState parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetBuyinControlState) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSetBuyinControlState cSSetBuyinControlState) {
            return newBuilder().mergeFrom(cSSetBuyinControlState);
        }
    }

    public interface CSSetChatInfoSettingOrBuilder extends MessageOrBuilder {
        long getChatUuid();

        CHAT_TYPE getEChatType();

        int getIMute();

        int getIVibrate();

        long getLRoomID();

        long getUuid();

        boolean hasChatUuid();

        boolean hasEChatType();

        boolean hasIMute();

        boolean hasIVibrate();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSSetChatInfoSetting extends GeneratedMessage implements CSSetChatInfoSettingOrBuilder {
        public static final int CHATUUID_FIELD_NUMBER = 4;
        public static final int ECHATTYPE_FIELD_NUMBER = 2;
        public static final int IMUTE_FIELD_NUMBER = 5;
        public static final int IVIBRATE_FIELD_NUMBER = 6;
        public static final int LROOMID_FIELD_NUMBER = 3;
        public static Parser<CSSetChatInfoSetting> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSetChatInfoSetting defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long chatUuid_;
        private CHAT_TYPE eChatType_;
        private int iMute_;
        private int iVibrate_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting.1 */
        class C11881 extends AbstractParser<CSSetChatInfoSetting> {
            C11881() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetChatInfoSetting(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetChatInfoSettingOrBuilder {
            private int bitField0_;
            private long chatUuid_;
            private CHAT_TYPE eChatType_;
            private int iMute_;
            private int iVibrate_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bw;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bx.ensureFieldAccessorsInitialized(CSSetChatInfoSetting.class, Builder.class);
            }

            private Builder() {
                this.eChatType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eChatType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSetChatInfoSetting.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.eChatType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                this.bitField0_ &= -5;
                this.chatUuid_ = 0;
                this.bitField0_ &= -9;
                this.iMute_ = 0;
                this.bitField0_ &= -17;
                this.iVibrate_ = 0;
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bw;
            }

            public final CSSetChatInfoSetting getDefaultInstanceForType() {
                return CSSetChatInfoSetting.getDefaultInstance();
            }

            public final CSSetChatInfoSetting build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetChatInfoSetting buildPartial() {
                int i = CSSetChatInfoSetting.UUID_FIELD_NUMBER;
                CSSetChatInfoSetting cSSetChatInfoSetting = new CSSetChatInfoSetting((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetChatInfoSetting.UUID_FIELD_NUMBER) != CSSetChatInfoSetting.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetChatInfoSetting.uuid_ = this.uuid_;
                if ((i2 & CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER) == CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER) {
                    i |= CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER;
                }
                cSSetChatInfoSetting.eChatType_ = this.eChatType_;
                if ((i2 & CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER) == CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER) {
                    i |= CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER;
                }
                cSSetChatInfoSetting.lRoomID_ = this.lRoomID_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSSetChatInfoSetting.chatUuid_ = this.chatUuid_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSSetChatInfoSetting.iMute_ = this.iMute_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSSetChatInfoSetting.iVibrate_ = this.iVibrate_;
                cSSetChatInfoSetting.bitField0_ = i;
                onBuilt();
                return cSSetChatInfoSetting;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetChatInfoSetting) {
                    return mergeFrom((CSSetChatInfoSetting) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetChatInfoSetting cSSetChatInfoSetting) {
                if (cSSetChatInfoSetting != CSSetChatInfoSetting.getDefaultInstance()) {
                    if (cSSetChatInfoSetting.hasUuid()) {
                        setUuid(cSSetChatInfoSetting.getUuid());
                    }
                    if (cSSetChatInfoSetting.hasEChatType()) {
                        setEChatType(cSSetChatInfoSetting.getEChatType());
                    }
                    if (cSSetChatInfoSetting.hasLRoomID()) {
                        setLRoomID(cSSetChatInfoSetting.getLRoomID());
                    }
                    if (cSSetChatInfoSetting.hasChatUuid()) {
                        setChatUuid(cSSetChatInfoSetting.getChatUuid());
                    }
                    if (cSSetChatInfoSetting.hasIMute()) {
                        setIMute(cSSetChatInfoSetting.getIMute());
                    }
                    if (cSSetChatInfoSetting.hasIVibrate()) {
                        setIVibrate(cSSetChatInfoSetting.getIVibrate());
                    }
                    mergeUnknownFields(cSSetChatInfoSetting.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasEChatType()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetChatInfoSetting.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetChatInfoSetting$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetChatInfoSetting.UUID_FIELD_NUMBER) == CSSetChatInfoSetting.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetChatInfoSetting.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEChatType() {
                return (this.bitField0_ & CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER) == CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER;
            }

            public final CHAT_TYPE getEChatType() {
                return this.eChatType_;
            }

            public final Builder setEChatType(CHAT_TYPE chat_type) {
                if (chat_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSetChatInfoSetting.ECHATTYPE_FIELD_NUMBER;
                this.eChatType_ = chat_type;
                onChanged();
                return this;
            }

            public final Builder clearEChatType() {
                this.bitField0_ &= -3;
                this.eChatType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER) == CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSSetChatInfoSetting.CHATUUID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -5;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasChatUuid() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getChatUuid() {
                return this.chatUuid_;
            }

            public final Builder setChatUuid(long j) {
                this.bitField0_ |= 8;
                this.chatUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearChatUuid() {
                this.bitField0_ &= -9;
                this.chatUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIMute() {
                return (this.bitField0_ & 16) == 16;
            }

            public final int getIMute() {
                return this.iMute_;
            }

            public final Builder setIMute(int i) {
                this.bitField0_ |= 16;
                this.iMute_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMute() {
                this.bitField0_ &= -17;
                this.iMute_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIVibrate() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getIVibrate() {
                return this.iVibrate_;
            }

            public final Builder setIVibrate(int i) {
                this.bitField0_ |= 32;
                this.iVibrate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIVibrate() {
                this.bitField0_ &= -33;
                this.iVibrate_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSetChatInfoSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSetChatInfoSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSetChatInfoSetting cSSetChatInfoSetting);

        private native CSSetChatInfoSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSetChatInfoSetting(com.google.protobuf.GeneratedMessage.Builder builder, CSSetChatInfoSetting cSSetChatInfoSetting);

        private native CSSetChatInfoSetting(boolean z);

        private native void initFields();

        public final native long getChatUuid();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6232getDefaultInstanceForType();

        public final native CSSetChatInfoSetting m6233getDefaultInstanceForType();

        public final native CHAT_TYPE getEChatType();

        public final native int getIMute();

        public final native int getIVibrate();

        public final native long getLRoomID();

        public final native Parser<CSSetChatInfoSetting> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasChatUuid();

        public final native boolean hasEChatType();

        public final native boolean hasIMute();

        public final native boolean hasIVibrate();

        public final native boolean hasLRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6234newBuilderForType();

        public final native Builder m6235newBuilderForType();

        protected final native Builder m6236newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6237toBuilder();

        public final native Builder m6238toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSetChatInfoSetting getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bw;
        }

        static void __clinit__() {
            PARSER = new C11881();
            CSSetChatInfoSetting cSSetChatInfoSetting = new CSSetChatInfoSetting(true);
            defaultInstance = cSSetChatInfoSetting;
            cSSetChatInfoSetting.initFields();
        }

        public static CSSetChatInfoSetting parseFrom(ByteString byteString) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(byteString);
        }

        public static CSSetChatInfoSetting parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetChatInfoSetting parseFrom(byte[] bArr) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(bArr);
        }

        public static CSSetChatInfoSetting parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetChatInfoSetting parseFrom(InputStream inputStream) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(inputStream);
        }

        public static CSSetChatInfoSetting parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatInfoSetting parseDelimitedFrom(InputStream inputStream) {
            return (CSSetChatInfoSetting) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetChatInfoSetting parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatInfoSetting) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatInfoSetting parseFrom(CodedInputStream codedInputStream) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetChatInfoSetting parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatInfoSetting) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSetChatInfoSetting cSSetChatInfoSetting) {
            return newBuilder().mergeFrom(cSSetChatInfoSetting);
        }
    }

    public interface CSSetChatRoomInfoOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        int getNOwnerCreate();

        int getNOwnerInvite();

        String getSRoomName();

        ByteString getSRoomNameBytes();

        long getUuid();

        boolean hasLRoomID();

        boolean hasNOwnerCreate();

        boolean hasNOwnerInvite();

        boolean hasSRoomName();

        boolean hasUuid();
    }

    public static final class CSSetChatRoomInfo extends GeneratedMessage implements CSSetChatRoomInfoOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static final int NOWNERCREATE_FIELD_NUMBER = 5;
        public static final int NOWNERINVITE_FIELD_NUMBER = 4;
        public static Parser<CSSetChatRoomInfo> PARSER = null;
        public static final int SROOMNAME_FIELD_NUMBER = 3;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSetChatRoomInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private int nOwnerCreate_;
        private int nOwnerInvite_;
        private Object sRoomName_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo.1 */
        class C11891 extends AbstractParser<CSSetChatRoomInfo> {
            C11891() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetChatRoomInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetChatRoomInfoOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private int nOwnerCreate_;
            private int nOwnerInvite_;
            private Object sRoomName_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aU;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aV.ensureFieldAccessorsInitialized(CSSetChatRoomInfo.class, Builder.class);
            }

            private Builder() {
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSetChatRoomInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.nOwnerInvite_ = 0;
                this.bitField0_ &= -9;
                this.nOwnerCreate_ = 0;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aU;
            }

            public final CSSetChatRoomInfo getDefaultInstanceForType() {
                return CSSetChatRoomInfo.getDefaultInstance();
            }

            public final CSSetChatRoomInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetChatRoomInfo buildPartial() {
                int i = CSSetChatRoomInfo.UUID_FIELD_NUMBER;
                CSSetChatRoomInfo cSSetChatRoomInfo = new CSSetChatRoomInfo(null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetChatRoomInfo.UUID_FIELD_NUMBER) != CSSetChatRoomInfo.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetChatRoomInfo.uuid_ = this.uuid_;
                if ((i2 & CSSetChatRoomInfo.LROOMID_FIELD_NUMBER) == CSSetChatRoomInfo.LROOMID_FIELD_NUMBER) {
                    i |= CSSetChatRoomInfo.LROOMID_FIELD_NUMBER;
                }
                cSSetChatRoomInfo.lRoomID_ = this.lRoomID_;
                if ((i2 & CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER) == CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER) {
                    i |= CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER;
                }
                cSSetChatRoomInfo.sRoomName_ = this.sRoomName_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSSetChatRoomInfo.nOwnerInvite_ = this.nOwnerInvite_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSSetChatRoomInfo.nOwnerCreate_ = this.nOwnerCreate_;
                cSSetChatRoomInfo.bitField0_ = i;
                onBuilt();
                return cSSetChatRoomInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetChatRoomInfo) {
                    return mergeFrom((CSSetChatRoomInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetChatRoomInfo cSSetChatRoomInfo) {
                if (cSSetChatRoomInfo != CSSetChatRoomInfo.getDefaultInstance()) {
                    if (cSSetChatRoomInfo.hasUuid()) {
                        setUuid(cSSetChatRoomInfo.getUuid());
                    }
                    if (cSSetChatRoomInfo.hasLRoomID()) {
                        setLRoomID(cSSetChatRoomInfo.getLRoomID());
                    }
                    if (cSSetChatRoomInfo.hasSRoomName()) {
                        this.bitField0_ |= CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER;
                        this.sRoomName_ = cSSetChatRoomInfo.sRoomName_;
                        onChanged();
                    }
                    if (cSSetChatRoomInfo.hasNOwnerInvite()) {
                        setNOwnerInvite(cSSetChatRoomInfo.getNOwnerInvite());
                    }
                    if (cSSetChatRoomInfo.hasNOwnerCreate()) {
                        setNOwnerCreate(cSSetChatRoomInfo.getNOwnerCreate());
                    }
                    mergeUnknownFields(cSSetChatRoomInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID() && hasSRoomName() && hasNOwnerInvite() && hasNOwnerCreate()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetChatRoomInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetChatRoomInfo$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetChatRoomInfo.UUID_FIELD_NUMBER) == CSSetChatRoomInfo.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetChatRoomInfo.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSSetChatRoomInfo.LROOMID_FIELD_NUMBER) == CSSetChatRoomInfo.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSSetChatRoomInfo.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSRoomName() {
                return (this.bitField0_ & CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER) == CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER;
            }

            public final String getSRoomName() {
                Object obj = this.sRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSRoomNameBytes() {
                Object obj = this.sRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER;
                this.sRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSRoomName() {
                this.bitField0_ &= -5;
                this.sRoomName_ = CSSetChatRoomInfo.getDefaultInstance().getSRoomName();
                onChanged();
                return this;
            }

            public final Builder setSRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSSetChatRoomInfo.NOWNERINVITE_FIELD_NUMBER;
                this.sRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerInvite() {
                return (this.bitField0_ & 8) == 8;
            }

            public final int getNOwnerInvite() {
                return this.nOwnerInvite_;
            }

            public final Builder setNOwnerInvite(int i) {
                this.bitField0_ |= 8;
                this.nOwnerInvite_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerInvite() {
                this.bitField0_ &= -9;
                this.nOwnerInvite_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerCreate() {
                return (this.bitField0_ & 16) == 16;
            }

            public final int getNOwnerCreate() {
                return this.nOwnerCreate_;
            }

            public final Builder setNOwnerCreate(int i) {
                this.bitField0_ |= 16;
                this.nOwnerCreate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerCreate() {
                this.bitField0_ &= -17;
                this.nOwnerCreate_ = 0;
                onChanged();
                return this;
            }
        }

        private CSSetChatRoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSetChatRoomInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSetChatRoomInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSetChatRoomInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSetChatRoomInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= NOWNERINVITE_FIELD_NUMBER;
                            this.sRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.nOwnerInvite_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.nOwnerCreate_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aU;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aV.ensureFieldAccessorsInitialized(CSSetChatRoomInfo.class, Builder.class);
        }

        static {
            PARSER = new C11891();
            CSSetChatRoomInfo cSSetChatRoomInfo = new CSSetChatRoomInfo(true);
            defaultInstance = cSSetChatRoomInfo;
            cSSetChatRoomInfo.initFields();
        }

        public final Parser<CSSetChatRoomInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasSRoomName() {
            return (this.bitField0_ & NOWNERINVITE_FIELD_NUMBER) == NOWNERINVITE_FIELD_NUMBER;
        }

        public final String getSRoomName() {
            Object obj = this.sRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSRoomNameBytes() {
            Object obj = this.sRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasNOwnerInvite() {
            return (this.bitField0_ & 8) == 8;
        }

        public final int getNOwnerInvite() {
            return this.nOwnerInvite_;
        }

        public final boolean hasNOwnerCreate() {
            return (this.bitField0_ & 16) == 16;
        }

        public final int getNOwnerCreate() {
            return this.nOwnerCreate_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.sRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.nOwnerInvite_ = 0;
            this.nOwnerCreate_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNOwnerInvite()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasNOwnerCreate()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & NOWNERINVITE_FIELD_NUMBER) == NOWNERINVITE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt32(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt32(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & NOWNERINVITE_FIELD_NUMBER) == NOWNERINVITE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SROOMNAME_FIELD_NUMBER, getSRoomNameBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt32Size(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt32Size(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSetChatRoomInfo parseFrom(ByteString byteString) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(byteString);
        }

        public static CSSetChatRoomInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetChatRoomInfo parseFrom(byte[] bArr) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(bArr);
        }

        public static CSSetChatRoomInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetChatRoomInfo parseFrom(InputStream inputStream) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(inputStream);
        }

        public static CSSetChatRoomInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatRoomInfo parseDelimitedFrom(InputStream inputStream) {
            return (CSSetChatRoomInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetChatRoomInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatRoomInfo parseFrom(CodedInputStream codedInputStream) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetChatRoomInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSetChatRoomInfo cSSetChatRoomInfo) {
            return newBuilder().mergeFrom(cSSetChatRoomInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSetChatRoomUserOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSSetChatRoomUser extends GeneratedMessage implements CSSetChatRoomUserOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSetChatRoomUser> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 3;
        private static final CSSetChatRoomUser defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetChatRoomUser.1 */
        class C11901 extends AbstractParser<CSSetChatRoomUser> {
            C11901() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetChatRoomUser(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetChatRoomUserOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aI;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.aJ.ensureFieldAccessorsInitialized(CSSetChatRoomUser.class, Builder.class);
            }

            private Builder() {
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vUserBaseInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSSetChatRoomUser.alwaysUseFieldBuilders) {
                    getVUserBaseInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aI;
            }

            public final CSSetChatRoomUser getDefaultInstanceForType() {
                return CSSetChatRoomUser.getDefaultInstance();
            }

            public final CSSetChatRoomUser build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetChatRoomUser buildPartial() {
                int i = CSSetChatRoomUser.UUID_FIELD_NUMBER;
                CSSetChatRoomUser cSSetChatRoomUser = new CSSetChatRoomUser((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetChatRoomUser.UUID_FIELD_NUMBER) != CSSetChatRoomUser.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetChatRoomUser.uuid_ = this.uuid_;
                if ((i2 & CSSetChatRoomUser.LROOMID_FIELD_NUMBER) == CSSetChatRoomUser.LROOMID_FIELD_NUMBER) {
                    i |= CSSetChatRoomUser.LROOMID_FIELD_NUMBER;
                }
                cSSetChatRoomUser.lRoomID_ = this.lRoomID_;
                if (this.vUserBaseInfosBuilder_ == null) {
                    if ((this.bitField0_ & 4) == 4) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                        this.bitField0_ &= -5;
                    }
                    cSSetChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfos_;
                } else {
                    cSSetChatRoomUser.vUserBaseInfos_ = this.vUserBaseInfosBuilder_.build();
                }
                cSSetChatRoomUser.bitField0_ = i;
                onBuilt();
                return cSSetChatRoomUser;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetChatRoomUser) {
                    return mergeFrom((CSSetChatRoomUser) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetChatRoomUser cSSetChatRoomUser) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (cSSetChatRoomUser != CSSetChatRoomUser.getDefaultInstance()) {
                    if (cSSetChatRoomUser.hasUuid()) {
                        setUuid(cSSetChatRoomUser.getUuid());
                    }
                    if (cSSetChatRoomUser.hasLRoomID()) {
                        setLRoomID(cSSetChatRoomUser.getLRoomID());
                    }
                    if (this.vUserBaseInfosBuilder_ == null) {
                        if (!cSSetChatRoomUser.vUserBaseInfos_.isEmpty()) {
                            if (this.vUserBaseInfos_.isEmpty()) {
                                this.vUserBaseInfos_ = cSSetChatRoomUser.vUserBaseInfos_;
                                this.bitField0_ &= -5;
                            } else {
                                ensureVUserBaseInfosIsMutable();
                                this.vUserBaseInfos_.addAll(cSSetChatRoomUser.vUserBaseInfos_);
                            }
                            onChanged();
                        }
                    } else if (!cSSetChatRoomUser.vUserBaseInfos_.isEmpty()) {
                        if (this.vUserBaseInfosBuilder_.isEmpty()) {
                            this.vUserBaseInfosBuilder_.dispose();
                            this.vUserBaseInfosBuilder_ = null;
                            this.vUserBaseInfos_ = cSSetChatRoomUser.vUserBaseInfos_;
                            this.bitField0_ &= -5;
                            if (CSSetChatRoomUser.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVUserBaseInfosFieldBuilder();
                            }
                            this.vUserBaseInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vUserBaseInfosBuilder_.addAllMessages(cSSetChatRoomUser.vUserBaseInfos_);
                        }
                    }
                    mergeUnknownFields(cSSetChatRoomUser.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid() || !hasLRoomID()) {
                    return false;
                }
                for (int i = 0; i < getVUserBaseInfosCount(); i += CSSetChatRoomUser.UUID_FIELD_NUMBER) {
                    if (!getVUserBaseInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetChatRoomUser.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetChatRoomUser.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatRoomUser) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetChatRoomUser) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetChatRoomUser.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetChatRoomUser$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetChatRoomUser.UUID_FIELD_NUMBER) == CSSetChatRoomUser.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetChatRoomUser.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSSetChatRoomUser.LROOMID_FIELD_NUMBER) == CSSetChatRoomUser.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSSetChatRoomUser.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            private void ensureVUserBaseInfosIsMutable() {
                if ((this.bitField0_ & 4) != 4) {
                    this.vUserBaseInfos_ = new ArrayList(this.vUserBaseInfos_);
                    this.bitField0_ |= 4;
                }
            }

            public final List<UserBaseInfoNet> getVUserBaseInfosList() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUserBaseInfos_);
                }
                return this.vUserBaseInfosBuilder_.getMessageList();
            }

            public final int getVUserBaseInfosCount() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return this.vUserBaseInfos_.size();
                }
                return this.vUserBaseInfosBuilder_.getCount();
            }

            public final UserBaseInfoNet getVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNet) this.vUserBaseInfosBuilder_.getMessage(i);
            }

            public final Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUserBaseInfosBuilder_ != null) {
                    this.vUserBaseInfosBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUserBaseInfos_);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUserBaseInfos() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUserBaseInfos(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    ensureVUserBaseInfosIsMutable();
                    this.vUserBaseInfos_.remove(i);
                    onChanged();
                } else {
                    this.vUserBaseInfosBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
                if (this.vUserBaseInfosBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.vUserBaseInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
                if (this.vUserBaseInfosBuilder_ != null) {
                    return this.vUserBaseInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUserBaseInfos_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUserBaseInfosFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList() {
                return getVUserBaseInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder() {
                if (this.vUserBaseInfosBuilder_ == null) {
                    this.vUserBaseInfosBuilder_ = new RepeatedFieldBuilder(this.vUserBaseInfos_, (this.bitField0_ & 4) == 4, getParentForChildren(), isClean());
                    this.vUserBaseInfos_ = null;
                }
                return this.vUserBaseInfosBuilder_;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSetChatRoomUser(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSetChatRoomUser(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSetChatRoomUser cSSetChatRoomUser);

        private native CSSetChatRoomUser(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSetChatRoomUser(com.google.protobuf.GeneratedMessage.Builder builder, CSSetChatRoomUser cSSetChatRoomUser);

        private native CSSetChatRoomUser(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6239getDefaultInstanceForType();

        public final native CSSetChatRoomUser m6240getDefaultInstanceForType();

        public final native long getLRoomID();

        public final native Parser<CSSetChatRoomUser> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native UserBaseInfoNet getVUserBaseInfos(int i);

        public final native int getVUserBaseInfosCount();

        public final native List<UserBaseInfoNet> getVUserBaseInfosList();

        public final native UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        public final native List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        public final native boolean hasLRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6241newBuilderForType();

        public final native Builder m6242newBuilderForType();

        protected final native Builder m6243newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6244toBuilder();

        public final native Builder m6245toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSetChatRoomUser getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aI;
        }

        static void __clinit__() {
            PARSER = new C11901();
            CSSetChatRoomUser cSSetChatRoomUser = new CSSetChatRoomUser(true);
            defaultInstance = cSSetChatRoomUser;
            cSSetChatRoomUser.initFields();
        }

        public static CSSetChatRoomUser parseFrom(ByteString byteString) {
            return (CSSetChatRoomUser) PARSER.parseFrom(byteString);
        }

        public static CSSetChatRoomUser parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomUser) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetChatRoomUser parseFrom(byte[] bArr) {
            return (CSSetChatRoomUser) PARSER.parseFrom(bArr);
        }

        public static CSSetChatRoomUser parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomUser) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetChatRoomUser parseFrom(InputStream inputStream) {
            return (CSSetChatRoomUser) PARSER.parseFrom(inputStream);
        }

        public static CSSetChatRoomUser parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomUser) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatRoomUser parseDelimitedFrom(InputStream inputStream) {
            return (CSSetChatRoomUser) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetChatRoomUser parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomUser) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetChatRoomUser parseFrom(CodedInputStream codedInputStream) {
            return (CSSetChatRoomUser) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetChatRoomUser parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetChatRoomUser) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSetChatRoomUser cSSetChatRoomUser) {
            return newBuilder().mergeFrom(cSSetChatRoomUser);
        }
    }

    public interface CSSetGameThinkingIntervalOrBuilder extends MessageOrBuilder {
        int getIThinkingInterval();

        long getLGameRoomID();

        long getUuid();

        boolean hasIThinkingInterval();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSSetGameThinkingInterval extends GeneratedMessage implements CSSetGameThinkingIntervalOrBuilder {
        public static final int ITHINKINGINTERVAL_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSetGameThinkingInterval> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSetGameThinkingInterval defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iThinkingInterval_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval.1 */
        class C11911 extends AbstractParser<CSSetGameThinkingInterval> {
            C11911() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetGameThinkingInterval(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetGameThinkingIntervalOrBuilder {
            private int bitField0_;
            private int iThinkingInterval_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.hi;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.hj.ensureFieldAccessorsInitialized(CSSetGameThinkingInterval.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSetGameThinkingInterval.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.iThinkingInterval_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.hi;
            }

            public final CSSetGameThinkingInterval getDefaultInstanceForType() {
                return CSSetGameThinkingInterval.getDefaultInstance();
            }

            public final CSSetGameThinkingInterval build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetGameThinkingInterval buildPartial() {
                int i = CSSetGameThinkingInterval.UUID_FIELD_NUMBER;
                CSSetGameThinkingInterval cSSetGameThinkingInterval = new CSSetGameThinkingInterval((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetGameThinkingInterval.UUID_FIELD_NUMBER) != CSSetGameThinkingInterval.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetGameThinkingInterval.uuid_ = this.uuid_;
                if ((i2 & CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER) == CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER;
                }
                cSSetGameThinkingInterval.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSSetGameThinkingInterval.iThinkingInterval_ = this.iThinkingInterval_;
                cSSetGameThinkingInterval.bitField0_ = i;
                onBuilt();
                return cSSetGameThinkingInterval;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetGameThinkingInterval) {
                    return mergeFrom((CSSetGameThinkingInterval) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetGameThinkingInterval cSSetGameThinkingInterval) {
                if (cSSetGameThinkingInterval != CSSetGameThinkingInterval.getDefaultInstance()) {
                    if (cSSetGameThinkingInterval.hasUuid()) {
                        setUuid(cSSetGameThinkingInterval.getUuid());
                    }
                    if (cSSetGameThinkingInterval.hasLGameRoomID()) {
                        setLGameRoomID(cSSetGameThinkingInterval.getLGameRoomID());
                    }
                    if (cSSetGameThinkingInterval.hasIThinkingInterval()) {
                        setIThinkingInterval(cSSetGameThinkingInterval.getIThinkingInterval());
                    }
                    mergeUnknownFields(cSSetGameThinkingInterval.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID() && hasIThinkingInterval()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetGameThinkingInterval.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetGameThinkingInterval$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetGameThinkingInterval.UUID_FIELD_NUMBER) == CSSetGameThinkingInterval.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetGameThinkingInterval.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER) == CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSSetGameThinkingInterval.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIThinkingInterval() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getIThinkingInterval() {
                return this.iThinkingInterval_;
            }

            public final Builder setIThinkingInterval(int i) {
                this.bitField0_ |= 4;
                this.iThinkingInterval_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIThinkingInterval() {
                this.bitField0_ &= -5;
                this.iThinkingInterval_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSetGameThinkingInterval(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSetGameThinkingInterval(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSetGameThinkingInterval cSSetGameThinkingInterval);

        private native CSSetGameThinkingInterval(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSetGameThinkingInterval(com.google.protobuf.GeneratedMessage.Builder builder, CSSetGameThinkingInterval cSSetGameThinkingInterval);

        private native CSSetGameThinkingInterval(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6246getDefaultInstanceForType();

        public final native CSSetGameThinkingInterval m6247getDefaultInstanceForType();

        public final native int getIThinkingInterval();

        public final native long getLGameRoomID();

        public final native Parser<CSSetGameThinkingInterval> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasIThinkingInterval();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6248newBuilderForType();

        public final native Builder m6249newBuilderForType();

        protected final native Builder m6250newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6251toBuilder();

        public final native Builder m6252toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSetGameThinkingInterval getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.hi;
        }

        static void __clinit__() {
            PARSER = new C11911();
            CSSetGameThinkingInterval cSSetGameThinkingInterval = new CSSetGameThinkingInterval(true);
            defaultInstance = cSSetGameThinkingInterval;
            cSSetGameThinkingInterval.initFields();
        }

        public static CSSetGameThinkingInterval parseFrom(ByteString byteString) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(byteString);
        }

        public static CSSetGameThinkingInterval parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetGameThinkingInterval parseFrom(byte[] bArr) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(bArr);
        }

        public static CSSetGameThinkingInterval parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetGameThinkingInterval parseFrom(InputStream inputStream) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(inputStream);
        }

        public static CSSetGameThinkingInterval parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetGameThinkingInterval parseDelimitedFrom(InputStream inputStream) {
            return (CSSetGameThinkingInterval) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetGameThinkingInterval parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetGameThinkingInterval) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetGameThinkingInterval parseFrom(CodedInputStream codedInputStream) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetGameThinkingInterval parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetGameThinkingInterval) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSetGameThinkingInterval cSSetGameThinkingInterval) {
            return newBuilder().mergeFrom(cSSetGameThinkingInterval);
        }
    }

    public interface CSSetStraddleOrBuilder extends MessageOrBuilder {
        int getBStraddle();

        long getLGameRoomID();

        long getUuid();

        boolean hasBStraddle();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSSetStraddle extends GeneratedMessage implements CSSetStraddleOrBuilder {
        public static final int BSTRADDLE_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSetStraddle> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSetStraddle defaultInstance;
        private static final long serialVersionUID = 0;
        private int bStraddle_;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSetStraddle.1 */
        class C11921 extends AbstractParser<CSSetStraddle> {
            C11921() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSetStraddle(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSetStraddleOrBuilder {
            private int bStraddle_;
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.hq;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.hr.ensureFieldAccessorsInitialized(CSSetStraddle.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSetStraddle.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.bStraddle_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.hq;
            }

            public final CSSetStraddle getDefaultInstanceForType() {
                return CSSetStraddle.getDefaultInstance();
            }

            public final CSSetStraddle build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSetStraddle buildPartial() {
                int i = CSSetStraddle.UUID_FIELD_NUMBER;
                CSSetStraddle cSSetStraddle = new CSSetStraddle(null);
                int i2 = this.bitField0_;
                if ((i2 & CSSetStraddle.UUID_FIELD_NUMBER) != CSSetStraddle.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSetStraddle.uuid_ = this.uuid_;
                if ((i2 & CSSetStraddle.LGAMEROOMID_FIELD_NUMBER) == CSSetStraddle.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSSetStraddle.LGAMEROOMID_FIELD_NUMBER;
                }
                cSSetStraddle.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSSetStraddle.bStraddle_ = this.bStraddle_;
                cSSetStraddle.bitField0_ = i;
                onBuilt();
                return cSSetStraddle;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSetStraddle) {
                    return mergeFrom((CSSetStraddle) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSetStraddle cSSetStraddle) {
                if (cSSetStraddle != CSSetStraddle.getDefaultInstance()) {
                    if (cSSetStraddle.hasUuid()) {
                        setUuid(cSSetStraddle.getUuid());
                    }
                    if (cSSetStraddle.hasLGameRoomID()) {
                        setLGameRoomID(cSSetStraddle.getLGameRoomID());
                    }
                    if (cSSetStraddle.hasBStraddle()) {
                        setBStraddle(cSSetStraddle.getBStraddle());
                    }
                    mergeUnknownFields(cSSetStraddle.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID() && hasBStraddle()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSetStraddle.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSetStraddle.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetStraddle) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSetStraddle) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSetStraddle.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSetStraddle$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSetStraddle.UUID_FIELD_NUMBER) == CSSetStraddle.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSetStraddle.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSSetStraddle.LGAMEROOMID_FIELD_NUMBER) == CSSetStraddle.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSSetStraddle.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBStraddle() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getBStraddle() {
                return this.bStraddle_;
            }

            public final Builder setBStraddle(int i) {
                this.bitField0_ |= 4;
                this.bStraddle_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBStraddle() {
                this.bitField0_ &= -5;
                this.bStraddle_ = 0;
                onChanged();
                return this;
            }
        }

        private CSSetStraddle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSetStraddle(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSetStraddle getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSetStraddle getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSetStraddle(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.bStraddle_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.hq;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.hr.ensureFieldAccessorsInitialized(CSSetStraddle.class, Builder.class);
        }

        static {
            PARSER = new C11921();
            CSSetStraddle cSSetStraddle = new CSSetStraddle(true);
            defaultInstance = cSSetStraddle;
            cSSetStraddle.initFields();
        }

        public final Parser<CSSetStraddle> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasBStraddle() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getBStraddle() {
            return this.bStraddle_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.bStraddle_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasBStraddle()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(BSTRADDLE_FIELD_NUMBER, this.bStraddle_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(BSTRADDLE_FIELD_NUMBER, this.bStraddle_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSetStraddle parseFrom(ByteString byteString) {
            return (CSSetStraddle) PARSER.parseFrom(byteString);
        }

        public static CSSetStraddle parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetStraddle) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSetStraddle parseFrom(byte[] bArr) {
            return (CSSetStraddle) PARSER.parseFrom(bArr);
        }

        public static CSSetStraddle parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetStraddle) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSetStraddle parseFrom(InputStream inputStream) {
            return (CSSetStraddle) PARSER.parseFrom(inputStream);
        }

        public static CSSetStraddle parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetStraddle) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetStraddle parseDelimitedFrom(InputStream inputStream) {
            return (CSSetStraddle) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSetStraddle parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetStraddle) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSetStraddle parseFrom(CodedInputStream codedInputStream) {
            return (CSSetStraddle) PARSER.parseFrom(codedInputStream);
        }

        public static CSSetStraddle parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSetStraddle) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSetStraddle cSSetStraddle) {
            return newBuilder().mergeFrom(cSSetStraddle);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSShareOutOrBuilder extends MessageOrBuilder {
        long getUuid();

        boolean hasUuid();
    }

    public static final class CSShareOut extends GeneratedMessage implements CSShareOutOrBuilder {
        public static Parser<CSShareOut> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSShareOut defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSShareOut.1 */
        class C11931 extends AbstractParser<CSShareOut> {
            C11931() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSShareOut(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSShareOutOrBuilder {
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.am;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.an.ensureFieldAccessorsInitialized(CSShareOut.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSShareOut.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.am;
            }

            public final CSShareOut getDefaultInstanceForType() {
                return CSShareOut.getDefaultInstance();
            }

            public final CSShareOut build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSShareOut buildPartial() {
                int i = CSShareOut.UUID_FIELD_NUMBER;
                CSShareOut cSShareOut = new CSShareOut(null);
                if ((this.bitField0_ & CSShareOut.UUID_FIELD_NUMBER) != CSShareOut.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSShareOut.uuid_ = this.uuid_;
                cSShareOut.bitField0_ = i;
                onBuilt();
                return cSShareOut;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSShareOut) {
                    return mergeFrom((CSShareOut) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSShareOut cSShareOut) {
                if (cSShareOut != CSShareOut.getDefaultInstance()) {
                    if (cSShareOut.hasUuid()) {
                        setUuid(cSShareOut.getUuid());
                    }
                    mergeUnknownFields(cSShareOut.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSShareOut.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSShareOut.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSShareOut) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSShareOut) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSShareOut.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSShareOut$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSShareOut.UUID_FIELD_NUMBER) == CSShareOut.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSShareOut.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private CSShareOut(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSShareOut(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSShareOut getDefaultInstance() {
            return defaultInstance;
        }

        public final CSShareOut getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSShareOut(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.am;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.an.ensureFieldAccessorsInitialized(CSShareOut.class, Builder.class);
        }

        static {
            PARSER = new C11931();
            CSShareOut cSShareOut = new CSShareOut(true);
            defaultInstance = cSShareOut;
            cSShareOut.initFields();
        }

        public final Parser<CSShareOut> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSShareOut parseFrom(ByteString byteString) {
            return (CSShareOut) PARSER.parseFrom(byteString);
        }

        public static CSShareOut parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShareOut) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSShareOut parseFrom(byte[] bArr) {
            return (CSShareOut) PARSER.parseFrom(bArr);
        }

        public static CSShareOut parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShareOut) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSShareOut parseFrom(InputStream inputStream) {
            return (CSShareOut) PARSER.parseFrom(inputStream);
        }

        public static CSShareOut parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShareOut) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSShareOut parseDelimitedFrom(InputStream inputStream) {
            return (CSShareOut) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSShareOut parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShareOut) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSShareOut parseFrom(CodedInputStream codedInputStream) {
            return (CSShareOut) PARSER.parseFrom(codedInputStream);
        }

        public static CSShareOut parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShareOut) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSShareOut cSShareOut) {
            return newBuilder().mergeFrom(cSShareOut);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSShowCardOrBuilder extends MessageOrBuilder {
        int getBShowCardFour();

        int getBShowCardOne();

        int getBShowCardThree();

        int getBShowCardTwo();

        long getLGameID();

        long getLGameRoomID();

        long getUuid();

        boolean hasBShowCardFour();

        boolean hasBShowCardOne();

        boolean hasBShowCardThree();

        boolean hasBShowCardTwo();

        boolean hasLGameID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSShowCard extends GeneratedMessage implements CSShowCardOrBuilder {
        public static final int BSHOWCARDFOUR_FIELD_NUMBER = 7;
        public static final int BSHOWCARDONE_FIELD_NUMBER = 4;
        public static final int BSHOWCARDTHREE_FIELD_NUMBER = 6;
        public static final int BSHOWCARDTWO_FIELD_NUMBER = 5;
        public static final int LGAMEID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSShowCard> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSShowCard defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bShowCardFour_;
        private int bShowCardOne_;
        private int bShowCardThree_;
        private int bShowCardTwo_;
        private int bitField0_;
        private long lGameID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSShowCard.1 */
        class C11941 extends AbstractParser<CSShowCard> {
            C11941() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSShowCard(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSShowCardOrBuilder {
            private int bShowCardFour_;
            private int bShowCardOne_;
            private int bShowCardThree_;
            private int bShowCardTwo_;
            private int bitField0_;
            private long lGameID_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dK;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dL.ensureFieldAccessorsInitialized(CSShowCard.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSShowCard.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lGameID_ = 0;
                this.bitField0_ &= -5;
                this.bShowCardOne_ = 0;
                this.bitField0_ &= -9;
                this.bShowCardTwo_ = 0;
                this.bitField0_ &= -17;
                this.bShowCardThree_ = 0;
                this.bitField0_ &= -33;
                this.bShowCardFour_ = 0;
                this.bitField0_ &= -65;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dK;
            }

            public final CSShowCard getDefaultInstanceForType() {
                return CSShowCard.getDefaultInstance();
            }

            public final CSShowCard build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSShowCard buildPartial() {
                int i = CSShowCard.UUID_FIELD_NUMBER;
                CSShowCard cSShowCard = new CSShowCard((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSShowCard.UUID_FIELD_NUMBER) != CSShowCard.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSShowCard.uuid_ = this.uuid_;
                if ((i2 & CSShowCard.LGAMEROOMID_FIELD_NUMBER) == CSShowCard.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSShowCard.LGAMEROOMID_FIELD_NUMBER;
                }
                cSShowCard.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & CSShowCard.BSHOWCARDONE_FIELD_NUMBER) == CSShowCard.BSHOWCARDONE_FIELD_NUMBER) {
                    i |= CSShowCard.BSHOWCARDONE_FIELD_NUMBER;
                }
                cSShowCard.lGameID_ = this.lGameID_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSShowCard.bShowCardOne_ = this.bShowCardOne_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSShowCard.bShowCardTwo_ = this.bShowCardTwo_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSShowCard.bShowCardThree_ = this.bShowCardThree_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                cSShowCard.bShowCardFour_ = this.bShowCardFour_;
                cSShowCard.bitField0_ = i;
                onBuilt();
                return cSShowCard;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSShowCard) {
                    return mergeFrom((CSShowCard) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSShowCard cSShowCard) {
                if (cSShowCard != CSShowCard.getDefaultInstance()) {
                    if (cSShowCard.hasUuid()) {
                        setUuid(cSShowCard.getUuid());
                    }
                    if (cSShowCard.hasLGameRoomID()) {
                        setLGameRoomID(cSShowCard.getLGameRoomID());
                    }
                    if (cSShowCard.hasLGameID()) {
                        setLGameID(cSShowCard.getLGameID());
                    }
                    if (cSShowCard.hasBShowCardOne()) {
                        setBShowCardOne(cSShowCard.getBShowCardOne());
                    }
                    if (cSShowCard.hasBShowCardTwo()) {
                        setBShowCardTwo(cSShowCard.getBShowCardTwo());
                    }
                    if (cSShowCard.hasBShowCardThree()) {
                        setBShowCardThree(cSShowCard.getBShowCardThree());
                    }
                    if (cSShowCard.hasBShowCardFour()) {
                        setBShowCardFour(cSShowCard.getBShowCardFour());
                    }
                    mergeUnknownFields(cSShowCard.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSShowCard.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSShowCard.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSShowCard) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSShowCard) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSShowCard.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSShowCard$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSShowCard.UUID_FIELD_NUMBER) == CSShowCard.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSShowCard.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSShowCard.LGAMEROOMID_FIELD_NUMBER) == CSShowCard.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSShowCard.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameID() {
                return (this.bitField0_ & CSShowCard.BSHOWCARDONE_FIELD_NUMBER) == CSShowCard.BSHOWCARDONE_FIELD_NUMBER;
            }

            public final long getLGameID() {
                return this.lGameID_;
            }

            public final Builder setLGameID(long j) {
                this.bitField0_ |= CSShowCard.BSHOWCARDONE_FIELD_NUMBER;
                this.lGameID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameID() {
                this.bitField0_ &= -5;
                this.lGameID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBShowCardOne() {
                return (this.bitField0_ & 8) == 8;
            }

            public final int getBShowCardOne() {
                return this.bShowCardOne_;
            }

            public final Builder setBShowCardOne(int i) {
                this.bitField0_ |= 8;
                this.bShowCardOne_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBShowCardOne() {
                this.bitField0_ &= -9;
                this.bShowCardOne_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBShowCardTwo() {
                return (this.bitField0_ & 16) == 16;
            }

            public final int getBShowCardTwo() {
                return this.bShowCardTwo_;
            }

            public final Builder setBShowCardTwo(int i) {
                this.bitField0_ |= 16;
                this.bShowCardTwo_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBShowCardTwo() {
                this.bitField0_ &= -17;
                this.bShowCardTwo_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBShowCardThree() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getBShowCardThree() {
                return this.bShowCardThree_;
            }

            public final Builder setBShowCardThree(int i) {
                this.bitField0_ |= 32;
                this.bShowCardThree_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBShowCardThree() {
                this.bitField0_ &= -33;
                this.bShowCardThree_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBShowCardFour() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getBShowCardFour() {
                return this.bShowCardFour_;
            }

            public final Builder setBShowCardFour(int i) {
                this.bitField0_ |= 64;
                this.bShowCardFour_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBShowCardFour() {
                this.bitField0_ &= -65;
                this.bShowCardFour_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSShowCard(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSShowCard(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSShowCard cSShowCard);

        private native CSShowCard(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSShowCard(com.google.protobuf.GeneratedMessage.Builder builder, CSShowCard cSShowCard);

        private native CSShowCard(boolean z);

        private native void initFields();

        public final native int getBShowCardFour();

        public final native int getBShowCardOne();

        public final native int getBShowCardThree();

        public final native int getBShowCardTwo();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6253getDefaultInstanceForType();

        public final native CSShowCard m6254getDefaultInstanceForType();

        public final native long getLGameID();

        public final native long getLGameRoomID();

        public final native Parser<CSShowCard> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasBShowCardFour();

        public final native boolean hasBShowCardOne();

        public final native boolean hasBShowCardThree();

        public final native boolean hasBShowCardTwo();

        public final native boolean hasLGameID();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6255newBuilderForType();

        public final native Builder m6256newBuilderForType();

        protected final native Builder m6257newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6258toBuilder();

        public final native Builder m6259toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSShowCard getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dK;
        }

        static void __clinit__() {
            PARSER = new C11941();
            CSShowCard cSShowCard = new CSShowCard(true);
            defaultInstance = cSShowCard;
            cSShowCard.initFields();
        }

        public static CSShowCard parseFrom(ByteString byteString) {
            return (CSShowCard) PARSER.parseFrom(byteString);
        }

        public static CSShowCard parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowCard) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSShowCard parseFrom(byte[] bArr) {
            return (CSShowCard) PARSER.parseFrom(bArr);
        }

        public static CSShowCard parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowCard) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSShowCard parseFrom(InputStream inputStream) {
            return (CSShowCard) PARSER.parseFrom(inputStream);
        }

        public static CSShowCard parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowCard) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSShowCard parseDelimitedFrom(InputStream inputStream) {
            return (CSShowCard) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSShowCard parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowCard) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSShowCard parseFrom(CodedInputStream codedInputStream) {
            return (CSShowCard) PARSER.parseFrom(codedInputStream);
        }

        public static CSShowCard parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowCard) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSShowCard cSShowCard) {
            return newBuilder().mergeFrom(cSShowCard);
        }
    }

    public interface CSShowTableCardsOrBuilder extends MessageOrBuilder {
        long getLGameHandID();

        long getLGameRoomID();

        long getUuid();

        boolean hasLGameHandID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSShowTableCards extends GeneratedMessage implements CSShowTableCardsOrBuilder {
        public static final int LGAMEHANDID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSShowTableCards> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSShowTableCards defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameHandID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSShowTableCards.1 */
        class C11951 extends AbstractParser<CSShowTableCards> {
            C11951() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSShowTableCards(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSShowTableCardsOrBuilder {
            private int bitField0_;
            private long lGameHandID_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, WBConstants.SDK_NEW_PAY_VERSION, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6260build();

            public final native CSShowTableCards m6261build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6262buildPartial();

            public final native CSShowTableCards m6263buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6264clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6265clear();

            public final native Builder m6266clear();

            public final native Builder clearLGameHandID();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6267clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6268clone();

            public final native Builder m6269clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6270getDefaultInstanceForType();

            public final native CSShowTableCards m6271getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameHandID();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasLGameHandID();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6272mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6273mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6274mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6275mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6276mergeFrom(Message message);

            public final native Builder mergeFrom(CSShowTableCards cSShowTableCards);

            public final native Builder setLGameHandID(long j);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.ha;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSShowTableCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSShowTableCards(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSShowTableCards getDefaultInstance() {
            return defaultInstance;
        }

        public final CSShowTableCards getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSShowTableCards(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lGameHandID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ha;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.hb.ensureFieldAccessorsInitialized(CSShowTableCards.class, Builder.class);
        }

        static {
            PARSER = new C11951();
            CSShowTableCards cSShowTableCards = new CSShowTableCards(true);
            defaultInstance = cSShowTableCards;
            cSShowTableCards.initFields();
        }

        public final Parser<CSShowTableCards> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLGameHandID() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLGameHandID() {
            return this.lGameHandID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lGameHandID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameHandID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSShowTableCards parseFrom(ByteString byteString) {
            return (CSShowTableCards) PARSER.parseFrom(byteString);
        }

        public static CSShowTableCards parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowTableCards) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSShowTableCards parseFrom(byte[] bArr) {
            return (CSShowTableCards) PARSER.parseFrom(bArr);
        }

        public static CSShowTableCards parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowTableCards) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSShowTableCards parseFrom(InputStream inputStream) {
            return (CSShowTableCards) PARSER.parseFrom(inputStream);
        }

        public static CSShowTableCards parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowTableCards) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSShowTableCards parseDelimitedFrom(InputStream inputStream) {
            return (CSShowTableCards) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSShowTableCards parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowTableCards) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSShowTableCards parseFrom(CodedInputStream codedInputStream) {
            return (CSShowTableCards) PARSER.parseFrom(codedInputStream);
        }

        public static CSShowTableCards parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSShowTableCards) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSShowTableCards cSShowTableCards) {
            return newBuilder().mergeFrom(cSShowTableCards);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSSignUpSNGGameRoomOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSSignUpSNGGameRoom extends GeneratedMessage implements CSSignUpSNGGameRoomOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSignUpSNGGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSignUpSNGGameRoom defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom.1 */
        class C11961 extends AbstractParser<CSSignUpSNGGameRoom> {
            C11961() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSignUpSNGGameRoom(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSignUpSNGGameRoomOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bZ.ensureFieldAccessorsInitialized(CSSignUpSNGGameRoom.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSignUpSNGGameRoom.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bY;
            }

            public final CSSignUpSNGGameRoom getDefaultInstanceForType() {
                return CSSignUpSNGGameRoom.getDefaultInstance();
            }

            public final CSSignUpSNGGameRoom build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSignUpSNGGameRoom buildPartial() {
                int i = CSSignUpSNGGameRoom.UUID_FIELD_NUMBER;
                CSSignUpSNGGameRoom cSSignUpSNGGameRoom = new CSSignUpSNGGameRoom((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSSignUpSNGGameRoom.UUID_FIELD_NUMBER) != CSSignUpSNGGameRoom.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSignUpSNGGameRoom.uuid_ = this.uuid_;
                if ((i2 & CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
                }
                cSSignUpSNGGameRoom.lGameRoomID_ = this.lGameRoomID_;
                cSSignUpSNGGameRoom.bitField0_ = i;
                onBuilt();
                return cSSignUpSNGGameRoom;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSignUpSNGGameRoom) {
                    return mergeFrom((CSSignUpSNGGameRoom) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSignUpSNGGameRoom cSSignUpSNGGameRoom) {
                if (cSSignUpSNGGameRoom != CSSignUpSNGGameRoom.getDefaultInstance()) {
                    if (cSSignUpSNGGameRoom.hasUuid()) {
                        setUuid(cSSignUpSNGGameRoom.getUuid());
                    }
                    if (cSSignUpSNGGameRoom.hasLGameRoomID()) {
                        setLGameRoomID(cSSignUpSNGGameRoom.getLGameRoomID());
                    }
                    mergeUnknownFields(cSSignUpSNGGameRoom.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSignUpSNGGameRoom.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSignUpSNGGameRoom$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSignUpSNGGameRoom.UUID_FIELD_NUMBER) == CSSignUpSNGGameRoom.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSignUpSNGGameRoom.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER) == CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSSignUpSNGGameRoom.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSSignUpSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSSignUpSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSSignUpSNGGameRoom cSSignUpSNGGameRoom);

        private native CSSignUpSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSSignUpSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder builder, CSSignUpSNGGameRoom cSSignUpSNGGameRoom);

        private native CSSignUpSNGGameRoom(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6277getDefaultInstanceForType();

        public final native CSSignUpSNGGameRoom m6278getDefaultInstanceForType();

        public final native long getLGameRoomID();

        public final native Parser<CSSignUpSNGGameRoom> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasLGameRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6279newBuilderForType();

        public final native Builder m6280newBuilderForType();

        protected final native Builder m6281newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6282toBuilder();

        public final native Builder m6283toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSSignUpSNGGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bY;
        }

        static void __clinit__() {
            PARSER = new C11961();
            CSSignUpSNGGameRoom cSSignUpSNGGameRoom = new CSSignUpSNGGameRoom(true);
            defaultInstance = cSSignUpSNGGameRoom;
            cSSignUpSNGGameRoom.initFields();
        }

        public static CSSignUpSNGGameRoom parseFrom(ByteString byteString) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSSignUpSNGGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSignUpSNGGameRoom parseFrom(byte[] bArr) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSSignUpSNGGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSignUpSNGGameRoom parseFrom(InputStream inputStream) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSSignUpSNGGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSignUpSNGGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSSignUpSNGGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSignUpSNGGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSignUpSNGGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSignUpSNGGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSSignUpSNGGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSignUpSNGGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSSignUpSNGGameRoom cSSignUpSNGGameRoom) {
            return newBuilder().mergeFrom(cSSignUpSNGGameRoom);
        }
    }

    public interface CSSitDownOrBuilder extends MessageOrBuilder {
        int getIPos();

        long getLRoomID();

        long getUuid();

        boolean hasIPos();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSSitDown extends GeneratedMessage implements CSSitDownOrBuilder {
        public static final int IPOS_FIELD_NUMBER = 3;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSSitDown> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSSitDown defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iPos_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSitDown.1 */
        class C11971 extends AbstractParser<CSSitDown> {
            static {
                fixHelper.fixfunc(new int[]{2182, 2183});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C11971();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSitDownOrBuilder {
            private int bitField0_;
            private int iPos_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dq;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dr.ensureFieldAccessorsInitialized(CSSitDown.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSitDown.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.iPos_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dq;
            }

            public final CSSitDown getDefaultInstanceForType() {
                return CSSitDown.getDefaultInstance();
            }

            public final CSSitDown build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSitDown buildPartial() {
                int i = CSSitDown.UUID_FIELD_NUMBER;
                CSSitDown cSSitDown = new CSSitDown(null);
                int i2 = this.bitField0_;
                if ((i2 & CSSitDown.UUID_FIELD_NUMBER) != CSSitDown.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSitDown.uuid_ = this.uuid_;
                if ((i2 & CSSitDown.LROOMID_FIELD_NUMBER) == CSSitDown.LROOMID_FIELD_NUMBER) {
                    i |= CSSitDown.LROOMID_FIELD_NUMBER;
                }
                cSSitDown.lRoomID_ = this.lRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSSitDown.iPos_ = this.iPos_;
                cSSitDown.bitField0_ = i;
                onBuilt();
                return cSSitDown;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSitDown) {
                    return mergeFrom((CSSitDown) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSitDown cSSitDown) {
                if (cSSitDown != CSSitDown.getDefaultInstance()) {
                    if (cSSitDown.hasUuid()) {
                        setUuid(cSSitDown.getUuid());
                    }
                    if (cSSitDown.hasLRoomID()) {
                        setLRoomID(cSSitDown.getLRoomID());
                    }
                    if (cSSitDown.hasIPos()) {
                        setIPos(cSSitDown.getIPos());
                    }
                    mergeUnknownFields(cSSitDown.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID() && hasIPos()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSitDown.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSitDown.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSitDown) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSitDown) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSitDown.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSitDown$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSitDown.UUID_FIELD_NUMBER) == CSSitDown.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSitDown.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSSitDown.LROOMID_FIELD_NUMBER) == CSSitDown.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSSitDown.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIPos() {
                return (this.bitField0_ & 4) == 4;
            }

            public final int getIPos() {
                return this.iPos_;
            }

            public final Builder setIPos(int i) {
                this.bitField0_ |= 4;
                this.iPos_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIPos() {
                this.bitField0_ &= -5;
                this.iPos_ = 0;
                onChanged();
                return this;
            }
        }

        private CSSitDown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSitDown(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSitDown getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSitDown getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSitDown(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.iPos_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dq;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dr.ensureFieldAccessorsInitialized(CSSitDown.class, Builder.class);
        }

        static {
            PARSER = new C11971();
            CSSitDown cSSitDown = new CSSitDown(true);
            defaultInstance = cSSitDown;
            cSSitDown.initFields();
        }

        public final Parser<CSSitDown> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasIPos() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getIPos() {
            return this.iPos_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
            this.iPos_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasIPos()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(IPOS_FIELD_NUMBER, this.iPos_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(IPOS_FIELD_NUMBER, this.iPos_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSitDown parseFrom(ByteString byteString) {
            return (CSSitDown) PARSER.parseFrom(byteString);
        }

        public static CSSitDown parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSitDown) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSitDown parseFrom(byte[] bArr) {
            return (CSSitDown) PARSER.parseFrom(bArr);
        }

        public static CSSitDown parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSitDown) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSitDown parseFrom(InputStream inputStream) {
            return (CSSitDown) PARSER.parseFrom(inputStream);
        }

        public static CSSitDown parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSitDown) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSitDown parseDelimitedFrom(InputStream inputStream) {
            return (CSSitDown) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSitDown parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSitDown) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSitDown parseFrom(CodedInputStream codedInputStream) {
            return (CSSitDown) PARSER.parseFrom(codedInputStream);
        }

        public static CSSitDown parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSitDown) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSitDown cSSitDown) {
            return newBuilder().mergeFrom(cSSitDown);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSStandUpOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSStandUp extends GeneratedMessage implements CSStandUpOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSStandUp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSStandUp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSStandUp.1 */
        class C11981 extends AbstractParser<CSStandUp> {
            C11981() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSStandUp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSStandUpOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6284build();

            public final native CSStandUp m6285build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6286buildPartial();

            public final native CSStandUp m6287buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6288clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6289clear();

            public final native Builder m6290clear();

            public final native Builder clearLRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6291clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6292clone();

            public final native Builder m6293clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6294getDefaultInstanceForType();

            public final native CSStandUp m6295getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLRoomID();

            public final native long getUuid();

            public final native boolean hasLRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6296mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6297mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6298mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6299mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6300mergeFrom(Message message);

            public final native Builder mergeFrom(CSStandUp cSStandUp);

            public final native Builder setLRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.dm;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSStandUp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSStandUp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSStandUp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSStandUp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSStandUp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dm;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dn.ensureFieldAccessorsInitialized(CSStandUp.class, Builder.class);
        }

        static {
            PARSER = new C11981();
            CSStandUp cSStandUp = new CSStandUp(true);
            defaultInstance = cSStandUp;
            cSStandUp.initFields();
        }

        public final Parser<CSStandUp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSStandUp parseFrom(ByteString byteString) {
            return (CSStandUp) PARSER.parseFrom(byteString);
        }

        public static CSStandUp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStandUp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSStandUp parseFrom(byte[] bArr) {
            return (CSStandUp) PARSER.parseFrom(bArr);
        }

        public static CSStandUp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStandUp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSStandUp parseFrom(InputStream inputStream) {
            return (CSStandUp) PARSER.parseFrom(inputStream);
        }

        public static CSStandUp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStandUp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSStandUp parseDelimitedFrom(InputStream inputStream) {
            return (CSStandUp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSStandUp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStandUp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSStandUp parseFrom(CodedInputStream codedInputStream) {
            return (CSStandUp) PARSER.parseFrom(codedInputStream);
        }

        public static CSStandUp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStandUp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSStandUp cSStandUp) {
            return newBuilder().mergeFrom(cSStandUp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSStartGameOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSStartGame extends GeneratedMessage implements CSStartGameOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSStartGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSStartGame defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSStartGame.1 */
        class C11991 extends AbstractParser<CSStartGame> {
            C11991() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSStartGame(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSStartGameOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eu;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ev.ensureFieldAccessorsInitialized(CSStartGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSStartGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eu;
            }

            public final CSStartGame getDefaultInstanceForType() {
                return CSStartGame.getDefaultInstance();
            }

            public final CSStartGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSStartGame buildPartial() {
                int i = CSStartGame.UUID_FIELD_NUMBER;
                CSStartGame cSStartGame = new CSStartGame((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & CSStartGame.UUID_FIELD_NUMBER) != CSStartGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSStartGame.uuid_ = this.uuid_;
                if ((i2 & CSStartGame.LROOMID_FIELD_NUMBER) == CSStartGame.LROOMID_FIELD_NUMBER) {
                    i |= CSStartGame.LROOMID_FIELD_NUMBER;
                }
                cSStartGame.lRoomID_ = this.lRoomID_;
                cSStartGame.bitField0_ = i;
                onBuilt();
                return cSStartGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSStartGame) {
                    return mergeFrom((CSStartGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSStartGame cSStartGame) {
                if (cSStartGame != CSStartGame.getDefaultInstance()) {
                    if (cSStartGame.hasUuid()) {
                        setUuid(cSStartGame.getUuid());
                    }
                    if (cSStartGame.hasLRoomID()) {
                        setLRoomID(cSStartGame.getLRoomID());
                    }
                    mergeUnknownFields(cSStartGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSStartGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSStartGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSStartGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSStartGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSStartGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSStartGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSStartGame.UUID_FIELD_NUMBER) == CSStartGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSStartGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSStartGame.LROOMID_FIELD_NUMBER) == CSStartGame.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSStartGame.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSStartGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSStartGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSStartGame cSStartGame);

        private native CSStartGame(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSStartGame(com.google.protobuf.GeneratedMessage.Builder builder, CSStartGame cSStartGame);

        private native CSStartGame(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6301getDefaultInstanceForType();

        public final native CSStartGame m6302getDefaultInstanceForType();

        public final native long getLRoomID();

        public final native Parser<CSStartGame> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native boolean hasLRoomID();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6303newBuilderForType();

        public final native Builder m6304newBuilderForType();

        protected final native Builder m6305newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6306toBuilder();

        public final native Builder m6307toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSStartGame getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eu;
        }

        static void __clinit__() {
            PARSER = new C11991();
            CSStartGame cSStartGame = new CSStartGame(true);
            defaultInstance = cSStartGame;
            cSStartGame.initFields();
        }

        public static CSStartGame parseFrom(ByteString byteString) {
            return (CSStartGame) PARSER.parseFrom(byteString);
        }

        public static CSStartGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSStartGame parseFrom(byte[] bArr) {
            return (CSStartGame) PARSER.parseFrom(bArr);
        }

        public static CSStartGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSStartGame parseFrom(InputStream inputStream) {
            return (CSStartGame) PARSER.parseFrom(inputStream);
        }

        public static CSStartGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSStartGame parseDelimitedFrom(InputStream inputStream) {
            return (CSStartGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSStartGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSStartGame parseFrom(CodedInputStream codedInputStream) {
            return (CSStartGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSStartGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSStartGame cSStartGame) {
            return newBuilder().mergeFrom(cSStartGame);
        }
    }

    public interface CSStartQuickRoomGameOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        long getUuid();

        boolean hasLRoomID();

        boolean hasUuid();
    }

    public static final class CSStartQuickRoomGame extends GeneratedMessage implements CSStartQuickRoomGameOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static Parser<CSStartQuickRoomGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSStartQuickRoomGame defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame.1 */
        class C12001 extends AbstractParser<CSStartQuickRoomGame> {
            C12001() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSStartQuickRoomGame(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSStartQuickRoomGameOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ec;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ed.ensureFieldAccessorsInitialized(CSStartQuickRoomGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSStartQuickRoomGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ec;
            }

            public final CSStartQuickRoomGame getDefaultInstanceForType() {
                return CSStartQuickRoomGame.getDefaultInstance();
            }

            public final CSStartQuickRoomGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSStartQuickRoomGame buildPartial() {
                int i = CSStartQuickRoomGame.UUID_FIELD_NUMBER;
                CSStartQuickRoomGame cSStartQuickRoomGame = new CSStartQuickRoomGame(null);
                int i2 = this.bitField0_;
                if ((i2 & CSStartQuickRoomGame.UUID_FIELD_NUMBER) != CSStartQuickRoomGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSStartQuickRoomGame.uuid_ = this.uuid_;
                if ((i2 & CSStartQuickRoomGame.LROOMID_FIELD_NUMBER) == CSStartQuickRoomGame.LROOMID_FIELD_NUMBER) {
                    i |= CSStartQuickRoomGame.LROOMID_FIELD_NUMBER;
                }
                cSStartQuickRoomGame.lRoomID_ = this.lRoomID_;
                cSStartQuickRoomGame.bitField0_ = i;
                onBuilt();
                return cSStartQuickRoomGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSStartQuickRoomGame) {
                    return mergeFrom((CSStartQuickRoomGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSStartQuickRoomGame cSStartQuickRoomGame) {
                if (cSStartQuickRoomGame != CSStartQuickRoomGame.getDefaultInstance()) {
                    if (cSStartQuickRoomGame.hasUuid()) {
                        setUuid(cSStartQuickRoomGame.getUuid());
                    }
                    if (cSStartQuickRoomGame.hasLRoomID()) {
                        setLRoomID(cSStartQuickRoomGame.getLRoomID());
                    }
                    mergeUnknownFields(cSStartQuickRoomGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSStartQuickRoomGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSStartQuickRoomGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSStartQuickRoomGame.UUID_FIELD_NUMBER) == CSStartQuickRoomGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSStartQuickRoomGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & CSStartQuickRoomGame.LROOMID_FIELD_NUMBER) == CSStartQuickRoomGame.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= CSStartQuickRoomGame.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSStartQuickRoomGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSStartQuickRoomGame(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSStartQuickRoomGame getDefaultInstance() {
            return defaultInstance;
        }

        public final CSStartQuickRoomGame getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSStartQuickRoomGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ec;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ed.ensureFieldAccessorsInitialized(CSStartQuickRoomGame.class, Builder.class);
        }

        static {
            PARSER = new C12001();
            CSStartQuickRoomGame cSStartQuickRoomGame = new CSStartQuickRoomGame(true);
            defaultInstance = cSStartQuickRoomGame;
            cSStartQuickRoomGame.initFields();
        }

        public final Parser<CSStartQuickRoomGame> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSStartQuickRoomGame parseFrom(ByteString byteString) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(byteString);
        }

        public static CSStartQuickRoomGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSStartQuickRoomGame parseFrom(byte[] bArr) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(bArr);
        }

        public static CSStartQuickRoomGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSStartQuickRoomGame parseFrom(InputStream inputStream) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(inputStream);
        }

        public static CSStartQuickRoomGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSStartQuickRoomGame parseDelimitedFrom(InputStream inputStream) {
            return (CSStartQuickRoomGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSStartQuickRoomGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartQuickRoomGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSStartQuickRoomGame parseFrom(CodedInputStream codedInputStream) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSStartQuickRoomGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStartQuickRoomGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSStartQuickRoomGame cSStartQuickRoomGame) {
            return newBuilder().mergeFrom(cSStartQuickRoomGame);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSStopSNGGameOrBuilder extends MessageOrBuilder {
        long getBStop();

        long getUuid();

        boolean hasBStop();

        boolean hasUuid();
    }

    public static final class CSStopSNGGame extends GeneratedMessage implements CSStopSNGGameOrBuilder {
        public static final int BSTOP_FIELD_NUMBER = 2;
        public static Parser<CSStopSNGGame> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSStopSNGGame defaultInstance;
        private static final long serialVersionUID = 0;
        private long bStop_;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSStopSNGGame.1 */
        class C12011 extends AbstractParser<CSStopSNGGame> {
            C12011() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSStopSNGGame(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSStopSNGGameOrBuilder {
            private long bStop_;
            private int bitField0_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ga;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gb.ensureFieldAccessorsInitialized(CSStopSNGGame.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSStopSNGGame.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.bStop_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ga;
            }

            public final CSStopSNGGame getDefaultInstanceForType() {
                return CSStopSNGGame.getDefaultInstance();
            }

            public final CSStopSNGGame build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSStopSNGGame buildPartial() {
                int i = CSStopSNGGame.UUID_FIELD_NUMBER;
                CSStopSNGGame cSStopSNGGame = new CSStopSNGGame(null);
                int i2 = this.bitField0_;
                if ((i2 & CSStopSNGGame.UUID_FIELD_NUMBER) != CSStopSNGGame.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSStopSNGGame.uuid_ = this.uuid_;
                if ((i2 & CSStopSNGGame.BSTOP_FIELD_NUMBER) == CSStopSNGGame.BSTOP_FIELD_NUMBER) {
                    i |= CSStopSNGGame.BSTOP_FIELD_NUMBER;
                }
                cSStopSNGGame.bStop_ = this.bStop_;
                cSStopSNGGame.bitField0_ = i;
                onBuilt();
                return cSStopSNGGame;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSStopSNGGame) {
                    return mergeFrom((CSStopSNGGame) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSStopSNGGame cSStopSNGGame) {
                if (cSStopSNGGame != CSStopSNGGame.getDefaultInstance()) {
                    if (cSStopSNGGame.hasUuid()) {
                        setUuid(cSStopSNGGame.getUuid());
                    }
                    if (cSStopSNGGame.hasBStop()) {
                        setBStop(cSStopSNGGame.getBStop());
                    }
                    mergeUnknownFields(cSStopSNGGame.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasBStop()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSStopSNGGame.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSStopSNGGame.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSStopSNGGame) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSStopSNGGame) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSStopSNGGame.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSStopSNGGame$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSStopSNGGame.UUID_FIELD_NUMBER) == CSStopSNGGame.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSStopSNGGame.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBStop() {
                return (this.bitField0_ & CSStopSNGGame.BSTOP_FIELD_NUMBER) == CSStopSNGGame.BSTOP_FIELD_NUMBER;
            }

            public final long getBStop() {
                return this.bStop_;
            }

            public final Builder setBStop(long j) {
                this.bitField0_ |= CSStopSNGGame.BSTOP_FIELD_NUMBER;
                this.bStop_ = j;
                onChanged();
                return this;
            }

            public final Builder clearBStop() {
                this.bitField0_ &= -3;
                this.bStop_ = 0;
                onChanged();
                return this;
            }
        }

        private CSStopSNGGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSStopSNGGame(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSStopSNGGame getDefaultInstance() {
            return defaultInstance;
        }

        public final CSStopSNGGame getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSStopSNGGame(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= BSTOP_FIELD_NUMBER;
                            this.bStop_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ga;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gb.ensureFieldAccessorsInitialized(CSStopSNGGame.class, Builder.class);
        }

        static {
            PARSER = new C12011();
            CSStopSNGGame cSStopSNGGame = new CSStopSNGGame(true);
            defaultInstance = cSStopSNGGame;
            cSStopSNGGame.initFields();
        }

        public final Parser<CSStopSNGGame> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasBStop() {
            return (this.bitField0_ & BSTOP_FIELD_NUMBER) == BSTOP_FIELD_NUMBER;
        }

        public final long getBStop() {
            return this.bStop_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.bStop_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasBStop()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & BSTOP_FIELD_NUMBER) == BSTOP_FIELD_NUMBER) {
                codedOutputStream.writeInt64(BSTOP_FIELD_NUMBER, this.bStop_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & BSTOP_FIELD_NUMBER) == BSTOP_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(BSTOP_FIELD_NUMBER, this.bStop_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSStopSNGGame parseFrom(ByteString byteString) {
            return (CSStopSNGGame) PARSER.parseFrom(byteString);
        }

        public static CSStopSNGGame parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStopSNGGame) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSStopSNGGame parseFrom(byte[] bArr) {
            return (CSStopSNGGame) PARSER.parseFrom(bArr);
        }

        public static CSStopSNGGame parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStopSNGGame) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSStopSNGGame parseFrom(InputStream inputStream) {
            return (CSStopSNGGame) PARSER.parseFrom(inputStream);
        }

        public static CSStopSNGGame parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStopSNGGame) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSStopSNGGame parseDelimitedFrom(InputStream inputStream) {
            return (CSStopSNGGame) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSStopSNGGame parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStopSNGGame) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSStopSNGGame parseFrom(CodedInputStream codedInputStream) {
            return (CSStopSNGGame) PARSER.parseFrom(codedInputStream);
        }

        public static CSStopSNGGame parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSStopSNGGame) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSStopSNGGame cSStopSNGGame) {
            return newBuilder().mergeFrom(cSStopSNGGame);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSystemChatRoomMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSSystemChatRoomMsgRsp extends GeneratedMessage implements CSSystemChatRoomMsgRspOrBuilder {
        public static Parser<CSSystemChatRoomMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSSystemChatRoomMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp.1 */
        class C12021 extends AbstractParser<CSSystemChatRoomMsgRsp> {
            C12021() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSystemChatRoomMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSystemChatRoomMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fc;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fd.ensureFieldAccessorsInitialized(CSSystemChatRoomMsgRsp.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSystemChatRoomMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fc;
            }

            public final CSSystemChatRoomMsgRsp getDefaultInstanceForType() {
                return CSSystemChatRoomMsgRsp.getDefaultInstance();
            }

            public final CSSystemChatRoomMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSystemChatRoomMsgRsp buildPartial() {
                int i = CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER;
                CSSystemChatRoomMsgRsp cSSystemChatRoomMsgRsp = new CSSystemChatRoomMsgRsp(null);
                if ((this.bitField0_ & CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER) != CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSystemChatRoomMsgRsp.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSSystemChatRoomMsgRsp.VMSGIDS_FIELD_NUMBER) == CSSystemChatRoomMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSSystemChatRoomMsgRsp.vMsgIds_ = this.vMsgIds_;
                cSSystemChatRoomMsgRsp.bitField0_ = i;
                onBuilt();
                return cSSystemChatRoomMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSystemChatRoomMsgRsp) {
                    return mergeFrom((CSSystemChatRoomMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSystemChatRoomMsgRsp cSSystemChatRoomMsgRsp) {
                if (cSSystemChatRoomMsgRsp != CSSystemChatRoomMsgRsp.getDefaultInstance()) {
                    if (cSSystemChatRoomMsgRsp.hasUuid()) {
                        setUuid(cSSystemChatRoomMsgRsp.getUuid());
                    }
                    if (!cSSystemChatRoomMsgRsp.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSSystemChatRoomMsgRsp.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSSystemChatRoomMsgRsp.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSSystemChatRoomMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSystemChatRoomMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSystemChatRoomMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER) == CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSystemChatRoomMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSSystemChatRoomMsgRsp.VMSGIDS_FIELD_NUMBER) != CSSystemChatRoomMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSSystemChatRoomMsgRsp.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSSystemChatRoomMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSystemChatRoomMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSystemChatRoomMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSystemChatRoomMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSystemChatRoomMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fc;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fd.ensureFieldAccessorsInitialized(CSSystemChatRoomMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C12021();
            CSSystemChatRoomMsgRsp cSSystemChatRoomMsgRsp = new CSSystemChatRoomMsgRsp(true);
            defaultInstance = cSSystemChatRoomMsgRsp;
            cSSystemChatRoomMsgRsp.initFields();
        }

        public final Parser<CSSystemChatRoomMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSystemChatRoomMsgRsp parseFrom(ByteString byteString) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(byte[] bArr) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(InputStream inputStream) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemChatRoomMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSystemChatRoomMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSSystemChatRoomMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemChatRoomMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSystemChatRoomMsgRsp cSSystemChatRoomMsgRsp) {
            return newBuilder().mergeFrom(cSSystemChatRoomMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSystemClubMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSSystemClubMsgRsp extends GeneratedMessage implements CSSystemClubMsgRspOrBuilder {
        public static Parser<CSSystemClubMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSSystemClubMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp.1 */
        class C12031 extends AbstractParser<CSSystemClubMsgRsp> {
            C12031() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSystemClubMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSystemClubMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fy;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fz.ensureFieldAccessorsInitialized(CSSystemClubMsgRsp.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSystemClubMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fy;
            }

            public final CSSystemClubMsgRsp getDefaultInstanceForType() {
                return CSSystemClubMsgRsp.getDefaultInstance();
            }

            public final CSSystemClubMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSystemClubMsgRsp buildPartial() {
                int i = CSSystemClubMsgRsp.UUID_FIELD_NUMBER;
                CSSystemClubMsgRsp cSSystemClubMsgRsp = new CSSystemClubMsgRsp(null);
                if ((this.bitField0_ & CSSystemClubMsgRsp.UUID_FIELD_NUMBER) != CSSystemClubMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSystemClubMsgRsp.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSSystemClubMsgRsp.VMSGIDS_FIELD_NUMBER) == CSSystemClubMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSSystemClubMsgRsp.vMsgIds_ = this.vMsgIds_;
                cSSystemClubMsgRsp.bitField0_ = i;
                onBuilt();
                return cSSystemClubMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSystemClubMsgRsp) {
                    return mergeFrom((CSSystemClubMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSystemClubMsgRsp cSSystemClubMsgRsp) {
                if (cSSystemClubMsgRsp != CSSystemClubMsgRsp.getDefaultInstance()) {
                    if (cSSystemClubMsgRsp.hasUuid()) {
                        setUuid(cSSystemClubMsgRsp.getUuid());
                    }
                    if (!cSSystemClubMsgRsp.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSSystemClubMsgRsp.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSSystemClubMsgRsp.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSSystemClubMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSystemClubMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSystemClubMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSystemClubMsgRsp.UUID_FIELD_NUMBER) == CSSystemClubMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSystemClubMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSSystemClubMsgRsp.VMSGIDS_FIELD_NUMBER) != CSSystemClubMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSSystemClubMsgRsp.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSSystemClubMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSystemClubMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSystemClubMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSystemClubMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSystemClubMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fy;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fz.ensureFieldAccessorsInitialized(CSSystemClubMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C12031();
            CSSystemClubMsgRsp cSSystemClubMsgRsp = new CSSystemClubMsgRsp(true);
            defaultInstance = cSSystemClubMsgRsp;
            cSSystemClubMsgRsp.initFields();
        }

        public final Parser<CSSystemClubMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSystemClubMsgRsp parseFrom(ByteString byteString) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSSystemClubMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSystemClubMsgRsp parseFrom(byte[] bArr) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSSystemClubMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSystemClubMsgRsp parseFrom(InputStream inputStream) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSSystemClubMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemClubMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSSystemClubMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSystemClubMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemClubMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemClubMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSSystemClubMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemClubMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSystemClubMsgRsp cSSystemClubMsgRsp) {
            return newBuilder().mergeFrom(cSSystemClubMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSystemGameRoomMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSSystemGameRoomMsgRsp extends GeneratedMessage implements CSSystemGameRoomMsgRspOrBuilder {
        public static Parser<CSSystemGameRoomMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSSystemGameRoomMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSystemGameRoomMsgRsp.1 */
        class C12041 extends AbstractParser<CSSystemGameRoomMsgRsp> {
            C12041() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSystemGameRoomMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSystemGameRoomMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            static {
                fixHelper.fixfunc(new int[]{2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVMsgIdsIsMutable();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVMsgIds(Iterable<? extends Long> iterable);

            public final native Builder addVMsgIds(long j);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6308build();

            public final native CSSystemGameRoomMsgRsp m6309build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6310buildPartial();

            public final native CSSystemGameRoomMsgRsp m6311buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6312clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6313clear();

            public final native Builder m6314clear();

            public final native Builder clearUuid();

            public final native Builder clearVMsgIds();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6315clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6316clone();

            public final native Builder m6317clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6318getDefaultInstanceForType();

            public final native CSSystemGameRoomMsgRsp m6319getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getUuid();

            public final native long getVMsgIds(int i);

            public final native int getVMsgIdsCount();

            public final native List<Long> getVMsgIdsList();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6320mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6321mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6322mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6323mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6324mergeFrom(Message message);

            public final native Builder mergeFrom(CSSystemGameRoomMsgRsp cSSystemGameRoomMsgRsp);

            public final native Builder setUuid(long j);

            public final native Builder setVMsgIds(int i, long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.fi;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSSystemGameRoomMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSystemGameRoomMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSystemGameRoomMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSystemGameRoomMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSystemGameRoomMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fi;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fj.ensureFieldAccessorsInitialized(CSSystemGameRoomMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C12041();
            CSSystemGameRoomMsgRsp cSSystemGameRoomMsgRsp = new CSSystemGameRoomMsgRsp(true);
            defaultInstance = cSSystemGameRoomMsgRsp;
            cSSystemGameRoomMsgRsp.initFields();
        }

        public final Parser<CSSystemGameRoomMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSystemGameRoomMsgRsp parseFrom(ByteString byteString) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(byte[] bArr) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(InputStream inputStream) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemGameRoomMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSystemGameRoomMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSSystemGameRoomMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemGameRoomMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSystemGameRoomMsgRsp cSSystemGameRoomMsgRsp) {
            return newBuilder().mergeFrom(cSSystemGameRoomMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSSystemMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSSystemMsgRsp extends GeneratedMessage implements CSSystemMsgRspOrBuilder {
        public static Parser<CSSystemMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSSystemMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSystemMsgRsp.1 */
        class C12051 extends AbstractParser<CSSystemMsgRsp> {
            C12051() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSystemMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSystemMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fo;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fp.ensureFieldAccessorsInitialized(CSSystemMsgRsp.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSystemMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fo;
            }

            public final CSSystemMsgRsp getDefaultInstanceForType() {
                return CSSystemMsgRsp.getDefaultInstance();
            }

            public final CSSystemMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSystemMsgRsp buildPartial() {
                int i = CSSystemMsgRsp.UUID_FIELD_NUMBER;
                CSSystemMsgRsp cSSystemMsgRsp = new CSSystemMsgRsp(null);
                if ((this.bitField0_ & CSSystemMsgRsp.UUID_FIELD_NUMBER) != CSSystemMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSystemMsgRsp.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSSystemMsgRsp.VMSGIDS_FIELD_NUMBER) == CSSystemMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSSystemMsgRsp.vMsgIds_ = this.vMsgIds_;
                cSSystemMsgRsp.bitField0_ = i;
                onBuilt();
                return cSSystemMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSystemMsgRsp) {
                    return mergeFrom((CSSystemMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSystemMsgRsp cSSystemMsgRsp) {
                if (cSSystemMsgRsp != CSSystemMsgRsp.getDefaultInstance()) {
                    if (cSSystemMsgRsp.hasUuid()) {
                        setUuid(cSSystemMsgRsp.getUuid());
                    }
                    if (!cSSystemMsgRsp.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSSystemMsgRsp.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSSystemMsgRsp.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSSystemMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSystemMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSystemMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSystemMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSystemMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSystemMsgRsp.UUID_FIELD_NUMBER) == CSSystemMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSystemMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSSystemMsgRsp.VMSGIDS_FIELD_NUMBER) != CSSystemMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSSystemMsgRsp.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSSystemMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSystemMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSystemMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSystemMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSystemMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fo;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fp.ensureFieldAccessorsInitialized(CSSystemMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C12051();
            CSSystemMsgRsp cSSystemMsgRsp = new CSSystemMsgRsp(true);
            defaultInstance = cSSystemMsgRsp;
            cSSystemMsgRsp.initFields();
        }

        public final Parser<CSSystemMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSystemMsgRsp parseFrom(ByteString byteString) {
            return (CSSystemMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSSystemMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSystemMsgRsp parseFrom(byte[] bArr) {
            return (CSSystemMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSSystemMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSystemMsgRsp parseFrom(InputStream inputStream) {
            return (CSSystemMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSSystemMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSSystemMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSystemMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSSystemMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSSystemMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSystemMsgRsp cSSystemMsgRsp) {
            return newBuilder().mergeFrom(cSSystemMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSSystemQuickGameRoomMsRspgOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSSystemQuickGameRoomMsRspg extends GeneratedMessage implements CSSystemQuickGameRoomMsRspgOrBuilder {
        public static Parser<CSSystemQuickGameRoomMsRspg> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSSystemQuickGameRoomMsRspg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg.1 */
        class C12061 extends AbstractParser<CSSystemQuickGameRoomMsRspg> {
            C12061() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSSystemQuickGameRoomMsRspg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSSystemQuickGameRoomMsRspgOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.es;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.et.ensureFieldAccessorsInitialized(CSSystemQuickGameRoomMsRspg.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSSystemQuickGameRoomMsRspg.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.es;
            }

            public final CSSystemQuickGameRoomMsRspg getDefaultInstanceForType() {
                return CSSystemQuickGameRoomMsRspg.getDefaultInstance();
            }

            public final CSSystemQuickGameRoomMsRspg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSSystemQuickGameRoomMsRspg buildPartial() {
                int i = CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER;
                CSSystemQuickGameRoomMsRspg cSSystemQuickGameRoomMsRspg = new CSSystemQuickGameRoomMsRspg(null);
                if ((this.bitField0_ & CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER) != CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSSystemQuickGameRoomMsRspg.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSSystemQuickGameRoomMsRspg.VMSGIDS_FIELD_NUMBER) == CSSystemQuickGameRoomMsRspg.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSSystemQuickGameRoomMsRspg.vMsgIds_ = this.vMsgIds_;
                cSSystemQuickGameRoomMsRspg.bitField0_ = i;
                onBuilt();
                return cSSystemQuickGameRoomMsRspg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSSystemQuickGameRoomMsRspg) {
                    return mergeFrom((CSSystemQuickGameRoomMsRspg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSSystemQuickGameRoomMsRspg cSSystemQuickGameRoomMsRspg) {
                if (cSSystemQuickGameRoomMsRspg != CSSystemQuickGameRoomMsRspg.getDefaultInstance()) {
                    if (cSSystemQuickGameRoomMsRspg.hasUuid()) {
                        setUuid(cSSystemQuickGameRoomMsRspg.getUuid());
                    }
                    if (!cSSystemQuickGameRoomMsRspg.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSSystemQuickGameRoomMsRspg.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSSystemQuickGameRoomMsRspg.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSSystemQuickGameRoomMsRspg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSSystemQuickGameRoomMsRspg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSSystemQuickGameRoomMsRspg$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER) == CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSSystemQuickGameRoomMsRspg.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSSystemQuickGameRoomMsRspg.VMSGIDS_FIELD_NUMBER) != CSSystemQuickGameRoomMsRspg.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSSystemQuickGameRoomMsRspg.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSSystemQuickGameRoomMsRspg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSSystemQuickGameRoomMsRspg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSSystemQuickGameRoomMsRspg getDefaultInstance() {
            return defaultInstance;
        }

        public final CSSystemQuickGameRoomMsRspg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSSystemQuickGameRoomMsRspg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.es;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.et.ensureFieldAccessorsInitialized(CSSystemQuickGameRoomMsRspg.class, Builder.class);
        }

        static {
            PARSER = new C12061();
            CSSystemQuickGameRoomMsRspg cSSystemQuickGameRoomMsRspg = new CSSystemQuickGameRoomMsRspg(true);
            defaultInstance = cSSystemQuickGameRoomMsRspg;
            cSSystemQuickGameRoomMsRspg.initFields();
        }

        public final Parser<CSSystemQuickGameRoomMsRspg> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(ByteString byteString) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(byteString);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(byte[] bArr) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(bArr);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(InputStream inputStream) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(inputStream);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemQuickGameRoomMsRspg parseDelimitedFrom(InputStream inputStream) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSSystemQuickGameRoomMsRspg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(CodedInputStream codedInputStream) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(codedInputStream);
        }

        public static CSSystemQuickGameRoomMsRspg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSSystemQuickGameRoomMsRspg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSSystemQuickGameRoomMsRspg cSSystemQuickGameRoomMsRspg) {
            return newBuilder().mergeFrom(cSSystemQuickGameRoomMsRspg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUploadAPNTokenOrBuilder extends MessageOrBuilder {
        DEVICE_TYPE getEDeviceType();

        String getStrAndroidFCMAPNToken();

        ByteString getStrAndroidFCMAPNTokenBytes();

        String getStrAndroidXingeAPNToken();

        ByteString getStrAndroidXingeAPNTokenBytes();

        String getStrIosAPNToken();

        ByteString getStrIosAPNTokenBytes();

        long getUuid();

        boolean hasEDeviceType();

        boolean hasStrAndroidFCMAPNToken();

        boolean hasStrAndroidXingeAPNToken();

        boolean hasStrIosAPNToken();

        boolean hasUuid();
    }

    public static final class CSUploadAPNToken extends GeneratedMessage implements CSUploadAPNTokenOrBuilder {
        public static final int EDEVICETYPE_FIELD_NUMBER = 2;
        public static Parser<CSUploadAPNToken> PARSER = null;
        public static final int STRANDROIDFCMAPNTOKEN_FIELD_NUMBER = 5;
        public static final int STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER = 4;
        public static final int STRIOSAPNTOKEN_FIELD_NUMBER = 3;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSUploadAPNToken defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object strAndroidFCMAPNToken_;
        private Object strAndroidXingeAPNToken_;
        private Object strIosAPNToken_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUploadAPNToken.1 */
        class C12071 extends AbstractParser<CSUploadAPNToken> {
            C12071() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUploadAPNToken(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUploadAPNTokenOrBuilder {
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private Object strAndroidFCMAPNToken_;
            private Object strAndroidXingeAPNToken_;
            private Object strIosAPNToken_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gS;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gT.ensureFieldAccessorsInitialized(CSUploadAPNToken.class, Builder.class);
            }

            private Builder() {
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.strIosAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strAndroidXingeAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strAndroidFCMAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.strIosAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strAndroidXingeAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strAndroidFCMAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSUploadAPNToken.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -3;
                this.strIosAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.strAndroidXingeAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.strAndroidFCMAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gS;
            }

            public final CSUploadAPNToken getDefaultInstanceForType() {
                return CSUploadAPNToken.getDefaultInstance();
            }

            public final CSUploadAPNToken build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSUploadAPNToken buildPartial() {
                int i = CSUploadAPNToken.UUID_FIELD_NUMBER;
                CSUploadAPNToken cSUploadAPNToken = new CSUploadAPNToken(null);
                int i2 = this.bitField0_;
                if ((i2 & CSUploadAPNToken.UUID_FIELD_NUMBER) != CSUploadAPNToken.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSUploadAPNToken.uuid_ = this.uuid_;
                if ((i2 & CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER) == CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER) {
                    i |= CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER;
                }
                cSUploadAPNToken.eDeviceType_ = this.eDeviceType_;
                if ((i2 & CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) == CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) {
                    i |= CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
                }
                cSUploadAPNToken.strIosAPNToken_ = this.strIosAPNToken_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSUploadAPNToken.strAndroidXingeAPNToken_ = this.strAndroidXingeAPNToken_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSUploadAPNToken.strAndroidFCMAPNToken_ = this.strAndroidFCMAPNToken_;
                cSUploadAPNToken.bitField0_ = i;
                onBuilt();
                return cSUploadAPNToken;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSUploadAPNToken) {
                    return mergeFrom((CSUploadAPNToken) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSUploadAPNToken cSUploadAPNToken) {
                if (cSUploadAPNToken != CSUploadAPNToken.getDefaultInstance()) {
                    if (cSUploadAPNToken.hasUuid()) {
                        setUuid(cSUploadAPNToken.getUuid());
                    }
                    if (cSUploadAPNToken.hasEDeviceType()) {
                        setEDeviceType(cSUploadAPNToken.getEDeviceType());
                    }
                    if (cSUploadAPNToken.hasStrIosAPNToken()) {
                        this.bitField0_ |= CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
                        this.strIosAPNToken_ = cSUploadAPNToken.strIosAPNToken_;
                        onChanged();
                    }
                    if (cSUploadAPNToken.hasStrAndroidXingeAPNToken()) {
                        this.bitField0_ |= 8;
                        this.strAndroidXingeAPNToken_ = cSUploadAPNToken.strAndroidXingeAPNToken_;
                        onChanged();
                    }
                    if (cSUploadAPNToken.hasStrAndroidFCMAPNToken()) {
                        this.bitField0_ |= 16;
                        this.strAndroidFCMAPNToken_ = cSUploadAPNToken.strAndroidFCMAPNToken_;
                        onChanged();
                    }
                    mergeUnknownFields(cSUploadAPNToken.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasEDeviceType()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSUploadAPNToken.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSUploadAPNToken.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSUploadAPNToken) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSUploadAPNToken) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSUploadAPNToken.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSUploadAPNToken$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSUploadAPNToken.UUID_FIELD_NUMBER) == CSUploadAPNToken.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSUploadAPNToken.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER) == CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadAPNToken.EDEVICETYPE_FIELD_NUMBER;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -3;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasStrIosAPNToken() {
                return (this.bitField0_ & CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) == CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
            }

            public final String getStrIosAPNToken() {
                Object obj = this.strIosAPNToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosAPNToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosAPNTokenBytes() {
                Object obj = this.strIosAPNToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosAPNToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosAPNToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
                this.strIosAPNToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosAPNToken() {
                this.bitField0_ &= -5;
                this.strIosAPNToken_ = CSUploadAPNToken.getDefaultInstance().getStrIosAPNToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosAPNTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadAPNToken.STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
                this.strIosAPNToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrAndroidXingeAPNToken() {
                return (this.bitField0_ & 8) == 8;
            }

            public final String getStrAndroidXingeAPNToken() {
                Object obj = this.strAndroidXingeAPNToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strAndroidXingeAPNToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrAndroidXingeAPNTokenBytes() {
                Object obj = this.strAndroidXingeAPNToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strAndroidXingeAPNToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrAndroidXingeAPNToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.strAndroidXingeAPNToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrAndroidXingeAPNToken() {
                this.bitField0_ &= -9;
                this.strAndroidXingeAPNToken_ = CSUploadAPNToken.getDefaultInstance().getStrAndroidXingeAPNToken();
                onChanged();
                return this;
            }

            public final Builder setStrAndroidXingeAPNTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.strAndroidXingeAPNToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrAndroidFCMAPNToken() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getStrAndroidFCMAPNToken() {
                Object obj = this.strAndroidFCMAPNToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strAndroidFCMAPNToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrAndroidFCMAPNTokenBytes() {
                Object obj = this.strAndroidFCMAPNToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strAndroidFCMAPNToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrAndroidFCMAPNToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strAndroidFCMAPNToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrAndroidFCMAPNToken() {
                this.bitField0_ &= -17;
                this.strAndroidFCMAPNToken_ = CSUploadAPNToken.getDefaultInstance().getStrAndroidFCMAPNToken();
                onChanged();
                return this;
            }

            public final Builder setStrAndroidFCMAPNTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.strAndroidFCMAPNToken_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSUploadAPNToken(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUploadAPNToken(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUploadAPNToken getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUploadAPNToken getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUploadAPNToken(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EDEVICETYPE_FIELD_NUMBER;
                                this.eDeviceType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
                            this.strIosAPNToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.strAndroidXingeAPNToken_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.strAndroidFCMAPNToken_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gS;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gT.ensureFieldAccessorsInitialized(CSUploadAPNToken.class, Builder.class);
        }

        static {
            PARSER = new C12071();
            CSUploadAPNToken cSUploadAPNToken = new CSUploadAPNToken(true);
            defaultInstance = cSUploadAPNToken;
            cSUploadAPNToken.initFields();
        }

        public final Parser<CSUploadAPNToken> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasStrIosAPNToken() {
            return (this.bitField0_ & STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) == STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER;
        }

        public final String getStrIosAPNToken() {
            Object obj = this.strIosAPNToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosAPNToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosAPNTokenBytes() {
            Object obj = this.strIosAPNToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosAPNToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrAndroidXingeAPNToken() {
            return (this.bitField0_ & 8) == 8;
        }

        public final String getStrAndroidXingeAPNToken() {
            Object obj = this.strAndroidXingeAPNToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strAndroidXingeAPNToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrAndroidXingeAPNTokenBytes() {
            Object obj = this.strAndroidXingeAPNToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strAndroidXingeAPNToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrAndroidFCMAPNToken() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getStrAndroidFCMAPNToken() {
            Object obj = this.strAndroidFCMAPNToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strAndroidFCMAPNToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrAndroidFCMAPNTokenBytes() {
            Object obj = this.strAndroidFCMAPNToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strAndroidFCMAPNToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.strIosAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strAndroidXingeAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strAndroidFCMAPNToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasEDeviceType()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) == STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSAPNTOKEN_FIELD_NUMBER, getStrIosAPNTokenBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBytes(STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER, getStrAndroidXingeAPNTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(STRANDROIDFCMAPNTOKEN_FIELD_NUMBER, getStrAndroidFCMAPNTokenBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & EDEVICETYPE_FIELD_NUMBER) == EDEVICETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) == STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSAPNTOKEN_FIELD_NUMBER, getStrIosAPNTokenBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeBytesSize(STRANDROIDXINGEAPNTOKEN_FIELD_NUMBER, getStrAndroidXingeAPNTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(STRANDROIDFCMAPNTOKEN_FIELD_NUMBER, getStrAndroidFCMAPNTokenBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUploadAPNToken parseFrom(ByteString byteString) {
            return (CSUploadAPNToken) PARSER.parseFrom(byteString);
        }

        public static CSUploadAPNToken parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadAPNToken) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUploadAPNToken parseFrom(byte[] bArr) {
            return (CSUploadAPNToken) PARSER.parseFrom(bArr);
        }

        public static CSUploadAPNToken parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadAPNToken) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUploadAPNToken parseFrom(InputStream inputStream) {
            return (CSUploadAPNToken) PARSER.parseFrom(inputStream);
        }

        public static CSUploadAPNToken parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadAPNToken) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadAPNToken parseDelimitedFrom(InputStream inputStream) {
            return (CSUploadAPNToken) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUploadAPNToken parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadAPNToken) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadAPNToken parseFrom(CodedInputStream codedInputStream) {
            return (CSUploadAPNToken) PARSER.parseFrom(codedInputStream);
        }

        public static CSUploadAPNToken parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadAPNToken) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUploadAPNToken cSUploadAPNToken) {
            return newBuilder().mergeFrom(cSUploadAPNToken);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUploadChatRoomIconOrBuilder extends MessageOrBuilder {
        long getLRoomID();

        ByteString getVIconDatas();

        boolean hasLRoomID();

        boolean hasVIconDatas();
    }

    public static final class CSUploadChatRoomIcon extends GeneratedMessage implements CSUploadChatRoomIconOrBuilder {
        public static final int LROOMID_FIELD_NUMBER = 1;
        public static Parser<CSUploadChatRoomIcon> PARSER = null;
        public static final int VICONDATAS_FIELD_NUMBER = 2;
        private static final CSUploadChatRoomIcon defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private ByteString vIconDatas_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUploadChatRoomIcon.1 */
        class C12081 extends AbstractParser<CSUploadChatRoomIcon> {
            C12081() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUploadChatRoomIcon(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUploadChatRoomIconOrBuilder {
            private int bitField0_;
            private long lRoomID_;
            private ByteString vIconDatas_;

            static {
                fixHelper.fixfunc(new int[]{480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY, InputDeviceCompat.SOURCE_DPAD, 514, 515, 516, 517, 518, 519});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6332build();

            public final native CSUploadChatRoomIcon m6333build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6334buildPartial();

            public final native CSUploadChatRoomIcon m6335buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6336clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6337clear();

            public final native Builder m6338clear();

            public final native Builder clearLRoomID();

            public final native Builder clearVIconDatas();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6339clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6340clone();

            public final native Builder m6341clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6342getDefaultInstanceForType();

            public final native CSUploadChatRoomIcon m6343getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLRoomID();

            public final native ByteString getVIconDatas();

            public final native boolean hasLRoomID();

            public final native boolean hasVIconDatas();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6344mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6345mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6346mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6347mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6348mergeFrom(Message message);

            public final native Builder mergeFrom(CSUploadChatRoomIcon cSUploadChatRoomIcon);

            public final native Builder setLRoomID(long j);

            public final native Builder setVIconDatas(ByteString byteString);

            public static final Descriptor getDescriptor() {
                return TexasPoker.aA;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native CSUploadChatRoomIcon(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ CSUploadChatRoomIcon(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, CSUploadChatRoomIcon cSUploadChatRoomIcon);

        private native CSUploadChatRoomIcon(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ CSUploadChatRoomIcon(com.google.protobuf.GeneratedMessage.Builder builder, CSUploadChatRoomIcon cSUploadChatRoomIcon);

        private native CSUploadChatRoomIcon(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6325getDefaultInstanceForType();

        public final native CSUploadChatRoomIcon m6326getDefaultInstanceForType();

        public final native long getLRoomID();

        public final native Parser<CSUploadChatRoomIcon> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native ByteString getVIconDatas();

        public final native boolean hasLRoomID();

        public final native boolean hasVIconDatas();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6327newBuilderForType();

        public final native Builder m6328newBuilderForType();

        protected final native Builder m6329newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6330toBuilder();

        public final native Builder m6331toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static CSUploadChatRoomIcon getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aA;
        }

        static void __clinit__() {
            PARSER = new C12081();
            CSUploadChatRoomIcon cSUploadChatRoomIcon = new CSUploadChatRoomIcon(true);
            defaultInstance = cSUploadChatRoomIcon;
            cSUploadChatRoomIcon.initFields();
        }

        public static CSUploadChatRoomIcon parseFrom(ByteString byteString) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(byteString);
        }

        public static CSUploadChatRoomIcon parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUploadChatRoomIcon parseFrom(byte[] bArr) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(bArr);
        }

        public static CSUploadChatRoomIcon parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUploadChatRoomIcon parseFrom(InputStream inputStream) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(inputStream);
        }

        public static CSUploadChatRoomIcon parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadChatRoomIcon parseDelimitedFrom(InputStream inputStream) {
            return (CSUploadChatRoomIcon) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUploadChatRoomIcon parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadChatRoomIcon) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadChatRoomIcon parseFrom(CodedInputStream codedInputStream) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(codedInputStream);
        }

        public static CSUploadChatRoomIcon parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadChatRoomIcon) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(CSUploadChatRoomIcon cSUploadChatRoomIcon) {
            return newBuilder().mergeFrom(cSUploadChatRoomIcon);
        }
    }

    public interface CSUploadPhoneNumberOrBuilder extends MessageOrBuilder {
        String getSCountryCode();

        ByteString getSCountryCodeBytes();

        String getSPhoneNumber();

        ByteString getSPhoneNumberBytes();

        UserBaseInfoNet getStUserBaseInfo();

        UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

        boolean hasSCountryCode();

        boolean hasSPhoneNumber();

        boolean hasStUserBaseInfo();
    }

    public static final class CSUploadPhoneNumber extends GeneratedMessage implements CSUploadPhoneNumberOrBuilder {
        public static Parser<CSUploadPhoneNumber> PARSER = null;
        public static final int SCOUNTRYCODE_FIELD_NUMBER = 3;
        public static final int SPHONENUMBER_FIELD_NUMBER = 2;
        public static final int STUSERBASEINFO_FIELD_NUMBER = 1;
        private static final CSUploadPhoneNumber defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCountryCode_;
        private Object sPhoneNumber_;
        private UserBaseInfoNet stUserBaseInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUploadPhoneNumber.1 */
        class C12091 extends AbstractParser<CSUploadPhoneNumber> {
            C12091() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUploadPhoneNumber(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUploadPhoneNumberOrBuilder {
            private int bitField0_;
            private Object sCountryCode_;
            private Object sPhoneNumber_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoBuilder_;
            private UserBaseInfoNet stUserBaseInfo_;

            static {
                fixHelper.fixfunc(new int[]{2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6349build();

            public final native CSUploadPhoneNumber m6350build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6351buildPartial();

            public final native CSUploadPhoneNumber m6352buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6353clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6354clear();

            public final native Builder m6355clear();

            public final native Builder clearSCountryCode();

            public final native Builder clearSPhoneNumber();

            public final native Builder clearStUserBaseInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6356clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6357clone();

            public final native Builder m6358clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6359getDefaultInstanceForType();

            public final native CSUploadPhoneNumber m6360getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native String getSCountryCode();

            public final native ByteString getSCountryCodeBytes();

            public final native String getSPhoneNumber();

            public final native ByteString getSPhoneNumberBytes();

            public final native UserBaseInfoNet getStUserBaseInfo();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoBuilder();

            public final native UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

            public final native boolean hasSCountryCode();

            public final native boolean hasSPhoneNumber();

            public final native boolean hasStUserBaseInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6361mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6362mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6363mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6364mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6365mergeFrom(Message message);

            public final native Builder mergeFrom(CSUploadPhoneNumber cSUploadPhoneNumber);

            public final native Builder mergeStUserBaseInfo(UserBaseInfoNet userBaseInfoNet);

            public final native Builder setSCountryCode(String str);

            public final native Builder setSCountryCodeBytes(ByteString byteString);

            public final native Builder setSPhoneNumber(String str);

            public final native Builder setSPhoneNumberBytes(ByteString byteString);

            public final native Builder setStUserBaseInfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setStUserBaseInfo(UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8300q;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSUploadPhoneNumber(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUploadPhoneNumber(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUploadPhoneNumber getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUploadPhoneNumber getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUploadPhoneNumber(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stUserBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stUserBaseInfo_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stUserBaseInfo_);
                                this.stUserBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPHONENUMBER_FIELD_NUMBER;
                            this.sPhoneNumber_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.sCountryCode_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STUSERBASEINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8300q;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8301r.ensureFieldAccessorsInitialized(CSUploadPhoneNumber.class, Builder.class);
        }

        static {
            PARSER = new C12091();
            CSUploadPhoneNumber cSUploadPhoneNumber = new CSUploadPhoneNumber(true);
            defaultInstance = cSUploadPhoneNumber;
            cSUploadPhoneNumber.initFields();
        }

        public final Parser<CSUploadPhoneNumber> getParserForType() {
            return PARSER;
        }

        public final boolean hasStUserBaseInfo() {
            return (this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfo() {
            return this.stUserBaseInfo_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
            return this.stUserBaseInfo_;
        }

        public final boolean hasSPhoneNumber() {
            return (this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER;
        }

        public final String getSPhoneNumber() {
            Object obj = this.sPhoneNumber_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPhoneNumber_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPhoneNumberBytes() {
            Object obj = this.sPhoneNumber_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPhoneNumber_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSCountryCode() {
            return (this.bitField0_ & 4) == 4;
        }

        public final String getSCountryCode() {
            Object obj = this.sCountryCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCountryCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCountryCodeBytes() {
            Object obj = this.sCountryCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCountryCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
            this.sPhoneNumber_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sCountryCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStUserBaseInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSPhoneNumber()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStUserBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_);
            }
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeBytes(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_) + 0;
            }
            if ((this.bitField0_ & SPHONENUMBER_FIELD_NUMBER) == SPHONENUMBER_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SPHONENUMBER_FIELD_NUMBER, getSPhoneNumberBytes());
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeBytesSize(SCOUNTRYCODE_FIELD_NUMBER, getSCountryCodeBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUploadPhoneNumber parseFrom(ByteString byteString) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(byteString);
        }

        public static CSUploadPhoneNumber parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUploadPhoneNumber parseFrom(byte[] bArr) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(bArr);
        }

        public static CSUploadPhoneNumber parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUploadPhoneNumber parseFrom(InputStream inputStream) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(inputStream);
        }

        public static CSUploadPhoneNumber parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadPhoneNumber parseDelimitedFrom(InputStream inputStream) {
            return (CSUploadPhoneNumber) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUploadPhoneNumber parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadPhoneNumber) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadPhoneNumber parseFrom(CodedInputStream codedInputStream) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(codedInputStream);
        }

        public static CSUploadPhoneNumber parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadPhoneNumber) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUploadPhoneNumber cSUploadPhoneNumber) {
            return newBuilder().mergeFrom(cSUploadPhoneNumber);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSUploadVerifyCodeOrBuilder extends MessageOrBuilder {
        int getBRegister();

        DEVICE_TYPE getEDeviceType();

        LANGUAGE_TYPE getELanguageType();

        String getSVeryifyCode();

        ByteString getSVeryifyCodeBytes();

        UserBaseInfoNet getStUserBaseInfo();

        UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder();

        String getStrIosToken();

        ByteString getStrIosTokenBytes();

        String getStrSSOToken();

        ByteString getStrSSOTokenBytes();

        boolean hasBRegister();

        boolean hasEDeviceType();

        boolean hasELanguageType();

        boolean hasSVeryifyCode();

        boolean hasStUserBaseInfo();

        boolean hasStrIosToken();

        boolean hasStrSSOToken();
    }

    public static final class CSUploadVerifyCode extends GeneratedMessage implements CSUploadVerifyCodeOrBuilder {
        public static final int BREGISTER_FIELD_NUMBER = 7;
        public static final int EDEVICETYPE_FIELD_NUMBER = 5;
        public static final int ELANGUAGETYPE_FIELD_NUMBER = 6;
        public static Parser<CSUploadVerifyCode> PARSER = null;
        public static final int STRIOSTOKEN_FIELD_NUMBER = 3;
        public static final int STRSSOTOKEN_FIELD_NUMBER = 4;
        public static final int STUSERBASEINFO_FIELD_NUMBER = 1;
        public static final int SVERYIFYCODE_FIELD_NUMBER = 2;
        private static final CSUploadVerifyCode defaultInstance;
        private static final long serialVersionUID = 0;
        private int bRegister_;
        private int bitField0_;
        private DEVICE_TYPE eDeviceType_;
        private LANGUAGE_TYPE eLanguageType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sVeryifyCode_;
        private UserBaseInfoNet stUserBaseInfo_;
        private Object strIosToken_;
        private Object strSSOToken_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUploadVerifyCode.1 */
        class C12101 extends AbstractParser<CSUploadVerifyCode> {
            C12101() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUploadVerifyCode(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUploadVerifyCodeOrBuilder {
            private int bRegister_;
            private int bitField0_;
            private DEVICE_TYPE eDeviceType_;
            private LANGUAGE_TYPE eLanguageType_;
            private Object sVeryifyCode_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoBuilder_;
            private UserBaseInfoNet stUserBaseInfo_;
            private Object strIosToken_;
            private Object strSSOToken_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8304u;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8305v.ensureFieldAccessorsInitialized(CSUploadVerifyCode.class, Builder.class);
            }

            private Builder() {
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (CSUploadVerifyCode.alwaysUseFieldBuilders) {
                    getStUserBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                this.bitField0_ &= -17;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                this.bitField0_ &= -33;
                this.bRegister_ = 0;
                this.bitField0_ &= -65;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8304u;
            }

            public final CSUploadVerifyCode getDefaultInstanceForType() {
                return CSUploadVerifyCode.getDefaultInstance();
            }

            public final CSUploadVerifyCode build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSUploadVerifyCode buildPartial() {
                CSUploadVerifyCode cSUploadVerifyCode = new CSUploadVerifyCode(null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER) == CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER) {
                    i2 = CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
                }
                if (this.stUserBaseInfoBuilder_ == null) {
                    cSUploadVerifyCode.stUserBaseInfo_ = this.stUserBaseInfo_;
                } else {
                    cSUploadVerifyCode.stUserBaseInfo_ = (UserBaseInfoNet) this.stUserBaseInfoBuilder_.build();
                }
                if ((i & CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER) == CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER) {
                    i2 |= CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                }
                cSUploadVerifyCode.sVeryifyCode_ = this.sVeryifyCode_;
                if ((i & CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER) == CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER) {
                    i2 |= CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER;
                }
                cSUploadVerifyCode.strIosToken_ = this.strIosToken_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                cSUploadVerifyCode.strSSOToken_ = this.strSSOToken_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                cSUploadVerifyCode.eDeviceType_ = this.eDeviceType_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                cSUploadVerifyCode.eLanguageType_ = this.eLanguageType_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                cSUploadVerifyCode.bRegister_ = this.bRegister_;
                cSUploadVerifyCode.bitField0_ = i2;
                onBuilt();
                return cSUploadVerifyCode;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSUploadVerifyCode) {
                    return mergeFrom((CSUploadVerifyCode) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSUploadVerifyCode cSUploadVerifyCode) {
                if (cSUploadVerifyCode != CSUploadVerifyCode.getDefaultInstance()) {
                    if (cSUploadVerifyCode.hasStUserBaseInfo()) {
                        mergeStUserBaseInfo(cSUploadVerifyCode.getStUserBaseInfo());
                    }
                    if (cSUploadVerifyCode.hasSVeryifyCode()) {
                        this.bitField0_ |= CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                        this.sVeryifyCode_ = cSUploadVerifyCode.sVeryifyCode_;
                        onChanged();
                    }
                    if (cSUploadVerifyCode.hasStrIosToken()) {
                        this.bitField0_ |= CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER;
                        this.strIosToken_ = cSUploadVerifyCode.strIosToken_;
                        onChanged();
                    }
                    if (cSUploadVerifyCode.hasStrSSOToken()) {
                        this.bitField0_ |= 8;
                        this.strSSOToken_ = cSUploadVerifyCode.strSSOToken_;
                        onChanged();
                    }
                    if (cSUploadVerifyCode.hasEDeviceType()) {
                        setEDeviceType(cSUploadVerifyCode.getEDeviceType());
                    }
                    if (cSUploadVerifyCode.hasELanguageType()) {
                        setELanguageType(cSUploadVerifyCode.getELanguageType());
                    }
                    if (cSUploadVerifyCode.hasBRegister()) {
                        setBRegister(cSUploadVerifyCode.getBRegister());
                    }
                    mergeUnknownFields(cSUploadVerifyCode.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStUserBaseInfo() && hasSVeryifyCode() && getStUserBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSUploadVerifyCode.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSUploadVerifyCode.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSUploadVerifyCode) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSUploadVerifyCode) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSUploadVerifyCode.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSUploadVerifyCode$Builder");
            }

            public final boolean hasStUserBaseInfo() {
                return (this.bitField0_ & CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER) == CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    return this.stUserBaseInfo_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ != null) {
                    this.stUserBaseInfoBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfo_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStUserBaseInfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER) != CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER || this.stUserBaseInfo_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfo_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfo_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfo_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStUserBaseInfo() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoBuilder() {
                this.bitField0_ |= CSUploadVerifyCode.STUSERBASEINFO_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
                if (this.stUserBaseInfoBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfo_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoFieldBuilder() {
                if (this.stUserBaseInfoBuilder_ == null) {
                    this.stUserBaseInfoBuilder_ = new SingleFieldBuilder(getStUserBaseInfo(), getParentForChildren(), isClean());
                    this.stUserBaseInfo_ = null;
                }
                return this.stUserBaseInfoBuilder_;
            }

            public final boolean hasSVeryifyCode() {
                return (this.bitField0_ & CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER) == CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
            }

            public final String getSVeryifyCode() {
                Object obj = this.sVeryifyCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sVeryifyCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSVeryifyCodeBytes() {
                Object obj = this.sVeryifyCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sVeryifyCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSVeryifyCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                this.sVeryifyCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSVeryifyCode() {
                this.bitField0_ &= -3;
                this.sVeryifyCode_ = CSUploadVerifyCode.getDefaultInstance().getSVeryifyCode();
                onChanged();
                return this;
            }

            public final Builder setSVeryifyCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadVerifyCode.SVERYIFYCODE_FIELD_NUMBER;
                this.sVeryifyCode_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrIosToken() {
                return (this.bitField0_ & CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER) == CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER;
            }

            public final String getStrIosToken() {
                Object obj = this.strIosToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strIosToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrIosTokenBytes() {
                Object obj = this.strIosToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strIosToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrIosToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER;
                this.strIosToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrIosToken() {
                this.bitField0_ &= -5;
                this.strIosToken_ = CSUploadVerifyCode.getDefaultInstance().getStrIosToken();
                onChanged();
                return this;
            }

            public final Builder setStrIosTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CSUploadVerifyCode.STRSSOTOKEN_FIELD_NUMBER;
                this.strIosToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSSOToken() {
                return (this.bitField0_ & 8) == 8;
            }

            public final String getStrSSOToken() {
                Object obj = this.strSSOToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSSOToken_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSSOTokenBytes() {
                Object obj = this.strSSOToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSSOToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSSOToken(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.strSSOToken_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSSOToken() {
                this.bitField0_ &= -9;
                this.strSSOToken_ = CSUploadVerifyCode.getDefaultInstance().getStrSSOToken();
                onChanged();
                return this;
            }

            public final Builder setStrSSOTokenBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.strSSOToken_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEDeviceType() {
                return (this.bitField0_ & 16) == 16;
            }

            public final DEVICE_TYPE getEDeviceType() {
                return this.eDeviceType_;
            }

            public final Builder setEDeviceType(DEVICE_TYPE device_type) {
                if (device_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.eDeviceType_ = device_type;
                onChanged();
                return this;
            }

            public final Builder clearEDeviceType() {
                this.bitField0_ &= -17;
                this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
                onChanged();
                return this;
            }

            public final boolean hasELanguageType() {
                return (this.bitField0_ & 32) == 32;
            }

            public final LANGUAGE_TYPE getELanguageType() {
                return this.eLanguageType_;
            }

            public final Builder setELanguageType(LANGUAGE_TYPE language_type) {
                if (language_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.eLanguageType_ = language_type;
                onChanged();
                return this;
            }

            public final Builder clearELanguageType() {
                this.bitField0_ &= -33;
                this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
                onChanged();
                return this;
            }

            public final boolean hasBRegister() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getBRegister() {
                return this.bRegister_;
            }

            public final Builder setBRegister(int i) {
                this.bitField0_ |= 64;
                this.bRegister_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBRegister() {
                this.bitField0_ &= -65;
                this.bRegister_ = 0;
                onChanged();
                return this;
            }
        }

        private CSUploadVerifyCode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUploadVerifyCode(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUploadVerifyCode getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUploadVerifyCode getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUploadVerifyCode(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stUserBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stUserBaseInfo_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stUserBaseInfo_);
                                this.stUserBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SVERYIFYCODE_FIELD_NUMBER;
                            this.sVeryifyCode_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRSSOTOKEN_FIELD_NUMBER;
                            this.strIosToken_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.strSSOToken_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            readTag = codedInputStream.readEnum();
                            DEVICE_TYPE valueOf = DEVICE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= 16;
                                this.eDeviceType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EDEVICETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            readTag = codedInputStream.readEnum();
                            LANGUAGE_TYPE valueOf2 = LANGUAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= 32;
                                this.eLanguageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ELANGUAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.bRegister_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STUSERBASEINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8304u;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8305v.ensureFieldAccessorsInitialized(CSUploadVerifyCode.class, Builder.class);
        }

        static {
            PARSER = new C12101();
            CSUploadVerifyCode cSUploadVerifyCode = new CSUploadVerifyCode(true);
            defaultInstance = cSUploadVerifyCode;
            cSUploadVerifyCode.initFields();
        }

        public final Parser<CSUploadVerifyCode> getParserForType() {
            return PARSER;
        }

        public final boolean hasStUserBaseInfo() {
            return (this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfo() {
            return this.stUserBaseInfo_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoOrBuilder() {
            return this.stUserBaseInfo_;
        }

        public final boolean hasSVeryifyCode() {
            return (this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER;
        }

        public final String getSVeryifyCode() {
            Object obj = this.sVeryifyCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sVeryifyCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSVeryifyCodeBytes() {
            Object obj = this.sVeryifyCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sVeryifyCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrIosToken() {
            return (this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER;
        }

        public final String getStrIosToken() {
            Object obj = this.strIosToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strIosToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrIosTokenBytes() {
            Object obj = this.strIosToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strIosToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSSOToken() {
            return (this.bitField0_ & 8) == 8;
        }

        public final String getStrSSOToken() {
            Object obj = this.strSSOToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSSOToken_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSSOTokenBytes() {
            Object obj = this.strSSOToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSSOToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEDeviceType() {
            return (this.bitField0_ & 16) == 16;
        }

        public final DEVICE_TYPE getEDeviceType() {
            return this.eDeviceType_;
        }

        public final boolean hasELanguageType() {
            return (this.bitField0_ & 32) == 32;
        }

        public final LANGUAGE_TYPE getELanguageType() {
            return this.eLanguageType_;
        }

        public final boolean hasBRegister() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getBRegister() {
            return this.bRegister_;
        }

        private void initFields() {
            this.stUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
            this.sVeryifyCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strIosToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSSOToken_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eDeviceType_ = DEVICE_TYPE.DEVICE_TYPE_IOS;
            this.eLanguageType_ = LANGUAGE_TYPE.LANGUAGE_TYPE_SIMPLIFIED_CHINESE;
            this.bRegister_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStUserBaseInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSVeryifyCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStUserBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_);
            }
            if ((this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SVERYIFYCODE_FIELD_NUMBER, getSVeryifyCodeBytes());
            }
            if ((this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBytes(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeEnum(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeEnum(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(BREGISTER_FIELD_NUMBER, this.bRegister_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseInfo_) + 0;
            }
            if ((this.bitField0_ & SVERYIFYCODE_FIELD_NUMBER) == SVERYIFYCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SVERYIFYCODE_FIELD_NUMBER, getSVeryifyCodeBytes());
            }
            if ((this.bitField0_ & STRSSOTOKEN_FIELD_NUMBER) == STRSSOTOKEN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRIOSTOKEN_FIELD_NUMBER, getStrIosTokenBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeBytesSize(STRSSOTOKEN_FIELD_NUMBER, getStrSSOTokenBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeEnumSize(EDEVICETYPE_FIELD_NUMBER, this.eDeviceType_.getNumber());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeEnumSize(ELANGUAGETYPE_FIELD_NUMBER, this.eLanguageType_.getNumber());
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt32Size(BREGISTER_FIELD_NUMBER, this.bRegister_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUploadVerifyCode parseFrom(ByteString byteString) {
            return (CSUploadVerifyCode) PARSER.parseFrom(byteString);
        }

        public static CSUploadVerifyCode parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadVerifyCode) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUploadVerifyCode parseFrom(byte[] bArr) {
            return (CSUploadVerifyCode) PARSER.parseFrom(bArr);
        }

        public static CSUploadVerifyCode parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadVerifyCode) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUploadVerifyCode parseFrom(InputStream inputStream) {
            return (CSUploadVerifyCode) PARSER.parseFrom(inputStream);
        }

        public static CSUploadVerifyCode parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadVerifyCode) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadVerifyCode parseDelimitedFrom(InputStream inputStream) {
            return (CSUploadVerifyCode) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUploadVerifyCode parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadVerifyCode) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUploadVerifyCode parseFrom(CodedInputStream codedInputStream) {
            return (CSUploadVerifyCode) PARSER.parseFrom(codedInputStream);
        }

        public static CSUploadVerifyCode parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUploadVerifyCode) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUploadVerifyCode cSUploadVerifyCode) {
            return newBuilder().mergeFrom(cSUploadVerifyCode);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUseDelayItemOrBuilder extends MessageOrBuilder {
        long getLBettingID();

        long getLGameRoomID();

        long getUuid();

        boolean hasLBettingID();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSUseDelayItem extends GeneratedMessage implements CSUseDelayItemOrBuilder {
        public static final int LBETTINGID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSUseDelayItem> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSUseDelayItem defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lBettingID_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUseDelayItem.1 */
        class C12111 extends AbstractParser<CSUseDelayItem> {
            C12111() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUseDelayItem(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUseDelayItemOrBuilder {
            private int bitField0_;
            private long lBettingID_;
            private long lGameRoomID_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eC;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eD.ensureFieldAccessorsInitialized(CSUseDelayItem.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSUseDelayItem.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lBettingID_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eC;
            }

            public final CSUseDelayItem getDefaultInstanceForType() {
                return CSUseDelayItem.getDefaultInstance();
            }

            public final CSUseDelayItem build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSUseDelayItem buildPartial() {
                int i = CSUseDelayItem.UUID_FIELD_NUMBER;
                CSUseDelayItem cSUseDelayItem = new CSUseDelayItem(null);
                int i2 = this.bitField0_;
                if ((i2 & CSUseDelayItem.UUID_FIELD_NUMBER) != CSUseDelayItem.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSUseDelayItem.uuid_ = this.uuid_;
                if ((i2 & CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER) == CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER) {
                    i |= CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER;
                }
                cSUseDelayItem.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                cSUseDelayItem.lBettingID_ = this.lBettingID_;
                cSUseDelayItem.bitField0_ = i;
                onBuilt();
                return cSUseDelayItem;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSUseDelayItem) {
                    return mergeFrom((CSUseDelayItem) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSUseDelayItem cSUseDelayItem) {
                if (cSUseDelayItem != CSUseDelayItem.getDefaultInstance()) {
                    if (cSUseDelayItem.hasUuid()) {
                        setUuid(cSUseDelayItem.getUuid());
                    }
                    if (cSUseDelayItem.hasLGameRoomID()) {
                        setLGameRoomID(cSUseDelayItem.getLGameRoomID());
                    }
                    if (cSUseDelayItem.hasLBettingID()) {
                        setLBettingID(cSUseDelayItem.getLBettingID());
                    }
                    mergeUnknownFields(cSUseDelayItem.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLGameRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSUseDelayItem.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSUseDelayItem.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseDelayItem) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseDelayItem) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSUseDelayItem.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSUseDelayItem$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSUseDelayItem.UUID_FIELD_NUMBER) == CSUseDelayItem.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSUseDelayItem.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER) == CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= CSUseDelayItem.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBettingID() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLBettingID() {
                return this.lBettingID_;
            }

            public final Builder setLBettingID(long j) {
                this.bitField0_ |= 4;
                this.lBettingID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBettingID() {
                this.bitField0_ &= -5;
                this.lBettingID_ = 0;
                onChanged();
                return this;
            }
        }

        private CSUseDelayItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUseDelayItem(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUseDelayItem getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUseDelayItem getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUseDelayItem(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lBettingID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eC;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eD.ensureFieldAccessorsInitialized(CSUseDelayItem.class, Builder.class);
        }

        static {
            PARSER = new C12111();
            CSUseDelayItem cSUseDelayItem = new CSUseDelayItem(true);
            defaultInstance = cSUseDelayItem;
            cSUseDelayItem.initFields();
        }

        public final Parser<CSUseDelayItem> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLBettingID() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLBettingID() {
            return this.lBettingID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.lBettingID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LBETTINGID_FIELD_NUMBER, this.lBettingID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LBETTINGID_FIELD_NUMBER, this.lBettingID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUseDelayItem parseFrom(ByteString byteString) {
            return (CSUseDelayItem) PARSER.parseFrom(byteString);
        }

        public static CSUseDelayItem parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseDelayItem) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUseDelayItem parseFrom(byte[] bArr) {
            return (CSUseDelayItem) PARSER.parseFrom(bArr);
        }

        public static CSUseDelayItem parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseDelayItem) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUseDelayItem parseFrom(InputStream inputStream) {
            return (CSUseDelayItem) PARSER.parseFrom(inputStream);
        }

        public static CSUseDelayItem parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseDelayItem) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseDelayItem parseDelimitedFrom(InputStream inputStream) {
            return (CSUseDelayItem) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUseDelayItem parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseDelayItem) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseDelayItem parseFrom(CodedInputStream codedInputStream) {
            return (CSUseDelayItem) PARSER.parseFrom(codedInputStream);
        }

        public static CSUseDelayItem parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseDelayItem) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUseDelayItem cSUseDelayItem) {
            return newBuilder().mergeFrom(cSUseDelayItem);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUseItemOrBuilder extends MessageOrBuilder {
        int getLItemID();

        long getLMsgID();

        long getLRoomID();

        String getSExtra();

        ByteString getSExtraBytes();

        long getTouuid();

        long getUuid();

        boolean hasLItemID();

        boolean hasLMsgID();

        boolean hasLRoomID();

        boolean hasSExtra();

        boolean hasTouuid();

        boolean hasUuid();
    }

    public static final class CSUseItem extends GeneratedMessage implements CSUseItemOrBuilder {
        public static final int LITEMID_FIELD_NUMBER = 2;
        public static final int LMSGID_FIELD_NUMBER = 5;
        public static final int LROOMID_FIELD_NUMBER = 4;
        public static Parser<CSUseItem> PARSER = null;
        public static final int SEXTRA_FIELD_NUMBER = 6;
        public static final int TOUUID_FIELD_NUMBER = 3;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSUseItem defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int lItemID_;
        private long lMsgID_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sExtra_;
        private long touuid_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUseItem.1 */
        class C12121 extends AbstractParser<CSUseItem> {
            C12121() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUseItem(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUseItemOrBuilder {
            private int bitField0_;
            private int lItemID_;
            private long lMsgID_;
            private long lRoomID_;
            private Object sExtra_;
            private long touuid_;
            private long uuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cW;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cX.ensureFieldAccessorsInitialized(CSUseItem.class, Builder.class);
            }

            private Builder() {
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSUseItem.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.lItemID_ = 0;
                this.bitField0_ &= -3;
                this.touuid_ = 0;
                this.bitField0_ &= -5;
                this.lRoomID_ = 0;
                this.bitField0_ &= -9;
                this.lMsgID_ = 0;
                this.bitField0_ &= -17;
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cW;
            }

            public final CSUseItem getDefaultInstanceForType() {
                return CSUseItem.getDefaultInstance();
            }

            public final CSUseItem build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSUseItem buildPartial() {
                int i = CSUseItem.UUID_FIELD_NUMBER;
                CSUseItem cSUseItem = new CSUseItem(null);
                int i2 = this.bitField0_;
                if ((i2 & CSUseItem.UUID_FIELD_NUMBER) != CSUseItem.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSUseItem.uuid_ = this.uuid_;
                if ((i2 & CSUseItem.LITEMID_FIELD_NUMBER) == CSUseItem.LITEMID_FIELD_NUMBER) {
                    i |= CSUseItem.LITEMID_FIELD_NUMBER;
                }
                cSUseItem.lItemID_ = this.lItemID_;
                if ((i2 & CSUseItem.LROOMID_FIELD_NUMBER) == CSUseItem.LROOMID_FIELD_NUMBER) {
                    i |= CSUseItem.LROOMID_FIELD_NUMBER;
                }
                cSUseItem.touuid_ = this.touuid_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                cSUseItem.lRoomID_ = this.lRoomID_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                cSUseItem.lMsgID_ = this.lMsgID_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                cSUseItem.sExtra_ = this.sExtra_;
                cSUseItem.bitField0_ = i;
                onBuilt();
                return cSUseItem;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSUseItem) {
                    return mergeFrom((CSUseItem) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSUseItem cSUseItem) {
                if (cSUseItem != CSUseItem.getDefaultInstance()) {
                    if (cSUseItem.hasUuid()) {
                        setUuid(cSUseItem.getUuid());
                    }
                    if (cSUseItem.hasLItemID()) {
                        setLItemID(cSUseItem.getLItemID());
                    }
                    if (cSUseItem.hasTouuid()) {
                        setTouuid(cSUseItem.getTouuid());
                    }
                    if (cSUseItem.hasLRoomID()) {
                        setLRoomID(cSUseItem.getLRoomID());
                    }
                    if (cSUseItem.hasLMsgID()) {
                        setLMsgID(cSUseItem.getLMsgID());
                    }
                    if (cSUseItem.hasSExtra()) {
                        this.bitField0_ |= 32;
                        this.sExtra_ = cSUseItem.sExtra_;
                        onChanged();
                    }
                    mergeUnknownFields(cSUseItem.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid() && hasLItemID() && hasTouuid() && hasLRoomID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSUseItem.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSUseItem.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseItem) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseItem) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSUseItem.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSUseItem$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSUseItem.UUID_FIELD_NUMBER) == CSUseItem.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSUseItem.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLItemID() {
                return (this.bitField0_ & CSUseItem.LITEMID_FIELD_NUMBER) == CSUseItem.LITEMID_FIELD_NUMBER;
            }

            public final int getLItemID() {
                return this.lItemID_;
            }

            public final Builder setLItemID(int i) {
                this.bitField0_ |= CSUseItem.LITEMID_FIELD_NUMBER;
                this.lItemID_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLItemID() {
                this.bitField0_ &= -3;
                this.lItemID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasTouuid() {
                return (this.bitField0_ & CSUseItem.LROOMID_FIELD_NUMBER) == CSUseItem.LROOMID_FIELD_NUMBER;
            }

            public final long getTouuid() {
                return this.touuid_;
            }

            public final Builder setTouuid(long j) {
                this.bitField0_ |= CSUseItem.LROOMID_FIELD_NUMBER;
                this.touuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearTouuid() {
                this.bitField0_ &= -5;
                this.touuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= 8;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -9;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= 16;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -17;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSExtra() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getSExtra() {
                Object obj = this.sExtra_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sExtra_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSExtraBytes() {
                Object obj = this.sExtra_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sExtra_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSExtra(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sExtra_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSExtra() {
                this.bitField0_ &= -33;
                this.sExtra_ = CSUseItem.getDefaultInstance().getSExtra();
                onChanged();
                return this;
            }

            public final Builder setSExtraBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sExtra_ = byteString;
                onChanged();
                return this;
            }
        }

        private CSUseItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUseItem(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUseItem getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUseItem getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUseItem(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LITEMID_FIELD_NUMBER;
                            this.lItemID_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.touuid_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.sExtra_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cW;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cX.ensureFieldAccessorsInitialized(CSUseItem.class, Builder.class);
        }

        static {
            PARSER = new C12121();
            CSUseItem cSUseItem = new CSUseItem(true);
            defaultInstance = cSUseItem;
            cSUseItem.initFields();
        }

        public final Parser<CSUseItem> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLItemID() {
            return (this.bitField0_ & LITEMID_FIELD_NUMBER) == LITEMID_FIELD_NUMBER;
        }

        public final int getLItemID() {
            return this.lItemID_;
        }

        public final boolean hasTouuid() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getTouuid() {
            return this.touuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasSExtra() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getSExtra() {
            Object obj = this.sExtra_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sExtra_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSExtraBytes() {
            Object obj = this.sExtra_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sExtra_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lItemID_ = 0;
            this.touuid_ = 0;
            this.lRoomID_ = 0;
            this.lMsgID_ = 0;
            this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLItemID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasTouuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LITEMID_FIELD_NUMBER) == LITEMID_FIELD_NUMBER) {
                codedOutputStream.writeInt32(LITEMID_FIELD_NUMBER, this.lItemID_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(TOUUID_FIELD_NUMBER, this.touuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(SEXTRA_FIELD_NUMBER, getSExtraBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LITEMID_FIELD_NUMBER) == LITEMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(LITEMID_FIELD_NUMBER, this.lItemID_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(TOUUID_FIELD_NUMBER, this.touuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(SEXTRA_FIELD_NUMBER, getSExtraBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUseItem parseFrom(ByteString byteString) {
            return (CSUseItem) PARSER.parseFrom(byteString);
        }

        public static CSUseItem parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItem) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUseItem parseFrom(byte[] bArr) {
            return (CSUseItem) PARSER.parseFrom(bArr);
        }

        public static CSUseItem parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItem) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUseItem parseFrom(InputStream inputStream) {
            return (CSUseItem) PARSER.parseFrom(inputStream);
        }

        public static CSUseItem parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItem) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseItem parseDelimitedFrom(InputStream inputStream) {
            return (CSUseItem) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUseItem parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItem) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseItem parseFrom(CodedInputStream codedInputStream) {
            return (CSUseItem) PARSER.parseFrom(codedInputStream);
        }

        public static CSUseItem parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItem) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUseItem cSUseItem) {
            return newBuilder().mergeFrom(cSUseItem);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUseItemPushMsgRspOrBuilder extends MessageOrBuilder {
        long getUuid();

        long getVMsgIds(int i);

        int getVMsgIdsCount();

        List<Long> getVMsgIdsList();

        boolean hasUuid();
    }

    public static final class CSUseItemPushMsgRsp extends GeneratedMessage implements CSUseItemPushMsgRspOrBuilder {
        public static Parser<CSUseItemPushMsgRsp> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VMSGIDS_FIELD_NUMBER = 2;
        private static final CSUseItemPushMsgRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Long> vMsgIds_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp.1 */
        class C12131 extends AbstractParser<CSUseItemPushMsgRsp> {
            C12131() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUseItemPushMsgRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUseItemPushMsgRspOrBuilder {
            private int bitField0_;
            private long uuid_;
            private List<Long> vMsgIds_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.de;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.df.ensureFieldAccessorsInitialized(CSUseItemPushMsgRsp.class, Builder.class);
            }

            private Builder() {
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vMsgIds_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                CSUseItemPushMsgRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.de;
            }

            public final CSUseItemPushMsgRsp getDefaultInstanceForType() {
                return CSUseItemPushMsgRsp.getDefaultInstance();
            }

            public final CSUseItemPushMsgRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final CSUseItemPushMsgRsp buildPartial() {
                int i = CSUseItemPushMsgRsp.UUID_FIELD_NUMBER;
                CSUseItemPushMsgRsp cSUseItemPushMsgRsp = new CSUseItemPushMsgRsp(null);
                if ((this.bitField0_ & CSUseItemPushMsgRsp.UUID_FIELD_NUMBER) != CSUseItemPushMsgRsp.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                cSUseItemPushMsgRsp.uuid_ = this.uuid_;
                if ((this.bitField0_ & CSUseItemPushMsgRsp.VMSGIDS_FIELD_NUMBER) == CSUseItemPushMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    this.bitField0_ &= -3;
                }
                cSUseItemPushMsgRsp.vMsgIds_ = this.vMsgIds_;
                cSUseItemPushMsgRsp.bitField0_ = i;
                onBuilt();
                return cSUseItemPushMsgRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof CSUseItemPushMsgRsp) {
                    return mergeFrom((CSUseItemPushMsgRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(CSUseItemPushMsgRsp cSUseItemPushMsgRsp) {
                if (cSUseItemPushMsgRsp != CSUseItemPushMsgRsp.getDefaultInstance()) {
                    if (cSUseItemPushMsgRsp.hasUuid()) {
                        setUuid(cSUseItemPushMsgRsp.getUuid());
                    }
                    if (!cSUseItemPushMsgRsp.vMsgIds_.isEmpty()) {
                        if (this.vMsgIds_.isEmpty()) {
                            this.vMsgIds_ = cSUseItemPushMsgRsp.vMsgIds_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVMsgIdsIsMutable();
                            this.vMsgIds_.addAll(cSUseItemPushMsgRsp.vMsgIds_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(cSUseItemPushMsgRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasUuid()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.CSUseItemPushMsgRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$CSUseItemPushMsgRsp$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & CSUseItemPushMsgRsp.UUID_FIELD_NUMBER) == CSUseItemPushMsgRsp.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= CSUseItemPushMsgRsp.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            private void ensureVMsgIdsIsMutable() {
                if ((this.bitField0_ & CSUseItemPushMsgRsp.VMSGIDS_FIELD_NUMBER) != CSUseItemPushMsgRsp.VMSGIDS_FIELD_NUMBER) {
                    this.vMsgIds_ = new ArrayList(this.vMsgIds_);
                    this.bitField0_ |= CSUseItemPushMsgRsp.VMSGIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVMsgIdsList() {
                return Collections.unmodifiableList(this.vMsgIds_);
            }

            public final int getVMsgIdsCount() {
                return this.vMsgIds_.size();
            }

            public final long getVMsgIds(int i) {
                return ((Long) this.vMsgIds_.get(i)).longValue();
            }

            public final Builder setVMsgIds(int i, long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVMsgIds(long j) {
                ensureVMsgIdsIsMutable();
                this.vMsgIds_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVMsgIds(Iterable<? extends Long> iterable) {
                ensureVMsgIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vMsgIds_);
                onChanged();
                return this;
            }

            public final Builder clearVMsgIds() {
                this.vMsgIds_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private CSUseItemPushMsgRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUseItemPushMsgRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUseItemPushMsgRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUseItemPushMsgRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUseItemPushMsgRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VMSGIDS_FIELD_NUMBER) != VMSGIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_ = new ArrayList();
                                i |= VMSGIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vMsgIds_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                        this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VMSGIDS_FIELD_NUMBER) == VMSGIDS_FIELD_NUMBER) {
                this.vMsgIds_ = Collections.unmodifiableList(this.vMsgIds_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.de;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.df.ensureFieldAccessorsInitialized(CSUseItemPushMsgRsp.class, Builder.class);
        }

        static {
            PARSER = new C12131();
            CSUseItemPushMsgRsp cSUseItemPushMsgRsp = new CSUseItemPushMsgRsp(true);
            defaultInstance = cSUseItemPushMsgRsp;
            cSUseItemPushMsgRsp.initFields();
        }

        public final Parser<CSUseItemPushMsgRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final List<Long> getVMsgIdsList() {
            return this.vMsgIds_;
        }

        public final int getVMsgIdsCount() {
            return this.vMsgIds_.size();
        }

        public final long getVMsgIds(int i) {
            return ((Long) this.vMsgIds_.get(i)).longValue();
        }

        private void initFields() {
            this.uuid_ = 0;
            this.vMsgIds_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasUuid()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            for (int i = 0; i < this.vMsgIds_.size(); i += UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(VMSGIDS_FIELD_NUMBER, ((Long) this.vMsgIds_.get(i)).longValue());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                computeInt64Size = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            } else {
                computeInt64Size = 0;
            }
            int i3 = 0;
            while (i < this.vMsgIds_.size()) {
                i += UUID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vMsgIds_.get(i)).longValue()) + i3;
            }
            i2 = ((computeInt64Size + i3) + (getVMsgIdsList().size() * UUID_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUseItemPushMsgRsp parseFrom(ByteString byteString) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(byteString);
        }

        public static CSUseItemPushMsgRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUseItemPushMsgRsp parseFrom(byte[] bArr) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(bArr);
        }

        public static CSUseItemPushMsgRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUseItemPushMsgRsp parseFrom(InputStream inputStream) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(inputStream);
        }

        public static CSUseItemPushMsgRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseItemPushMsgRsp parseDelimitedFrom(InputStream inputStream) {
            return (CSUseItemPushMsgRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUseItemPushMsgRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItemPushMsgRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUseItemPushMsgRsp parseFrom(CodedInputStream codedInputStream) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(codedInputStream);
        }

        public static CSUseItemPushMsgRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUseItemPushMsgRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUseItemPushMsgRsp cSUseItemPushMsgRsp) {
            return newBuilder().mergeFrom(cSUseItemPushMsgRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface CSUserDelegateOrBuilder extends MessageOrBuilder {
        int getBDelegate();

        long getLGameRoomID();

        long getUuid();

        boolean hasBDelegate();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSUserDelegate extends GeneratedMessage implements CSUserDelegateOrBuilder {
        public static final int BDELEGATE_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSUserDelegate> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSUserDelegate defaultInstance;
        private static final long serialVersionUID = 0;
        private int bDelegate_;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUserDelegate.1 */
        class C12141 extends AbstractParser<CSUserDelegate> {
            C12141() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUserDelegate(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUserDelegateOrBuilder {
            private int bDelegate_;
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6366build();

            public final native CSUserDelegate m6367build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6368buildPartial();

            public final native CSUserDelegate m6369buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6370clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6371clear();

            public final native Builder m6372clear();

            public final native Builder clearBDelegate();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6373clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6374clone();

            public final native Builder m6375clone();

            public final native int getBDelegate();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6376getDefaultInstanceForType();

            public final native CSUserDelegate m6377getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasBDelegate();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6378mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6379mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6380mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6381mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6382mergeFrom(Message message);

            public final native Builder mergeFrom(CSUserDelegate cSUserDelegate);

            public final native Builder setBDelegate(int i);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gK;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSUserDelegate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUserDelegate(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUserDelegate getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUserDelegate getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUserDelegate(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.bDelegate_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gK;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gL.ensureFieldAccessorsInitialized(CSUserDelegate.class, Builder.class);
        }

        static {
            PARSER = new C12141();
            CSUserDelegate cSUserDelegate = new CSUserDelegate(true);
            defaultInstance = cSUserDelegate;
            cSUserDelegate.initFields();
        }

        public final Parser<CSUserDelegate> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasBDelegate() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getBDelegate() {
            return this.bDelegate_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.bDelegate_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(BDELEGATE_FIELD_NUMBER, this.bDelegate_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(BDELEGATE_FIELD_NUMBER, this.bDelegate_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUserDelegate parseFrom(ByteString byteString) {
            return (CSUserDelegate) PARSER.parseFrom(byteString);
        }

        public static CSUserDelegate parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserDelegate) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUserDelegate parseFrom(byte[] bArr) {
            return (CSUserDelegate) PARSER.parseFrom(bArr);
        }

        public static CSUserDelegate parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserDelegate) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUserDelegate parseFrom(InputStream inputStream) {
            return (CSUserDelegate) PARSER.parseFrom(inputStream);
        }

        public static CSUserDelegate parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserDelegate) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUserDelegate parseDelimitedFrom(InputStream inputStream) {
            return (CSUserDelegate) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUserDelegate parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserDelegate) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUserDelegate parseFrom(CodedInputStream codedInputStream) {
            return (CSUserDelegate) PARSER.parseFrom(codedInputStream);
        }

        public static CSUserDelegate parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserDelegate) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUserDelegate cSUserDelegate) {
            return newBuilder().mergeFrom(cSUserDelegate);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSUserInsuranceSettingOrBuilder extends MessageOrBuilder {
        int getBDefaultInsurance();

        long getLGameRoomID();

        long getUuid();

        boolean hasBDefaultInsurance();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSUserInsuranceSetting extends GeneratedMessage implements CSUserInsuranceSettingOrBuilder {
        public static final int BDEFAULTINSURANCE_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSUserInsuranceSetting> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSUserInsuranceSetting defaultInstance;
        private static final long serialVersionUID = 0;
        private int bDefaultInsurance_;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSUserInsuranceSetting.1 */
        class C12151 extends AbstractParser<CSUserInsuranceSetting> {
            C12151() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSUserInsuranceSetting(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSUserInsuranceSettingOrBuilder {
            private int bDefaultInsurance_;
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6383build();

            public final native CSUserInsuranceSetting m6384build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6385buildPartial();

            public final native CSUserInsuranceSetting m6386buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6387clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6388clear();

            public final native Builder m6389clear();

            public final native Builder clearBDefaultInsurance();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6390clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6391clone();

            public final native Builder m6392clone();

            public final native int getBDefaultInsurance();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6393getDefaultInstanceForType();

            public final native CSUserInsuranceSetting m6394getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasBDefaultInsurance();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6395mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6396mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6397mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6398mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6399mergeFrom(Message message);

            public final native Builder mergeFrom(CSUserInsuranceSetting cSUserInsuranceSetting);

            public final native Builder setBDefaultInsurance(int i);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gu;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSUserInsuranceSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSUserInsuranceSetting(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSUserInsuranceSetting getDefaultInstance() {
            return defaultInstance;
        }

        public final CSUserInsuranceSetting getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSUserInsuranceSetting(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.bDefaultInsurance_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gu;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gv.ensureFieldAccessorsInitialized(CSUserInsuranceSetting.class, Builder.class);
        }

        static {
            PARSER = new C12151();
            CSUserInsuranceSetting cSUserInsuranceSetting = new CSUserInsuranceSetting(true);
            defaultInstance = cSUserInsuranceSetting;
            cSUserInsuranceSetting.initFields();
        }

        public final Parser<CSUserInsuranceSetting> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasBDefaultInsurance() {
            return (this.bitField0_ & 4) == 4;
        }

        public final int getBDefaultInsurance() {
            return this.bDefaultInsurance_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
            this.bDefaultInsurance_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(BDEFAULTINSURANCE_FIELD_NUMBER, this.bDefaultInsurance_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt32Size(BDEFAULTINSURANCE_FIELD_NUMBER, this.bDefaultInsurance_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSUserInsuranceSetting parseFrom(ByteString byteString) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(byteString);
        }

        public static CSUserInsuranceSetting parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSUserInsuranceSetting parseFrom(byte[] bArr) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(bArr);
        }

        public static CSUserInsuranceSetting parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSUserInsuranceSetting parseFrom(InputStream inputStream) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(inputStream);
        }

        public static CSUserInsuranceSetting parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSUserInsuranceSetting parseDelimitedFrom(InputStream inputStream) {
            return (CSUserInsuranceSetting) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSUserInsuranceSetting parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserInsuranceSetting) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSUserInsuranceSetting parseFrom(CodedInputStream codedInputStream) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(codedInputStream);
        }

        public static CSUserInsuranceSetting parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSUserInsuranceSetting) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSUserInsuranceSetting cSUserInsuranceSetting) {
            return newBuilder().mergeFrom(cSUserInsuranceSetting);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface CSWatchSNGGameRoomOrBuilder extends MessageOrBuilder {
        long getLGameRoomID();

        long getUuid();

        boolean hasLGameRoomID();

        boolean hasUuid();
    }

    public static final class CSWatchSNGGameRoom extends GeneratedMessage implements CSWatchSNGGameRoomOrBuilder {
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<CSWatchSNGGameRoom> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        private static final CSWatchSNGGameRoom defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;

        /* renamed from: com.texaspoker.moment.TexasPoker.CSWatchSNGGameRoom.1 */
        class C12161 extends AbstractParser<CSWatchSNGGameRoom> {
            C12161() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new CSWatchSNGGameRoom(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements CSWatchSNGGameRoomOrBuilder {
            private int bitField0_;
            private long lGameRoomID_;
            private long uuid_;

            static {
                fixHelper.fixfunc(new int[]{2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6400build();

            public final native CSWatchSNGGameRoom m6401build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6402buildPartial();

            public final native CSWatchSNGGameRoom m6403buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6404clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6405clear();

            public final native Builder m6406clear();

            public final native Builder clearLGameRoomID();

            public final native Builder clearUuid();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6407clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6408clone();

            public final native Builder m6409clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6410getDefaultInstanceForType();

            public final native CSWatchSNGGameRoom m6411getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native long getLGameRoomID();

            public final native long getUuid();

            public final native boolean hasLGameRoomID();

            public final native boolean hasUuid();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6412mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6413mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6414mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6415mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6416mergeFrom(Message message);

            public final native Builder mergeFrom(CSWatchSNGGameRoom cSWatchSNGGameRoom);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setUuid(long j);

            public static final Descriptor getDescriptor() {
                return TexasPoker.cc;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private CSWatchSNGGameRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private CSWatchSNGGameRoom(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static CSWatchSNGGameRoom getDefaultInstance() {
            return defaultInstance;
        }

        public final CSWatchSNGGameRoom getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CSWatchSNGGameRoom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = UUID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= UUID_FIELD_NUMBER;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = UUID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cc;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cd.ensureFieldAccessorsInitialized(CSWatchSNGGameRoom.class, Builder.class);
        }

        static {
            PARSER = new C12161();
            CSWatchSNGGameRoom cSWatchSNGGameRoom = new CSWatchSNGGameRoom(true);
            defaultInstance = cSWatchSNGGameRoom;
            cSWatchSNGGameRoom.initFields();
        }

        public final Parser<CSWatchSNGGameRoom> getParserForType() {
            return PARSER;
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.uuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLGameRoomID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & UUID_FIELD_NUMBER) == UUID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static CSWatchSNGGameRoom parseFrom(ByteString byteString) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(byteString);
        }

        public static CSWatchSNGGameRoom parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static CSWatchSNGGameRoom parseFrom(byte[] bArr) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(bArr);
        }

        public static CSWatchSNGGameRoom parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static CSWatchSNGGameRoom parseFrom(InputStream inputStream) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(inputStream);
        }

        public static CSWatchSNGGameRoom parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static CSWatchSNGGameRoom parseDelimitedFrom(InputStream inputStream) {
            return (CSWatchSNGGameRoom) PARSER.parseDelimitedFrom(inputStream);
        }

        public static CSWatchSNGGameRoom parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSWatchSNGGameRoom) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static CSWatchSNGGameRoom parseFrom(CodedInputStream codedInputStream) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(codedInputStream);
        }

        public static CSWatchSNGGameRoom parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (CSWatchSNGGameRoom) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(CSWatchSNGGameRoom cSWatchSNGGameRoom) {
            return newBuilder().mergeFrom(cSWatchSNGGameRoom);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface ChatMessageNetOrBuilder extends MessageOrBuilder {
        CHAT_MESSAGE_FROM getChatMessageFrom();

        CHAT_MESSAGE_TYPE getChatMessageType();

        long getLTime();

        long getMessageId();

        String getMessageText();

        ByteString getMessageTextBytes();

        UserBaseInfoNet getStUserBaseinfo();

        UserBaseInfoNetOrBuilder getStUserBaseinfoOrBuilder();

        boolean hasChatMessageFrom();

        boolean hasChatMessageType();

        boolean hasLTime();

        boolean hasMessageId();

        boolean hasMessageText();

        boolean hasStUserBaseinfo();
    }

    public static final class ChatMessageNet extends GeneratedMessage implements ChatMessageNetOrBuilder {
        public static final int CHATMESSAGEFROM_FIELD_NUMBER = 3;
        public static final int CHATMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int LTIME_FIELD_NUMBER = 6;
        public static final int MESSAGEID_FIELD_NUMBER = 1;
        public static final int MESSAGETEXT_FIELD_NUMBER = 5;
        public static Parser<ChatMessageNet> PARSER = null;
        public static final int STUSERBASEINFO_FIELD_NUMBER = 4;
        private static final ChatMessageNet defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private CHAT_MESSAGE_FROM chatMessageFrom_;
        private CHAT_MESSAGE_TYPE chatMessageType_;
        private long lTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private long messageId_;
        private Object messageText_;
        private UserBaseInfoNet stUserBaseinfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.ChatMessageNet.1 */
        class C12171 extends AbstractParser<ChatMessageNet> {
            C12171() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new ChatMessageNet(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements ChatMessageNetOrBuilder {
            private int bitField0_;
            private CHAT_MESSAGE_FROM chatMessageFrom_;
            private CHAT_MESSAGE_TYPE chatMessageType_;
            private long lTime_;
            private long messageId_;
            private Object messageText_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseinfoBuilder_;
            private UserBaseInfoNet stUserBaseinfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8288e;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8289f.ensureFieldAccessorsInitialized(ChatMessageNet.class, Builder.class);
            }

            private Builder() {
                this.chatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.chatMessageFrom_ = CHAT_MESSAGE_FROM.CHAT_MESSAGE_FROM_ME;
                this.stUserBaseinfo_ = UserBaseInfoNet.getDefaultInstance();
                this.messageText_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.chatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.chatMessageFrom_ = CHAT_MESSAGE_FROM.CHAT_MESSAGE_FROM_ME;
                this.stUserBaseinfo_ = UserBaseInfoNet.getDefaultInstance();
                this.messageText_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (ChatMessageNet.alwaysUseFieldBuilders) {
                    getStUserBaseinfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.messageId_ = 0;
                this.bitField0_ &= -2;
                this.chatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.bitField0_ &= -3;
                this.chatMessageFrom_ = CHAT_MESSAGE_FROM.CHAT_MESSAGE_FROM_ME;
                this.bitField0_ &= -5;
                if (this.stUserBaseinfoBuilder_ == null) {
                    this.stUserBaseinfo_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseinfoBuilder_.clear();
                }
                this.bitField0_ &= -9;
                this.messageText_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                this.lTime_ = 0;
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8288e;
            }

            public final ChatMessageNet getDefaultInstanceForType() {
                return ChatMessageNet.getDefaultInstance();
            }

            public final ChatMessageNet build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final ChatMessageNet buildPartial() {
                int i;
                int i2 = ChatMessageNet.MESSAGEID_FIELD_NUMBER;
                ChatMessageNet chatMessageNet = new ChatMessageNet(null);
                int i3 = this.bitField0_;
                if ((i3 & ChatMessageNet.MESSAGEID_FIELD_NUMBER) != ChatMessageNet.MESSAGEID_FIELD_NUMBER) {
                    i2 = 0;
                }
                chatMessageNet.messageId_ = this.messageId_;
                if ((i3 & ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER) == ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER;
                }
                chatMessageNet.chatMessageType_ = this.chatMessageType_;
                if ((i3 & ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER) == ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER) {
                    i2 |= ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER;
                }
                chatMessageNet.chatMessageFrom_ = this.chatMessageFrom_;
                if ((i3 & 8) == 8) {
                    i = i2 | 8;
                } else {
                    i = i2;
                }
                if (this.stUserBaseinfoBuilder_ == null) {
                    chatMessageNet.stUserBaseinfo_ = this.stUserBaseinfo_;
                } else {
                    chatMessageNet.stUserBaseinfo_ = (UserBaseInfoNet) this.stUserBaseinfoBuilder_.build();
                }
                if ((i3 & 16) == 16) {
                    i |= 16;
                }
                chatMessageNet.messageText_ = this.messageText_;
                if ((i3 & 32) == 32) {
                    i |= 32;
                }
                chatMessageNet.lTime_ = this.lTime_;
                chatMessageNet.bitField0_ = i;
                onBuilt();
                return chatMessageNet;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof ChatMessageNet) {
                    return mergeFrom((ChatMessageNet) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(ChatMessageNet chatMessageNet) {
                if (chatMessageNet != ChatMessageNet.getDefaultInstance()) {
                    if (chatMessageNet.hasMessageId()) {
                        setMessageId(chatMessageNet.getMessageId());
                    }
                    if (chatMessageNet.hasChatMessageType()) {
                        setChatMessageType(chatMessageNet.getChatMessageType());
                    }
                    if (chatMessageNet.hasChatMessageFrom()) {
                        setChatMessageFrom(chatMessageNet.getChatMessageFrom());
                    }
                    if (chatMessageNet.hasStUserBaseinfo()) {
                        mergeStUserBaseinfo(chatMessageNet.getStUserBaseinfo());
                    }
                    if (chatMessageNet.hasMessageText()) {
                        this.bitField0_ |= 16;
                        this.messageText_ = chatMessageNet.messageText_;
                        onChanged();
                    }
                    if (chatMessageNet.hasLTime()) {
                        setLTime(chatMessageNet.getLTime());
                    }
                    mergeUnknownFields(chatMessageNet.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasMessageId() && hasChatMessageType() && hasChatMessageFrom() && hasStUserBaseinfo() && hasMessageText() && hasLTime() && getStUserBaseinfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.ChatMessageNet.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.ChatMessageNet.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.ChatMessageNet) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.ChatMessageNet) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.ChatMessageNet.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$ChatMessageNet$Builder");
            }

            public final boolean hasMessageId() {
                return (this.bitField0_ & ChatMessageNet.MESSAGEID_FIELD_NUMBER) == ChatMessageNet.MESSAGEID_FIELD_NUMBER;
            }

            public final long getMessageId() {
                return this.messageId_;
            }

            public final Builder setMessageId(long j) {
                this.bitField0_ |= ChatMessageNet.MESSAGEID_FIELD_NUMBER;
                this.messageId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearMessageId() {
                this.bitField0_ &= -2;
                this.messageId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasChatMessageType() {
                return (this.bitField0_ & ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER) == ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER;
            }

            public final CHAT_MESSAGE_TYPE getChatMessageType() {
                return this.chatMessageType_;
            }

            public final Builder setChatMessageType(CHAT_MESSAGE_TYPE chat_message_type) {
                if (chat_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatMessageNet.CHATMESSAGETYPE_FIELD_NUMBER;
                this.chatMessageType_ = chat_message_type;
                onChanged();
                return this;
            }

            public final Builder clearChatMessageType() {
                this.bitField0_ &= -3;
                this.chatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                onChanged();
                return this;
            }

            public final boolean hasChatMessageFrom() {
                return (this.bitField0_ & ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER) == ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER;
            }

            public final CHAT_MESSAGE_FROM getChatMessageFrom() {
                return this.chatMessageFrom_;
            }

            public final Builder setChatMessageFrom(CHAT_MESSAGE_FROM chat_message_from) {
                if (chat_message_from == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatMessageNet.STUSERBASEINFO_FIELD_NUMBER;
                this.chatMessageFrom_ = chat_message_from;
                onChanged();
                return this;
            }

            public final Builder clearChatMessageFrom() {
                this.bitField0_ &= -5;
                this.chatMessageFrom_ = CHAT_MESSAGE_FROM.CHAT_MESSAGE_FROM_ME;
                onChanged();
                return this;
            }

            public final boolean hasStUserBaseinfo() {
                return (this.bitField0_ & 8) == 8;
            }

            public final UserBaseInfoNet getStUserBaseinfo() {
                if (this.stUserBaseinfoBuilder_ == null) {
                    return this.stUserBaseinfo_;
                }
                return (UserBaseInfoNet) this.stUserBaseinfoBuilder_.getMessage();
            }

            public final Builder setStUserBaseinfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseinfoBuilder_ != null) {
                    this.stUserBaseinfoBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseinfo_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder setStUserBaseinfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseinfoBuilder_ == null) {
                    this.stUserBaseinfo_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseinfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder mergeStUserBaseinfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseinfoBuilder_ == null) {
                    if ((this.bitField0_ & 8) != 8 || this.stUserBaseinfo_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseinfo_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseinfo_ = UserBaseInfoNet.newBuilder(this.stUserBaseinfo_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseinfoBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder clearStUserBaseinfo() {
                if (this.stUserBaseinfoBuilder_ == null) {
                    this.stUserBaseinfo_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseinfoBuilder_.clear();
                }
                this.bitField0_ &= -9;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseinfoBuilder() {
                this.bitField0_ |= 8;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseinfoFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseinfoOrBuilder() {
                if (this.stUserBaseinfoBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseinfoBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseinfo_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseinfoFieldBuilder() {
                if (this.stUserBaseinfoBuilder_ == null) {
                    this.stUserBaseinfoBuilder_ = new SingleFieldBuilder(getStUserBaseinfo(), getParentForChildren(), isClean());
                    this.stUserBaseinfo_ = null;
                }
                return this.stUserBaseinfoBuilder_;
            }

            public final boolean hasMessageText() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getMessageText() {
                Object obj = this.messageText_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.messageText_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getMessageTextBytes() {
                Object obj = this.messageText_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.messageText_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setMessageText(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.messageText_ = str;
                onChanged();
                return this;
            }

            public final Builder clearMessageText() {
                this.bitField0_ &= -17;
                this.messageText_ = ChatMessageNet.getDefaultInstance().getMessageText();
                onChanged();
                return this;
            }

            public final Builder setMessageTextBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.messageText_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLTime() {
                return (this.bitField0_ & 32) == 32;
            }

            public final long getLTime() {
                return this.lTime_;
            }

            public final Builder setLTime(long j) {
                this.bitField0_ |= 32;
                this.lTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLTime() {
                this.bitField0_ &= -33;
                this.lTime_ = 0;
                onChanged();
                return this;
            }
        }

        private ChatMessageNet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChatMessageNet(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChatMessageNet getDefaultInstance() {
            return defaultInstance;
        }

        public final ChatMessageNet getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChatMessageNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = MESSAGEID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= MESSAGEID_FIELD_NUMBER;
                            this.messageId_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_MESSAGE_TYPE valueOf = CHAT_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= CHATMESSAGETYPE_FIELD_NUMBER;
                                this.chatMessageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(CHATMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_MESSAGE_FROM valueOf2 = CHAT_MESSAGE_FROM.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= STUSERBASEINFO_FIELD_NUMBER;
                                this.chatMessageFrom_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(CHATMESSAGEFROM_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & 8) == 8) {
                                toBuilder = this.stUserBaseinfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stUserBaseinfo_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stUserBaseinfo_);
                                this.stUserBaseinfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= 8;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.messageText_ = readBytes;
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.lTime_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = MESSAGEID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8288e;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8289f.ensureFieldAccessorsInitialized(ChatMessageNet.class, Builder.class);
        }

        static {
            PARSER = new C12171();
            ChatMessageNet chatMessageNet = new ChatMessageNet(true);
            defaultInstance = chatMessageNet;
            chatMessageNet.initFields();
        }

        public final Parser<ChatMessageNet> getParserForType() {
            return PARSER;
        }

        public final boolean hasMessageId() {
            return (this.bitField0_ & MESSAGEID_FIELD_NUMBER) == MESSAGEID_FIELD_NUMBER;
        }

        public final long getMessageId() {
            return this.messageId_;
        }

        public final boolean hasChatMessageType() {
            return (this.bitField0_ & CHATMESSAGETYPE_FIELD_NUMBER) == CHATMESSAGETYPE_FIELD_NUMBER;
        }

        public final CHAT_MESSAGE_TYPE getChatMessageType() {
            return this.chatMessageType_;
        }

        public final boolean hasChatMessageFrom() {
            return (this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER;
        }

        public final CHAT_MESSAGE_FROM getChatMessageFrom() {
            return this.chatMessageFrom_;
        }

        public final boolean hasStUserBaseinfo() {
            return (this.bitField0_ & 8) == 8;
        }

        public final UserBaseInfoNet getStUserBaseinfo() {
            return this.stUserBaseinfo_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseinfoOrBuilder() {
            return this.stUserBaseinfo_;
        }

        public final boolean hasMessageText() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getMessageText() {
            Object obj = this.messageText_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.messageText_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getMessageTextBytes() {
            Object obj = this.messageText_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.messageText_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLTime() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLTime() {
            return this.lTime_;
        }

        private void initFields() {
            this.messageId_ = 0;
            this.chatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
            this.chatMessageFrom_ = CHAT_MESSAGE_FROM.CHAT_MESSAGE_FROM_ME;
            this.stUserBaseinfo_ = UserBaseInfoNet.getDefaultInstance();
            this.messageText_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lTime_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasMessageId()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasChatMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasChatMessageFrom()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStUserBaseinfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasMessageText()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStUserBaseinfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & MESSAGEID_FIELD_NUMBER) == MESSAGEID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(MESSAGEID_FIELD_NUMBER, this.messageId_);
            }
            if ((this.bitField0_ & CHATMESSAGETYPE_FIELD_NUMBER) == CHATMESSAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(CHATMESSAGETYPE_FIELD_NUMBER, this.chatMessageType_.getNumber());
            }
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeEnum(CHATMESSAGEFROM_FIELD_NUMBER, this.chatMessageFrom_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeMessage(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseinfo_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(MESSAGETEXT_FIELD_NUMBER, getMessageTextBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LTIME_FIELD_NUMBER, this.lTime_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & MESSAGEID_FIELD_NUMBER) == MESSAGEID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(MESSAGEID_FIELD_NUMBER, this.messageId_) + 0;
            }
            if ((this.bitField0_ & CHATMESSAGETYPE_FIELD_NUMBER) == CHATMESSAGETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(CHATMESSAGETYPE_FIELD_NUMBER, this.chatMessageType_.getNumber());
            }
            if ((this.bitField0_ & STUSERBASEINFO_FIELD_NUMBER) == STUSERBASEINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(CHATMESSAGEFROM_FIELD_NUMBER, this.chatMessageFrom_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeMessageSize(STUSERBASEINFO_FIELD_NUMBER, this.stUserBaseinfo_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(MESSAGETEXT_FIELD_NUMBER, getMessageTextBytes());
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt64Size(LTIME_FIELD_NUMBER, this.lTime_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static ChatMessageNet parseFrom(ByteString byteString) {
            return (ChatMessageNet) PARSER.parseFrom(byteString);
        }

        public static ChatMessageNet parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatMessageNet) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ChatMessageNet parseFrom(byte[] bArr) {
            return (ChatMessageNet) PARSER.parseFrom(bArr);
        }

        public static ChatMessageNet parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatMessageNet) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ChatMessageNet parseFrom(InputStream inputStream) {
            return (ChatMessageNet) PARSER.parseFrom(inputStream);
        }

        public static ChatMessageNet parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatMessageNet) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static ChatMessageNet parseDelimitedFrom(InputStream inputStream) {
            return (ChatMessageNet) PARSER.parseDelimitedFrom(inputStream);
        }

        public static ChatMessageNet parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatMessageNet) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static ChatMessageNet parseFrom(CodedInputStream codedInputStream) {
            return (ChatMessageNet) PARSER.parseFrom(codedInputStream);
        }

        public static ChatMessageNet parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatMessageNet) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChatMessageNet chatMessageNet) {
            return newBuilder().mergeFrom(chatMessageNet);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface ChatRoomBaseInfoOrBuilder extends MessageOrBuilder {
        int getIMute();

        int getIRoomType();

        int getIVibrate();

        long getLChatRoomId();

        long getLCreateUser();

        int getNCurMembers();

        int getNMaxMembers();

        int getNOwnerCreate();

        int getNOwnerInvite();

        String getStrRoomIcon();

        ByteString getStrRoomIconBytes();

        String getStrRoomName();

        ByteString getStrRoomNameBytes();

        String getStrRoomTempName();

        ByteString getStrRoomTempNameBytes();

        String getStrSmallRoomIcon();

        ByteString getStrSmallRoomIconBytes();

        boolean hasIMute();

        boolean hasIRoomType();

        boolean hasIVibrate();

        boolean hasLChatRoomId();

        boolean hasLCreateUser();

        boolean hasNCurMembers();

        boolean hasNMaxMembers();

        boolean hasNOwnerCreate();

        boolean hasNOwnerInvite();

        boolean hasStrRoomIcon();

        boolean hasStrRoomName();

        boolean hasStrRoomTempName();

        boolean hasStrSmallRoomIcon();
    }

    public static final class ChatRoomBaseInfo extends GeneratedMessage implements ChatRoomBaseInfoOrBuilder {
        public static final int IMUTE_FIELD_NUMBER = 11;
        public static final int IROOMTYPE_FIELD_NUMBER = 6;
        public static final int IVIBRATE_FIELD_NUMBER = 12;
        public static final int LCHATROOMID_FIELD_NUMBER = 1;
        public static final int LCREATEUSER_FIELD_NUMBER = 5;
        public static final int NCURMEMBERS_FIELD_NUMBER = 4;
        public static final int NMAXMEMBERS_FIELD_NUMBER = 3;
        public static final int NOWNERCREATE_FIELD_NUMBER = 8;
        public static final int NOWNERINVITE_FIELD_NUMBER = 7;
        public static Parser<ChatRoomBaseInfo> PARSER = null;
        public static final int STRROOMICON_FIELD_NUMBER = 9;
        public static final int STRROOMNAME_FIELD_NUMBER = 2;
        public static final int STRROOMTEMPNAME_FIELD_NUMBER = 13;
        public static final int STRSMALLROOMICON_FIELD_NUMBER = 10;
        private static final ChatRoomBaseInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iMute_;
        private int iRoomType_;
        private int iVibrate_;
        private long lChatRoomId_;
        private long lCreateUser_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private int nCurMembers_;
        private int nMaxMembers_;
        private int nOwnerCreate_;
        private int nOwnerInvite_;
        private Object strRoomIcon_;
        private Object strRoomName_;
        private Object strRoomTempName_;
        private Object strSmallRoomIcon_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo.1 */
        class C12181 extends AbstractParser<ChatRoomBaseInfo> {
            C12181() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new ChatRoomBaseInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements ChatRoomBaseInfoOrBuilder {
            private int bitField0_;
            private int iMute_;
            private int iRoomType_;
            private int iVibrate_;
            private long lChatRoomId_;
            private long lCreateUser_;
            private int nCurMembers_;
            private int nMaxMembers_;
            private int nOwnerCreate_;
            private int nOwnerInvite_;
            private Object strRoomIcon_;
            private Object strRoomName_;
            private Object strRoomTempName_;
            private Object strSmallRoomIcon_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.aw;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ax.ensureFieldAccessorsInitialized(ChatRoomBaseInfo.class, Builder.class);
            }

            private Builder() {
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSmallRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strRoomTempName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strSmallRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.strRoomTempName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                ChatRoomBaseInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lChatRoomId_ = 0;
                this.bitField0_ &= -2;
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.nMaxMembers_ = 0;
                this.bitField0_ &= -5;
                this.nCurMembers_ = 0;
                this.bitField0_ &= -9;
                this.lCreateUser_ = 0;
                this.bitField0_ &= -17;
                this.iRoomType_ = 0;
                this.bitField0_ &= -33;
                this.nOwnerInvite_ = 0;
                this.bitField0_ &= -65;
                this.nOwnerCreate_ = 0;
                this.bitField0_ &= -129;
                this.strRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -257;
                this.strSmallRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -513;
                this.iMute_ = 0;
                this.bitField0_ &= -1025;
                this.iVibrate_ = 0;
                this.bitField0_ &= -2049;
                this.strRoomTempName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -4097;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.aw;
            }

            public final ChatRoomBaseInfo getDefaultInstanceForType() {
                return ChatRoomBaseInfo.getDefaultInstance();
            }

            public final ChatRoomBaseInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final ChatRoomBaseInfo buildPartial() {
                int i = ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER;
                ChatRoomBaseInfo chatRoomBaseInfo = new ChatRoomBaseInfo(null);
                int i2 = this.bitField0_;
                if ((i2 & ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER) != ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER) {
                    i = 0;
                }
                chatRoomBaseInfo.lChatRoomId_ = this.lChatRoomId_;
                if ((i2 & ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) {
                    i |= ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                }
                chatRoomBaseInfo.strRoomName_ = this.strRoomName_;
                if ((i2 & ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER) == ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER) {
                    i |= ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER;
                }
                chatRoomBaseInfo.nMaxMembers_ = this.nMaxMembers_;
                if ((i2 & ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER) == ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER) {
                    i |= ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER;
                }
                chatRoomBaseInfo.nCurMembers_ = this.nCurMembers_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                chatRoomBaseInfo.lCreateUser_ = this.lCreateUser_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                chatRoomBaseInfo.iRoomType_ = this.iRoomType_;
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                chatRoomBaseInfo.nOwnerInvite_ = this.nOwnerInvite_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                chatRoomBaseInfo.nOwnerCreate_ = this.nOwnerCreate_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                chatRoomBaseInfo.strRoomIcon_ = this.strRoomIcon_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                chatRoomBaseInfo.strSmallRoomIcon_ = this.strSmallRoomIcon_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                chatRoomBaseInfo.iMute_ = this.iMute_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                chatRoomBaseInfo.iVibrate_ = this.iVibrate_;
                if ((i2 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                }
                chatRoomBaseInfo.strRoomTempName_ = this.strRoomTempName_;
                chatRoomBaseInfo.bitField0_ = i;
                onBuilt();
                return chatRoomBaseInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof ChatRoomBaseInfo) {
                    return mergeFrom((ChatRoomBaseInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(ChatRoomBaseInfo chatRoomBaseInfo) {
                if (chatRoomBaseInfo != ChatRoomBaseInfo.getDefaultInstance()) {
                    if (chatRoomBaseInfo.hasLChatRoomId()) {
                        setLChatRoomId(chatRoomBaseInfo.getLChatRoomId());
                    }
                    if (chatRoomBaseInfo.hasStrRoomName()) {
                        this.bitField0_ |= ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                        this.strRoomName_ = chatRoomBaseInfo.strRoomName_;
                        onChanged();
                    }
                    if (chatRoomBaseInfo.hasNMaxMembers()) {
                        setNMaxMembers(chatRoomBaseInfo.getNMaxMembers());
                    }
                    if (chatRoomBaseInfo.hasNCurMembers()) {
                        setNCurMembers(chatRoomBaseInfo.getNCurMembers());
                    }
                    if (chatRoomBaseInfo.hasLCreateUser()) {
                        setLCreateUser(chatRoomBaseInfo.getLCreateUser());
                    }
                    if (chatRoomBaseInfo.hasIRoomType()) {
                        setIRoomType(chatRoomBaseInfo.getIRoomType());
                    }
                    if (chatRoomBaseInfo.hasNOwnerInvite()) {
                        setNOwnerInvite(chatRoomBaseInfo.getNOwnerInvite());
                    }
                    if (chatRoomBaseInfo.hasNOwnerCreate()) {
                        setNOwnerCreate(chatRoomBaseInfo.getNOwnerCreate());
                    }
                    if (chatRoomBaseInfo.hasStrRoomIcon()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                        this.strRoomIcon_ = chatRoomBaseInfo.strRoomIcon_;
                        onChanged();
                    }
                    if (chatRoomBaseInfo.hasStrSmallRoomIcon()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                        this.strSmallRoomIcon_ = chatRoomBaseInfo.strSmallRoomIcon_;
                        onChanged();
                    }
                    if (chatRoomBaseInfo.hasIMute()) {
                        setIMute(chatRoomBaseInfo.getIMute());
                    }
                    if (chatRoomBaseInfo.hasIVibrate()) {
                        setIVibrate(chatRoomBaseInfo.getIVibrate());
                    }
                    if (chatRoomBaseInfo.hasStrRoomTempName()) {
                        this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                        this.strRoomTempName_ = chatRoomBaseInfo.strRoomTempName_;
                        onChanged();
                    }
                    mergeUnknownFields(chatRoomBaseInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLChatRoomId() && hasStrRoomName() && hasNMaxMembers() && hasNCurMembers() && hasLCreateUser() && hasIRoomType() && hasNOwnerInvite() && hasNOwnerCreate()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.ChatRoomBaseInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$ChatRoomBaseInfo$Builder");
            }

            public final boolean hasLChatRoomId() {
                return (this.bitField0_ & ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER) == ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER;
            }

            public final long getLChatRoomId() {
                return this.lChatRoomId_;
            }

            public final Builder setLChatRoomId(long j) {
                this.bitField0_ |= ChatRoomBaseInfo.LCHATROOMID_FIELD_NUMBER;
                this.lChatRoomId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLChatRoomId() {
                this.bitField0_ &= -2;
                this.lChatRoomId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrRoomName() {
                return (this.bitField0_ & ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
            }

            public final String getStrRoomName() {
                Object obj = this.strRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrRoomNameBytes() {
                Object obj = this.strRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrRoomName() {
                this.bitField0_ &= -3;
                this.strRoomName_ = ChatRoomBaseInfo.getDefaultInstance().getStrRoomName();
                onChanged();
                return this;
            }

            public final Builder setStrRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasNMaxMembers() {
                return (this.bitField0_ & ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER) == ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER;
            }

            public final int getNMaxMembers() {
                return this.nMaxMembers_;
            }

            public final Builder setNMaxMembers(int i) {
                this.bitField0_ |= ChatRoomBaseInfo.NCURMEMBERS_FIELD_NUMBER;
                this.nMaxMembers_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNMaxMembers() {
                this.bitField0_ &= -5;
                this.nMaxMembers_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNCurMembers() {
                return (this.bitField0_ & ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER) == ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER;
            }

            public final int getNCurMembers() {
                return this.nCurMembers_;
            }

            public final Builder setNCurMembers(int i) {
                this.bitField0_ |= ChatRoomBaseInfo.NOWNERCREATE_FIELD_NUMBER;
                this.nCurMembers_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNCurMembers() {
                this.bitField0_ &= -9;
                this.nCurMembers_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLCreateUser() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLCreateUser() {
                return this.lCreateUser_;
            }

            public final Builder setLCreateUser(long j) {
                this.bitField0_ |= 16;
                this.lCreateUser_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateUser() {
                this.bitField0_ &= -17;
                this.lCreateUser_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIRoomType() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getIRoomType() {
                return this.iRoomType_;
            }

            public final Builder setIRoomType(int i) {
                this.bitField0_ |= 32;
                this.iRoomType_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIRoomType() {
                this.bitField0_ &= -33;
                this.iRoomType_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerInvite() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getNOwnerInvite() {
                return this.nOwnerInvite_;
            }

            public final Builder setNOwnerInvite(int i) {
                this.bitField0_ |= 64;
                this.nOwnerInvite_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerInvite() {
                this.bitField0_ &= -65;
                this.nOwnerInvite_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNOwnerCreate() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getNOwnerCreate() {
                return this.nOwnerCreate_;
            }

            public final Builder setNOwnerCreate(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.nOwnerCreate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNOwnerCreate() {
                this.bitField0_ &= -129;
                this.nOwnerCreate_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrRoomIcon() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final String getStrRoomIcon() {
                Object obj = this.strRoomIcon_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strRoomIcon_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrRoomIconBytes() {
                Object obj = this.strRoomIcon_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strRoomIcon_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrRoomIcon(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.strRoomIcon_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrRoomIcon() {
                this.bitField0_ &= -257;
                this.strRoomIcon_ = ChatRoomBaseInfo.getDefaultInstance().getStrRoomIcon();
                onChanged();
                return this;
            }

            public final Builder setStrRoomIconBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.strRoomIcon_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStrSmallRoomIcon() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final String getStrSmallRoomIcon() {
                Object obj = this.strSmallRoomIcon_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strSmallRoomIcon_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrSmallRoomIconBytes() {
                Object obj = this.strSmallRoomIcon_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strSmallRoomIcon_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrSmallRoomIcon(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.strSmallRoomIcon_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrSmallRoomIcon() {
                this.bitField0_ &= -513;
                this.strSmallRoomIcon_ = ChatRoomBaseInfo.getDefaultInstance().getStrSmallRoomIcon();
                onChanged();
                return this;
            }

            public final Builder setStrSmallRoomIconBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.strSmallRoomIcon_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasIMute() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final int getIMute() {
                return this.iMute_;
            }

            public final Builder setIMute(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.iMute_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMute() {
                this.bitField0_ &= -1025;
                this.iMute_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIVibrate() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final int getIVibrate() {
                return this.iVibrate_;
            }

            public final Builder setIVibrate(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.iVibrate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIVibrate() {
                this.bitField0_ &= -2049;
                this.iVibrate_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrRoomTempName() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final String getStrRoomTempName() {
                Object obj = this.strRoomTempName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strRoomTempName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrRoomTempNameBytes() {
                Object obj = this.strRoomTempName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strRoomTempName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrRoomTempName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                this.strRoomTempName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrRoomTempName() {
                this.bitField0_ &= -4097;
                this.strRoomTempName_ = ChatRoomBaseInfo.getDefaultInstance().getStrRoomTempName();
                onChanged();
                return this;
            }

            public final Builder setStrRoomTempNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                this.strRoomTempName_ = byteString;
                onChanged();
                return this;
            }
        }

        private ChatRoomBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChatRoomBaseInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChatRoomBaseInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final ChatRoomBaseInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChatRoomBaseInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LCHATROOMID_FIELD_NUMBER;
                            break;
                        case NOWNERCREATE_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LCHATROOMID_FIELD_NUMBER;
                            this.lChatRoomId_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRROOMNAME_FIELD_NUMBER;
                            this.strRoomName_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= NCURMEMBERS_FIELD_NUMBER;
                            this.nMaxMembers_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= NOWNERCREATE_FIELD_NUMBER;
                            this.nCurMembers_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lCreateUser_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.iRoomType_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.nOwnerInvite_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.nOwnerCreate_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.strRoomIcon_ = readBytes;
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.strSmallRoomIcon_ = readBytes;
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.iMute_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                            this.iVibrate_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_editTextStyle /*106*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            this.strRoomTempName_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LCHATROOMID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aw;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ax.ensureFieldAccessorsInitialized(ChatRoomBaseInfo.class, Builder.class);
        }

        static {
            PARSER = new C12181();
            ChatRoomBaseInfo chatRoomBaseInfo = new ChatRoomBaseInfo(true);
            defaultInstance = chatRoomBaseInfo;
            chatRoomBaseInfo.initFields();
        }

        public final Parser<ChatRoomBaseInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasLChatRoomId() {
            return (this.bitField0_ & LCHATROOMID_FIELD_NUMBER) == LCHATROOMID_FIELD_NUMBER;
        }

        public final long getLChatRoomId() {
            return this.lChatRoomId_;
        }

        public final boolean hasStrRoomName() {
            return (this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER;
        }

        public final String getStrRoomName() {
            Object obj = this.strRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrRoomNameBytes() {
            Object obj = this.strRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasNMaxMembers() {
            return (this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER;
        }

        public final int getNMaxMembers() {
            return this.nMaxMembers_;
        }

        public final boolean hasNCurMembers() {
            return (this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER;
        }

        public final int getNCurMembers() {
            return this.nCurMembers_;
        }

        public final boolean hasLCreateUser() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLCreateUser() {
            return this.lCreateUser_;
        }

        public final boolean hasIRoomType() {
            return (this.bitField0_ & 32) == 32;
        }

        public final int getIRoomType() {
            return this.iRoomType_;
        }

        public final boolean hasNOwnerInvite() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getNOwnerInvite() {
            return this.nOwnerInvite_;
        }

        public final boolean hasNOwnerCreate() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final int getNOwnerCreate() {
            return this.nOwnerCreate_;
        }

        public final boolean hasStrRoomIcon() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final String getStrRoomIcon() {
            Object obj = this.strRoomIcon_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strRoomIcon_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrRoomIconBytes() {
            Object obj = this.strRoomIcon_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strRoomIcon_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStrSmallRoomIcon() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final String getStrSmallRoomIcon() {
            Object obj = this.strSmallRoomIcon_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strSmallRoomIcon_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrSmallRoomIconBytes() {
            Object obj = this.strSmallRoomIcon_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strSmallRoomIcon_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasIMute() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final int getIMute() {
            return this.iMute_;
        }

        public final boolean hasIVibrate() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final int getIVibrate() {
            return this.iVibrate_;
        }

        public final boolean hasStrRoomTempName() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final String getStrRoomTempName() {
            Object obj = this.strRoomTempName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strRoomTempName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrRoomTempNameBytes() {
            Object obj = this.strRoomTempName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strRoomTempName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.lChatRoomId_ = 0;
            this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.nMaxMembers_ = 0;
            this.nCurMembers_ = 0;
            this.lCreateUser_ = 0;
            this.iRoomType_ = 0;
            this.nOwnerInvite_ = 0;
            this.nOwnerCreate_ = 0;
            this.strRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.strSmallRoomIcon_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.iMute_ = 0;
            this.iVibrate_ = 0;
            this.strRoomTempName_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLChatRoomId()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStrRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNMaxMembers()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNCurMembers()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateUser()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasIRoomType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasNOwnerInvite()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasNOwnerCreate()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LCHATROOMID_FIELD_NUMBER) == LCHATROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LCHATROOMID_FIELD_NUMBER, this.lChatRoomId_);
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NMAXMEMBERS_FIELD_NUMBER, this.nMaxMembers_);
            }
            if ((this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NCURMEMBERS_FIELD_NUMBER, this.nCurMembers_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LCREATEUSER_FIELD_NUMBER, this.lCreateUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt32(IROOMTYPE_FIELD_NUMBER, this.iRoomType_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt32(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(STRROOMICON_FIELD_NUMBER, getStrRoomIconBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(STRSMALLROOMICON_FIELD_NUMBER, getStrSmallRoomIconBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt32(IMUTE_FIELD_NUMBER, this.iMute_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeInt32(IVIBRATE_FIELD_NUMBER, this.iVibrate_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeBytes(STRROOMTEMPNAME_FIELD_NUMBER, getStrRoomTempNameBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LCHATROOMID_FIELD_NUMBER) == LCHATROOMID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LCHATROOMID_FIELD_NUMBER, this.lChatRoomId_) + 0;
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & NCURMEMBERS_FIELD_NUMBER) == NCURMEMBERS_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(NMAXMEMBERS_FIELD_NUMBER, this.nMaxMembers_);
            }
            if ((this.bitField0_ & NOWNERCREATE_FIELD_NUMBER) == NOWNERCREATE_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(NCURMEMBERS_FIELD_NUMBER, this.nCurMembers_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LCREATEUSER_FIELD_NUMBER, this.lCreateUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt32Size(IROOMTYPE_FIELD_NUMBER, this.iRoomType_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt32Size(NOWNERINVITE_FIELD_NUMBER, this.nOwnerInvite_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeInt32Size(NOWNERCREATE_FIELD_NUMBER, this.nOwnerCreate_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(STRROOMICON_FIELD_NUMBER, getStrRoomIconBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeBytesSize(STRSMALLROOMICON_FIELD_NUMBER, getStrSmallRoomIconBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(IMUTE_FIELD_NUMBER, this.iMute_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(IVIBRATE_FIELD_NUMBER, this.iVibrate_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i += CodedOutputStream.computeBytesSize(STRROOMTEMPNAME_FIELD_NUMBER, getStrRoomTempNameBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static ChatRoomBaseInfo parseFrom(ByteString byteString) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(byteString);
        }

        public static ChatRoomBaseInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ChatRoomBaseInfo parseFrom(byte[] bArr) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(bArr);
        }

        public static ChatRoomBaseInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ChatRoomBaseInfo parseFrom(InputStream inputStream) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(inputStream);
        }

        public static ChatRoomBaseInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomBaseInfo parseDelimitedFrom(InputStream inputStream) {
            return (ChatRoomBaseInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static ChatRoomBaseInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomBaseInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomBaseInfo parseFrom(CodedInputStream codedInputStream) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(codedInputStream);
        }

        public static ChatRoomBaseInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomBaseInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChatRoomBaseInfo chatRoomBaseInfo) {
            return newBuilder().mergeFrom(chatRoomBaseInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface ChatRoomInfoOrBuilder extends MessageOrBuilder {
        ChatRoomBaseInfo getStChatRoomBaseInfo();

        ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder();

        SNGGameRoomBaseInfo getVGSNGameRoomBaseInfos(int i);

        int getVGSNGameRoomBaseInfosCount();

        List<SNGGameRoomBaseInfo> getVGSNGameRoomBaseInfosList();

        SNGGameRoomBaseInfoOrBuilder getVGSNGameRoomBaseInfosOrBuilder(int i);

        List<? extends SNGGameRoomBaseInfoOrBuilder> getVGSNGameRoomBaseInfosOrBuilderList();

        GameRoomBaseInfo getVGameRoomBaseInfos(int i);

        int getVGameRoomBaseInfosCount();

        List<GameRoomBaseInfo> getVGameRoomBaseInfosList();

        GameRoomBaseInfoOrBuilder getVGameRoomBaseInfosOrBuilder(int i);

        List<? extends GameRoomBaseInfoOrBuilder> getVGameRoomBaseInfosOrBuilderList();

        UserBaseInfoNet getVUserBaseInfos(int i);

        int getVUserBaseInfosCount();

        List<UserBaseInfoNet> getVUserBaseInfosList();

        UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

        boolean hasStChatRoomBaseInfo();
    }

    public static final class ChatRoomInfo extends GeneratedMessage implements ChatRoomInfoOrBuilder {
        public static Parser<ChatRoomInfo> PARSER = null;
        public static final int STCHATROOMBASEINFO_FIELD_NUMBER = 1;
        public static final int VGAMEROOMBASEINFOS_FIELD_NUMBER = 3;
        public static final int VGSNGAMEROOMBASEINFOS_FIELD_NUMBER = 4;
        public static final int VUSERBASEINFOS_FIELD_NUMBER = 2;
        private static final ChatRoomInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private ChatRoomBaseInfo stChatRoomBaseInfo_;
        private final UnknownFieldSet unknownFields;
        private List<SNGGameRoomBaseInfo> vGSNGameRoomBaseInfos_;
        private List<GameRoomBaseInfo> vGameRoomBaseInfos_;
        private List<UserBaseInfoNet> vUserBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.ChatRoomInfo.1 */
        class C12191 extends AbstractParser<ChatRoomInfo> {
            C12191() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new ChatRoomInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements ChatRoomInfoOrBuilder {
            private int bitField0_;
            private SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> stChatRoomBaseInfoBuilder_;
            private ChatRoomBaseInfo stChatRoomBaseInfo_;
            private RepeatedFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> vGSNGameRoomBaseInfosBuilder_;
            private List<SNGGameRoomBaseInfo> vGSNGameRoomBaseInfos_;
            private RepeatedFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> vGameRoomBaseInfosBuilder_;
            private List<GameRoomBaseInfo> vGameRoomBaseInfos_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUserBaseInfosBuilder_;
            private List<UserBaseInfoNet> vUserBaseInfos_;

            static {
                fixHelper.fixfunc(new int[]{1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVGSNGameRoomBaseInfosIsMutable();

            private native void ensureVGameRoomBaseInfosIsMutable();

            private native void ensureVUserBaseInfosIsMutable();

            private native SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> getStChatRoomBaseInfoFieldBuilder();

            private native RepeatedFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> getVGSNGameRoomBaseInfosFieldBuilder();

            private native RepeatedFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> getVGameRoomBaseInfosFieldBuilder();

            private native RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUserBaseInfosFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVGSNGameRoomBaseInfos(Iterable<? extends SNGGameRoomBaseInfo> iterable);

            public final native Builder addAllVGameRoomBaseInfos(Iterable<? extends GameRoomBaseInfo> iterable);

            public final native Builder addAllVUserBaseInfos(Iterable<? extends UserBaseInfoNet> iterable);

            public final native Builder addVGSNGameRoomBaseInfos(int i, Builder builder);

            public final native Builder addVGSNGameRoomBaseInfos(int i, SNGGameRoomBaseInfo sNGGameRoomBaseInfo);

            public final native Builder addVGSNGameRoomBaseInfos(Builder builder);

            public final native Builder addVGSNGameRoomBaseInfos(SNGGameRoomBaseInfo sNGGameRoomBaseInfo);

            public final native Builder addVGSNGameRoomBaseInfosBuilder();

            public final native Builder addVGSNGameRoomBaseInfosBuilder(int i);

            public final native Builder addVGameRoomBaseInfos(int i, Builder builder);

            public final native Builder addVGameRoomBaseInfos(int i, GameRoomBaseInfo gameRoomBaseInfo);

            public final native Builder addVGameRoomBaseInfos(Builder builder);

            public final native Builder addVGameRoomBaseInfos(GameRoomBaseInfo gameRoomBaseInfo);

            public final native Builder addVGameRoomBaseInfosBuilder();

            public final native Builder addVGameRoomBaseInfosBuilder(int i);

            public final native Builder addVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet);

            public final native Builder addVUserBaseInfos(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUserBaseInfos(UserBaseInfoNet userBaseInfoNet);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUserBaseInfosBuilder(int i);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6417build();

            public final native ChatRoomInfo m6418build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6419buildPartial();

            public final native ChatRoomInfo m6420buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6421clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6422clear();

            public final native Builder m6423clear();

            public final native Builder clearStChatRoomBaseInfo();

            public final native Builder clearVGSNGameRoomBaseInfos();

            public final native Builder clearVGameRoomBaseInfos();

            public final native Builder clearVUserBaseInfos();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6424clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6425clone();

            public final native Builder m6426clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6427getDefaultInstanceForType();

            public final native ChatRoomInfo m6428getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ChatRoomBaseInfo getStChatRoomBaseInfo();

            public final native Builder getStChatRoomBaseInfoBuilder();

            public final native ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder();

            public final native SNGGameRoomBaseInfo getVGSNGameRoomBaseInfos(int i);

            public final native Builder getVGSNGameRoomBaseInfosBuilder(int i);

            public final native List<Builder> getVGSNGameRoomBaseInfosBuilderList();

            public final native int getVGSNGameRoomBaseInfosCount();

            public final native List<SNGGameRoomBaseInfo> getVGSNGameRoomBaseInfosList();

            public final native SNGGameRoomBaseInfoOrBuilder getVGSNGameRoomBaseInfosOrBuilder(int i);

            public final native List<? extends SNGGameRoomBaseInfoOrBuilder> getVGSNGameRoomBaseInfosOrBuilderList();

            public final native GameRoomBaseInfo getVGameRoomBaseInfos(int i);

            public final native Builder getVGameRoomBaseInfosBuilder(int i);

            public final native List<Builder> getVGameRoomBaseInfosBuilderList();

            public final native int getVGameRoomBaseInfosCount();

            public final native List<GameRoomBaseInfo> getVGameRoomBaseInfosList();

            public final native GameRoomBaseInfoOrBuilder getVGameRoomBaseInfosOrBuilder(int i);

            public final native List<? extends GameRoomBaseInfoOrBuilder> getVGameRoomBaseInfosOrBuilderList();

            public final native UserBaseInfoNet getVUserBaseInfos(int i);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUserBaseInfosBuilder(int i);

            public final native List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUserBaseInfosBuilderList();

            public final native int getVUserBaseInfosCount();

            public final native List<UserBaseInfoNet> getVUserBaseInfosList();

            public final native UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i);

            public final native List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList();

            public final native boolean hasStChatRoomBaseInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6429mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6430mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6431mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6432mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6433mergeFrom(Message message);

            public final native Builder mergeFrom(ChatRoomInfo chatRoomInfo);

            public final native Builder mergeStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo);

            public final native Builder removeVGSNGameRoomBaseInfos(int i);

            public final native Builder removeVGameRoomBaseInfos(int i);

            public final native Builder removeVUserBaseInfos(int i);

            public final native Builder setStChatRoomBaseInfo(Builder builder);

            public final native Builder setStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo);

            public final native Builder setVGSNGameRoomBaseInfos(int i, Builder builder);

            public final native Builder setVGSNGameRoomBaseInfos(int i, SNGGameRoomBaseInfo sNGGameRoomBaseInfo);

            public final native Builder setVGameRoomBaseInfos(int i, Builder builder);

            public final native Builder setVGameRoomBaseInfos(int i, GameRoomBaseInfo gameRoomBaseInfo);

            public final native Builder setVUserBaseInfos(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setVUserBaseInfos(int i, UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.ay;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private ChatRoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChatRoomInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChatRoomInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final ChatRoomInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChatRoomInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int i = 0;
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STCHATROOMBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stChatRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) codedInputStream.readMessage(ChatRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stChatRoomBaseInfo_);
                                this.stChatRoomBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STCHATROOMBASEINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            if ((i & VUSERBASEINFOS_FIELD_NUMBER) != VUSERBASEINFOS_FIELD_NUMBER) {
                                this.vUserBaseInfos_ = new ArrayList();
                                i |= VUSERBASEINFOS_FIELD_NUMBER;
                            }
                            this.vUserBaseInfos_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            if ((i & VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) != VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) {
                                this.vGameRoomBaseInfos_ = new ArrayList();
                                i |= VGSNGAMEROOMBASEINFOS_FIELD_NUMBER;
                            }
                            this.vGameRoomBaseInfos_.add((GameRoomBaseInfo) codedInputStream.readMessage(GameRoomBaseInfo.PARSER, extensionRegistryLite));
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            if ((i & 8) != 8) {
                                this.vGSNGameRoomBaseInfos_ = new ArrayList();
                                i |= 8;
                            }
                            this.vGSNGameRoomBaseInfos_.add((SNGGameRoomBaseInfo) codedInputStream.readMessage(SNGGameRoomBaseInfo.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STCHATROOMBASEINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VUSERBASEINFOS_FIELD_NUMBER) == VUSERBASEINFOS_FIELD_NUMBER) {
                        this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
                    }
                    if ((i & VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) == VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) {
                        this.vGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGameRoomBaseInfos_);
                    }
                    if ((i & 8) == 8) {
                        this.vGSNGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGSNGameRoomBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VUSERBASEINFOS_FIELD_NUMBER) == VUSERBASEINFOS_FIELD_NUMBER) {
                this.vUserBaseInfos_ = Collections.unmodifiableList(this.vUserBaseInfos_);
            }
            if ((i & VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) == VGSNGAMEROOMBASEINFOS_FIELD_NUMBER) {
                this.vGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGameRoomBaseInfos_);
            }
            if ((i & 8) == 8) {
                this.vGSNGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGSNGameRoomBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ay;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.az.ensureFieldAccessorsInitialized(ChatRoomInfo.class, Builder.class);
        }

        static {
            PARSER = new C12191();
            ChatRoomInfo chatRoomInfo = new ChatRoomInfo(true);
            defaultInstance = chatRoomInfo;
            chatRoomInfo.initFields();
        }

        public final Parser<ChatRoomInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasStChatRoomBaseInfo() {
            return (this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER;
        }

        public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
            return this.stChatRoomBaseInfo_;
        }

        public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
            return this.stChatRoomBaseInfo_;
        }

        public final List<UserBaseInfoNet> getVUserBaseInfosList() {
            return this.vUserBaseInfos_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUserBaseInfosOrBuilderList() {
            return this.vUserBaseInfos_;
        }

        public final int getVUserBaseInfosCount() {
            return this.vUserBaseInfos_.size();
        }

        public final UserBaseInfoNet getVUserBaseInfos(int i) {
            return (UserBaseInfoNet) this.vUserBaseInfos_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUserBaseInfosOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUserBaseInfos_.get(i);
        }

        public final List<GameRoomBaseInfo> getVGameRoomBaseInfosList() {
            return this.vGameRoomBaseInfos_;
        }

        public final List<? extends GameRoomBaseInfoOrBuilder> getVGameRoomBaseInfosOrBuilderList() {
            return this.vGameRoomBaseInfos_;
        }

        public final int getVGameRoomBaseInfosCount() {
            return this.vGameRoomBaseInfos_.size();
        }

        public final GameRoomBaseInfo getVGameRoomBaseInfos(int i) {
            return (GameRoomBaseInfo) this.vGameRoomBaseInfos_.get(i);
        }

        public final GameRoomBaseInfoOrBuilder getVGameRoomBaseInfosOrBuilder(int i) {
            return (GameRoomBaseInfoOrBuilder) this.vGameRoomBaseInfos_.get(i);
        }

        public final List<SNGGameRoomBaseInfo> getVGSNGameRoomBaseInfosList() {
            return this.vGSNGameRoomBaseInfos_;
        }

        public final List<? extends SNGGameRoomBaseInfoOrBuilder> getVGSNGameRoomBaseInfosOrBuilderList() {
            return this.vGSNGameRoomBaseInfos_;
        }

        public final int getVGSNGameRoomBaseInfosCount() {
            return this.vGSNGameRoomBaseInfos_.size();
        }

        public final SNGGameRoomBaseInfo getVGSNGameRoomBaseInfos(int i) {
            return (SNGGameRoomBaseInfo) this.vGSNGameRoomBaseInfos_.get(i);
        }

        public final SNGGameRoomBaseInfoOrBuilder getVGSNGameRoomBaseInfosOrBuilder(int i) {
            return (SNGGameRoomBaseInfoOrBuilder) this.vGSNGameRoomBaseInfos_.get(i);
        }

        private void initFields() {
            this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
            this.vUserBaseInfos_ = Collections.emptyList();
            this.vGameRoomBaseInfos_ = Collections.emptyList();
            this.vGSNGameRoomBaseInfos_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStChatRoomBaseInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStChatRoomBaseInfo().isInitialized()) {
                int i = 0;
                while (i < getVUserBaseInfosCount()) {
                    if (getVUserBaseInfos(i).isInitialized()) {
                        i += STCHATROOMBASEINFO_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                i = 0;
                while (i < getVGameRoomBaseInfosCount()) {
                    if (getVGameRoomBaseInfos(i).isInitialized()) {
                        i += STCHATROOMBASEINFO_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                i = 0;
                while (i < getVGSNGameRoomBaseInfosCount()) {
                    if (getVGSNGameRoomBaseInfos(i).isInitialized()) {
                        i += STCHATROOMBASEINFO_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i;
            int i2 = 0;
            getSerializedSize();
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            for (i = 0; i < this.vUserBaseInfos_.size(); i += STCHATROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i));
            }
            for (i = 0; i < this.vGameRoomBaseInfos_.size(); i += STCHATROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGameRoomBaseInfos_.get(i));
            }
            while (i2 < this.vGSNGameRoomBaseInfos_.size()) {
                codedOutputStream.writeMessage(VGSNGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGSNGameRoomBaseInfos_.get(i2));
                i2 += STCHATROOMBASEINFO_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int i3;
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeMessageSize(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_) + 0;
            } else {
                i2 = 0;
            }
            int i4 = i2;
            for (i3 = 0; i3 < this.vUserBaseInfos_.size(); i3 += STCHATROOMBASEINFO_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeMessageSize(VUSERBASEINFOS_FIELD_NUMBER, (MessageLite) this.vUserBaseInfos_.get(i3));
            }
            for (i3 = 0; i3 < this.vGameRoomBaseInfos_.size(); i3 += STCHATROOMBASEINFO_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeMessageSize(VGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGameRoomBaseInfos_.get(i3));
            }
            while (i < this.vGSNGameRoomBaseInfos_.size()) {
                i4 += CodedOutputStream.computeMessageSize(VGSNGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGSNGameRoomBaseInfos_.get(i));
                i += STCHATROOMBASEINFO_FIELD_NUMBER;
            }
            i2 = getUnknownFields().getSerializedSize() + i4;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static ChatRoomInfo parseFrom(ByteString byteString) {
            return (ChatRoomInfo) PARSER.parseFrom(byteString);
        }

        public static ChatRoomInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ChatRoomInfo parseFrom(byte[] bArr) {
            return (ChatRoomInfo) PARSER.parseFrom(bArr);
        }

        public static ChatRoomInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ChatRoomInfo parseFrom(InputStream inputStream) {
            return (ChatRoomInfo) PARSER.parseFrom(inputStream);
        }

        public static ChatRoomInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomInfo parseDelimitedFrom(InputStream inputStream) {
            return (ChatRoomInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static ChatRoomInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomInfo parseFrom(CodedInputStream codedInputStream) {
            return (ChatRoomInfo) PARSER.parseFrom(codedInputStream);
        }

        public static ChatRoomInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChatRoomInfo chatRoomInfo) {
            return newBuilder().mergeFrom(chatRoomInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface ChatRoomPushMsgOrBuilder extends MessageOrBuilder {
        CHAT_ROOM_MESSAGE_TYPE getEGameMessageType();

        long getLCreateTime();

        long getLMsgID();

        long getLRoomID();

        String getSMsg();

        ByteString getSMsgBytes();

        ChatRoomBaseInfo getStChatRoomBaseInfo();

        ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder();

        UserBaseInfoNet getStFromUser();

        UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

        UserBaseInfoNet getVUsers(int i);

        int getVUsersCount();

        List<UserBaseInfoNet> getVUsersList();

        UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList();

        boolean hasEGameMessageType();

        boolean hasLCreateTime();

        boolean hasLMsgID();

        boolean hasLRoomID();

        boolean hasSMsg();

        boolean hasStChatRoomBaseInfo();

        boolean hasStFromUser();
    }

    public static final class ChatRoomPushMsg extends GeneratedMessage implements ChatRoomPushMsgOrBuilder {
        public static final int EGAMEMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int LCREATETIME_FIELD_NUMBER = 4;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static final int LROOMID_FIELD_NUMBER = 5;
        public static Parser<ChatRoomPushMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 3;
        public static final int STCHATROOMBASEINFO_FIELD_NUMBER = 8;
        public static final int STFROMUSER_FIELD_NUMBER = 6;
        public static final int VUSERS_FIELD_NUMBER = 7;
        private static final ChatRoomPushMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private CHAT_ROOM_MESSAGE_TYPE eGameMessageType_;
        private long lCreateTime_;
        private long lMsgID_;
        private long lRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private ChatRoomBaseInfo stChatRoomBaseInfo_;
        private UserBaseInfoNet stFromUser_;
        private final UnknownFieldSet unknownFields;
        private List<UserBaseInfoNet> vUsers_;

        /* renamed from: com.texaspoker.moment.TexasPoker.ChatRoomPushMsg.1 */
        class C12201 extends AbstractParser<ChatRoomPushMsg> {
            C12201() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new ChatRoomPushMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements ChatRoomPushMsgOrBuilder {
            private int bitField0_;
            private CHAT_ROOM_MESSAGE_TYPE eGameMessageType_;
            private long lCreateTime_;
            private long lMsgID_;
            private long lRoomID_;
            private Object sMsg_;
            private SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> stChatRoomBaseInfoBuilder_;
            private ChatRoomBaseInfo stChatRoomBaseInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stFromUserBuilder_;
            private UserBaseInfoNet stFromUser_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUsersBuilder_;
            private List<UserBaseInfoNet> vUsers_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eZ.ensureFieldAccessorsInitialized(ChatRoomPushMsg.class, Builder.class);
            }

            private Builder() {
                this.eGameMessageType_ = CHAT_ROOM_MESSAGE_TYPE.CHAT_ROOM_MESSAGE_INVITE;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.vUsers_ = Collections.emptyList();
                this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eGameMessageType_ = CHAT_ROOM_MESSAGE_TYPE.CHAT_ROOM_MESSAGE_INVITE;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.vUsers_ = Collections.emptyList();
                this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (ChatRoomPushMsg.alwaysUseFieldBuilders) {
                    getStFromUserFieldBuilder();
                    getVUsersFieldBuilder();
                    getStChatRoomBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lMsgID_ = 0;
                this.bitField0_ &= -2;
                this.eGameMessageType_ = CHAT_ROOM_MESSAGE_TYPE.CHAT_ROOM_MESSAGE_INVITE;
                this.bitField0_ &= -3;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.lCreateTime_ = 0;
                this.bitField0_ &= -9;
                this.lRoomID_ = 0;
                this.bitField0_ &= -17;
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -33;
                if (this.vUsersBuilder_ == null) {
                    this.vUsers_ = Collections.emptyList();
                    this.bitField0_ &= -65;
                } else {
                    this.vUsersBuilder_.clear();
                }
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stChatRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eY;
            }

            public final ChatRoomPushMsg getDefaultInstanceForType() {
                return ChatRoomPushMsg.getDefaultInstance();
            }

            public final ChatRoomPushMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final ChatRoomPushMsg buildPartial() {
                int i;
                int i2 = ChatRoomPushMsg.LMSGID_FIELD_NUMBER;
                ChatRoomPushMsg chatRoomPushMsg = new ChatRoomPushMsg(null);
                int i3 = this.bitField0_;
                if ((i3 & ChatRoomPushMsg.LMSGID_FIELD_NUMBER) != ChatRoomPushMsg.LMSGID_FIELD_NUMBER) {
                    i2 = 0;
                }
                chatRoomPushMsg.lMsgID_ = this.lMsgID_;
                if ((i3 & ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) == ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
                }
                chatRoomPushMsg.eGameMessageType_ = this.eGameMessageType_;
                if ((i3 & ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER) == ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER) {
                    i2 |= ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER;
                }
                chatRoomPushMsg.sMsg_ = this.sMsg_;
                if ((i3 & ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER) == ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER) {
                    i2 |= ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER;
                }
                chatRoomPushMsg.lCreateTime_ = this.lCreateTime_;
                if ((i3 & 16) == 16) {
                    i2 |= 16;
                }
                chatRoomPushMsg.lRoomID_ = this.lRoomID_;
                if ((i3 & 32) == 32) {
                    i = i2 | 32;
                } else {
                    i = i2;
                }
                if (this.stFromUserBuilder_ == null) {
                    chatRoomPushMsg.stFromUser_ = this.stFromUser_;
                } else {
                    chatRoomPushMsg.stFromUser_ = (UserBaseInfoNet) this.stFromUserBuilder_.build();
                }
                if (this.vUsersBuilder_ == null) {
                    if ((this.bitField0_ & 64) == 64) {
                        this.vUsers_ = Collections.unmodifiableList(this.vUsers_);
                        this.bitField0_ &= -65;
                    }
                    chatRoomPushMsg.vUsers_ = this.vUsers_;
                } else {
                    chatRoomPushMsg.vUsers_ = this.vUsersBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= 64;
                }
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    chatRoomPushMsg.stChatRoomBaseInfo_ = this.stChatRoomBaseInfo_;
                } else {
                    chatRoomPushMsg.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) this.stChatRoomBaseInfoBuilder_.build();
                }
                chatRoomPushMsg.bitField0_ = i;
                onBuilt();
                return chatRoomPushMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof ChatRoomPushMsg) {
                    return mergeFrom((ChatRoomPushMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(ChatRoomPushMsg chatRoomPushMsg) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (chatRoomPushMsg != ChatRoomPushMsg.getDefaultInstance()) {
                    if (chatRoomPushMsg.hasLMsgID()) {
                        setLMsgID(chatRoomPushMsg.getLMsgID());
                    }
                    if (chatRoomPushMsg.hasEGameMessageType()) {
                        setEGameMessageType(chatRoomPushMsg.getEGameMessageType());
                    }
                    if (chatRoomPushMsg.hasSMsg()) {
                        this.bitField0_ |= ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER;
                        this.sMsg_ = chatRoomPushMsg.sMsg_;
                        onChanged();
                    }
                    if (chatRoomPushMsg.hasLCreateTime()) {
                        setLCreateTime(chatRoomPushMsg.getLCreateTime());
                    }
                    if (chatRoomPushMsg.hasLRoomID()) {
                        setLRoomID(chatRoomPushMsg.getLRoomID());
                    }
                    if (chatRoomPushMsg.hasStFromUser()) {
                        mergeStFromUser(chatRoomPushMsg.getStFromUser());
                    }
                    if (this.vUsersBuilder_ == null) {
                        if (!chatRoomPushMsg.vUsers_.isEmpty()) {
                            if (this.vUsers_.isEmpty()) {
                                this.vUsers_ = chatRoomPushMsg.vUsers_;
                                this.bitField0_ &= -65;
                            } else {
                                ensureVUsersIsMutable();
                                this.vUsers_.addAll(chatRoomPushMsg.vUsers_);
                            }
                            onChanged();
                        }
                    } else if (!chatRoomPushMsg.vUsers_.isEmpty()) {
                        if (this.vUsersBuilder_.isEmpty()) {
                            this.vUsersBuilder_.dispose();
                            this.vUsersBuilder_ = null;
                            this.vUsers_ = chatRoomPushMsg.vUsers_;
                            this.bitField0_ &= -65;
                            if (ChatRoomPushMsg.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVUsersFieldBuilder();
                            }
                            this.vUsersBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vUsersBuilder_.addAllMessages(chatRoomPushMsg.vUsers_);
                        }
                    }
                    if (chatRoomPushMsg.hasStChatRoomBaseInfo()) {
                        mergeStChatRoomBaseInfo(chatRoomPushMsg.getStChatRoomBaseInfo());
                    }
                    mergeUnknownFields(chatRoomPushMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLMsgID() || !hasEGameMessageType() || !hasSMsg() || !hasLCreateTime()) {
                    return false;
                }
                if (hasStFromUser() && !getStFromUser().isInitialized()) {
                    return false;
                }
                for (int i = 0; i < getVUsersCount(); i += ChatRoomPushMsg.LMSGID_FIELD_NUMBER) {
                    if (!getVUsers(i).isInitialized()) {
                        return false;
                    }
                }
                if (!hasStChatRoomBaseInfo() || getStChatRoomBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.ChatRoomPushMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.ChatRoomPushMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.ChatRoomPushMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.ChatRoomPushMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.ChatRoomPushMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$ChatRoomPushMsg$Builder");
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & ChatRoomPushMsg.LMSGID_FIELD_NUMBER) == ChatRoomPushMsg.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= ChatRoomPushMsg.LMSGID_FIELD_NUMBER;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -2;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameMessageType() {
                return (this.bitField0_ & ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) == ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
            }

            public final CHAT_ROOM_MESSAGE_TYPE getEGameMessageType() {
                return this.eGameMessageType_;
            }

            public final Builder setEGameMessageType(CHAT_ROOM_MESSAGE_TYPE chat_room_message_type) {
                if (chat_room_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
                this.eGameMessageType_ = chat_room_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameMessageType() {
                this.bitField0_ &= -3;
                this.eGameMessageType_ = CHAT_ROOM_MESSAGE_TYPE.CHAT_ROOM_MESSAGE_INVITE;
                onChanged();
                return this;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER) == ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -5;
                this.sMsg_ = ChatRoomPushMsg.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ChatRoomPushMsg.LCREATETIME_FIELD_NUMBER;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLCreateTime() {
                return (this.bitField0_ & ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER) == ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER;
            }

            public final long getLCreateTime() {
                return this.lCreateTime_;
            }

            public final Builder setLCreateTime(long j) {
                this.bitField0_ |= ChatRoomPushMsg.STCHATROOMBASEINFO_FIELD_NUMBER;
                this.lCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateTime() {
                this.bitField0_ &= -9;
                this.lCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= 16;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -17;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStFromUser() {
                return (this.bitField0_ & 32) == 32;
            }

            public final UserBaseInfoNet getStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    return this.stFromUser_;
                }
                return (UserBaseInfoNet) this.stFromUserBuilder_.getMessage();
            }

            public final Builder setStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ != null) {
                    this.stFromUserBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stFromUser_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder setStFromUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = builder.build();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder mergeStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ == null) {
                    if ((this.bitField0_ & 32) != 32 || this.stFromUser_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stFromUser_ = userBaseInfoNet;
                    } else {
                        this.stFromUser_ = UserBaseInfoNet.newBuilder(this.stFromUser_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stFromUserBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder clearStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStFromUserBuilder() {
                this.bitField0_ |= 32;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStFromUserFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
                if (this.stFromUserBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stFromUserBuilder_.getMessageOrBuilder();
                }
                return this.stFromUser_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStFromUserFieldBuilder() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUserBuilder_ = new SingleFieldBuilder(getStFromUser(), getParentForChildren(), isClean());
                    this.stFromUser_ = null;
                }
                return this.stFromUserBuilder_;
            }

            private void ensureVUsersIsMutable() {
                if ((this.bitField0_ & 64) != 64) {
                    this.vUsers_ = new ArrayList(this.vUsers_);
                    this.bitField0_ |= 64;
                }
            }

            public final List<UserBaseInfoNet> getVUsersList() {
                if (this.vUsersBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUsers_);
                }
                return this.vUsersBuilder_.getMessageList();
            }

            public final int getVUsersCount() {
                if (this.vUsersBuilder_ == null) {
                    return this.vUsers_.size();
                }
                return this.vUsersBuilder_.getCount();
            }

            public final UserBaseInfoNet getVUsers(int i) {
                if (this.vUsersBuilder_ == null) {
                    return (UserBaseInfoNet) this.vUsers_.get(i);
                }
                return (UserBaseInfoNet) this.vUsersBuilder_.getMessage(i);
            }

            public final Builder setVUsers(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUsersBuilder_ != null) {
                    this.vUsersBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUsersIsMutable();
                    this.vUsers_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUsers(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUsersBuilder_ == null) {
                    ensureVUsersIsMutable();
                    this.vUsers_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUsersBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUsers(UserBaseInfoNet userBaseInfoNet) {
                if (this.vUsersBuilder_ != null) {
                    this.vUsersBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUsersIsMutable();
                    this.vUsers_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUsers(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.vUsersBuilder_ != null) {
                    this.vUsersBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUsersIsMutable();
                    this.vUsers_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUsers(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUsersBuilder_ == null) {
                    ensureVUsersIsMutable();
                    this.vUsers_.add(builder.build());
                    onChanged();
                } else {
                    this.vUsersBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUsers(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.vUsersBuilder_ == null) {
                    ensureVUsersIsMutable();
                    this.vUsers_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUsersBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUsers(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.vUsersBuilder_ == null) {
                    ensureVUsersIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUsers_);
                    onChanged();
                } else {
                    this.vUsersBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUsers() {
                if (this.vUsersBuilder_ == null) {
                    this.vUsers_ = Collections.emptyList();
                    this.bitField0_ &= -65;
                    onChanged();
                } else {
                    this.vUsersBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUsers(int i) {
                if (this.vUsersBuilder_ == null) {
                    ensureVUsersIsMutable();
                    this.vUsers_.remove(i);
                    onChanged();
                } else {
                    this.vUsersBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUsersBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUsersFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i) {
                if (this.vUsersBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.vUsers_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.vUsersBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList() {
                if (this.vUsersBuilder_ != null) {
                    return this.vUsersBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUsers_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUsersBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUsersFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUsersBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getVUsersFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUsersBuilderList() {
                return getVUsersFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUsersFieldBuilder() {
                if (this.vUsersBuilder_ == null) {
                    this.vUsersBuilder_ = new RepeatedFieldBuilder(this.vUsers_, (this.bitField0_ & 64) == 64, getParentForChildren(), isClean());
                    this.vUsers_ = null;
                }
                return this.vUsersBuilder_;
            }

            public final boolean hasStChatRoomBaseInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    return this.stChatRoomBaseInfo_;
                }
                return (ChatRoomBaseInfo) this.stChatRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo) {
                if (this.stChatRoomBaseInfoBuilder_ != null) {
                    this.stChatRoomBaseInfoBuilder_.setMessage(chatRoomBaseInfo);
                } else if (chatRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stChatRoomBaseInfo_ = chatRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder setStChatRoomBaseInfo(Builder builder) {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder mergeStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo) {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) != AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS || this.stChatRoomBaseInfo_ == ChatRoomBaseInfo.getDefaultInstance()) {
                        this.stChatRoomBaseInfo_ = chatRoomBaseInfo;
                    } else {
                        this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.newBuilder(this.stChatRoomBaseInfo_).mergeFrom(chatRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.mergeFrom(chatRoomBaseInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder clearStChatRoomBaseInfo() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder getStChatRoomBaseInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                onChanged();
                return (Builder) getStChatRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
                if (this.stChatRoomBaseInfoBuilder_ != null) {
                    return (ChatRoomBaseInfoOrBuilder) this.stChatRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stChatRoomBaseInfo_;
            }

            private SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> getStChatRoomBaseInfoFieldBuilder() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStChatRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stChatRoomBaseInfo_ = null;
                }
                return this.stChatRoomBaseInfoBuilder_;
            }
        }

        private ChatRoomPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private ChatRoomPushMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static ChatRoomPushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final ChatRoomPushMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ChatRoomPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LMSGID_FIELD_NUMBER;
                            break;
                        case STCHATROOMBASEINFO_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_ROOM_MESSAGE_TYPE valueOf = CHAT_ROOM_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EGAMEMESSAGETYPE_FIELD_NUMBER;
                                this.eGameMessageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= LCREATETIME_FIELD_NUMBER;
                            this.sMsg_ = readBytes;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= STCHATROOMBASEINFO_FIELD_NUMBER;
                            this.lCreateTime_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & 32) == 32) {
                                toBuilder = this.stFromUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stFromUser_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stFromUser_);
                                this.stFromUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= 32;
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            if ((i & 64) != 64) {
                                this.vUsers_ = new ArrayList();
                                i |= 64;
                            }
                            this.vUsers_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 64) == 64) {
                                toBuilder2 = this.stChatRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) codedInputStream.readMessage(ChatRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stChatRoomBaseInfo_);
                                this.stChatRoomBaseInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 64;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LMSGID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & 64) == 64) {
                        this.vUsers_ = Collections.unmodifiableList(this.vUsers_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & 64) == 64) {
                this.vUsers_ = Collections.unmodifiableList(this.vUsers_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eY;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eZ.ensureFieldAccessorsInitialized(ChatRoomPushMsg.class, Builder.class);
        }

        static {
            PARSER = new C12201();
            ChatRoomPushMsg chatRoomPushMsg = new ChatRoomPushMsg(true);
            defaultInstance = chatRoomPushMsg;
            chatRoomPushMsg.initFields();
        }

        public final Parser<ChatRoomPushMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasEGameMessageType() {
            return (this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER;
        }

        public final CHAT_ROOM_MESSAGE_TYPE getEGameMessageType() {
            return this.eGameMessageType_;
        }

        public final boolean hasSMsg() {
            return (this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER;
        }

        public final String getSMsg() {
            Object obj = this.sMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSMsgBytes() {
            Object obj = this.sMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLCreateTime() {
            return (this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER;
        }

        public final long getLCreateTime() {
            return this.lCreateTime_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasStFromUser() {
            return (this.bitField0_ & 32) == 32;
        }

        public final UserBaseInfoNet getStFromUser() {
            return this.stFromUser_;
        }

        public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
            return this.stFromUser_;
        }

        public final List<UserBaseInfoNet> getVUsersList() {
            return this.vUsers_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList() {
            return this.vUsers_;
        }

        public final int getVUsersCount() {
            return this.vUsers_.size();
        }

        public final UserBaseInfoNet getVUsers(int i) {
            return (UserBaseInfoNet) this.vUsers_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUsers_.get(i);
        }

        public final boolean hasStChatRoomBaseInfo() {
            return (this.bitField0_ & 64) == 64;
        }

        public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
            return this.stChatRoomBaseInfo_;
        }

        public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
            return this.stChatRoomBaseInfo_;
        }

        private void initFields() {
            this.lMsgID_ = 0;
            this.eGameMessageType_ = CHAT_ROOM_MESSAGE_TYPE.CHAT_ROOM_MESSAGE_INVITE;
            this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lCreateTime_ = 0;
            this.lRoomID_ = 0;
            this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
            this.vUsers_ = Collections.emptyList();
            this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLMsgID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEGameMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSMsg()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStFromUser() || getStFromUser().isInitialized()) {
                int i = 0;
                while (i < getVUsersCount()) {
                    if (getVUsers(i).isInitialized()) {
                        i += LMSGID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                if (!hasStChatRoomBaseInfo() || getStChatRoomBaseInfo().isInitialized()) {
                    this.memoizedIsInitialized = (byte) 1;
                    return true;
                }
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EGAMEMESSAGETYPE_FIELD_NUMBER, this.eGameMessageType_.getNumber());
            }
            if ((this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeMessage(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            for (int i = 0; i < this.vUsers_.size(); i += LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERS_FIELD_NUMBER, (MessageLite) this.vUsers_.get(i));
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeMessage(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(EGAMEMESSAGETYPE_FIELD_NUMBER, this.eGameMessageType_.getNumber());
            }
            if ((this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeBytesSize(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeMessageSize(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            int i3 = i2;
            while (i < this.vUsers_.size()) {
                i += LMSGID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERS_FIELD_NUMBER, (MessageLite) this.vUsers_.get(i)) + i3;
            }
            if ((this.bitField0_ & 64) == 64) {
                i3 += CodedOutputStream.computeMessageSize(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static ChatRoomPushMsg parseFrom(ByteString byteString) {
            return (ChatRoomPushMsg) PARSER.parseFrom(byteString);
        }

        public static ChatRoomPushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomPushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ChatRoomPushMsg parseFrom(byte[] bArr) {
            return (ChatRoomPushMsg) PARSER.parseFrom(bArr);
        }

        public static ChatRoomPushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomPushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ChatRoomPushMsg parseFrom(InputStream inputStream) {
            return (ChatRoomPushMsg) PARSER.parseFrom(inputStream);
        }

        public static ChatRoomPushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomPushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomPushMsg parseDelimitedFrom(InputStream inputStream) {
            return (ChatRoomPushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static ChatRoomPushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomPushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static ChatRoomPushMsg parseFrom(CodedInputStream codedInputStream) {
            return (ChatRoomPushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static ChatRoomPushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ChatRoomPushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ChatRoomPushMsg chatRoomPushMsg) {
            return newBuilder().mergeFrom(chatRoomPushMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface ClubPushMsgOrBuilder extends MessageOrBuilder {
        CLUB_MESSAGE_TYPE getEClubMessageType();

        long getLCreateTime();

        long getLFund();

        long getLMsgID();

        String getSMsg();

        ByteString getSMsgBytes();

        ClubBaseInfo getStClubBaseInfo();

        ClubBaseInfoOrBuilder getStClubBaseInfoOrBuilder();

        UserBaseInfoNet getStFromUser();

        UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

        UserBaseInfoNet getStToUser();

        UserBaseInfoNetOrBuilder getStToUserOrBuilder();

        boolean hasEClubMessageType();

        boolean hasLCreateTime();

        boolean hasLFund();

        boolean hasLMsgID();

        boolean hasSMsg();

        boolean hasStClubBaseInfo();

        boolean hasStFromUser();

        boolean hasStToUser();
    }

    public static final class ClubPushMsg extends GeneratedMessage implements ClubPushMsgOrBuilder {
        public static final int ECLUBMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int LCREATETIME_FIELD_NUMBER = 7;
        public static final int LFUND_FIELD_NUMBER = 8;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static Parser<ClubPushMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 6;
        public static final int STCLUBBASEINFO_FIELD_NUMBER = 5;
        public static final int STFROMUSER_FIELD_NUMBER = 3;
        public static final int STTOUSER_FIELD_NUMBER = 4;
        private static final ClubPushMsg defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private CLUB_MESSAGE_TYPE eClubMessageType_;
        private long lCreateTime_;
        private long lFund_;
        private long lMsgID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private ClubBaseInfo stClubBaseInfo_;
        private UserBaseInfoNet stFromUser_;
        private UserBaseInfoNet stToUser_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.ClubPushMsg.1 */
        class C12211 extends AbstractParser<ClubPushMsg> {
            C12211() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new ClubPushMsg(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements ClubPushMsgOrBuilder {
            private int bitField0_;
            private CLUB_MESSAGE_TYPE eClubMessageType_;
            private long lCreateTime_;
            private long lFund_;
            private long lMsgID_;
            private Object sMsg_;
            private SingleFieldBuilder<ClubBaseInfo, com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder, ClubBaseInfoOrBuilder> stClubBaseInfoBuilder_;
            private ClubBaseInfo stClubBaseInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stFromUserBuilder_;
            private UserBaseInfoNet stFromUser_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stToUserBuilder_;
            private UserBaseInfoNet stToUser_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fu;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fv.ensureFieldAccessorsInitialized(ClubPushMsg.class, Builder.class);
            }

            private Builder() {
                this.eClubMessageType_ = CLUB_MESSAGE_TYPE.CLUB_MESSAGE_APPLY;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stClubBaseInfo_ = ClubBaseInfo.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eClubMessageType_ = CLUB_MESSAGE_TYPE.CLUB_MESSAGE_APPLY;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stClubBaseInfo_ = ClubBaseInfo.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (ClubPushMsg.alwaysUseFieldBuilders) {
                    getStFromUserFieldBuilder();
                    getStToUserFieldBuilder();
                    getStClubBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lMsgID_ = 0;
                this.bitField0_ &= -2;
                this.eClubMessageType_ = CLUB_MESSAGE_TYPE.CLUB_MESSAGE_APPLY;
                this.bitField0_ &= -3;
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -5;
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stToUserBuilder_.clear();
                }
                this.bitField0_ &= -9;
                if (this.stClubBaseInfoBuilder_ == null) {
                    this.stClubBaseInfo_ = ClubBaseInfo.getDefaultInstance();
                } else {
                    this.stClubBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                this.lCreateTime_ = 0;
                this.bitField0_ &= -65;
                this.lFund_ = 0;
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fu;
            }

            public final ClubPushMsg getDefaultInstanceForType() {
                return ClubPushMsg.getDefaultInstance();
            }

            public final ClubPushMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final ClubPushMsg buildPartial() {
                int i;
                int i2 = ClubPushMsg.LMSGID_FIELD_NUMBER;
                ClubPushMsg clubPushMsg = new ClubPushMsg((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i3 = this.bitField0_;
                if ((i3 & ClubPushMsg.LMSGID_FIELD_NUMBER) != ClubPushMsg.LMSGID_FIELD_NUMBER) {
                    i2 = 0;
                }
                clubPushMsg.lMsgID_ = this.lMsgID_;
                if ((i3 & ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER) == ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER;
                }
                clubPushMsg.eClubMessageType_ = this.eClubMessageType_;
                if ((i3 & ClubPushMsg.STTOUSER_FIELD_NUMBER) == ClubPushMsg.STTOUSER_FIELD_NUMBER) {
                    i = i2 | ClubPushMsg.STTOUSER_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stFromUserBuilder_ == null) {
                    clubPushMsg.stFromUser_ = this.stFromUser_;
                } else {
                    clubPushMsg.stFromUser_ = (UserBaseInfoNet) this.stFromUserBuilder_.build();
                }
                if ((i3 & ClubPushMsg.LFUND_FIELD_NUMBER) == ClubPushMsg.LFUND_FIELD_NUMBER) {
                    i |= ClubPushMsg.LFUND_FIELD_NUMBER;
                }
                if (this.stToUserBuilder_ == null) {
                    clubPushMsg.stToUser_ = this.stToUser_;
                } else {
                    clubPushMsg.stToUser_ = (UserBaseInfoNet) this.stToUserBuilder_.build();
                }
                if ((i3 & 16) == 16) {
                    i |= 16;
                }
                if (this.stClubBaseInfoBuilder_ == null) {
                    clubPushMsg.stClubBaseInfo_ = this.stClubBaseInfo_;
                } else {
                    clubPushMsg.stClubBaseInfo_ = (ClubBaseInfo) this.stClubBaseInfoBuilder_.build();
                }
                if ((i3 & 32) == 32) {
                    i |= 32;
                }
                clubPushMsg.sMsg_ = this.sMsg_;
                if ((i3 & 64) == 64) {
                    i |= 64;
                }
                clubPushMsg.lCreateTime_ = this.lCreateTime_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                clubPushMsg.lFund_ = this.lFund_;
                clubPushMsg.bitField0_ = i;
                onBuilt();
                return clubPushMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof ClubPushMsg) {
                    return mergeFrom((ClubPushMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(ClubPushMsg clubPushMsg) {
                if (clubPushMsg != ClubPushMsg.getDefaultInstance()) {
                    if (clubPushMsg.hasLMsgID()) {
                        setLMsgID(clubPushMsg.getLMsgID());
                    }
                    if (clubPushMsg.hasEClubMessageType()) {
                        setEClubMessageType(clubPushMsg.getEClubMessageType());
                    }
                    if (clubPushMsg.hasStFromUser()) {
                        mergeStFromUser(clubPushMsg.getStFromUser());
                    }
                    if (clubPushMsg.hasStToUser()) {
                        mergeStToUser(clubPushMsg.getStToUser());
                    }
                    if (clubPushMsg.hasStClubBaseInfo()) {
                        mergeStClubBaseInfo(clubPushMsg.getStClubBaseInfo());
                    }
                    if (clubPushMsg.hasSMsg()) {
                        this.bitField0_ |= 32;
                        this.sMsg_ = clubPushMsg.sMsg_;
                        onChanged();
                    }
                    if (clubPushMsg.hasLCreateTime()) {
                        setLCreateTime(clubPushMsg.getLCreateTime());
                    }
                    if (clubPushMsg.hasLFund()) {
                        setLFund(clubPushMsg.getLFund());
                    }
                    mergeUnknownFields(clubPushMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLMsgID() || !hasEClubMessageType() || !hasSMsg()) {
                    return false;
                }
                if (hasStFromUser() && !getStFromUser().isInitialized()) {
                    return false;
                }
                if (hasStToUser() && !getStToUser().isInitialized()) {
                    return false;
                }
                if (!hasStClubBaseInfo() || getStClubBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.ClubPushMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.ClubPushMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.ClubPushMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.ClubPushMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.ClubPushMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$ClubPushMsg$Builder");
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & ClubPushMsg.LMSGID_FIELD_NUMBER) == ClubPushMsg.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= ClubPushMsg.LMSGID_FIELD_NUMBER;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -2;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEClubMessageType() {
                return (this.bitField0_ & ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER) == ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER;
            }

            public final CLUB_MESSAGE_TYPE getEClubMessageType() {
                return this.eClubMessageType_;
            }

            public final Builder setEClubMessageType(CLUB_MESSAGE_TYPE club_message_type) {
                if (club_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= ClubPushMsg.ECLUBMESSAGETYPE_FIELD_NUMBER;
                this.eClubMessageType_ = club_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEClubMessageType() {
                this.bitField0_ &= -3;
                this.eClubMessageType_ = CLUB_MESSAGE_TYPE.CLUB_MESSAGE_APPLY;
                onChanged();
                return this;
            }

            public final boolean hasStFromUser() {
                return (this.bitField0_ & ClubPushMsg.STTOUSER_FIELD_NUMBER) == ClubPushMsg.STTOUSER_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    return this.stFromUser_;
                }
                return (UserBaseInfoNet) this.stFromUserBuilder_.getMessage();
            }

            public final Builder setStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ != null) {
                    this.stFromUserBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stFromUser_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= ClubPushMsg.STTOUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder setStFromUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = builder.build();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= ClubPushMsg.STTOUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ == null) {
                    if ((this.bitField0_ & ClubPushMsg.STTOUSER_FIELD_NUMBER) != ClubPushMsg.STTOUSER_FIELD_NUMBER || this.stFromUser_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stFromUser_ = userBaseInfoNet;
                    } else {
                        this.stFromUser_ = UserBaseInfoNet.newBuilder(this.stFromUser_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stFromUserBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= ClubPushMsg.STTOUSER_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStFromUserBuilder() {
                this.bitField0_ |= ClubPushMsg.STTOUSER_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStFromUserFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
                if (this.stFromUserBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stFromUserBuilder_.getMessageOrBuilder();
                }
                return this.stFromUser_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStFromUserFieldBuilder() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUserBuilder_ = new SingleFieldBuilder(getStFromUser(), getParentForChildren(), isClean());
                    this.stFromUser_ = null;
                }
                return this.stFromUserBuilder_;
            }

            public final boolean hasStToUser() {
                return (this.bitField0_ & ClubPushMsg.LFUND_FIELD_NUMBER) == ClubPushMsg.LFUND_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStToUser() {
                if (this.stToUserBuilder_ == null) {
                    return this.stToUser_;
                }
                return (UserBaseInfoNet) this.stToUserBuilder_.getMessage();
            }

            public final Builder setStToUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stToUserBuilder_ != null) {
                    this.stToUserBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stToUser_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= ClubPushMsg.LFUND_FIELD_NUMBER;
                return this;
            }

            public final Builder setStToUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = builder.build();
                    onChanged();
                } else {
                    this.stToUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= ClubPushMsg.LFUND_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStToUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stToUserBuilder_ == null) {
                    if ((this.bitField0_ & ClubPushMsg.LFUND_FIELD_NUMBER) != ClubPushMsg.LFUND_FIELD_NUMBER || this.stToUser_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stToUser_ = userBaseInfoNet;
                    } else {
                        this.stToUser_ = UserBaseInfoNet.newBuilder(this.stToUser_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stToUserBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= ClubPushMsg.LFUND_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStToUser() {
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stToUserBuilder_.clear();
                }
                this.bitField0_ &= -9;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStToUserBuilder() {
                this.bitField0_ |= ClubPushMsg.LFUND_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStToUserFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStToUserOrBuilder() {
                if (this.stToUserBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stToUserBuilder_.getMessageOrBuilder();
                }
                return this.stToUser_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStToUserFieldBuilder() {
                if (this.stToUserBuilder_ == null) {
                    this.stToUserBuilder_ = new SingleFieldBuilder(getStToUser(), getParentForChildren(), isClean());
                    this.stToUser_ = null;
                }
                return this.stToUserBuilder_;
            }

            public final boolean hasStClubBaseInfo() {
                return (this.bitField0_ & 16) == 16;
            }

            public final ClubBaseInfo getStClubBaseInfo() {
                if (this.stClubBaseInfoBuilder_ == null) {
                    return this.stClubBaseInfo_;
                }
                return (ClubBaseInfo) this.stClubBaseInfoBuilder_.getMessage();
            }

            public final Builder setStClubBaseInfo(ClubBaseInfo clubBaseInfo) {
                if (this.stClubBaseInfoBuilder_ != null) {
                    this.stClubBaseInfoBuilder_.setMessage(clubBaseInfo);
                } else if (clubBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stClubBaseInfo_ = clubBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder setStClubBaseInfo(com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder builder) {
                if (this.stClubBaseInfoBuilder_ == null) {
                    this.stClubBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stClubBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder mergeStClubBaseInfo(ClubBaseInfo clubBaseInfo) {
                if (this.stClubBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 16) != 16 || this.stClubBaseInfo_ == ClubBaseInfo.getDefaultInstance()) {
                        this.stClubBaseInfo_ = clubBaseInfo;
                    } else {
                        this.stClubBaseInfo_ = ClubBaseInfo.newBuilder(this.stClubBaseInfo_).mergeFrom(clubBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stClubBaseInfoBuilder_.mergeFrom(clubBaseInfo);
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder clearStClubBaseInfo() {
                if (this.stClubBaseInfoBuilder_ == null) {
                    this.stClubBaseInfo_ = ClubBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stClubBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder getStClubBaseInfoBuilder() {
                this.bitField0_ |= 16;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder) getStClubBaseInfoFieldBuilder().getBuilder();
            }

            public final ClubBaseInfoOrBuilder getStClubBaseInfoOrBuilder() {
                if (this.stClubBaseInfoBuilder_ != null) {
                    return (ClubBaseInfoOrBuilder) this.stClubBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stClubBaseInfo_;
            }

            private SingleFieldBuilder<ClubBaseInfo, com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder, ClubBaseInfoOrBuilder> getStClubBaseInfoFieldBuilder() {
                if (this.stClubBaseInfoBuilder_ == null) {
                    this.stClubBaseInfoBuilder_ = new SingleFieldBuilder(getStClubBaseInfo(), getParentForChildren(), isClean());
                    this.stClubBaseInfo_ = null;
                }
                return this.stClubBaseInfoBuilder_;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -33;
                this.sMsg_ = ClubPushMsg.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLCreateTime() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLCreateTime() {
                return this.lCreateTime_;
            }

            public final Builder setLCreateTime(long j) {
                this.bitField0_ |= 64;
                this.lCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateTime() {
                this.bitField0_ &= -65;
                this.lCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLFund() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLFund() {
                return this.lFund_;
            }

            public final Builder setLFund(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lFund_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLFund() {
                this.bitField0_ &= -129;
                this.lFund_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native ClubPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ ClubPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, ClubPushMsg clubPushMsg);

        private native ClubPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ ClubPushMsg(com.google.protobuf.GeneratedMessage.Builder builder, ClubPushMsg clubPushMsg);

        private native ClubPushMsg(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6434getDefaultInstanceForType();

        public final native ClubPushMsg m6435getDefaultInstanceForType();

        public final native CLUB_MESSAGE_TYPE getEClubMessageType();

        public final native long getLCreateTime();

        public final native long getLFund();

        public final native long getLMsgID();

        public final native Parser<ClubPushMsg> getParserForType();

        public final native String getSMsg();

        public final native ByteString getSMsgBytes();

        public final native int getSerializedSize();

        public final native ClubBaseInfo getStClubBaseInfo();

        public final native ClubBaseInfoOrBuilder getStClubBaseInfoOrBuilder();

        public final native UserBaseInfoNet getStFromUser();

        public final native UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

        public final native UserBaseInfoNet getStToUser();

        public final native UserBaseInfoNetOrBuilder getStToUserOrBuilder();

        public final native UnknownFieldSet getUnknownFields();

        public final native boolean hasEClubMessageType();

        public final native boolean hasLCreateTime();

        public final native boolean hasLFund();

        public final native boolean hasLMsgID();

        public final native boolean hasSMsg();

        public final native boolean hasStClubBaseInfo();

        public final native boolean hasStFromUser();

        public final native boolean hasStToUser();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6436newBuilderForType();

        public final native Builder m6437newBuilderForType();

        protected final native Builder m6438newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6439toBuilder();

        public final native Builder m6440toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static ClubPushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fu;
        }

        static void __clinit__() {
            PARSER = new C12211();
            ClubPushMsg clubPushMsg = new ClubPushMsg(true);
            defaultInstance = clubPushMsg;
            clubPushMsg.initFields();
        }

        public static ClubPushMsg parseFrom(ByteString byteString) {
            return (ClubPushMsg) PARSER.parseFrom(byteString);
        }

        public static ClubPushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (ClubPushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ClubPushMsg parseFrom(byte[] bArr) {
            return (ClubPushMsg) PARSER.parseFrom(bArr);
        }

        public static ClubPushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (ClubPushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ClubPushMsg parseFrom(InputStream inputStream) {
            return (ClubPushMsg) PARSER.parseFrom(inputStream);
        }

        public static ClubPushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ClubPushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static ClubPushMsg parseDelimitedFrom(InputStream inputStream) {
            return (ClubPushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static ClubPushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ClubPushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static ClubPushMsg parseFrom(CodedInputStream codedInputStream) {
            return (ClubPushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static ClubPushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (ClubPushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(ClubPushMsg clubPushMsg) {
            return newBuilder().mergeFrom(clubPushMsg);
        }
    }

    public interface DefaultSettingInfoNetOrBuilder extends MessageOrBuilder {
        int getBInsurance();

        int getIFavoriteNum();

        int getIKickOff();

        int getIMaxClubNums();

        int getIMaxInGameUserInfo();

        int getIMaxLevel();

        int getISeniorGamrRoomCost();

        int getISimultaneousPlays();

        OddsStructure getVOddsStructure(int i);

        int getVOddsStructureCount();

        List<OddsStructure> getVOddsStructureList();

        OddsStructureOrBuilder getVOddsStructureOrBuilder(int i);

        List<? extends OddsStructureOrBuilder> getVOddsStructureOrBuilderList();

        long getVPlayDuration(int i);

        int getVPlayDurationCount();

        List<Long> getVPlayDurationList();

        int getVSBs(int i);

        int getVSBsCount();

        List<Integer> getVSBsList();

        SNGBlindsStructure getVSNGBlindsStructures(int i);

        int getVSNGBlindsStructuresCount();

        List<SNGBlindsStructure> getVSNGBlindsStructuresList();

        SNGBlindsStructureOrBuilder getVSNGBlindsStructuresOrBuilder(int i);

        List<? extends SNGBlindsStructureOrBuilder> getVSNGBlindsStructuresOrBuilderList();

        boolean hasBInsurance();

        boolean hasIFavoriteNum();

        boolean hasIKickOff();

        boolean hasIMaxClubNums();

        boolean hasIMaxInGameUserInfo();

        boolean hasIMaxLevel();

        boolean hasISeniorGamrRoomCost();

        boolean hasISimultaneousPlays();
    }

    public static final class DefaultSettingInfoNet extends GeneratedMessage implements DefaultSettingInfoNetOrBuilder {
        public static final int BINSURANCE_FIELD_NUMBER = 12;
        public static final int IFAVORITENUM_FIELD_NUMBER = 4;
        public static final int IKICKOFF_FIELD_NUMBER = 3;
        public static final int IMAXCLUBNUMS_FIELD_NUMBER = 8;
        public static final int IMAXINGAMEUSERINFO_FIELD_NUMBER = 1;
        public static final int IMAXLEVEL_FIELD_NUMBER = 7;
        public static final int ISENIORGAMRROOMCOST_FIELD_NUMBER = 9;
        public static final int ISIMULTANEOUSPLAYS_FIELD_NUMBER = 2;
        public static Parser<DefaultSettingInfoNet> PARSER = null;
        public static final int VODDSSTRUCTURE_FIELD_NUMBER = 11;
        public static final int VPLAYDURATION_FIELD_NUMBER = 6;
        public static final int VSBS_FIELD_NUMBER = 5;
        public static final int VSNGBLINDSSTRUCTURES_FIELD_NUMBER = 10;
        private static final DefaultSettingInfoNet defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bInsurance_;
        private int bitField0_;
        private int iFavoriteNum_;
        private int iKickOff_;
        private int iMaxClubNums_;
        private int iMaxInGameUserInfo_;
        private int iMaxLevel_;
        private int iSeniorGamrRoomCost_;
        private int iSimultaneousPlays_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private List<OddsStructure> vOddsStructure_;
        private List<Long> vPlayDuration_;
        private List<Integer> vSBs_;
        private List<SNGBlindsStructure> vSNGBlindsStructures_;

        /* renamed from: com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet.1 */
        class C12221 extends AbstractParser<DefaultSettingInfoNet> {
            C12221() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new DefaultSettingInfoNet(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements DefaultSettingInfoNetOrBuilder {
            private int bInsurance_;
            private int bitField0_;
            private int iFavoriteNum_;
            private int iKickOff_;
            private int iMaxClubNums_;
            private int iMaxInGameUserInfo_;
            private int iMaxLevel_;
            private int iSeniorGamrRoomCost_;
            private int iSimultaneousPlays_;
            private RepeatedFieldBuilder<OddsStructure, Builder, OddsStructureOrBuilder> vOddsStructureBuilder_;
            private List<OddsStructure> vOddsStructure_;
            private List<Long> vPlayDuration_;
            private List<Integer> vSBs_;
            private RepeatedFieldBuilder<SNGBlindsStructure, Builder, SNGBlindsStructureOrBuilder> vSNGBlindsStructuresBuilder_;
            private List<SNGBlindsStructure> vSNGBlindsStructures_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8294k;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8295l.ensureFieldAccessorsInitialized(DefaultSettingInfoNet.class, Builder.class);
            }

            private Builder() {
                this.vSBs_ = Collections.emptyList();
                this.vPlayDuration_ = Collections.emptyList();
                this.vSNGBlindsStructures_ = Collections.emptyList();
                this.vOddsStructure_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vSBs_ = Collections.emptyList();
                this.vPlayDuration_ = Collections.emptyList();
                this.vSNGBlindsStructures_ = Collections.emptyList();
                this.vOddsStructure_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (DefaultSettingInfoNet.alwaysUseFieldBuilders) {
                    getVSNGBlindsStructuresFieldBuilder();
                    getVOddsStructureFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.iMaxInGameUserInfo_ = 0;
                this.bitField0_ &= -2;
                this.iSimultaneousPlays_ = 0;
                this.bitField0_ &= -3;
                this.iKickOff_ = 0;
                this.bitField0_ &= -5;
                this.iFavoriteNum_ = 0;
                this.bitField0_ &= -9;
                this.vSBs_ = Collections.emptyList();
                this.bitField0_ &= -17;
                this.vPlayDuration_ = Collections.emptyList();
                this.bitField0_ &= -33;
                this.iMaxLevel_ = 0;
                this.bitField0_ &= -65;
                this.iMaxClubNums_ = 0;
                this.bitField0_ &= -129;
                this.iSeniorGamrRoomCost_ = 0;
                this.bitField0_ &= -257;
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    this.vSNGBlindsStructures_ = Collections.emptyList();
                    this.bitField0_ &= -513;
                } else {
                    this.vSNGBlindsStructuresBuilder_.clear();
                }
                if (this.vOddsStructureBuilder_ == null) {
                    this.vOddsStructure_ = Collections.emptyList();
                    this.bitField0_ &= -1025;
                } else {
                    this.vOddsStructureBuilder_.clear();
                }
                this.bInsurance_ = 0;
                this.bitField0_ &= -2049;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8294k;
            }

            public final DefaultSettingInfoNet getDefaultInstanceForType() {
                return DefaultSettingInfoNet.getDefaultInstance();
            }

            public final DefaultSettingInfoNet build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final DefaultSettingInfoNet buildPartial() {
                int i = DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER;
                DefaultSettingInfoNet defaultSettingInfoNet = new DefaultSettingInfoNet((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER) != DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER) {
                    i = 0;
                }
                defaultSettingInfoNet.iMaxInGameUserInfo_ = this.iMaxInGameUserInfo_;
                if ((i2 & DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER) == DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER) {
                    i |= DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER;
                }
                defaultSettingInfoNet.iSimultaneousPlays_ = this.iSimultaneousPlays_;
                if ((i2 & DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER) == DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER) {
                    i |= DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER;
                }
                defaultSettingInfoNet.iKickOff_ = this.iKickOff_;
                if ((i2 & DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER) == DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER) {
                    i |= DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER;
                }
                defaultSettingInfoNet.iFavoriteNum_ = this.iFavoriteNum_;
                if ((this.bitField0_ & 16) == 16) {
                    this.vSBs_ = Collections.unmodifiableList(this.vSBs_);
                    this.bitField0_ &= -17;
                }
                defaultSettingInfoNet.vSBs_ = this.vSBs_;
                if ((this.bitField0_ & 32) == 32) {
                    this.vPlayDuration_ = Collections.unmodifiableList(this.vPlayDuration_);
                    this.bitField0_ &= -33;
                }
                defaultSettingInfoNet.vPlayDuration_ = this.vPlayDuration_;
                if ((i2 & 64) == 64) {
                    i |= 16;
                }
                defaultSettingInfoNet.iMaxLevel_ = this.iMaxLevel_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= 32;
                }
                defaultSettingInfoNet.iMaxClubNums_ = this.iMaxClubNums_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= 64;
                }
                defaultSettingInfoNet.iSeniorGamrRoomCost_ = this.iSeniorGamrRoomCost_;
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                        this.vSNGBlindsStructures_ = Collections.unmodifiableList(this.vSNGBlindsStructures_);
                        this.bitField0_ &= -513;
                    }
                    defaultSettingInfoNet.vSNGBlindsStructures_ = this.vSNGBlindsStructures_;
                } else {
                    defaultSettingInfoNet.vSNGBlindsStructures_ = this.vSNGBlindsStructuresBuilder_.build();
                }
                if (this.vOddsStructureBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                        this.vOddsStructure_ = Collections.unmodifiableList(this.vOddsStructure_);
                        this.bitField0_ &= -1025;
                    }
                    defaultSettingInfoNet.vOddsStructure_ = this.vOddsStructure_;
                } else {
                    defaultSettingInfoNet.vOddsStructure_ = this.vOddsStructureBuilder_.build();
                }
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                defaultSettingInfoNet.bInsurance_ = this.bInsurance_;
                defaultSettingInfoNet.bitField0_ = i;
                onBuilt();
                return defaultSettingInfoNet;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof DefaultSettingInfoNet) {
                    return mergeFrom((DefaultSettingInfoNet) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(DefaultSettingInfoNet defaultSettingInfoNet) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (defaultSettingInfoNet != DefaultSettingInfoNet.getDefaultInstance()) {
                    if (defaultSettingInfoNet.hasIMaxInGameUserInfo()) {
                        setIMaxInGameUserInfo(defaultSettingInfoNet.getIMaxInGameUserInfo());
                    }
                    if (defaultSettingInfoNet.hasISimultaneousPlays()) {
                        setISimultaneousPlays(defaultSettingInfoNet.getISimultaneousPlays());
                    }
                    if (defaultSettingInfoNet.hasIKickOff()) {
                        setIKickOff(defaultSettingInfoNet.getIKickOff());
                    }
                    if (defaultSettingInfoNet.hasIFavoriteNum()) {
                        setIFavoriteNum(defaultSettingInfoNet.getIFavoriteNum());
                    }
                    if (!defaultSettingInfoNet.vSBs_.isEmpty()) {
                        if (this.vSBs_.isEmpty()) {
                            this.vSBs_ = defaultSettingInfoNet.vSBs_;
                            this.bitField0_ &= -17;
                        } else {
                            ensureVSBsIsMutable();
                            this.vSBs_.addAll(defaultSettingInfoNet.vSBs_);
                        }
                        onChanged();
                    }
                    if (!defaultSettingInfoNet.vPlayDuration_.isEmpty()) {
                        if (this.vPlayDuration_.isEmpty()) {
                            this.vPlayDuration_ = defaultSettingInfoNet.vPlayDuration_;
                            this.bitField0_ &= -33;
                        } else {
                            ensureVPlayDurationIsMutable();
                            this.vPlayDuration_.addAll(defaultSettingInfoNet.vPlayDuration_);
                        }
                        onChanged();
                    }
                    if (defaultSettingInfoNet.hasIMaxLevel()) {
                        setIMaxLevel(defaultSettingInfoNet.getIMaxLevel());
                    }
                    if (defaultSettingInfoNet.hasIMaxClubNums()) {
                        setIMaxClubNums(defaultSettingInfoNet.getIMaxClubNums());
                    }
                    if (defaultSettingInfoNet.hasISeniorGamrRoomCost()) {
                        setISeniorGamrRoomCost(defaultSettingInfoNet.getISeniorGamrRoomCost());
                    }
                    if (this.vSNGBlindsStructuresBuilder_ == null) {
                        if (!defaultSettingInfoNet.vSNGBlindsStructures_.isEmpty()) {
                            if (this.vSNGBlindsStructures_.isEmpty()) {
                                this.vSNGBlindsStructures_ = defaultSettingInfoNet.vSNGBlindsStructures_;
                                this.bitField0_ &= -513;
                            } else {
                                ensureVSNGBlindsStructuresIsMutable();
                                this.vSNGBlindsStructures_.addAll(defaultSettingInfoNet.vSNGBlindsStructures_);
                            }
                            onChanged();
                        }
                    } else if (!defaultSettingInfoNet.vSNGBlindsStructures_.isEmpty()) {
                        if (this.vSNGBlindsStructuresBuilder_.isEmpty()) {
                            RepeatedFieldBuilder vSNGBlindsStructuresFieldBuilder;
                            this.vSNGBlindsStructuresBuilder_.dispose();
                            this.vSNGBlindsStructuresBuilder_ = null;
                            this.vSNGBlindsStructures_ = defaultSettingInfoNet.vSNGBlindsStructures_;
                            this.bitField0_ &= -513;
                            if (DefaultSettingInfoNet.alwaysUseFieldBuilders) {
                                vSNGBlindsStructuresFieldBuilder = getVSNGBlindsStructuresFieldBuilder();
                            } else {
                                vSNGBlindsStructuresFieldBuilder = null;
                            }
                            this.vSNGBlindsStructuresBuilder_ = vSNGBlindsStructuresFieldBuilder;
                        } else {
                            this.vSNGBlindsStructuresBuilder_.addAllMessages(defaultSettingInfoNet.vSNGBlindsStructures_);
                        }
                    }
                    if (this.vOddsStructureBuilder_ == null) {
                        if (!defaultSettingInfoNet.vOddsStructure_.isEmpty()) {
                            if (this.vOddsStructure_.isEmpty()) {
                                this.vOddsStructure_ = defaultSettingInfoNet.vOddsStructure_;
                                this.bitField0_ &= -1025;
                            } else {
                                ensureVOddsStructureIsMutable();
                                this.vOddsStructure_.addAll(defaultSettingInfoNet.vOddsStructure_);
                            }
                            onChanged();
                        }
                    } else if (!defaultSettingInfoNet.vOddsStructure_.isEmpty()) {
                        if (this.vOddsStructureBuilder_.isEmpty()) {
                            this.vOddsStructureBuilder_.dispose();
                            this.vOddsStructureBuilder_ = null;
                            this.vOddsStructure_ = defaultSettingInfoNet.vOddsStructure_;
                            this.bitField0_ &= -1025;
                            if (DefaultSettingInfoNet.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVOddsStructureFieldBuilder();
                            }
                            this.vOddsStructureBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vOddsStructureBuilder_.addAllMessages(defaultSettingInfoNet.vOddsStructure_);
                        }
                    }
                    if (defaultSettingInfoNet.hasBInsurance()) {
                        setBInsurance(defaultSettingInfoNet.getBInsurance());
                    }
                    mergeUnknownFields(defaultSettingInfoNet.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasIMaxInGameUserInfo() || !hasISimultaneousPlays() || !hasIKickOff() || !hasIFavoriteNum() || !hasBInsurance()) {
                    return false;
                }
                int i;
                for (i = 0; i < getVSNGBlindsStructuresCount(); i += DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER) {
                    if (!getVSNGBlindsStructures(i).isInitialized()) {
                        return false;
                    }
                }
                for (i = 0; i < getVOddsStructureCount(); i += DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER) {
                    if (!getVOddsStructure(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.DefaultSettingInfoNet.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$DefaultSettingInfoNet$Builder");
            }

            public final boolean hasIMaxInGameUserInfo() {
                return (this.bitField0_ & DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER) == DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER;
            }

            public final int getIMaxInGameUserInfo() {
                return this.iMaxInGameUserInfo_;
            }

            public final Builder setIMaxInGameUserInfo(int i) {
                this.bitField0_ |= DefaultSettingInfoNet.IMAXINGAMEUSERINFO_FIELD_NUMBER;
                this.iMaxInGameUserInfo_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMaxInGameUserInfo() {
                this.bitField0_ &= -2;
                this.iMaxInGameUserInfo_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasISimultaneousPlays() {
                return (this.bitField0_ & DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER) == DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER;
            }

            public final int getISimultaneousPlays() {
                return this.iSimultaneousPlays_;
            }

            public final Builder setISimultaneousPlays(int i) {
                this.bitField0_ |= DefaultSettingInfoNet.ISIMULTANEOUSPLAYS_FIELD_NUMBER;
                this.iSimultaneousPlays_ = i;
                onChanged();
                return this;
            }

            public final Builder clearISimultaneousPlays() {
                this.bitField0_ &= -3;
                this.iSimultaneousPlays_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIKickOff() {
                return (this.bitField0_ & DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER) == DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER;
            }

            public final int getIKickOff() {
                return this.iKickOff_;
            }

            public final Builder setIKickOff(int i) {
                this.bitField0_ |= DefaultSettingInfoNet.IFAVORITENUM_FIELD_NUMBER;
                this.iKickOff_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIKickOff() {
                this.bitField0_ &= -5;
                this.iKickOff_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIFavoriteNum() {
                return (this.bitField0_ & DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER) == DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER;
            }

            public final int getIFavoriteNum() {
                return this.iFavoriteNum_;
            }

            public final Builder setIFavoriteNum(int i) {
                this.bitField0_ |= DefaultSettingInfoNet.IMAXCLUBNUMS_FIELD_NUMBER;
                this.iFavoriteNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIFavoriteNum() {
                this.bitField0_ &= -9;
                this.iFavoriteNum_ = 0;
                onChanged();
                return this;
            }

            private void ensureVSBsIsMutable() {
                if ((this.bitField0_ & 16) != 16) {
                    this.vSBs_ = new ArrayList(this.vSBs_);
                    this.bitField0_ |= 16;
                }
            }

            public final List<Integer> getVSBsList() {
                return Collections.unmodifiableList(this.vSBs_);
            }

            public final int getVSBsCount() {
                return this.vSBs_.size();
            }

            public final int getVSBs(int i) {
                return ((Integer) this.vSBs_.get(i)).intValue();
            }

            public final Builder setVSBs(int i, int i2) {
                ensureVSBsIsMutable();
                this.vSBs_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVSBs(int i) {
                ensureVSBsIsMutable();
                this.vSBs_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVSBs(Iterable<? extends Integer> iterable) {
                ensureVSBsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vSBs_);
                onChanged();
                return this;
            }

            public final Builder clearVSBs() {
                this.vSBs_ = Collections.emptyList();
                this.bitField0_ &= -17;
                onChanged();
                return this;
            }

            private void ensureVPlayDurationIsMutable() {
                if ((this.bitField0_ & 32) != 32) {
                    this.vPlayDuration_ = new ArrayList(this.vPlayDuration_);
                    this.bitField0_ |= 32;
                }
            }

            public final List<Long> getVPlayDurationList() {
                return Collections.unmodifiableList(this.vPlayDuration_);
            }

            public final int getVPlayDurationCount() {
                return this.vPlayDuration_.size();
            }

            public final long getVPlayDuration(int i) {
                return ((Long) this.vPlayDuration_.get(i)).longValue();
            }

            public final Builder setVPlayDuration(int i, long j) {
                ensureVPlayDurationIsMutable();
                this.vPlayDuration_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVPlayDuration(long j) {
                ensureVPlayDurationIsMutable();
                this.vPlayDuration_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVPlayDuration(Iterable<? extends Long> iterable) {
                ensureVPlayDurationIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vPlayDuration_);
                onChanged();
                return this;
            }

            public final Builder clearVPlayDuration() {
                this.vPlayDuration_ = Collections.emptyList();
                this.bitField0_ &= -33;
                onChanged();
                return this;
            }

            public final boolean hasIMaxLevel() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getIMaxLevel() {
                return this.iMaxLevel_;
            }

            public final Builder setIMaxLevel(int i) {
                this.bitField0_ |= 64;
                this.iMaxLevel_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMaxLevel() {
                this.bitField0_ &= -65;
                this.iMaxLevel_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIMaxClubNums() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getIMaxClubNums() {
                return this.iMaxClubNums_;
            }

            public final Builder setIMaxClubNums(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.iMaxClubNums_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMaxClubNums() {
                this.bitField0_ &= -129;
                this.iMaxClubNums_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasISeniorGamrRoomCost() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final int getISeniorGamrRoomCost() {
                return this.iSeniorGamrRoomCost_;
            }

            public final Builder setISeniorGamrRoomCost(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.iSeniorGamrRoomCost_ = i;
                onChanged();
                return this;
            }

            public final Builder clearISeniorGamrRoomCost() {
                this.bitField0_ &= -257;
                this.iSeniorGamrRoomCost_ = 0;
                onChanged();
                return this;
            }

            private void ensureVSNGBlindsStructuresIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    this.vSNGBlindsStructures_ = new ArrayList(this.vSNGBlindsStructures_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
            }

            public final List<SNGBlindsStructure> getVSNGBlindsStructuresList() {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    return Collections.unmodifiableList(this.vSNGBlindsStructures_);
                }
                return this.vSNGBlindsStructuresBuilder_.getMessageList();
            }

            public final int getVSNGBlindsStructuresCount() {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    return this.vSNGBlindsStructures_.size();
                }
                return this.vSNGBlindsStructuresBuilder_.getCount();
            }

            public final SNGBlindsStructure getVSNGBlindsStructures(int i) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    return (SNGBlindsStructure) this.vSNGBlindsStructures_.get(i);
                }
                return (SNGBlindsStructure) this.vSNGBlindsStructuresBuilder_.getMessage(i);
            }

            public final Builder setVSNGBlindsStructures(int i, SNGBlindsStructure sNGBlindsStructure) {
                if (this.vSNGBlindsStructuresBuilder_ != null) {
                    this.vSNGBlindsStructuresBuilder_.setMessage(i, sNGBlindsStructure);
                } else if (sNGBlindsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.set(i, sNGBlindsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder setVSNGBlindsStructures(int i, Builder builder) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVSNGBlindsStructures(SNGBlindsStructure sNGBlindsStructure) {
                if (this.vSNGBlindsStructuresBuilder_ != null) {
                    this.vSNGBlindsStructuresBuilder_.addMessage(sNGBlindsStructure);
                } else if (sNGBlindsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.add(sNGBlindsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder addVSNGBlindsStructures(int i, SNGBlindsStructure sNGBlindsStructure) {
                if (this.vSNGBlindsStructuresBuilder_ != null) {
                    this.vSNGBlindsStructuresBuilder_.addMessage(i, sNGBlindsStructure);
                } else if (sNGBlindsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.add(i, sNGBlindsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder addVSNGBlindsStructures(Builder builder) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.add(builder.build());
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVSNGBlindsStructures(int i, Builder builder) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVSNGBlindsStructures(Iterable<? extends SNGBlindsStructure> iterable) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    ensureVSNGBlindsStructuresIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vSNGBlindsStructures_);
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVSNGBlindsStructures() {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    this.vSNGBlindsStructures_ = Collections.emptyList();
                    this.bitField0_ &= -513;
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVSNGBlindsStructures(int i) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    ensureVSNGBlindsStructuresIsMutable();
                    this.vSNGBlindsStructures_.remove(i);
                    onChanged();
                } else {
                    this.vSNGBlindsStructuresBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVSNGBlindsStructuresBuilder(int i) {
                return (Builder) getVSNGBlindsStructuresFieldBuilder().getBuilder(i);
            }

            public final SNGBlindsStructureOrBuilder getVSNGBlindsStructuresOrBuilder(int i) {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    return (SNGBlindsStructureOrBuilder) this.vSNGBlindsStructures_.get(i);
                }
                return (SNGBlindsStructureOrBuilder) this.vSNGBlindsStructuresBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends SNGBlindsStructureOrBuilder> getVSNGBlindsStructuresOrBuilderList() {
                if (this.vSNGBlindsStructuresBuilder_ != null) {
                    return this.vSNGBlindsStructuresBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vSNGBlindsStructures_);
            }

            public final Builder addVSNGBlindsStructuresBuilder() {
                return (Builder) getVSNGBlindsStructuresFieldBuilder().addBuilder(SNGBlindsStructure.getDefaultInstance());
            }

            public final Builder addVSNGBlindsStructuresBuilder(int i) {
                return (Builder) getVSNGBlindsStructuresFieldBuilder().addBuilder(i, SNGBlindsStructure.getDefaultInstance());
            }

            public final List<Builder> getVSNGBlindsStructuresBuilderList() {
                return getVSNGBlindsStructuresFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<SNGBlindsStructure, Builder, SNGBlindsStructureOrBuilder> getVSNGBlindsStructuresFieldBuilder() {
                if (this.vSNGBlindsStructuresBuilder_ == null) {
                    this.vSNGBlindsStructuresBuilder_ = new RepeatedFieldBuilder(this.vSNGBlindsStructures_, (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY, getParentForChildren(), isClean());
                    this.vSNGBlindsStructures_ = null;
                }
                return this.vSNGBlindsStructuresBuilder_;
            }

            private void ensureVOddsStructureIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) != AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    this.vOddsStructure_ = new ArrayList(this.vOddsStructure_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
            }

            public final List<OddsStructure> getVOddsStructureList() {
                if (this.vOddsStructureBuilder_ == null) {
                    return Collections.unmodifiableList(this.vOddsStructure_);
                }
                return this.vOddsStructureBuilder_.getMessageList();
            }

            public final int getVOddsStructureCount() {
                if (this.vOddsStructureBuilder_ == null) {
                    return this.vOddsStructure_.size();
                }
                return this.vOddsStructureBuilder_.getCount();
            }

            public final OddsStructure getVOddsStructure(int i) {
                if (this.vOddsStructureBuilder_ == null) {
                    return (OddsStructure) this.vOddsStructure_.get(i);
                }
                return (OddsStructure) this.vOddsStructureBuilder_.getMessage(i);
            }

            public final Builder setVOddsStructure(int i, OddsStructure oddsStructure) {
                if (this.vOddsStructureBuilder_ != null) {
                    this.vOddsStructureBuilder_.setMessage(i, oddsStructure);
                } else if (oddsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.set(i, oddsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder setVOddsStructure(int i, Builder builder) {
                if (this.vOddsStructureBuilder_ == null) {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVOddsStructure(OddsStructure oddsStructure) {
                if (this.vOddsStructureBuilder_ != null) {
                    this.vOddsStructureBuilder_.addMessage(oddsStructure);
                } else if (oddsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.add(oddsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder addVOddsStructure(int i, OddsStructure oddsStructure) {
                if (this.vOddsStructureBuilder_ != null) {
                    this.vOddsStructureBuilder_.addMessage(i, oddsStructure);
                } else if (oddsStructure == null) {
                    throw new NullPointerException();
                } else {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.add(i, oddsStructure);
                    onChanged();
                }
                return this;
            }

            public final Builder addVOddsStructure(Builder builder) {
                if (this.vOddsStructureBuilder_ == null) {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.add(builder.build());
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVOddsStructure(int i, Builder builder) {
                if (this.vOddsStructureBuilder_ == null) {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVOddsStructure(Iterable<? extends OddsStructure> iterable) {
                if (this.vOddsStructureBuilder_ == null) {
                    ensureVOddsStructureIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vOddsStructure_);
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVOddsStructure() {
                if (this.vOddsStructureBuilder_ == null) {
                    this.vOddsStructure_ = Collections.emptyList();
                    this.bitField0_ &= -1025;
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVOddsStructure(int i) {
                if (this.vOddsStructureBuilder_ == null) {
                    ensureVOddsStructureIsMutable();
                    this.vOddsStructure_.remove(i);
                    onChanged();
                } else {
                    this.vOddsStructureBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVOddsStructureBuilder(int i) {
                return (Builder) getVOddsStructureFieldBuilder().getBuilder(i);
            }

            public final OddsStructureOrBuilder getVOddsStructureOrBuilder(int i) {
                if (this.vOddsStructureBuilder_ == null) {
                    return (OddsStructureOrBuilder) this.vOddsStructure_.get(i);
                }
                return (OddsStructureOrBuilder) this.vOddsStructureBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends OddsStructureOrBuilder> getVOddsStructureOrBuilderList() {
                if (this.vOddsStructureBuilder_ != null) {
                    return this.vOddsStructureBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vOddsStructure_);
            }

            public final Builder addVOddsStructureBuilder() {
                return (Builder) getVOddsStructureFieldBuilder().addBuilder(OddsStructure.getDefaultInstance());
            }

            public final Builder addVOddsStructureBuilder(int i) {
                return (Builder) getVOddsStructureFieldBuilder().addBuilder(i, OddsStructure.getDefaultInstance());
            }

            public final List<Builder> getVOddsStructureBuilderList() {
                return getVOddsStructureFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<OddsStructure, Builder, OddsStructureOrBuilder> getVOddsStructureFieldBuilder() {
                if (this.vOddsStructureBuilder_ == null) {
                    this.vOddsStructureBuilder_ = new RepeatedFieldBuilder(this.vOddsStructure_, (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT, getParentForChildren(), isClean());
                    this.vOddsStructure_ = null;
                }
                return this.vOddsStructureBuilder_;
            }

            public final boolean hasBInsurance() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final int getBInsurance() {
                return this.bInsurance_;
            }

            public final Builder setBInsurance(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.bInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBInsurance() {
                this.bitField0_ &= -2049;
                this.bInsurance_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native DefaultSettingInfoNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ DefaultSettingInfoNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, DefaultSettingInfoNet defaultSettingInfoNet);

        private native DefaultSettingInfoNet(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ DefaultSettingInfoNet(com.google.protobuf.GeneratedMessage.Builder builder, DefaultSettingInfoNet defaultSettingInfoNet);

        private native DefaultSettingInfoNet(boolean z);

        private native void initFields();

        public final native int getBInsurance();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6441getDefaultInstanceForType();

        public final native DefaultSettingInfoNet m6442getDefaultInstanceForType();

        public final native int getIFavoriteNum();

        public final native int getIKickOff();

        public final native int getIMaxClubNums();

        public final native int getIMaxInGameUserInfo();

        public final native int getIMaxLevel();

        public final native int getISeniorGamrRoomCost();

        public final native int getISimultaneousPlays();

        public final native Parser<DefaultSettingInfoNet> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native OddsStructure getVOddsStructure(int i);

        public final native int getVOddsStructureCount();

        public final native List<OddsStructure> getVOddsStructureList();

        public final native OddsStructureOrBuilder getVOddsStructureOrBuilder(int i);

        public final native List<? extends OddsStructureOrBuilder> getVOddsStructureOrBuilderList();

        public final native long getVPlayDuration(int i);

        public final native int getVPlayDurationCount();

        public final native List<Long> getVPlayDurationList();

        public final native int getVSBs(int i);

        public final native int getVSBsCount();

        public final native List<Integer> getVSBsList();

        public final native SNGBlindsStructure getVSNGBlindsStructures(int i);

        public final native int getVSNGBlindsStructuresCount();

        public final native List<SNGBlindsStructure> getVSNGBlindsStructuresList();

        public final native SNGBlindsStructureOrBuilder getVSNGBlindsStructuresOrBuilder(int i);

        public final native List<? extends SNGBlindsStructureOrBuilder> getVSNGBlindsStructuresOrBuilderList();

        public final native boolean hasBInsurance();

        public final native boolean hasIFavoriteNum();

        public final native boolean hasIKickOff();

        public final native boolean hasIMaxClubNums();

        public final native boolean hasIMaxInGameUserInfo();

        public final native boolean hasIMaxLevel();

        public final native boolean hasISeniorGamrRoomCost();

        public final native boolean hasISimultaneousPlays();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6443newBuilderForType();

        public final native Builder m6444newBuilderForType();

        protected final native Builder m6445newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6446toBuilder();

        public final native Builder m6447toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static DefaultSettingInfoNet getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8294k;
        }

        static void __clinit__() {
            PARSER = new C12221();
            DefaultSettingInfoNet defaultSettingInfoNet = new DefaultSettingInfoNet(true);
            defaultInstance = defaultSettingInfoNet;
            defaultSettingInfoNet.initFields();
        }

        public static DefaultSettingInfoNet parseFrom(ByteString byteString) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(byteString);
        }

        public static DefaultSettingInfoNet parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static DefaultSettingInfoNet parseFrom(byte[] bArr) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(bArr);
        }

        public static DefaultSettingInfoNet parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static DefaultSettingInfoNet parseFrom(InputStream inputStream) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(inputStream);
        }

        public static DefaultSettingInfoNet parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static DefaultSettingInfoNet parseDelimitedFrom(InputStream inputStream) {
            return (DefaultSettingInfoNet) PARSER.parseDelimitedFrom(inputStream);
        }

        public static DefaultSettingInfoNet parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (DefaultSettingInfoNet) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static DefaultSettingInfoNet parseFrom(CodedInputStream codedInputStream) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(codedInputStream);
        }

        public static DefaultSettingInfoNet parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (DefaultSettingInfoNet) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(DefaultSettingInfoNet defaultSettingInfoNet) {
            return newBuilder().mergeFrom(defaultSettingInfoNet);
        }
    }

    public enum GAME_ACT_TYPE implements ProtocolMessageEnum {
        GAME_ACT_TYPE_FOLD(0, GAME_ACT_TYPE_FOLD_VALUE),
        GAME_ACT_TYPE_CALL(GAME_ACT_TYPE_FOLD_VALUE, GAME_ACT_TYPE_CALL_VALUE),
        GAME_ACT_TYPE_BET(GAME_ACT_TYPE_CALL_VALUE, GAME_ACT_TYPE_BET_VALUE),
        GAME_ACT_TYPE_CHECK(GAME_ACT_TYPE_BET_VALUE, GAME_ACT_TYPE_CHECK_VALUE),
        GAME_ACT_TYPE_RAISE(GAME_ACT_TYPE_CHECK_VALUE, GAME_ACT_TYPE_RAISE_VALUE),
        GAME_ACT_TYPE_ALLIN(GAME_ACT_TYPE_RAISE_VALUE, GAME_ACT_TYPE_ALLIN_VALUE);
        
        public static final int GAME_ACT_TYPE_ALLIN_VALUE = 6;
        public static final int GAME_ACT_TYPE_BET_VALUE = 3;
        public static final int GAME_ACT_TYPE_CALL_VALUE = 2;
        public static final int GAME_ACT_TYPE_CHECK_VALUE = 4;
        public static final int GAME_ACT_TYPE_FOLD_VALUE = 1;
        public static final int GAME_ACT_TYPE_RAISE_VALUE = 5;
        private static final GAME_ACT_TYPE[] VALUES;
        private static EnumLiteMap<GAME_ACT_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.GAME_ACT_TYPE.1 */
        class C12231 implements EnumLiteMap<GAME_ACT_TYPE> {
            C12231() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return GAME_ACT_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12231();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static GAME_ACT_TYPE valueOf(int i) {
            switch (i) {
                case GAME_ACT_TYPE_FOLD_VALUE:
                    return GAME_ACT_TYPE_FOLD;
                case GAME_ACT_TYPE_CALL_VALUE:
                    return GAME_ACT_TYPE_CALL;
                case GAME_ACT_TYPE_BET_VALUE:
                    return GAME_ACT_TYPE_BET;
                case GAME_ACT_TYPE_CHECK_VALUE:
                    return GAME_ACT_TYPE_CHECK;
                case GAME_ACT_TYPE_RAISE_VALUE:
                    return GAME_ACT_TYPE_RAISE;
                case GAME_ACT_TYPE_ALLIN_VALUE:
                    return GAME_ACT_TYPE_ALLIN;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<GAME_ACT_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(11);
        }

        public static GAME_ACT_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private GAME_ACT_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum GAME_INFO_TYPE implements ProtocolMessageEnum {
        ALL(0, ALL_VALUE),
        MY_GAME(ALL_VALUE, MY_GAME_VALUE),
        FRIENDS_GAME(MY_GAME_VALUE, FRIENDS_GAME_VALUE),
        BILLS(FRIENDS_GAME_VALUE, BILLS_VALUE);
        
        public static final int ALL_VALUE = 1;
        public static final int BILLS_VALUE = 4;
        public static final int FRIENDS_GAME_VALUE = 3;
        public static final int MY_GAME_VALUE = 2;
        private static final GAME_INFO_TYPE[] VALUES;
        private static EnumLiteMap<GAME_INFO_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.GAME_INFO_TYPE.1 */
        class C12241 implements EnumLiteMap<GAME_INFO_TYPE> {
            C12241() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return GAME_INFO_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12241();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static GAME_INFO_TYPE valueOf(int i) {
            switch (i) {
                case ALL_VALUE:
                    return ALL;
                case MY_GAME_VALUE:
                    return MY_GAME;
                case FRIENDS_GAME_VALUE:
                    return FRIENDS_GAME;
                case BILLS_VALUE:
                    return BILLS;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<GAME_INFO_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(12);
        }

        public static GAME_INFO_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private GAME_INFO_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum GAME_ROOM_GAME_STATE implements ProtocolMessageEnum {
        ROOM_GAME_STATE_GameWait(0, ROOM_GAME_STATE_GameWait_VALUE),
        ROOM_GAME_STATE_GameStart(ROOM_GAME_STATE_GameWait_VALUE, ROOM_GAME_STATE_GameStart_VALUE),
        ROOM_GAME_STATE_PreFlop(ROOM_GAME_STATE_GameStart_VALUE, ROOM_GAME_STATE_PreFlop_VALUE),
        ROOM_GAME_STATE_Flop(ROOM_GAME_STATE_PreFlop_VALUE, ROOM_GAME_STATE_Flop_VALUE),
        ROOM_GAME_STATE_Turn(ROOM_GAME_STATE_Flop_VALUE, ROOM_GAME_STATE_Turn_VALUE),
        ROOM_GAME_STATE_River(ROOM_GAME_STATE_Turn_VALUE, ROOM_GAME_STATE_River_VALUE),
        ROOM_GAME_STATE_Result(ROOM_GAME_STATE_River_VALUE, ROOM_GAME_STATE_Result_VALUE),
        ROOM_GAME_STATE_SHOWCARD(ROOM_GAME_STATE_Result_VALUE, ROOM_GAME_STATE_SHOWCARD_VALUE),
        ROOM_GAME_STATE_Over(ROOM_GAME_STATE_SHOWCARD_VALUE, ROOM_GAME_STATE_Over_VALUE),
        ROOM_GAME_STATE_GamePrepare(ROOM_GAME_STATE_Over_VALUE, ROOM_GAME_STATE_GamePrepare_VALUE),
        ROOM_GAME_STATE_Ante(ROOM_GAME_STATE_GamePrepare_VALUE, ROOM_GAME_STATE_Ante_VALUE),
        ROOM_GAME_STATE_Flop_One(ROOM_GAME_STATE_Ante_VALUE, ROOM_GAME_STATE_Flop_One_VALUE),
        ROOM_GAME_STATE_Flop_Two(ROOM_GAME_STATE_Flop_One_VALUE, ROOM_GAME_STATE_Flop_Two_VALUE),
        ROOM_GAME_STATE_Flop_Three(ROOM_GAME_STATE_Flop_Two_VALUE, ROOM_GAME_STATE_Flop_Three_VALUE);
        
        public static final int ROOM_GAME_STATE_Ante_VALUE = 11;
        public static final int ROOM_GAME_STATE_Flop_One_VALUE = 12;
        public static final int ROOM_GAME_STATE_Flop_Three_VALUE = 14;
        public static final int ROOM_GAME_STATE_Flop_Two_VALUE = 13;
        public static final int ROOM_GAME_STATE_Flop_VALUE = 4;
        public static final int ROOM_GAME_STATE_GamePrepare_VALUE = 10;
        public static final int ROOM_GAME_STATE_GameStart_VALUE = 2;
        public static final int ROOM_GAME_STATE_GameWait_VALUE = 1;
        public static final int ROOM_GAME_STATE_Over_VALUE = 9;
        public static final int ROOM_GAME_STATE_PreFlop_VALUE = 3;
        public static final int ROOM_GAME_STATE_Result_VALUE = 7;
        public static final int ROOM_GAME_STATE_River_VALUE = 6;
        public static final int ROOM_GAME_STATE_SHOWCARD_VALUE = 8;
        public static final int ROOM_GAME_STATE_Turn_VALUE = 5;
        private static final GAME_ROOM_GAME_STATE[] VALUES;
        private static EnumLiteMap<GAME_ROOM_GAME_STATE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.GAME_ROOM_GAME_STATE.1 */
        class C12251 implements EnumLiteMap<GAME_ROOM_GAME_STATE> {
            C12251() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return GAME_ROOM_GAME_STATE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12251();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static GAME_ROOM_GAME_STATE valueOf(int i) {
            switch (i) {
                case ROOM_GAME_STATE_GameWait_VALUE:
                    return ROOM_GAME_STATE_GameWait;
                case ROOM_GAME_STATE_GameStart_VALUE:
                    return ROOM_GAME_STATE_GameStart;
                case ROOM_GAME_STATE_PreFlop_VALUE:
                    return ROOM_GAME_STATE_PreFlop;
                case ROOM_GAME_STATE_Flop_VALUE:
                    return ROOM_GAME_STATE_Flop;
                case ROOM_GAME_STATE_Turn_VALUE:
                    return ROOM_GAME_STATE_Turn;
                case ROOM_GAME_STATE_River_VALUE:
                    return ROOM_GAME_STATE_River;
                case ROOM_GAME_STATE_Result_VALUE:
                    return ROOM_GAME_STATE_Result;
                case ROOM_GAME_STATE_SHOWCARD_VALUE:
                    return ROOM_GAME_STATE_SHOWCARD;
                case ROOM_GAME_STATE_Over_VALUE:
                    return ROOM_GAME_STATE_Over;
                case ROOM_GAME_STATE_GamePrepare_VALUE:
                    return ROOM_GAME_STATE_GamePrepare;
                case ROOM_GAME_STATE_Ante_VALUE:
                    return ROOM_GAME_STATE_Ante;
                case ROOM_GAME_STATE_Flop_One_VALUE:
                    return ROOM_GAME_STATE_Flop_One;
                case ROOM_GAME_STATE_Flop_Two_VALUE:
                    return ROOM_GAME_STATE_Flop_Two;
                case ROOM_GAME_STATE_Flop_Three_VALUE:
                    return ROOM_GAME_STATE_Flop_Three;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<GAME_ROOM_GAME_STATE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(19);
        }

        public static GAME_ROOM_GAME_STATE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private GAME_ROOM_GAME_STATE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum GAME_ROOM_MESSAGE_TYPE implements ProtocolMessageEnum {
        GAME_ROOM_MESSAGE_INVITE(0, GAME_ROOM_MESSAGE_INVITE_VALUE),
        GAME_ROOM_MESSAGE_ENTER(GAME_ROOM_MESSAGE_INVITE_VALUE, GAME_ROOM_MESSAGE_ENTER_VALUE),
        GAME_ROOM_MESSAGE_LEAVE(GAME_ROOM_MESSAGE_ENTER_VALUE, GAME_ROOM_MESSAGE_LEAVE_VALUE),
        GAME_ROOM_MESSAGE_OVER(GAME_ROOM_MESSAGE_LEAVE_VALUE, GAME_ROOM_MESSAGE_OVER_VALUE),
        GAME_ROOM_MESSAGE_SITDOWN(GAME_ROOM_MESSAGE_OVER_VALUE, GAME_ROOM_MESSAGE_SITDOWN_VALUE),
        GAME_ROOM_MESSAGE_STANDUP(GAME_ROOM_MESSAGE_SITDOWN_VALUE, GAME_ROOM_MESSAGE_STANDUP_VALUE),
        GAME_ROOM_MESSAGE_BUYIN(GAME_ROOM_MESSAGE_STANDUP_VALUE, GAME_ROOM_MESSAGE_BUYIN_VALUE),
        GAME_ROOM_MESSAGE_DELAY(GAME_ROOM_MESSAGE_BUYIN_VALUE, GAME_ROOM_MESSAGE_DELAY_VALUE),
        GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO(GAME_ROOM_MESSAGE_DELAY_VALUE, GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO_VALUE),
        GAME_ROOM_MESSAGE_PAUSE(GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO_VALUE, GAME_ROOM_MESSAGE_PAUSE_VALUE),
        GAME_ROOM_MESSAGE_RESUME(GAME_ROOM_MESSAGE_PAUSE_VALUE, GAME_ROOM_MESSAGE_RESUME_VALUE),
        GAME_ROOM_MESSAGE_RETURNGAME(GAME_ROOM_MESSAGE_RESUME_VALUE, GAME_ROOM_MESSAGE_RETURNGAME_VALUE),
        GAME_ROOM_MESSAGE_BLINDRAISE(GAME_ROOM_MESSAGE_RETURNGAME_VALUE, GAME_ROOM_MESSAGE_BLINDRAISE_VALUE),
        GAME_ROOM_MESSAGE_DELEGATE(GAME_ROOM_MESSAGE_BLINDRAISE_VALUE, GAME_ROOM_MESSAGE_DELEGATE_VALUE),
        GAME_ROOM_MESSAGE_CANCEL(GAME_ROOM_MESSAGE_DELEGATE_VALUE, GAME_ROOM_MESSAGE_CANCEL_VALUE),
        GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE(GAME_ROOM_MESSAGE_CANCEL_VALUE, GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE_VALUE),
        GAME_ROOM_MESSAGE_INSURANCE_DELAY(GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE_VALUE, GAME_ROOM_MESSAGE_INSURANCE_DELAY_VALUE),
        GAME_ROOM_MESSAGE_BUY_INSURANCE(GAME_ROOM_MESSAGE_INSURANCE_DELAY_VALUE, GAME_ROOM_MESSAGE_BUY_INSURANCE_VALUE),
        GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT(GAME_ROOM_MESSAGE_BUY_INSURANCE_VALUE, GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT_VALUE),
        GAME_ROOM_MESSAGE_START(GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT_VALUE, GAME_ROOM_MESSAGE_START_VALUE),
        GAME_ROOM_MESSAGE_KICK(GAME_ROOM_MESSAGE_START_VALUE, GAME_ROOM_MESSAGE_KICK_VALUE),
        GAME_ROOM_MESSAGE_FORCE_CANCEL(GAME_ROOM_MESSAGE_KICK_VALUE, GAME_ROOM_MESSAGE_FORCE_CANCEL_VALUE),
        GAME_ROOM_MESSAGE_FORCE_STANDUP(GAME_ROOM_MESSAGE_FORCE_CANCEL_VALUE, GAME_ROOM_MESSAGE_FORCE_STANDUP_VALUE),
        GAME_ROOM_MESSAGE_SET_STRADDLE(GAME_ROOM_MESSAGE_FORCE_STANDUP_VALUE, GAME_ROOM_MESSAGE_SET_STRADDLE_VALUE),
        GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL(GAME_ROOM_MESSAGE_SET_STRADDLE_VALUE, GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL_VALUE);
        
        public static final int GAME_ROOM_MESSAGE_BLINDRAISE_VALUE = 13;
        public static final int GAME_ROOM_MESSAGE_BUYIN_VALUE = 7;
        public static final int GAME_ROOM_MESSAGE_BUY_INSURANCE_VALUE = 18;
        public static final int GAME_ROOM_MESSAGE_CANCEL_VALUE = 15;
        public static final int GAME_ROOM_MESSAGE_DELAY_VALUE = 8;
        public static final int GAME_ROOM_MESSAGE_DELEGATE_VALUE = 14;
        public static final int GAME_ROOM_MESSAGE_ENTER_VALUE = 2;
        public static final int GAME_ROOM_MESSAGE_FORCE_CANCEL_VALUE = 22;
        public static final int GAME_ROOM_MESSAGE_FORCE_STANDUP_VALUE = 23;
        public static final int GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE_VALUE = 16;
        public static final int GAME_ROOM_MESSAGE_INSURANCE_DELAY_VALUE = 17;
        public static final int GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT_VALUE = 19;
        public static final int GAME_ROOM_MESSAGE_INVITE_VALUE = 1;
        public static final int GAME_ROOM_MESSAGE_KICK_VALUE = 21;
        public static final int GAME_ROOM_MESSAGE_LEAVE_VALUE = 3;
        public static final int GAME_ROOM_MESSAGE_OVER_VALUE = 4;
        public static final int GAME_ROOM_MESSAGE_PAUSE_VALUE = 10;
        public static final int GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO_VALUE = 9;
        public static final int GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL_VALUE = 25;
        public static final int GAME_ROOM_MESSAGE_RESUME_VALUE = 11;
        public static final int GAME_ROOM_MESSAGE_RETURNGAME_VALUE = 12;
        public static final int GAME_ROOM_MESSAGE_SET_STRADDLE_VALUE = 24;
        public static final int GAME_ROOM_MESSAGE_SITDOWN_VALUE = 5;
        public static final int GAME_ROOM_MESSAGE_STANDUP_VALUE = 6;
        public static final int GAME_ROOM_MESSAGE_START_VALUE = 20;
        private static final GAME_ROOM_MESSAGE_TYPE[] VALUES;
        private static EnumLiteMap<GAME_ROOM_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.GAME_ROOM_MESSAGE_TYPE.1 */
        class C12261 implements EnumLiteMap<GAME_ROOM_MESSAGE_TYPE> {
            C12261() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return GAME_ROOM_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12261();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static GAME_ROOM_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case GAME_ROOM_MESSAGE_INVITE_VALUE:
                    return GAME_ROOM_MESSAGE_INVITE;
                case GAME_ROOM_MESSAGE_ENTER_VALUE:
                    return GAME_ROOM_MESSAGE_ENTER;
                case GAME_ROOM_MESSAGE_LEAVE_VALUE:
                    return GAME_ROOM_MESSAGE_LEAVE;
                case GAME_ROOM_MESSAGE_OVER_VALUE:
                    return GAME_ROOM_MESSAGE_OVER;
                case GAME_ROOM_MESSAGE_SITDOWN_VALUE:
                    return GAME_ROOM_MESSAGE_SITDOWN;
                case GAME_ROOM_MESSAGE_STANDUP_VALUE:
                    return GAME_ROOM_MESSAGE_STANDUP;
                case GAME_ROOM_MESSAGE_BUYIN_VALUE:
                    return GAME_ROOM_MESSAGE_BUYIN;
                case GAME_ROOM_MESSAGE_DELAY_VALUE:
                    return GAME_ROOM_MESSAGE_DELAY;
                case GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO_VALUE:
                    return GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO;
                case GAME_ROOM_MESSAGE_PAUSE_VALUE:
                    return GAME_ROOM_MESSAGE_PAUSE;
                case GAME_ROOM_MESSAGE_RESUME_VALUE:
                    return GAME_ROOM_MESSAGE_RESUME;
                case GAME_ROOM_MESSAGE_RETURNGAME_VALUE:
                    return GAME_ROOM_MESSAGE_RETURNGAME;
                case GAME_ROOM_MESSAGE_BLINDRAISE_VALUE:
                    return GAME_ROOM_MESSAGE_BLINDRAISE;
                case GAME_ROOM_MESSAGE_DELEGATE_VALUE:
                    return GAME_ROOM_MESSAGE_DELEGATE;
                case GAME_ROOM_MESSAGE_CANCEL_VALUE:
                    return GAME_ROOM_MESSAGE_CANCEL;
                case GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE_VALUE:
                    return GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE;
                case GAME_ROOM_MESSAGE_INSURANCE_DELAY_VALUE:
                    return GAME_ROOM_MESSAGE_INSURANCE_DELAY;
                case GAME_ROOM_MESSAGE_BUY_INSURANCE_VALUE:
                    return GAME_ROOM_MESSAGE_BUY_INSURANCE;
                case GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT_VALUE:
                    return GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT;
                case GAME_ROOM_MESSAGE_START_VALUE:
                    return GAME_ROOM_MESSAGE_START;
                case GAME_ROOM_MESSAGE_KICK_VALUE:
                    return GAME_ROOM_MESSAGE_KICK;
                case GAME_ROOM_MESSAGE_FORCE_CANCEL_VALUE:
                    return GAME_ROOM_MESSAGE_FORCE_CANCEL;
                case GAME_ROOM_MESSAGE_FORCE_STANDUP_VALUE:
                    return GAME_ROOM_MESSAGE_FORCE_STANDUP;
                case GAME_ROOM_MESSAGE_SET_STRADDLE_VALUE:
                    return GAME_ROOM_MESSAGE_SET_STRADDLE;
                case GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL_VALUE:
                    return GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<GAME_ROOM_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(GAME_ROOM_MESSAGE_PAUSE_VALUE);
        }

        public static GAME_ROOM_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private GAME_ROOM_MESSAGE_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum GAME_ROOM_SENIOR_TYPE implements ProtocolMessageEnum {
        GAME_ROOM_SENIOR_TYPE_NO(0, 0),
        GAME_ROOM_SENIOR_TYPE_NORMAL(1, GAME_ROOM_SENIOR_TYPE_NORMAL_VALUE);
        
        public static final int GAME_ROOM_SENIOR_TYPE_NORMAL_VALUE = 2;
        public static final int GAME_ROOM_SENIOR_TYPE_NO_VALUE = 0;
        private static final GAME_ROOM_SENIOR_TYPE[] VALUES;
        private static EnumLiteMap<GAME_ROOM_SENIOR_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.GAME_ROOM_SENIOR_TYPE.1 */
        class C12271 implements EnumLiteMap<GAME_ROOM_SENIOR_TYPE> {
            C12271() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return GAME_ROOM_SENIOR_TYPE.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12271();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static GAME_ROOM_SENIOR_TYPE valueOf(int i) {
            switch (i) {
                case SQLiteDatabase.OPEN_READWRITE /*0*/:
                    return GAME_ROOM_SENIOR_TYPE_NO;
                case GAME_ROOM_SENIOR_TYPE_NORMAL_VALUE:
                    return GAME_ROOM_SENIOR_TYPE_NORMAL;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<GAME_ROOM_SENIOR_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(14);
        }

        public static GAME_ROOM_SENIOR_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private GAME_ROOM_SENIOR_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface GamePotResultInfoOrBuilder extends MessageOrBuilder {
        long getLUserPots(int i);

        int getLUserPotsCount();

        List<Long> getLUserPotsList();

        UserBaseInfoNet getStUserWiner(int i);

        int getStUserWinerCount();

        List<UserBaseInfoNet> getStUserWinerList();

        UserBaseInfoNetOrBuilder getStUserWinerOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getStUserWinerOrBuilderList();
    }

    public static final class GamePotResultInfo extends GeneratedMessage implements GamePotResultInfoOrBuilder {
        public static final int LUSERPOTS_FIELD_NUMBER = 2;
        public static Parser<GamePotResultInfo> PARSER = null;
        public static final int STUSERWINER_FIELD_NUMBER = 1;
        private static final GamePotResultInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private List<Long> lUserPots_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private List<UserBaseInfoNet> stUserWiner_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.GamePotResultInfo.1 */
        class C12281 extends AbstractParser<GamePotResultInfo> {
            C12281() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new GamePotResultInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GamePotResultInfoOrBuilder {
            private int bitField0_;
            private List<Long> lUserPots_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserWinerBuilder_;
            private List<UserBaseInfoNet> stUserWiner_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ck;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cl.ensureFieldAccessorsInitialized(GamePotResultInfo.class, Builder.class);
            }

            private Builder() {
                this.stUserWiner_ = Collections.emptyList();
                this.lUserPots_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stUserWiner_ = Collections.emptyList();
                this.lUserPots_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GamePotResultInfo.alwaysUseFieldBuilders) {
                    getStUserWinerFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stUserWinerBuilder_ == null) {
                    this.stUserWiner_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                } else {
                    this.stUserWinerBuilder_.clear();
                }
                this.lUserPots_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ck;
            }

            public final GamePotResultInfo getDefaultInstanceForType() {
                return GamePotResultInfo.getDefaultInstance();
            }

            public final GamePotResultInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GamePotResultInfo buildPartial() {
                GamePotResultInfo gamePotResultInfo = new GamePotResultInfo(null);
                if (this.stUserWinerBuilder_ == null) {
                    if ((this.bitField0_ & GamePotResultInfo.STUSERWINER_FIELD_NUMBER) == GamePotResultInfo.STUSERWINER_FIELD_NUMBER) {
                        this.stUserWiner_ = Collections.unmodifiableList(this.stUserWiner_);
                        this.bitField0_ &= -2;
                    }
                    gamePotResultInfo.stUserWiner_ = this.stUserWiner_;
                } else {
                    gamePotResultInfo.stUserWiner_ = this.stUserWinerBuilder_.build();
                }
                if ((this.bitField0_ & GamePotResultInfo.LUSERPOTS_FIELD_NUMBER) == GamePotResultInfo.LUSERPOTS_FIELD_NUMBER) {
                    this.lUserPots_ = Collections.unmodifiableList(this.lUserPots_);
                    this.bitField0_ &= -3;
                }
                gamePotResultInfo.lUserPots_ = this.lUserPots_;
                onBuilt();
                return gamePotResultInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GamePotResultInfo) {
                    return mergeFrom((GamePotResultInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GamePotResultInfo gamePotResultInfo) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (gamePotResultInfo != GamePotResultInfo.getDefaultInstance()) {
                    if (this.stUserWinerBuilder_ == null) {
                        if (!gamePotResultInfo.stUserWiner_.isEmpty()) {
                            if (this.stUserWiner_.isEmpty()) {
                                this.stUserWiner_ = gamePotResultInfo.stUserWiner_;
                                this.bitField0_ &= -2;
                            } else {
                                ensureStUserWinerIsMutable();
                                this.stUserWiner_.addAll(gamePotResultInfo.stUserWiner_);
                            }
                            onChanged();
                        }
                    } else if (!gamePotResultInfo.stUserWiner_.isEmpty()) {
                        if (this.stUserWinerBuilder_.isEmpty()) {
                            this.stUserWinerBuilder_.dispose();
                            this.stUserWinerBuilder_ = null;
                            this.stUserWiner_ = gamePotResultInfo.stUserWiner_;
                            this.bitField0_ &= -2;
                            if (GamePotResultInfo.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getStUserWinerFieldBuilder();
                            }
                            this.stUserWinerBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.stUserWinerBuilder_.addAllMessages(gamePotResultInfo.stUserWiner_);
                        }
                    }
                    if (!gamePotResultInfo.lUserPots_.isEmpty()) {
                        if (this.lUserPots_.isEmpty()) {
                            this.lUserPots_ = gamePotResultInfo.lUserPots_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureLUserPotsIsMutable();
                            this.lUserPots_.addAll(gamePotResultInfo.lUserPots_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(gamePotResultInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getStUserWinerCount(); i += GamePotResultInfo.STUSERWINER_FIELD_NUMBER) {
                    if (!getStUserWiner(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GamePotResultInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GamePotResultInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GamePotResultInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GamePotResultInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GamePotResultInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GamePotResultInfo$Builder");
            }

            private void ensureStUserWinerIsMutable() {
                if ((this.bitField0_ & GamePotResultInfo.STUSERWINER_FIELD_NUMBER) != GamePotResultInfo.STUSERWINER_FIELD_NUMBER) {
                    this.stUserWiner_ = new ArrayList(this.stUserWiner_);
                    this.bitField0_ |= GamePotResultInfo.STUSERWINER_FIELD_NUMBER;
                }
            }

            public final List<UserBaseInfoNet> getStUserWinerList() {
                if (this.stUserWinerBuilder_ == null) {
                    return Collections.unmodifiableList(this.stUserWiner_);
                }
                return this.stUserWinerBuilder_.getMessageList();
            }

            public final int getStUserWinerCount() {
                if (this.stUserWinerBuilder_ == null) {
                    return this.stUserWiner_.size();
                }
                return this.stUserWinerBuilder_.getCount();
            }

            public final UserBaseInfoNet getStUserWiner(int i) {
                if (this.stUserWinerBuilder_ == null) {
                    return (UserBaseInfoNet) this.stUserWiner_.get(i);
                }
                return (UserBaseInfoNet) this.stUserWinerBuilder_.getMessage(i);
            }

            public final Builder setStUserWiner(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserWinerBuilder_ != null) {
                    this.stUserWinerBuilder_.setMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.set(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setStUserWiner(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserWinerBuilder_ == null) {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.set(i, builder.build());
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addStUserWiner(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserWinerBuilder_ != null) {
                    this.stUserWinerBuilder_.addMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.add(userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addStUserWiner(int i, UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserWinerBuilder_ != null) {
                    this.stUserWinerBuilder_.addMessage(i, userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.add(i, userBaseInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addStUserWiner(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserWinerBuilder_ == null) {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.add(builder.build());
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addStUserWiner(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserWinerBuilder_ == null) {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.add(i, builder.build());
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllStUserWiner(Iterable<? extends UserBaseInfoNet> iterable) {
                if (this.stUserWinerBuilder_ == null) {
                    ensureStUserWinerIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.stUserWiner_);
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearStUserWiner() {
                if (this.stUserWinerBuilder_ == null) {
                    this.stUserWiner_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.clear();
                }
                return this;
            }

            public final Builder removeStUserWiner(int i) {
                if (this.stUserWinerBuilder_ == null) {
                    ensureStUserWinerIsMutable();
                    this.stUserWiner_.remove(i);
                    onChanged();
                } else {
                    this.stUserWinerBuilder_.remove(i);
                }
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserWinerBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserWinerFieldBuilder().getBuilder(i);
            }

            public final UserBaseInfoNetOrBuilder getStUserWinerOrBuilder(int i) {
                if (this.stUserWinerBuilder_ == null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserWiner_.get(i);
                }
                return (UserBaseInfoNetOrBuilder) this.stUserWinerBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserBaseInfoNetOrBuilder> getStUserWinerOrBuilderList() {
                if (this.stUserWinerBuilder_ != null) {
                    return this.stUserWinerBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.stUserWiner_);
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addStUserWinerBuilder() {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserWinerFieldBuilder().addBuilder(UserBaseInfoNet.getDefaultInstance());
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addStUserWinerBuilder(int i) {
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserWinerFieldBuilder().addBuilder(i, UserBaseInfoNet.getDefaultInstance());
            }

            public final List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getStUserWinerBuilderList() {
                return getStUserWinerFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserWinerFieldBuilder() {
                boolean z = true;
                if (this.stUserWinerBuilder_ == null) {
                    List list = this.stUserWiner_;
                    if ((this.bitField0_ & GamePotResultInfo.STUSERWINER_FIELD_NUMBER) != GamePotResultInfo.STUSERWINER_FIELD_NUMBER) {
                        z = false;
                    }
                    this.stUserWinerBuilder_ = new RepeatedFieldBuilder(list, z, getParentForChildren(), isClean());
                    this.stUserWiner_ = null;
                }
                return this.stUserWinerBuilder_;
            }

            private void ensureLUserPotsIsMutable() {
                if ((this.bitField0_ & GamePotResultInfo.LUSERPOTS_FIELD_NUMBER) != GamePotResultInfo.LUSERPOTS_FIELD_NUMBER) {
                    this.lUserPots_ = new ArrayList(this.lUserPots_);
                    this.bitField0_ |= GamePotResultInfo.LUSERPOTS_FIELD_NUMBER;
                }
            }

            public final List<Long> getLUserPotsList() {
                return Collections.unmodifiableList(this.lUserPots_);
            }

            public final int getLUserPotsCount() {
                return this.lUserPots_.size();
            }

            public final long getLUserPots(int i) {
                return ((Long) this.lUserPots_.get(i)).longValue();
            }

            public final Builder setLUserPots(int i, long j) {
                ensureLUserPotsIsMutable();
                this.lUserPots_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addLUserPots(long j) {
                ensureLUserPotsIsMutable();
                this.lUserPots_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllLUserPots(Iterable<? extends Long> iterable) {
                ensureLUserPotsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.lUserPots_);
                onChanged();
                return this;
            }

            public final Builder clearLUserPots() {
                this.lUserPots_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private GamePotResultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GamePotResultInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GamePotResultInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final GamePotResultInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GamePotResultInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STUSERWINER_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            if ((i & STUSERWINER_FIELD_NUMBER) != STUSERWINER_FIELD_NUMBER) {
                                this.stUserWiner_ = new ArrayList();
                                i |= STUSERWINER_FIELD_NUMBER;
                            }
                            this.stUserWiner_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & LUSERPOTS_FIELD_NUMBER) != LUSERPOTS_FIELD_NUMBER) {
                                this.lUserPots_ = new ArrayList();
                                i |= LUSERPOTS_FIELD_NUMBER;
                            }
                            this.lUserPots_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & LUSERPOTS_FIELD_NUMBER) != LUSERPOTS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.lUserPots_ = new ArrayList();
                                i |= LUSERPOTS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.lUserPots_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STUSERWINER_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & STUSERWINER_FIELD_NUMBER) == STUSERWINER_FIELD_NUMBER) {
                        this.stUserWiner_ = Collections.unmodifiableList(this.stUserWiner_);
                    }
                    if ((i & LUSERPOTS_FIELD_NUMBER) == LUSERPOTS_FIELD_NUMBER) {
                        this.lUserPots_ = Collections.unmodifiableList(this.lUserPots_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & STUSERWINER_FIELD_NUMBER) == STUSERWINER_FIELD_NUMBER) {
                this.stUserWiner_ = Collections.unmodifiableList(this.stUserWiner_);
            }
            if ((i & LUSERPOTS_FIELD_NUMBER) == LUSERPOTS_FIELD_NUMBER) {
                this.lUserPots_ = Collections.unmodifiableList(this.lUserPots_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ck;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cl.ensureFieldAccessorsInitialized(GamePotResultInfo.class, Builder.class);
        }

        static {
            PARSER = new C12281();
            GamePotResultInfo gamePotResultInfo = new GamePotResultInfo(true);
            defaultInstance = gamePotResultInfo;
            gamePotResultInfo.initFields();
        }

        public final Parser<GamePotResultInfo> getParserForType() {
            return PARSER;
        }

        public final List<UserBaseInfoNet> getStUserWinerList() {
            return this.stUserWiner_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getStUserWinerOrBuilderList() {
            return this.stUserWiner_;
        }

        public final int getStUserWinerCount() {
            return this.stUserWiner_.size();
        }

        public final UserBaseInfoNet getStUserWiner(int i) {
            return (UserBaseInfoNet) this.stUserWiner_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getStUserWinerOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.stUserWiner_.get(i);
        }

        public final List<Long> getLUserPotsList() {
            return this.lUserPots_;
        }

        public final int getLUserPotsCount() {
            return this.lUserPots_.size();
        }

        public final long getLUserPots(int i) {
            return ((Long) this.lUserPots_.get(i)).longValue();
        }

        private void initFields() {
            this.stUserWiner_ = Collections.emptyList();
            this.lUserPots_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            int i = 0;
            while (i < getStUserWinerCount()) {
                if (getStUserWiner(i).isInitialized()) {
                    i += STUSERWINER_FIELD_NUMBER;
                } else {
                    this.memoizedIsInitialized = (byte) 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = (byte) 1;
            return true;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i = 0;
            getSerializedSize();
            for (int i2 = 0; i2 < this.stUserWiner_.size(); i2 += STUSERWINER_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERWINER_FIELD_NUMBER, (MessageLite) this.stUserWiner_.get(i2));
            }
            while (i < this.lUserPots_.size()) {
                codedOutputStream.writeInt64(LUSERPOTS_FIELD_NUMBER, ((Long) this.lUserPots_.get(i)).longValue());
                i += STUSERWINER_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int i3;
            int i4 = 0;
            for (i3 = 0; i3 < this.stUserWiner_.size(); i3 += STUSERWINER_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeMessageSize(STUSERWINER_FIELD_NUMBER, (MessageLite) this.stUserWiner_.get(i3));
            }
            i3 = 0;
            while (i < this.lUserPots_.size()) {
                i += STUSERWINER_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.lUserPots_.get(i)).longValue()) + i3;
            }
            i2 = ((i4 + i3) + (getLUserPotsList().size() * STUSERWINER_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GamePotResultInfo parseFrom(ByteString byteString) {
            return (GamePotResultInfo) PARSER.parseFrom(byteString);
        }

        public static GamePotResultInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GamePotResultInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GamePotResultInfo parseFrom(byte[] bArr) {
            return (GamePotResultInfo) PARSER.parseFrom(bArr);
        }

        public static GamePotResultInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GamePotResultInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GamePotResultInfo parseFrom(InputStream inputStream) {
            return (GamePotResultInfo) PARSER.parseFrom(inputStream);
        }

        public static GamePotResultInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GamePotResultInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GamePotResultInfo parseDelimitedFrom(InputStream inputStream) {
            return (GamePotResultInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GamePotResultInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GamePotResultInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GamePotResultInfo parseFrom(CodedInputStream codedInputStream) {
            return (GamePotResultInfo) PARSER.parseFrom(codedInputStream);
        }

        public static GamePotResultInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GamePotResultInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GamePotResultInfo gamePotResultInfo) {
            return newBuilder().mergeFrom(gamePotResultInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface GameResultInfoOrBuilder extends MessageOrBuilder {
        GamePotResultInfo getStGamePotResultInfo(int i);

        int getStGamePotResultInfoCount();

        List<GamePotResultInfo> getStGamePotResultInfoList();

        GamePotResultInfoOrBuilder getStGamePotResultInfoOrBuilder(int i);

        List<? extends GamePotResultInfoOrBuilder> getStGamePotResultInfoOrBuilderList();

        long getVlOriginalUserStacks(int i);

        int getVlOriginalUserStacksCount();

        List<Long> getVlOriginalUserStacksList();
    }

    public static final class GameResultInfo extends GeneratedMessage implements GameResultInfoOrBuilder {
        public static Parser<GameResultInfo> PARSER = null;
        public static final int STGAMEPOTRESULTINFO_FIELD_NUMBER = 1;
        public static final int VLORIGINALUSERSTACKS_FIELD_NUMBER = 2;
        private static final GameResultInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private List<GamePotResultInfo> stGamePotResultInfo_;
        private final UnknownFieldSet unknownFields;
        private List<Long> vlOriginalUserStacks_;

        /* renamed from: com.texaspoker.moment.TexasPoker.GameResultInfo.1 */
        class C12291 extends AbstractParser<GameResultInfo> {
            C12291() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new GameResultInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GameResultInfoOrBuilder {
            private int bitField0_;
            private RepeatedFieldBuilder<GamePotResultInfo, Builder, GamePotResultInfoOrBuilder> stGamePotResultInfoBuilder_;
            private List<GamePotResultInfo> stGamePotResultInfo_;
            private List<Long> vlOriginalUserStacks_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cm;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cn.ensureFieldAccessorsInitialized(GameResultInfo.class, Builder.class);
            }

            private Builder() {
                this.stGamePotResultInfo_ = Collections.emptyList();
                this.vlOriginalUserStacks_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stGamePotResultInfo_ = Collections.emptyList();
                this.vlOriginalUserStacks_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GameResultInfo.alwaysUseFieldBuilders) {
                    getStGamePotResultInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stGamePotResultInfoBuilder_ == null) {
                    this.stGamePotResultInfo_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                } else {
                    this.stGamePotResultInfoBuilder_.clear();
                }
                this.vlOriginalUserStacks_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cm;
            }

            public final GameResultInfo getDefaultInstanceForType() {
                return GameResultInfo.getDefaultInstance();
            }

            public final GameResultInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GameResultInfo buildPartial() {
                GameResultInfo gameResultInfo = new GameResultInfo(null);
                if (this.stGamePotResultInfoBuilder_ == null) {
                    if ((this.bitField0_ & GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) == GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                        this.stGamePotResultInfo_ = Collections.unmodifiableList(this.stGamePotResultInfo_);
                        this.bitField0_ &= -2;
                    }
                    gameResultInfo.stGamePotResultInfo_ = this.stGamePotResultInfo_;
                } else {
                    gameResultInfo.stGamePotResultInfo_ = this.stGamePotResultInfoBuilder_.build();
                }
                if ((this.bitField0_ & GameResultInfo.VLORIGINALUSERSTACKS_FIELD_NUMBER) == GameResultInfo.VLORIGINALUSERSTACKS_FIELD_NUMBER) {
                    this.vlOriginalUserStacks_ = Collections.unmodifiableList(this.vlOriginalUserStacks_);
                    this.bitField0_ &= -3;
                }
                gameResultInfo.vlOriginalUserStacks_ = this.vlOriginalUserStacks_;
                onBuilt();
                return gameResultInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GameResultInfo) {
                    return mergeFrom((GameResultInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GameResultInfo gameResultInfo) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (gameResultInfo != GameResultInfo.getDefaultInstance()) {
                    if (this.stGamePotResultInfoBuilder_ == null) {
                        if (!gameResultInfo.stGamePotResultInfo_.isEmpty()) {
                            if (this.stGamePotResultInfo_.isEmpty()) {
                                this.stGamePotResultInfo_ = gameResultInfo.stGamePotResultInfo_;
                                this.bitField0_ &= -2;
                            } else {
                                ensureStGamePotResultInfoIsMutable();
                                this.stGamePotResultInfo_.addAll(gameResultInfo.stGamePotResultInfo_);
                            }
                            onChanged();
                        }
                    } else if (!gameResultInfo.stGamePotResultInfo_.isEmpty()) {
                        if (this.stGamePotResultInfoBuilder_.isEmpty()) {
                            this.stGamePotResultInfoBuilder_.dispose();
                            this.stGamePotResultInfoBuilder_ = null;
                            this.stGamePotResultInfo_ = gameResultInfo.stGamePotResultInfo_;
                            this.bitField0_ &= -2;
                            if (GameResultInfo.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getStGamePotResultInfoFieldBuilder();
                            }
                            this.stGamePotResultInfoBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.stGamePotResultInfoBuilder_.addAllMessages(gameResultInfo.stGamePotResultInfo_);
                        }
                    }
                    if (!gameResultInfo.vlOriginalUserStacks_.isEmpty()) {
                        if (this.vlOriginalUserStacks_.isEmpty()) {
                            this.vlOriginalUserStacks_ = gameResultInfo.vlOriginalUserStacks_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVlOriginalUserStacksIsMutable();
                            this.vlOriginalUserStacks_.addAll(gameResultInfo.vlOriginalUserStacks_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(gameResultInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getStGamePotResultInfoCount(); i += GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                    if (!getStGamePotResultInfo(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GameResultInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GameResultInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GameResultInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GameResultInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GameResultInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GameResultInfo$Builder");
            }

            private void ensureStGamePotResultInfoIsMutable() {
                if ((this.bitField0_ & GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) != GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                    this.stGamePotResultInfo_ = new ArrayList(this.stGamePotResultInfo_);
                    this.bitField0_ |= GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER;
                }
            }

            public final List<GamePotResultInfo> getStGamePotResultInfoList() {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    return Collections.unmodifiableList(this.stGamePotResultInfo_);
                }
                return this.stGamePotResultInfoBuilder_.getMessageList();
            }

            public final int getStGamePotResultInfoCount() {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    return this.stGamePotResultInfo_.size();
                }
                return this.stGamePotResultInfoBuilder_.getCount();
            }

            public final GamePotResultInfo getStGamePotResultInfo(int i) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    return (GamePotResultInfo) this.stGamePotResultInfo_.get(i);
                }
                return (GamePotResultInfo) this.stGamePotResultInfoBuilder_.getMessage(i);
            }

            public final Builder setStGamePotResultInfo(int i, GamePotResultInfo gamePotResultInfo) {
                if (this.stGamePotResultInfoBuilder_ != null) {
                    this.stGamePotResultInfoBuilder_.setMessage(i, gamePotResultInfo);
                } else if (gamePotResultInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.set(i, gamePotResultInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder setStGamePotResultInfo(int i, Builder builder) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.set(i, builder.build());
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addStGamePotResultInfo(GamePotResultInfo gamePotResultInfo) {
                if (this.stGamePotResultInfoBuilder_ != null) {
                    this.stGamePotResultInfoBuilder_.addMessage(gamePotResultInfo);
                } else if (gamePotResultInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.add(gamePotResultInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addStGamePotResultInfo(int i, GamePotResultInfo gamePotResultInfo) {
                if (this.stGamePotResultInfoBuilder_ != null) {
                    this.stGamePotResultInfoBuilder_.addMessage(i, gamePotResultInfo);
                } else if (gamePotResultInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.add(i, gamePotResultInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addStGamePotResultInfo(Builder builder) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.add(builder.build());
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addStGamePotResultInfo(int i, Builder builder) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.add(i, builder.build());
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllStGamePotResultInfo(Iterable<? extends GamePotResultInfo> iterable) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    ensureStGamePotResultInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.stGamePotResultInfo_);
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearStGamePotResultInfo() {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    this.stGamePotResultInfo_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.clear();
                }
                return this;
            }

            public final Builder removeStGamePotResultInfo(int i) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    ensureStGamePotResultInfoIsMutable();
                    this.stGamePotResultInfo_.remove(i);
                    onChanged();
                } else {
                    this.stGamePotResultInfoBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getStGamePotResultInfoBuilder(int i) {
                return (Builder) getStGamePotResultInfoFieldBuilder().getBuilder(i);
            }

            public final GamePotResultInfoOrBuilder getStGamePotResultInfoOrBuilder(int i) {
                if (this.stGamePotResultInfoBuilder_ == null) {
                    return (GamePotResultInfoOrBuilder) this.stGamePotResultInfo_.get(i);
                }
                return (GamePotResultInfoOrBuilder) this.stGamePotResultInfoBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends GamePotResultInfoOrBuilder> getStGamePotResultInfoOrBuilderList() {
                if (this.stGamePotResultInfoBuilder_ != null) {
                    return this.stGamePotResultInfoBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.stGamePotResultInfo_);
            }

            public final Builder addStGamePotResultInfoBuilder() {
                return (Builder) getStGamePotResultInfoFieldBuilder().addBuilder(GamePotResultInfo.getDefaultInstance());
            }

            public final Builder addStGamePotResultInfoBuilder(int i) {
                return (Builder) getStGamePotResultInfoFieldBuilder().addBuilder(i, GamePotResultInfo.getDefaultInstance());
            }

            public final List<Builder> getStGamePotResultInfoBuilderList() {
                return getStGamePotResultInfoFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<GamePotResultInfo, Builder, GamePotResultInfoOrBuilder> getStGamePotResultInfoFieldBuilder() {
                boolean z = true;
                if (this.stGamePotResultInfoBuilder_ == null) {
                    List list = this.stGamePotResultInfo_;
                    if ((this.bitField0_ & GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) != GameResultInfo.STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                        z = false;
                    }
                    this.stGamePotResultInfoBuilder_ = new RepeatedFieldBuilder(list, z, getParentForChildren(), isClean());
                    this.stGamePotResultInfo_ = null;
                }
                return this.stGamePotResultInfoBuilder_;
            }

            private void ensureVlOriginalUserStacksIsMutable() {
                if ((this.bitField0_ & GameResultInfo.VLORIGINALUSERSTACKS_FIELD_NUMBER) != GameResultInfo.VLORIGINALUSERSTACKS_FIELD_NUMBER) {
                    this.vlOriginalUserStacks_ = new ArrayList(this.vlOriginalUserStacks_);
                    this.bitField0_ |= GameResultInfo.VLORIGINALUSERSTACKS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVlOriginalUserStacksList() {
                return Collections.unmodifiableList(this.vlOriginalUserStacks_);
            }

            public final int getVlOriginalUserStacksCount() {
                return this.vlOriginalUserStacks_.size();
            }

            public final long getVlOriginalUserStacks(int i) {
                return ((Long) this.vlOriginalUserStacks_.get(i)).longValue();
            }

            public final Builder setVlOriginalUserStacks(int i, long j) {
                ensureVlOriginalUserStacksIsMutable();
                this.vlOriginalUserStacks_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVlOriginalUserStacks(long j) {
                ensureVlOriginalUserStacksIsMutable();
                this.vlOriginalUserStacks_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVlOriginalUserStacks(Iterable<? extends Long> iterable) {
                ensureVlOriginalUserStacksIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vlOriginalUserStacks_);
                onChanged();
                return this;
            }

            public final Builder clearVlOriginalUserStacks() {
                this.vlOriginalUserStacks_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        private GameResultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GameResultInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GameResultInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final GameResultInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GameResultInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STGAMEPOTRESULTINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            if ((i & STGAMEPOTRESULTINFO_FIELD_NUMBER) != STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                                this.stGamePotResultInfo_ = new ArrayList();
                                i |= STGAMEPOTRESULTINFO_FIELD_NUMBER;
                            }
                            this.stGamePotResultInfo_.add((GamePotResultInfo) codedInputStream.readMessage(GamePotResultInfo.PARSER, extensionRegistryLite));
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            if ((i & VLORIGINALUSERSTACKS_FIELD_NUMBER) != VLORIGINALUSERSTACKS_FIELD_NUMBER) {
                                this.vlOriginalUserStacks_ = new ArrayList();
                                i |= VLORIGINALUSERSTACKS_FIELD_NUMBER;
                            }
                            this.vlOriginalUserStacks_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VLORIGINALUSERSTACKS_FIELD_NUMBER) != VLORIGINALUSERSTACKS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vlOriginalUserStacks_ = new ArrayList();
                                i |= VLORIGINALUSERSTACKS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vlOriginalUserStacks_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STGAMEPOTRESULTINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & STGAMEPOTRESULTINFO_FIELD_NUMBER) == STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                        this.stGamePotResultInfo_ = Collections.unmodifiableList(this.stGamePotResultInfo_);
                    }
                    if ((i & VLORIGINALUSERSTACKS_FIELD_NUMBER) == VLORIGINALUSERSTACKS_FIELD_NUMBER) {
                        this.vlOriginalUserStacks_ = Collections.unmodifiableList(this.vlOriginalUserStacks_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & STGAMEPOTRESULTINFO_FIELD_NUMBER) == STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                this.stGamePotResultInfo_ = Collections.unmodifiableList(this.stGamePotResultInfo_);
            }
            if ((i & VLORIGINALUSERSTACKS_FIELD_NUMBER) == VLORIGINALUSERSTACKS_FIELD_NUMBER) {
                this.vlOriginalUserStacks_ = Collections.unmodifiableList(this.vlOriginalUserStacks_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cm;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cn.ensureFieldAccessorsInitialized(GameResultInfo.class, Builder.class);
        }

        static {
            PARSER = new C12291();
            GameResultInfo gameResultInfo = new GameResultInfo(true);
            defaultInstance = gameResultInfo;
            gameResultInfo.initFields();
        }

        public final Parser<GameResultInfo> getParserForType() {
            return PARSER;
        }

        public final List<GamePotResultInfo> getStGamePotResultInfoList() {
            return this.stGamePotResultInfo_;
        }

        public final List<? extends GamePotResultInfoOrBuilder> getStGamePotResultInfoOrBuilderList() {
            return this.stGamePotResultInfo_;
        }

        public final int getStGamePotResultInfoCount() {
            return this.stGamePotResultInfo_.size();
        }

        public final GamePotResultInfo getStGamePotResultInfo(int i) {
            return (GamePotResultInfo) this.stGamePotResultInfo_.get(i);
        }

        public final GamePotResultInfoOrBuilder getStGamePotResultInfoOrBuilder(int i) {
            return (GamePotResultInfoOrBuilder) this.stGamePotResultInfo_.get(i);
        }

        public final List<Long> getVlOriginalUserStacksList() {
            return this.vlOriginalUserStacks_;
        }

        public final int getVlOriginalUserStacksCount() {
            return this.vlOriginalUserStacks_.size();
        }

        public final long getVlOriginalUserStacks(int i) {
            return ((Long) this.vlOriginalUserStacks_.get(i)).longValue();
        }

        private void initFields() {
            this.stGamePotResultInfo_ = Collections.emptyList();
            this.vlOriginalUserStacks_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            int i = 0;
            while (i < getStGamePotResultInfoCount()) {
                if (getStGamePotResultInfo(i).isInitialized()) {
                    i += STGAMEPOTRESULTINFO_FIELD_NUMBER;
                } else {
                    this.memoizedIsInitialized = (byte) 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = (byte) 1;
            return true;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i = 0;
            getSerializedSize();
            for (int i2 = 0; i2 < this.stGamePotResultInfo_.size(); i2 += STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEPOTRESULTINFO_FIELD_NUMBER, (MessageLite) this.stGamePotResultInfo_.get(i2));
            }
            while (i < this.vlOriginalUserStacks_.size()) {
                codedOutputStream.writeInt64(VLORIGINALUSERSTACKS_FIELD_NUMBER, ((Long) this.vlOriginalUserStacks_.get(i)).longValue());
                i += STGAMEPOTRESULTINFO_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int i3;
            int i4 = 0;
            for (i3 = 0; i3 < this.stGamePotResultInfo_.size(); i3 += STGAMEPOTRESULTINFO_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeMessageSize(STGAMEPOTRESULTINFO_FIELD_NUMBER, (MessageLite) this.stGamePotResultInfo_.get(i3));
            }
            i3 = 0;
            while (i < this.vlOriginalUserStacks_.size()) {
                i += STGAMEPOTRESULTINFO_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vlOriginalUserStacks_.get(i)).longValue()) + i3;
            }
            i2 = ((i4 + i3) + (getVlOriginalUserStacksList().size() * STGAMEPOTRESULTINFO_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GameResultInfo parseFrom(ByteString byteString) {
            return (GameResultInfo) PARSER.parseFrom(byteString);
        }

        public static GameResultInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GameResultInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GameResultInfo parseFrom(byte[] bArr) {
            return (GameResultInfo) PARSER.parseFrom(bArr);
        }

        public static GameResultInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GameResultInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GameResultInfo parseFrom(InputStream inputStream) {
            return (GameResultInfo) PARSER.parseFrom(inputStream);
        }

        public static GameResultInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameResultInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GameResultInfo parseDelimitedFrom(InputStream inputStream) {
            return (GameResultInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GameResultInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameResultInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GameResultInfo parseFrom(CodedInputStream codedInputStream) {
            return (GameResultInfo) PARSER.parseFrom(codedInputStream);
        }

        public static GameResultInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameResultInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GameResultInfo gameResultInfo) {
            return newBuilder().mergeFrom(gameResultInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface GameRoomBaseInfoOrBuilder extends MessageOrBuilder {
        int getBBuyIn();

        int getBBuyinControl();

        int getBGPSLimit();

        int getBGamePause();

        int getBIPLimit();

        int getBInGame();

        int getBInsurance();

        int getBPrivateRoom();

        int getBStarted();

        int getBStraddle();

        CREATE_ROOM_TYPE getECreateRoomType();

        GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType();

        GAME_ROOM_TYPE getEGameRoomType();

        int getIAnte();

        int getIGameRoomUserMaxNums();

        int getIGameRoomUserNums();

        int getIMaxBuyinRatio();

        int getIMinBuyinRatio();

        int getIThinkingInterval();

        long getLBigBlinds();

        long getLBuyIn();

        long getLChatRoomID();

        long getLCreateTime();

        long getLDuration();

        long getLGamePauseTime();

        long getLGameRoomId();

        long getLLeagueID();

        long getLSmallBlinds();

        long getLStartTime();

        String getSFromClubCreatorName();

        ByteString getSFromClubCreatorNameBytes();

        String getSFromClubName();

        ByteString getSFromClubNameBytes();

        String getSFromClubUrl();

        ByteString getSFromClubUrlBytes();

        String getSFromMsg();

        ByteString getSFromMsgBytes();

        String getSLeagueName();

        ByteString getSLeagueNameBytes();

        UserBaseInfoNet getStCreateUserBaseInfo();

        UserBaseInfoNetOrBuilder getStCreateUserBaseInfoOrBuilder();

        String getStrRoomName();

        ByteString getStrRoomNameBytes();

        boolean hasBBuyIn();

        boolean hasBBuyinControl();

        boolean hasBGPSLimit();

        boolean hasBGamePause();

        boolean hasBIPLimit();

        boolean hasBInGame();

        boolean hasBInsurance();

        boolean hasBPrivateRoom();

        boolean hasBStarted();

        boolean hasBStraddle();

        boolean hasECreateRoomType();

        boolean hasEGameRoomSeniorType();

        boolean hasEGameRoomType();

        boolean hasIAnte();

        boolean hasIGameRoomUserMaxNums();

        boolean hasIGameRoomUserNums();

        boolean hasIMaxBuyinRatio();

        boolean hasIMinBuyinRatio();

        boolean hasIThinkingInterval();

        boolean hasLBigBlinds();

        boolean hasLBuyIn();

        boolean hasLChatRoomID();

        boolean hasLCreateTime();

        boolean hasLDuration();

        boolean hasLGamePauseTime();

        boolean hasLGameRoomId();

        boolean hasLLeagueID();

        boolean hasLSmallBlinds();

        boolean hasLStartTime();

        boolean hasSFromClubCreatorName();

        boolean hasSFromClubName();

        boolean hasSFromClubUrl();

        boolean hasSFromMsg();

        boolean hasSLeagueName();

        boolean hasStCreateUserBaseInfo();

        boolean hasStrRoomName();
    }

    public static final class GameRoomBaseInfo extends GeneratedMessage implements GameRoomBaseInfoOrBuilder {
        public static final int BBUYINCONTROL_FIELD_NUMBER = 19;
        public static final int BBUYIN_FIELD_NUMBER = 8;
        public static final int BGAMEPAUSE_FIELD_NUMBER = 20;
        public static final int BGPSLIMIT_FIELD_NUMBER = 29;
        public static final int BINGAME_FIELD_NUMBER = 25;
        public static final int BINSURANCE_FIELD_NUMBER = 24;
        public static final int BIPLIMIT_FIELD_NUMBER = 28;
        public static final int BPRIVATEROOM_FIELD_NUMBER = 4;
        public static final int BSTARTED_FIELD_NUMBER = 12;
        public static final int BSTRADDLE_FIELD_NUMBER = 35;
        public static final int ECREATEROOMTYPE_FIELD_NUMBER = 15;
        public static final int EGAMEROOMSENIORTYPE_FIELD_NUMBER = 16;
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 26;
        public static final int IANTE_FIELD_NUMBER = 23;
        public static final int IGAMEROOMUSERMAXNUMS_FIELD_NUMBER = 22;
        public static final int IGAMEROOMUSERNUMS_FIELD_NUMBER = 13;
        public static final int IMAXBUYINRATIO_FIELD_NUMBER = 17;
        public static final int IMINBUYINRATIO_FIELD_NUMBER = 18;
        public static final int ITHINKINGINTERVAL_FIELD_NUMBER = 34;
        public static final int LBIGBLINDS_FIELD_NUMBER = 6;
        public static final int LBUYIN_FIELD_NUMBER = 7;
        public static final int LCHATROOMID_FIELD_NUMBER = 11;
        public static final int LCREATETIME_FIELD_NUMBER = 9;
        public static final int LDURATION_FIELD_NUMBER = 10;
        public static final int LGAMEPAUSETIME_FIELD_NUMBER = 21;
        public static final int LGAMEROOMID_FIELD_NUMBER = 1;
        public static final int LLEAGUEID_FIELD_NUMBER = 30;
        public static final int LSMALLBLINDS_FIELD_NUMBER = 5;
        public static final int LSTARTTIME_FIELD_NUMBER = 27;
        public static Parser<GameRoomBaseInfo> PARSER = null;
        public static final int SFROMCLUBCREATORNAME_FIELD_NUMBER = 36;
        public static final int SFROMCLUBNAME_FIELD_NUMBER = 32;
        public static final int SFROMCLUBURL_FIELD_NUMBER = 33;
        public static final int SFROMMSG_FIELD_NUMBER = 14;
        public static final int SLEAGUENAME_FIELD_NUMBER = 31;
        public static final int STCREATEUSERBASEINFO_FIELD_NUMBER = 3;
        public static final int STRROOMNAME_FIELD_NUMBER = 2;
        private static final GameRoomBaseInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bBuyIn_;
        private int bBuyinControl_;
        private int bGPSLimit_;
        private int bGamePause_;
        private int bIPLimit_;
        private int bInGame_;
        private int bInsurance_;
        private int bPrivateRoom_;
        private int bStarted_;
        private int bStraddle_;
        private int bitField0_;
        private int bitField1_;
        private CREATE_ROOM_TYPE eCreateRoomType_;
        private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private int iAnte_;
        private int iGameRoomUserMaxNums_;
        private int iGameRoomUserNums_;
        private int iMaxBuyinRatio_;
        private int iMinBuyinRatio_;
        private int iThinkingInterval_;
        private long lBigBlinds_;
        private long lBuyIn_;
        private long lChatRoomID_;
        private long lCreateTime_;
        private long lDuration_;
        private long lGamePauseTime_;
        private long lGameRoomId_;
        private long lLeagueID_;
        private long lSmallBlinds_;
        private long lStartTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sFromClubCreatorName_;
        private Object sFromClubName_;
        private Object sFromClubUrl_;
        private Object sFromMsg_;
        private Object sLeagueName_;
        private UserBaseInfoNet stCreateUserBaseInfo_;
        private Object strRoomName_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.GameRoomBaseInfo.1 */
        class C12301 extends AbstractParser<GameRoomBaseInfo> {
            static {
                fixHelper.fixfunc(new int[]{402, 403});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12301();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GameRoomBaseInfoOrBuilder {
            private int bBuyIn_;
            private int bBuyinControl_;
            private int bGPSLimit_;
            private int bGamePause_;
            private int bIPLimit_;
            private int bInGame_;
            private int bInsurance_;
            private int bPrivateRoom_;
            private int bStarted_;
            private int bStraddle_;
            private int bitField0_;
            private int bitField1_;
            private CREATE_ROOM_TYPE eCreateRoomType_;
            private GAME_ROOM_SENIOR_TYPE eGameRoomSeniorType_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private int iAnte_;
            private int iGameRoomUserMaxNums_;
            private int iGameRoomUserNums_;
            private int iMaxBuyinRatio_;
            private int iMinBuyinRatio_;
            private int iThinkingInterval_;
            private long lBigBlinds_;
            private long lBuyIn_;
            private long lChatRoomID_;
            private long lCreateTime_;
            private long lDuration_;
            private long lGamePauseTime_;
            private long lGameRoomId_;
            private long lLeagueID_;
            private long lSmallBlinds_;
            private long lStartTime_;
            private Object sFromClubCreatorName_;
            private Object sFromClubName_;
            private Object sFromClubUrl_;
            private Object sFromMsg_;
            private Object sLeagueName_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stCreateUserBaseInfoBuilder_;
            private UserBaseInfoNet stCreateUserBaseInfo_;
            private Object strRoomName_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bA;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bB.ensureFieldAccessorsInitialized(GameRoomBaseInfo.class, Builder.class);
            }

            private Builder() {
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stCreateUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sFromMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.sLeagueName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubCreatorName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stCreateUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                this.sFromMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.sLeagueName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sFromClubCreatorName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GameRoomBaseInfo.alwaysUseFieldBuilders) {
                    getStCreateUserBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lGameRoomId_ = 0;
                this.bitField0_ &= -2;
                this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    this.stCreateUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stCreateUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                this.bPrivateRoom_ = 0;
                this.bitField0_ &= -9;
                this.lSmallBlinds_ = 0;
                this.bitField0_ &= -17;
                this.lBigBlinds_ = 0;
                this.bitField0_ &= -33;
                this.lBuyIn_ = 0;
                this.bitField0_ &= -65;
                this.bBuyIn_ = 0;
                this.bitField0_ &= -129;
                this.lCreateTime_ = 0;
                this.bitField0_ &= -257;
                this.lDuration_ = 0;
                this.bitField0_ &= -513;
                this.lChatRoomID_ = 0;
                this.bitField0_ &= -1025;
                this.bStarted_ = 0;
                this.bitField0_ &= -2049;
                this.iGameRoomUserNums_ = 0;
                this.bitField0_ &= -4097;
                this.sFromMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -8193;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                this.bitField0_ &= -16385;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                this.bitField0_ &= -32769;
                this.iMaxBuyinRatio_ = 0;
                this.bitField0_ &= -65537;
                this.iMinBuyinRatio_ = 0;
                this.bitField0_ &= -131073;
                this.bBuyinControl_ = 0;
                this.bitField0_ &= -262145;
                this.bGamePause_ = 0;
                this.bitField0_ &= -524289;
                this.lGamePauseTime_ = 0;
                this.bitField0_ &= -1048577;
                this.iGameRoomUserMaxNums_ = 0;
                this.bitField0_ &= -2097153;
                this.iAnte_ = 0;
                this.bitField0_ &= -4194305;
                this.bInsurance_ = 0;
                this.bitField0_ &= -8388609;
                this.bInGame_ = 0;
                this.bitField0_ &= -16777217;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.bitField0_ &= -33554433;
                this.lStartTime_ = 0;
                this.bitField0_ &= -67108865;
                this.bIPLimit_ = 0;
                this.bitField0_ &= -134217729;
                this.bGPSLimit_ = 0;
                this.bitField0_ &= -268435457;
                this.lLeagueID_ = 0;
                this.bitField0_ &= -536870913;
                this.sLeagueName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -1073741825;
                this.sFromClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED;
                this.sFromClubUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField1_ &= -2;
                this.iThinkingInterval_ = 0;
                this.bitField1_ &= -3;
                this.bStraddle_ = 0;
                this.bitField1_ &= -5;
                this.sFromClubCreatorName_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField1_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bA;
            }

            public final GameRoomBaseInfo getDefaultInstanceForType() {
                return GameRoomBaseInfo.getDefaultInstance();
            }

            public final GameRoomBaseInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GameRoomBaseInfo buildPartial() {
                int i;
                int i2 = GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                GameRoomBaseInfo gameRoomBaseInfo = new GameRoomBaseInfo(null);
                int i3 = this.bitField0_;
                int i4 = this.bitField1_;
                int i5 = 0;
                if ((i3 & GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) == GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) {
                    i5 = GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                }
                gameRoomBaseInfo.lGameRoomId_ = this.lGameRoomId_;
                if ((i3 & GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) {
                    i5 |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                }
                gameRoomBaseInfo.strRoomName_ = this.strRoomName_;
                if ((i3 & GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) == GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) {
                    i = i5 | GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                } else {
                    i = i5;
                }
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    gameRoomBaseInfo.stCreateUserBaseInfo_ = this.stCreateUserBaseInfo_;
                } else {
                    gameRoomBaseInfo.stCreateUserBaseInfo_ = (UserBaseInfoNet) this.stCreateUserBaseInfoBuilder_.build();
                }
                if ((i3 & GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) == GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) {
                    i |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                }
                gameRoomBaseInfo.bPrivateRoom_ = this.bPrivateRoom_;
                if ((i3 & GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER) == GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                    i |= GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                }
                gameRoomBaseInfo.lSmallBlinds_ = this.lSmallBlinds_;
                if ((i3 & GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER) == GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER) {
                    i |= GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER;
                }
                gameRoomBaseInfo.lBigBlinds_ = this.lBigBlinds_;
                if ((i3 & 64) == 64) {
                    i |= 64;
                }
                gameRoomBaseInfo.lBuyIn_ = this.lBuyIn_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                gameRoomBaseInfo.bBuyIn_ = this.bBuyIn_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                gameRoomBaseInfo.lCreateTime_ = this.lCreateTime_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                gameRoomBaseInfo.lDuration_ = this.lDuration_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                gameRoomBaseInfo.lChatRoomID_ = this.lChatRoomID_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                gameRoomBaseInfo.bStarted_ = this.bStarted_;
                if ((i3 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                }
                gameRoomBaseInfo.iGameRoomUserNums_ = this.iGameRoomUserNums_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                }
                gameRoomBaseInfo.sFromMsg_ = this.sFromMsg_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_COPY;
                }
                gameRoomBaseInfo.eCreateRoomType_ = this.eCreateRoomType_;
                if ((i3 & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                    i |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                }
                gameRoomBaseInfo.eGameRoomSeniorType_ = this.eGameRoomSeniorType_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CUT;
                }
                gameRoomBaseInfo.iMaxBuyinRatio_ = this.iMaxBuyinRatio_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                }
                gameRoomBaseInfo.iMinBuyinRatio_ = this.iMinBuyinRatio_;
                if ((AccessibilityNodeInfoCompat.ACTION_EXPAND & i3) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                    i |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                }
                gameRoomBaseInfo.bBuyinControl_ = this.bBuyinControl_;
                if ((AccessibilityNodeInfoCompat.ACTION_COLLAPSE & i3) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                    i |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                }
                gameRoomBaseInfo.bGamePause_ = this.bGamePause_;
                if ((AccessibilityNodeInfoCompat.ACTION_DISMISS & i3) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                }
                gameRoomBaseInfo.lGamePauseTime_ = this.lGamePauseTime_;
                if ((AccessibilityNodeInfoCompat.ACTION_SET_TEXT & i3) == AccessibilityNodeInfoCompat.ACTION_SET_TEXT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SET_TEXT;
                }
                gameRoomBaseInfo.iGameRoomUserMaxNums_ = this.iGameRoomUserMaxNums_;
                if ((AccessibilityEventCompat.TYPE_WINDOWS_CHANGED & i3) == AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) {
                    i |= AccessibilityEventCompat.TYPE_WINDOWS_CHANGED;
                }
                gameRoomBaseInfo.iAnte_ = this.iAnte_;
                if ((AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED & i3) == AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) {
                    i |= AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED;
                }
                gameRoomBaseInfo.bInsurance_ = this.bInsurance_;
                if ((AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT & i3) == AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) {
                    i |= AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT;
                }
                gameRoomBaseInfo.bInGame_ = this.bInGame_;
                if ((33554432 & i3) == 33554432) {
                    i |= 33554432;
                }
                gameRoomBaseInfo.eGameRoomType_ = this.eGameRoomType_;
                if ((67108864 & i3) == 67108864) {
                    i |= 67108864;
                }
                gameRoomBaseInfo.lStartTime_ = this.lStartTime_;
                if ((134217728 & i3) == 134217728) {
                    i |= 134217728;
                }
                gameRoomBaseInfo.bIPLimit_ = this.bIPLimit_;
                if ((SQLiteDatabase.CREATE_IF_NECESSARY & i3) == SQLiteDatabase.CREATE_IF_NECESSARY) {
                    i |= SQLiteDatabase.CREATE_IF_NECESSARY;
                }
                gameRoomBaseInfo.bGPSLimit_ = this.bGPSLimit_;
                if ((536870912 & i3) == 536870912) {
                    i |= 536870912;
                }
                gameRoomBaseInfo.lLeagueID_ = this.lLeagueID_;
                if ((1073741824 & i3) == 1073741824) {
                    i |= 1073741824;
                }
                gameRoomBaseInfo.sLeagueName_ = this.sLeagueName_;
                if ((i3 & RtlSpacingHelper.UNDEFINED) == RtlSpacingHelper.UNDEFINED) {
                    i |= RtlSpacingHelper.UNDEFINED;
                }
                gameRoomBaseInfo.sFromClubName_ = this.sFromClubName_;
                if ((i4 & GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) != GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) {
                    i2 = 0;
                }
                gameRoomBaseInfo.sFromClubUrl_ = this.sFromClubUrl_;
                if ((i4 & GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) {
                    i2 |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                }
                gameRoomBaseInfo.iThinkingInterval_ = this.iThinkingInterval_;
                if ((i4 & GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) == GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) {
                    i2 |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                }
                gameRoomBaseInfo.bStraddle_ = this.bStraddle_;
                if ((i4 & GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) == GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) {
                    i2 |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                }
                gameRoomBaseInfo.sFromClubCreatorName_ = this.sFromClubCreatorName_;
                gameRoomBaseInfo.bitField0_ = i;
                gameRoomBaseInfo.bitField1_ = i2;
                onBuilt();
                return gameRoomBaseInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GameRoomBaseInfo) {
                    return mergeFrom((GameRoomBaseInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GameRoomBaseInfo gameRoomBaseInfo) {
                if (gameRoomBaseInfo != GameRoomBaseInfo.getDefaultInstance()) {
                    if (gameRoomBaseInfo.hasLGameRoomId()) {
                        setLGameRoomId(gameRoomBaseInfo.getLGameRoomId());
                    }
                    if (gameRoomBaseInfo.hasStrRoomName()) {
                        this.bitField0_ |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                        this.strRoomName_ = gameRoomBaseInfo.strRoomName_;
                        onChanged();
                    }
                    if (gameRoomBaseInfo.hasStCreateUserBaseInfo()) {
                        mergeStCreateUserBaseInfo(gameRoomBaseInfo.getStCreateUserBaseInfo());
                    }
                    if (gameRoomBaseInfo.hasBPrivateRoom()) {
                        setBPrivateRoom(gameRoomBaseInfo.getBPrivateRoom());
                    }
                    if (gameRoomBaseInfo.hasLSmallBlinds()) {
                        setLSmallBlinds(gameRoomBaseInfo.getLSmallBlinds());
                    }
                    if (gameRoomBaseInfo.hasLBigBlinds()) {
                        setLBigBlinds(gameRoomBaseInfo.getLBigBlinds());
                    }
                    if (gameRoomBaseInfo.hasLBuyIn()) {
                        setLBuyIn(gameRoomBaseInfo.getLBuyIn());
                    }
                    if (gameRoomBaseInfo.hasBBuyIn()) {
                        setBBuyIn(gameRoomBaseInfo.getBBuyIn());
                    }
                    if (gameRoomBaseInfo.hasLCreateTime()) {
                        setLCreateTime(gameRoomBaseInfo.getLCreateTime());
                    }
                    if (gameRoomBaseInfo.hasLDuration()) {
                        setLDuration(gameRoomBaseInfo.getLDuration());
                    }
                    if (gameRoomBaseInfo.hasLChatRoomID()) {
                        setLChatRoomID(gameRoomBaseInfo.getLChatRoomID());
                    }
                    if (gameRoomBaseInfo.hasBStarted()) {
                        setBStarted(gameRoomBaseInfo.getBStarted());
                    }
                    if (gameRoomBaseInfo.hasIGameRoomUserNums()) {
                        setIGameRoomUserNums(gameRoomBaseInfo.getIGameRoomUserNums());
                    }
                    if (gameRoomBaseInfo.hasSFromMsg()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                        this.sFromMsg_ = gameRoomBaseInfo.sFromMsg_;
                        onChanged();
                    }
                    if (gameRoomBaseInfo.hasECreateRoomType()) {
                        setECreateRoomType(gameRoomBaseInfo.getECreateRoomType());
                    }
                    if (gameRoomBaseInfo.hasEGameRoomSeniorType()) {
                        setEGameRoomSeniorType(gameRoomBaseInfo.getEGameRoomSeniorType());
                    }
                    if (gameRoomBaseInfo.hasIMaxBuyinRatio()) {
                        setIMaxBuyinRatio(gameRoomBaseInfo.getIMaxBuyinRatio());
                    }
                    if (gameRoomBaseInfo.hasIMinBuyinRatio()) {
                        setIMinBuyinRatio(gameRoomBaseInfo.getIMinBuyinRatio());
                    }
                    if (gameRoomBaseInfo.hasBBuyinControl()) {
                        setBBuyinControl(gameRoomBaseInfo.getBBuyinControl());
                    }
                    if (gameRoomBaseInfo.hasBGamePause()) {
                        setBGamePause(gameRoomBaseInfo.getBGamePause());
                    }
                    if (gameRoomBaseInfo.hasLGamePauseTime()) {
                        setLGamePauseTime(gameRoomBaseInfo.getLGamePauseTime());
                    }
                    if (gameRoomBaseInfo.hasIGameRoomUserMaxNums()) {
                        setIGameRoomUserMaxNums(gameRoomBaseInfo.getIGameRoomUserMaxNums());
                    }
                    if (gameRoomBaseInfo.hasIAnte()) {
                        setIAnte(gameRoomBaseInfo.getIAnte());
                    }
                    if (gameRoomBaseInfo.hasBInsurance()) {
                        setBInsurance(gameRoomBaseInfo.getBInsurance());
                    }
                    if (gameRoomBaseInfo.hasBInGame()) {
                        setBInGame(gameRoomBaseInfo.getBInGame());
                    }
                    if (gameRoomBaseInfo.hasEGameRoomType()) {
                        setEGameRoomType(gameRoomBaseInfo.getEGameRoomType());
                    }
                    if (gameRoomBaseInfo.hasLStartTime()) {
                        setLStartTime(gameRoomBaseInfo.getLStartTime());
                    }
                    if (gameRoomBaseInfo.hasBIPLimit()) {
                        setBIPLimit(gameRoomBaseInfo.getBIPLimit());
                    }
                    if (gameRoomBaseInfo.hasBGPSLimit()) {
                        setBGPSLimit(gameRoomBaseInfo.getBGPSLimit());
                    }
                    if (gameRoomBaseInfo.hasLLeagueID()) {
                        setLLeagueID(gameRoomBaseInfo.getLLeagueID());
                    }
                    if (gameRoomBaseInfo.hasSLeagueName()) {
                        this.bitField0_ |= 1073741824;
                        this.sLeagueName_ = gameRoomBaseInfo.sLeagueName_;
                        onChanged();
                    }
                    if (gameRoomBaseInfo.hasSFromClubName()) {
                        this.bitField0_ |= RtlSpacingHelper.UNDEFINED;
                        this.sFromClubName_ = gameRoomBaseInfo.sFromClubName_;
                        onChanged();
                    }
                    if (gameRoomBaseInfo.hasSFromClubUrl()) {
                        this.bitField1_ |= GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                        this.sFromClubUrl_ = gameRoomBaseInfo.sFromClubUrl_;
                        onChanged();
                    }
                    if (gameRoomBaseInfo.hasIThinkingInterval()) {
                        setIThinkingInterval(gameRoomBaseInfo.getIThinkingInterval());
                    }
                    if (gameRoomBaseInfo.hasBStraddle()) {
                        setBStraddle(gameRoomBaseInfo.getBStraddle());
                    }
                    if (gameRoomBaseInfo.hasSFromClubCreatorName()) {
                        this.bitField1_ |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                        this.sFromClubCreatorName_ = gameRoomBaseInfo.sFromClubCreatorName_;
                        onChanged();
                    }
                    mergeUnknownFields(gameRoomBaseInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLGameRoomId() && hasStrRoomName() && hasStCreateUserBaseInfo() && hasBPrivateRoom() && hasLSmallBlinds() && hasLBigBlinds() && hasLBuyIn() && hasBBuyIn() && hasLCreateTime() && hasLDuration() && getStCreateUserBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GameRoomBaseInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GameRoomBaseInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomBaseInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomBaseInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GameRoomBaseInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GameRoomBaseInfo$Builder");
            }

            public final boolean hasLGameRoomId() {
                return (this.bitField0_ & GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) == GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomId() {
                return this.lGameRoomId_;
            }

            public final Builder setLGameRoomId(long j) {
                this.bitField0_ |= GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomId() {
                this.bitField0_ &= -2;
                this.lGameRoomId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStrRoomName() {
                return (this.bitField0_ & GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
            }

            public final String getStrRoomName() {
                Object obj = this.strRoomName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strRoomName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrRoomNameBytes() {
                Object obj = this.strRoomName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strRoomName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrRoomName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrRoomName() {
                this.bitField0_ &= -3;
                this.strRoomName_ = GameRoomBaseInfo.getDefaultInstance().getStrRoomName();
                onChanged();
                return this;
            }

            public final Builder setStrRoomNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                this.strRoomName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasStCreateUserBaseInfo() {
                return (this.bitField0_ & GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) == GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStCreateUserBaseInfo() {
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    return this.stCreateUserBaseInfo_;
                }
                return (UserBaseInfoNet) this.stCreateUserBaseInfoBuilder_.getMessage();
            }

            public final Builder setStCreateUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stCreateUserBaseInfoBuilder_ != null) {
                    this.stCreateUserBaseInfoBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stCreateUserBaseInfo_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                return this;
            }

            public final Builder setStCreateUserBaseInfo(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    this.stCreateUserBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stCreateUserBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStCreateUserBaseInfo(UserBaseInfoNet userBaseInfoNet) {
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) != GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER || this.stCreateUserBaseInfo_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stCreateUserBaseInfo_ = userBaseInfoNet;
                    } else {
                        this.stCreateUserBaseInfo_ = UserBaseInfoNet.newBuilder(this.stCreateUserBaseInfo_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stCreateUserBaseInfoBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStCreateUserBaseInfo() {
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    this.stCreateUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stCreateUserBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStCreateUserBaseInfoBuilder() {
                this.bitField0_ |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStCreateUserBaseInfoFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStCreateUserBaseInfoOrBuilder() {
                if (this.stCreateUserBaseInfoBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stCreateUserBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stCreateUserBaseInfo_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStCreateUserBaseInfoFieldBuilder() {
                if (this.stCreateUserBaseInfoBuilder_ == null) {
                    this.stCreateUserBaseInfoBuilder_ = new SingleFieldBuilder(getStCreateUserBaseInfo(), getParentForChildren(), isClean());
                    this.stCreateUserBaseInfo_ = null;
                }
                return this.stCreateUserBaseInfoBuilder_;
            }

            public final boolean hasBPrivateRoom() {
                return (this.bitField0_ & GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) == GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
            }

            public final int getBPrivateRoom() {
                return this.bPrivateRoom_;
            }

            public final Builder setBPrivateRoom(int i) {
                this.bitField0_ |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                this.bPrivateRoom_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBPrivateRoom() {
                this.bitField0_ &= -9;
                this.bPrivateRoom_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLSmallBlinds() {
                return (this.bitField0_ & GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER) == GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
            }

            public final long getLSmallBlinds() {
                return this.lSmallBlinds_;
            }

            public final Builder setLSmallBlinds(long j) {
                this.bitField0_ |= GameRoomBaseInfo.EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                this.lSmallBlinds_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLSmallBlinds() {
                this.bitField0_ &= -17;
                this.lSmallBlinds_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBigBlinds() {
                return (this.bitField0_ & GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER) == GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER;
            }

            public final long getLBigBlinds() {
                return this.lBigBlinds_;
            }

            public final Builder setLBigBlinds(long j) {
                this.bitField0_ |= GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER;
                this.lBigBlinds_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBigBlinds() {
                this.bitField0_ &= -33;
                this.lBigBlinds_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBuyIn() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLBuyIn() {
                return this.lBuyIn_;
            }

            public final Builder setLBuyIn(long j) {
                this.bitField0_ |= 64;
                this.lBuyIn_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyIn() {
                this.bitField0_ &= -65;
                this.lBuyIn_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyIn() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getBBuyIn() {
                return this.bBuyIn_;
            }

            public final Builder setBBuyIn(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.bBuyIn_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyIn() {
                this.bitField0_ &= -129;
                this.bBuyIn_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLCreateTime() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLCreateTime() {
                return this.lCreateTime_;
            }

            public final Builder setLCreateTime(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.lCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateTime() {
                this.bitField0_ &= -257;
                this.lCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLDuration() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLDuration() {
                return this.lDuration_;
            }

            public final Builder setLDuration(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.lDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLDuration() {
                this.bitField0_ &= -513;
                this.lDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLChatRoomID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final long getLChatRoomID() {
                return this.lChatRoomID_;
            }

            public final Builder setLChatRoomID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.lChatRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLChatRoomID() {
                this.bitField0_ &= -1025;
                this.lChatRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBStarted() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final int getBStarted() {
                return this.bStarted_;
            }

            public final Builder setBStarted(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.bStarted_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBStarted() {
                this.bitField0_ &= -2049;
                this.bStarted_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIGameRoomUserNums() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final int getIGameRoomUserNums() {
                return this.iGameRoomUserNums_;
            }

            public final Builder setIGameRoomUserNums(int i) {
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                this.iGameRoomUserNums_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIGameRoomUserNums() {
                this.bitField0_ &= -4097;
                this.iGameRoomUserNums_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSFromMsg() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
            }

            public final String getSFromMsg() {
                Object obj = this.sFromMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sFromMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSFromMsgBytes() {
                Object obj = this.sFromMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sFromMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSFromMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                this.sFromMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSFromMsg() {
                this.bitField0_ &= -8193;
                this.sFromMsg_ = GameRoomBaseInfo.getDefaultInstance().getSFromMsg();
                onChanged();
                return this;
            }

            public final Builder setSFromMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                this.sFromMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasECreateRoomType() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
            }

            public final CREATE_ROOM_TYPE getECreateRoomType() {
                return this.eCreateRoomType_;
            }

            public final Builder setECreateRoomType(CREATE_ROOM_TYPE create_room_type) {
                if (create_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                this.eCreateRoomType_ = create_room_type;
                onChanged();
                return this;
            }

            public final Builder clearECreateRoomType() {
                this.bitField0_ &= -16385;
                this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomSeniorType() {
                return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
            }

            public final GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType() {
                return this.eGameRoomSeniorType_;
            }

            public final Builder setEGameRoomSeniorType(GAME_ROOM_SENIOR_TYPE game_room_senior_type) {
                if (game_room_senior_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                this.eGameRoomSeniorType_ = game_room_senior_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomSeniorType() {
                this.bitField0_ &= -32769;
                this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
                onChanged();
                return this;
            }

            public final boolean hasIMaxBuyinRatio() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
            }

            public final int getIMaxBuyinRatio() {
                return this.iMaxBuyinRatio_;
            }

            public final Builder setIMaxBuyinRatio(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                this.iMaxBuyinRatio_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMaxBuyinRatio() {
                this.bitField0_ &= -65537;
                this.iMaxBuyinRatio_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIMinBuyinRatio() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
            }

            public final int getIMinBuyinRatio() {
                return this.iMinBuyinRatio_;
            }

            public final Builder setIMinBuyinRatio(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                this.iMinBuyinRatio_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMinBuyinRatio() {
                this.bitField0_ &= -131073;
                this.iMinBuyinRatio_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBBuyinControl() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND;
            }

            public final int getBBuyinControl() {
                return this.bBuyinControl_;
            }

            public final Builder setBBuyinControl(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                this.bBuyinControl_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBBuyinControl() {
                this.bitField0_ &= -262145;
                this.bBuyinControl_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBGamePause() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
            }

            public final int getBGamePause() {
                return this.bGamePause_;
            }

            public final Builder setBGamePause(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                this.bGamePause_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBGamePause() {
                this.bitField0_ &= -524289;
                this.bGamePause_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGamePauseTime() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS;
            }

            public final long getLGamePauseTime() {
                return this.lGamePauseTime_;
            }

            public final Builder setLGamePauseTime(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                this.lGamePauseTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGamePauseTime() {
                this.bitField0_ &= -1048577;
                this.lGamePauseTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIGameRoomUserMaxNums() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_TEXT) == AccessibilityNodeInfoCompat.ACTION_SET_TEXT;
            }

            public final int getIGameRoomUserMaxNums() {
                return this.iGameRoomUserMaxNums_;
            }

            public final Builder setIGameRoomUserMaxNums(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_TEXT;
                this.iGameRoomUserMaxNums_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIGameRoomUserMaxNums() {
                this.bitField0_ &= -2097153;
                this.iGameRoomUserMaxNums_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIAnte() {
                return (this.bitField0_ & AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) == AccessibilityEventCompat.TYPE_WINDOWS_CHANGED;
            }

            public final int getIAnte() {
                return this.iAnte_;
            }

            public final Builder setIAnte(int i) {
                this.bitField0_ |= AccessibilityEventCompat.TYPE_WINDOWS_CHANGED;
                this.iAnte_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIAnte() {
                this.bitField0_ &= -4194305;
                this.iAnte_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBInsurance() {
                return (this.bitField0_ & AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) == AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED;
            }

            public final int getBInsurance() {
                return this.bInsurance_;
            }

            public final Builder setBInsurance(int i) {
                this.bitField0_ |= AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED;
                this.bInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBInsurance() {
                this.bitField0_ &= -8388609;
                this.bInsurance_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBInGame() {
                return (this.bitField0_ & AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) == AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT;
            }

            public final int getBInGame() {
                return this.bInGame_;
            }

            public final Builder setBInGame(int i) {
                this.bitField0_ |= AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT;
                this.bInGame_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBInGame() {
                this.bitField0_ &= -16777217;
                this.bInGame_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomType() {
                return (this.bitField0_ & 33554432) == 33554432;
            }

            public final GAME_ROOM_TYPE getEGameRoomType() {
                return this.eGameRoomType_;
            }

            public final Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type) {
                if (game_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 33554432;
                this.eGameRoomType_ = game_room_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomType() {
                this.bitField0_ &= -33554433;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                onChanged();
                return this;
            }

            public final boolean hasLStartTime() {
                return (this.bitField0_ & 67108864) == 67108864;
            }

            public final long getLStartTime() {
                return this.lStartTime_;
            }

            public final Builder setLStartTime(long j) {
                this.bitField0_ |= 67108864;
                this.lStartTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStartTime() {
                this.bitField0_ &= -67108865;
                this.lStartTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBIPLimit() {
                return (this.bitField0_ & 134217728) == 134217728;
            }

            public final int getBIPLimit() {
                return this.bIPLimit_;
            }

            public final Builder setBIPLimit(int i) {
                this.bitField0_ |= 134217728;
                this.bIPLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBIPLimit() {
                this.bitField0_ &= -134217729;
                this.bIPLimit_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBGPSLimit() {
                return (this.bitField0_ & SQLiteDatabase.CREATE_IF_NECESSARY) == SQLiteDatabase.CREATE_IF_NECESSARY;
            }

            public final int getBGPSLimit() {
                return this.bGPSLimit_;
            }

            public final Builder setBGPSLimit(int i) {
                this.bitField0_ |= SQLiteDatabase.CREATE_IF_NECESSARY;
                this.bGPSLimit_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBGPSLimit() {
                this.bitField0_ &= -268435457;
                this.bGPSLimit_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLLeagueID() {
                return (this.bitField0_ & 536870912) == 536870912;
            }

            public final long getLLeagueID() {
                return this.lLeagueID_;
            }

            public final Builder setLLeagueID(long j) {
                this.bitField0_ |= 536870912;
                this.lLeagueID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLLeagueID() {
                this.bitField0_ &= -536870913;
                this.lLeagueID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSLeagueName() {
                return (this.bitField0_ & 1073741824) == 1073741824;
            }

            public final String getSLeagueName() {
                Object obj = this.sLeagueName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sLeagueName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSLeagueNameBytes() {
                Object obj = this.sLeagueName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sLeagueName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSLeagueName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 1073741824;
                this.sLeagueName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSLeagueName() {
                this.bitField0_ &= -1073741825;
                this.sLeagueName_ = GameRoomBaseInfo.getDefaultInstance().getSLeagueName();
                onChanged();
                return this;
            }

            public final Builder setSLeagueNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 1073741824;
                this.sLeagueName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSFromClubName() {
                return (this.bitField0_ & RtlSpacingHelper.UNDEFINED) == RtlSpacingHelper.UNDEFINED;
            }

            public final String getSFromClubName() {
                Object obj = this.sFromClubName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sFromClubName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSFromClubNameBytes() {
                Object obj = this.sFromClubName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sFromClubName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSFromClubName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= RtlSpacingHelper.UNDEFINED;
                this.sFromClubName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSFromClubName() {
                this.bitField0_ &= ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED;
                this.sFromClubName_ = GameRoomBaseInfo.getDefaultInstance().getSFromClubName();
                onChanged();
                return this;
            }

            public final Builder setSFromClubNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= RtlSpacingHelper.UNDEFINED;
                this.sFromClubName_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSFromClubUrl() {
                return (this.bitField1_ & GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER) == GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
            }

            public final String getSFromClubUrl() {
                Object obj = this.sFromClubUrl_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sFromClubUrl_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSFromClubUrlBytes() {
                Object obj = this.sFromClubUrl_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sFromClubUrl_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSFromClubUrl(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField1_ |= GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                this.sFromClubUrl_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSFromClubUrl() {
                this.bitField1_ &= -2;
                this.sFromClubUrl_ = GameRoomBaseInfo.getDefaultInstance().getSFromClubUrl();
                onChanged();
                return this;
            }

            public final Builder setSFromClubUrlBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField1_ |= GameRoomBaseInfo.LGAMEROOMID_FIELD_NUMBER;
                this.sFromClubUrl_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasIThinkingInterval() {
                return (this.bitField1_ & GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER) == GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
            }

            public final int getIThinkingInterval() {
                return this.iThinkingInterval_;
            }

            public final Builder setIThinkingInterval(int i) {
                this.bitField1_ |= GameRoomBaseInfo.STRROOMNAME_FIELD_NUMBER;
                this.iThinkingInterval_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIThinkingInterval() {
                this.bitField1_ &= -3;
                this.iThinkingInterval_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBStraddle() {
                return (this.bitField1_ & GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER) == GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
            }

            public final int getBStraddle() {
                return this.bStraddle_;
            }

            public final Builder setBStraddle(int i) {
                this.bitField1_ |= GameRoomBaseInfo.BPRIVATEROOM_FIELD_NUMBER;
                this.bStraddle_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBStraddle() {
                this.bitField1_ &= -5;
                this.bStraddle_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSFromClubCreatorName() {
                return (this.bitField1_ & GameRoomBaseInfo.BBUYIN_FIELD_NUMBER) == GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
            }

            public final String getSFromClubCreatorName() {
                Object obj = this.sFromClubCreatorName_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sFromClubCreatorName_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSFromClubCreatorNameBytes() {
                Object obj = this.sFromClubCreatorName_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sFromClubCreatorName_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSFromClubCreatorName(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField1_ |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                this.sFromClubCreatorName_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSFromClubCreatorName() {
                this.bitField1_ &= -9;
                this.sFromClubCreatorName_ = GameRoomBaseInfo.getDefaultInstance().getSFromClubCreatorName();
                onChanged();
                return this;
            }

            public final Builder setSFromClubCreatorNameBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField1_ |= GameRoomBaseInfo.BBUYIN_FIELD_NUMBER;
                this.sFromClubCreatorName_ = byteString;
                onChanged();
                return this;
            }
        }

        private GameRoomBaseInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GameRoomBaseInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GameRoomBaseInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final GameRoomBaseInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GameRoomBaseInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LGAMEROOMID_FIELD_NUMBER;
                            break;
                        case BBUYIN_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomId_ = codedInputStream.readInt64();
                            break;
                        case IMINBUYINRATIO_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= STRROOMNAME_FIELD_NUMBER;
                            this.strRoomName_ = readBytes;
                            break;
                        case EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER) {
                                toBuilder = this.stCreateUserBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stCreateUserBaseInfo_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stCreateUserBaseInfo_);
                                this.stCreateUserBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= BPRIVATEROOM_FIELD_NUMBER;
                            break;
                        case SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= BBUYIN_FIELD_NUMBER;
                            this.bPrivateRoom_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= EGAMEROOMSENIORTYPE_FIELD_NUMBER;
                            this.lSmallBlinds_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= SFROMCLUBNAME_FIELD_NUMBER;
                            this.lBigBlinds_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.lBuyIn_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.bBuyIn_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.lCreateTime_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.lDuration_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.lChatRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                            this.bStarted_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_checkboxStyle /*104*/:
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            this.iGameRoomUserNums_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_listMenuViewStyle /*114*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                            this.sFromMsg_ = readBytes;
                            break;
                        case 120:
                            readTag = codedInputStream.readEnum();
                            CREATE_ROOM_TYPE valueOf = CREATE_ROOM_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                                this.eCreateRoomType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ECREATEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS /*128*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_SENIOR_TYPE valueOf2 = GAME_ROOM_SENIOR_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                                this.eGameRoomSeniorType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMSENIORTYPE_FIELD_NUMBER, readTag);
                            break;
                        case 136:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                            this.iMaxBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case 144:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                            this.iMinBuyinRatio_ = codedInputStream.readInt32();
                            break;
                        case 152:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                            this.bBuyinControl_ = codedInputStream.readInt32();
                            break;
                        case 160:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                            this.bGamePause_ = codedInputStream.readInt32();
                            break;
                        case 168:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                            this.lGamePauseTime_ = codedInputStream.readInt64();
                            break;
                        case 176:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_TEXT;
                            this.iGameRoomUserMaxNums_ = codedInputStream.readInt32();
                            break;
                        case 184:
                            this.bitField0_ |= AccessibilityEventCompat.TYPE_WINDOWS_CHANGED;
                            this.iAnte_ = codedInputStream.readInt32();
                            break;
                        case 192:
                            this.bitField0_ |= AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED;
                            this.bInsurance_ = codedInputStream.readInt32();
                            break;
                        case 200:
                            this.bitField0_ |= AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT;
                            this.bInGame_ = codedInputStream.readInt32();
                            break;
                        case 208:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf3 = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf3 != null) {
                                this.bitField0_ |= 33554432;
                                this.eGameRoomType_ = valueOf3;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case 216:
                            this.bitField0_ |= 67108864;
                            this.lStartTime_ = codedInputStream.readInt64();
                            break;
                        case 224:
                            this.bitField0_ |= 134217728;
                            this.bIPLimit_ = codedInputStream.readInt32();
                            break;
                        case 232:
                            this.bitField0_ |= SQLiteDatabase.CREATE_IF_NECESSARY;
                            this.bGPSLimit_ = codedInputStream.readInt32();
                            break;
                        case 240:
                            this.bitField0_ |= 536870912;
                            this.lLeagueID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.MAX_SQL_CACHE_SIZE /*250*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 1073741824;
                            this.sLeagueName_ = readBytes;
                            break;
                        case 258:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= RtlSpacingHelper.UNDEFINED;
                            this.sFromClubName_ = readBytes;
                            break;
                        case 266:
                            readBytes = codedInputStream.readBytes();
                            this.bitField1_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.sFromClubUrl_ = readBytes;
                            break;
                        case 272:
                            this.bitField1_ |= STRROOMNAME_FIELD_NUMBER;
                            this.iThinkingInterval_ = codedInputStream.readInt32();
                            break;
                        case 280:
                            this.bitField1_ |= BPRIVATEROOM_FIELD_NUMBER;
                            this.bStraddle_ = codedInputStream.readInt32();
                            break;
                        case 290:
                            readBytes = codedInputStream.readBytes();
                            this.bitField1_ |= BBUYIN_FIELD_NUMBER;
                            this.sFromClubCreatorName_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LGAMEROOMID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bA;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bB.ensureFieldAccessorsInitialized(GameRoomBaseInfo.class, Builder.class);
        }

        static {
            PARSER = new C12301();
            GameRoomBaseInfo gameRoomBaseInfo = new GameRoomBaseInfo(true);
            defaultInstance = gameRoomBaseInfo;
            gameRoomBaseInfo.initFields();
        }

        public final Parser<GameRoomBaseInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasLGameRoomId() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomId() {
            return this.lGameRoomId_;
        }

        public final boolean hasStrRoomName() {
            return (this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER;
        }

        public final String getStrRoomName() {
            Object obj = this.strRoomName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strRoomName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrRoomNameBytes() {
            Object obj = this.strRoomName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strRoomName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasStCreateUserBaseInfo() {
            return (this.bitField0_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStCreateUserBaseInfo() {
            return this.stCreateUserBaseInfo_;
        }

        public final UserBaseInfoNetOrBuilder getStCreateUserBaseInfoOrBuilder() {
            return this.stCreateUserBaseInfo_;
        }

        public final boolean hasBPrivateRoom() {
            return (this.bitField0_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER;
        }

        public final int getBPrivateRoom() {
            return this.bPrivateRoom_;
        }

        public final boolean hasLSmallBlinds() {
            return (this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER;
        }

        public final long getLSmallBlinds() {
            return this.lSmallBlinds_;
        }

        public final boolean hasLBigBlinds() {
            return (this.bitField0_ & SFROMCLUBNAME_FIELD_NUMBER) == SFROMCLUBNAME_FIELD_NUMBER;
        }

        public final long getLBigBlinds() {
            return this.lBigBlinds_;
        }

        public final boolean hasLBuyIn() {
            return (this.bitField0_ & 64) == 64;
        }

        public final long getLBuyIn() {
            return this.lBuyIn_;
        }

        public final boolean hasBBuyIn() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final int getBBuyIn() {
            return this.bBuyIn_;
        }

        public final boolean hasLCreateTime() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLCreateTime() {
            return this.lCreateTime_;
        }

        public final boolean hasLDuration() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLDuration() {
            return this.lDuration_;
        }

        public final boolean hasLChatRoomID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final long getLChatRoomID() {
            return this.lChatRoomID_;
        }

        public final boolean hasBStarted() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final int getBStarted() {
            return this.bStarted_;
        }

        public final boolean hasIGameRoomUserNums() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final int getIGameRoomUserNums() {
            return this.iGameRoomUserNums_;
        }

        public final boolean hasSFromMsg() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
        }

        public final String getSFromMsg() {
            Object obj = this.sFromMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sFromMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSFromMsgBytes() {
            Object obj = this.sFromMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sFromMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasECreateRoomType() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
        }

        public final CREATE_ROOM_TYPE getECreateRoomType() {
            return this.eCreateRoomType_;
        }

        public final boolean hasEGameRoomSeniorType() {
            return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
        }

        public final GAME_ROOM_SENIOR_TYPE getEGameRoomSeniorType() {
            return this.eGameRoomSeniorType_;
        }

        public final boolean hasIMaxBuyinRatio() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
        }

        public final int getIMaxBuyinRatio() {
            return this.iMaxBuyinRatio_;
        }

        public final boolean hasIMinBuyinRatio() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
        }

        public final int getIMinBuyinRatio() {
            return this.iMinBuyinRatio_;
        }

        public final boolean hasBBuyinControl() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND;
        }

        public final int getBBuyinControl() {
            return this.bBuyinControl_;
        }

        public final boolean hasBGamePause() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
        }

        public final int getBGamePause() {
            return this.bGamePause_;
        }

        public final boolean hasLGamePauseTime() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS;
        }

        public final long getLGamePauseTime() {
            return this.lGamePauseTime_;
        }

        public final boolean hasIGameRoomUserMaxNums() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_TEXT) == AccessibilityNodeInfoCompat.ACTION_SET_TEXT;
        }

        public final int getIGameRoomUserMaxNums() {
            return this.iGameRoomUserMaxNums_;
        }

        public final boolean hasIAnte() {
            return (this.bitField0_ & AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) == AccessibilityEventCompat.TYPE_WINDOWS_CHANGED;
        }

        public final int getIAnte() {
            return this.iAnte_;
        }

        public final boolean hasBInsurance() {
            return (this.bitField0_ & AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) == AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED;
        }

        public final int getBInsurance() {
            return this.bInsurance_;
        }

        public final boolean hasBInGame() {
            return (this.bitField0_ & AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) == AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT;
        }

        public final int getBInGame() {
            return this.bInGame_;
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & 33554432) == 33554432;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasLStartTime() {
            return (this.bitField0_ & 67108864) == 67108864;
        }

        public final long getLStartTime() {
            return this.lStartTime_;
        }

        public final boolean hasBIPLimit() {
            return (this.bitField0_ & 134217728) == 134217728;
        }

        public final int getBIPLimit() {
            return this.bIPLimit_;
        }

        public final boolean hasBGPSLimit() {
            return (this.bitField0_ & SQLiteDatabase.CREATE_IF_NECESSARY) == SQLiteDatabase.CREATE_IF_NECESSARY;
        }

        public final int getBGPSLimit() {
            return this.bGPSLimit_;
        }

        public final boolean hasLLeagueID() {
            return (this.bitField0_ & 536870912) == 536870912;
        }

        public final long getLLeagueID() {
            return this.lLeagueID_;
        }

        public final boolean hasSLeagueName() {
            return (this.bitField0_ & 1073741824) == 1073741824;
        }

        public final String getSLeagueName() {
            Object obj = this.sLeagueName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sLeagueName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSLeagueNameBytes() {
            Object obj = this.sLeagueName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sLeagueName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSFromClubName() {
            return (this.bitField0_ & RtlSpacingHelper.UNDEFINED) == RtlSpacingHelper.UNDEFINED;
        }

        public final String getSFromClubName() {
            Object obj = this.sFromClubName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sFromClubName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSFromClubNameBytes() {
            Object obj = this.sFromClubName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sFromClubName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSFromClubUrl() {
            return (this.bitField1_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final String getSFromClubUrl() {
            Object obj = this.sFromClubUrl_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sFromClubUrl_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSFromClubUrlBytes() {
            Object obj = this.sFromClubUrl_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sFromClubUrl_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasIThinkingInterval() {
            return (this.bitField1_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER;
        }

        public final int getIThinkingInterval() {
            return this.iThinkingInterval_;
        }

        public final boolean hasBStraddle() {
            return (this.bitField1_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER;
        }

        public final int getBStraddle() {
            return this.bStraddle_;
        }

        public final boolean hasSFromClubCreatorName() {
            return (this.bitField1_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER;
        }

        public final String getSFromClubCreatorName() {
            Object obj = this.sFromClubCreatorName_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sFromClubCreatorName_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSFromClubCreatorNameBytes() {
            Object obj = this.sFromClubCreatorName_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sFromClubCreatorName_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.lGameRoomId_ = 0;
            this.strRoomName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.stCreateUserBaseInfo_ = UserBaseInfoNet.getDefaultInstance();
            this.bPrivateRoom_ = 0;
            this.lSmallBlinds_ = 0;
            this.lBigBlinds_ = 0;
            this.lBuyIn_ = 0;
            this.bBuyIn_ = 0;
            this.lCreateTime_ = 0;
            this.lDuration_ = 0;
            this.lChatRoomID_ = 0;
            this.bStarted_ = 0;
            this.iGameRoomUserNums_ = 0;
            this.sFromMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eCreateRoomType_ = CREATE_ROOM_TYPE.CAHT_ROOM;
            this.eGameRoomSeniorType_ = GAME_ROOM_SENIOR_TYPE.GAME_ROOM_SENIOR_TYPE_NO;
            this.iMaxBuyinRatio_ = 0;
            this.iMinBuyinRatio_ = 0;
            this.bBuyinControl_ = 0;
            this.bGamePause_ = 0;
            this.lGamePauseTime_ = 0;
            this.iGameRoomUserMaxNums_ = 0;
            this.iAnte_ = 0;
            this.bInsurance_ = 0;
            this.bInGame_ = 0;
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.lStartTime_ = 0;
            this.bIPLimit_ = 0;
            this.bGPSLimit_ = 0;
            this.lLeagueID_ = 0;
            this.sLeagueName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sFromClubName_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sFromClubUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.iThinkingInterval_ = 0;
            this.bStraddle_ = 0;
            this.sFromClubCreatorName_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLGameRoomId()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStrRoomName()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStCreateUserBaseInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasBPrivateRoom()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLSmallBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBigBlinds()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasBBuyIn()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLDuration()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStCreateUserBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_);
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STCREATEUSERBASEINFO_FIELD_NUMBER, this.stCreateUserBaseInfo_);
            }
            if ((this.bitField0_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER) {
                codedOutputStream.writeInt32(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            if ((this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & SFROMCLUBNAME_FIELD_NUMBER) == SFROMCLUBNAME_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt32(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt64(LCHATROOMID_FIELD_NUMBER, this.lChatRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeInt32(BSTARTED_FIELD_NUMBER, this.bStarted_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeInt32(IGAMEROOMUSERNUMS_FIELD_NUMBER, this.iGameRoomUserNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                codedOutputStream.writeBytes(SFROMMSG_FIELD_NUMBER, getSFromMsgBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                codedOutputStream.writeEnum(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                codedOutputStream.writeEnum(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                codedOutputStream.writeInt32(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                codedOutputStream.writeInt32(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                codedOutputStream.writeInt32(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                codedOutputStream.writeInt32(BGAMEPAUSE_FIELD_NUMBER, this.bGamePause_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                codedOutputStream.writeInt64(LGAMEPAUSETIME_FIELD_NUMBER, this.lGamePauseTime_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_TEXT) == AccessibilityNodeInfoCompat.ACTION_SET_TEXT) {
                codedOutputStream.writeInt32(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) == AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) {
                codedOutputStream.writeInt32(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) == AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) {
                codedOutputStream.writeInt32(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) == AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) {
                codedOutputStream.writeInt32(BINGAME_FIELD_NUMBER, this.bInGame_);
            }
            if ((this.bitField0_ & 33554432) == 33554432) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 67108864) == 67108864) {
                codedOutputStream.writeInt64(LSTARTTIME_FIELD_NUMBER, this.lStartTime_);
            }
            if ((this.bitField0_ & 134217728) == 134217728) {
                codedOutputStream.writeInt32(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & SQLiteDatabase.CREATE_IF_NECESSARY) == SQLiteDatabase.CREATE_IF_NECESSARY) {
                codedOutputStream.writeInt32(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            if ((this.bitField0_ & 536870912) == 536870912) {
                codedOutputStream.writeInt64(LLEAGUEID_FIELD_NUMBER, this.lLeagueID_);
            }
            if ((this.bitField0_ & 1073741824) == 1073741824) {
                codedOutputStream.writeBytes(SLEAGUENAME_FIELD_NUMBER, getSLeagueNameBytes());
            }
            if ((this.bitField0_ & RtlSpacingHelper.UNDEFINED) == RtlSpacingHelper.UNDEFINED) {
                codedOutputStream.writeBytes(SFROMCLUBNAME_FIELD_NUMBER, getSFromClubNameBytes());
            }
            if ((this.bitField1_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SFROMCLUBURL_FIELD_NUMBER, getSFromClubUrlBytes());
            }
            if ((this.bitField1_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                codedOutputStream.writeInt32(ITHINKINGINTERVAL_FIELD_NUMBER, this.iThinkingInterval_);
            }
            if ((this.bitField1_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER) {
                codedOutputStream.writeInt32(BSTRADDLE_FIELD_NUMBER, this.bStraddle_);
            }
            if ((this.bitField1_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SFROMCLUBCREATORNAME_FIELD_NUMBER, getSFromClubCreatorNameBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_) + 0;
            }
            if ((this.bitField0_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(STRROOMNAME_FIELD_NUMBER, getStrRoomNameBytes());
            }
            if ((this.bitField0_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STCREATEUSERBASEINFO_FIELD_NUMBER, this.stCreateUserBaseInfo_);
            }
            if ((this.bitField0_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(BPRIVATEROOM_FIELD_NUMBER, this.bPrivateRoom_);
            }
            if ((this.bitField0_ & EGAMEROOMSENIORTYPE_FIELD_NUMBER) == EGAMEROOMSENIORTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LSMALLBLINDS_FIELD_NUMBER, this.lSmallBlinds_);
            }
            if ((this.bitField0_ & SFROMCLUBNAME_FIELD_NUMBER) == SFROMCLUBNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LBIGBLINDS_FIELD_NUMBER, this.lBigBlinds_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt64Size(LBUYIN_FIELD_NUMBER, this.lBuyIn_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeInt32Size(BBUYIN_FIELD_NUMBER, this.bBuyIn_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt64Size(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i += CodedOutputStream.computeInt64Size(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt64Size(LCHATROOMID_FIELD_NUMBER, this.lChatRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i += CodedOutputStream.computeInt32Size(BSTARTED_FIELD_NUMBER, this.bStarted_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i += CodedOutputStream.computeInt32Size(IGAMEROOMUSERNUMS_FIELD_NUMBER, this.iGameRoomUserNums_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                i += CodedOutputStream.computeBytesSize(SFROMMSG_FIELD_NUMBER, getSFromMsgBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                i += CodedOutputStream.computeEnumSize(ECREATEROOMTYPE_FIELD_NUMBER, this.eCreateRoomType_.getNumber());
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMSENIORTYPE_FIELD_NUMBER, this.eGameRoomSeniorType_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                i += CodedOutputStream.computeInt32Size(IMAXBUYINRATIO_FIELD_NUMBER, this.iMaxBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                i += CodedOutputStream.computeInt32Size(IMINBUYINRATIO_FIELD_NUMBER, this.iMinBuyinRatio_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                i += CodedOutputStream.computeInt32Size(BBUYINCONTROL_FIELD_NUMBER, this.bBuyinControl_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                i += CodedOutputStream.computeInt32Size(BGAMEPAUSE_FIELD_NUMBER, this.bGamePause_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                i += CodedOutputStream.computeInt64Size(LGAMEPAUSETIME_FIELD_NUMBER, this.lGamePauseTime_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_TEXT) == AccessibilityNodeInfoCompat.ACTION_SET_TEXT) {
                i += CodedOutputStream.computeInt32Size(IGAMEROOMUSERMAXNUMS_FIELD_NUMBER, this.iGameRoomUserMaxNums_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) == AccessibilityEventCompat.TYPE_WINDOWS_CHANGED) {
                i += CodedOutputStream.computeInt32Size(IANTE_FIELD_NUMBER, this.iAnte_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) == AccessibilityEventCompat.TYPE_VIEW_CONTEXT_CLICKED) {
                i += CodedOutputStream.computeInt32Size(BINSURANCE_FIELD_NUMBER, this.bInsurance_);
            }
            if ((this.bitField0_ & AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) == AccessibilityEventCompat.TYPE_ASSIST_READING_CONTEXT) {
                i += CodedOutputStream.computeInt32Size(BINGAME_FIELD_NUMBER, this.bInGame_);
            }
            if ((this.bitField0_ & 33554432) == 33554432) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 67108864) == 67108864) {
                i += CodedOutputStream.computeInt64Size(LSTARTTIME_FIELD_NUMBER, this.lStartTime_);
            }
            if ((this.bitField0_ & 134217728) == 134217728) {
                i += CodedOutputStream.computeInt32Size(BIPLIMIT_FIELD_NUMBER, this.bIPLimit_);
            }
            if ((this.bitField0_ & SQLiteDatabase.CREATE_IF_NECESSARY) == SQLiteDatabase.CREATE_IF_NECESSARY) {
                i += CodedOutputStream.computeInt32Size(BGPSLIMIT_FIELD_NUMBER, this.bGPSLimit_);
            }
            if ((this.bitField0_ & 536870912) == 536870912) {
                i += CodedOutputStream.computeInt64Size(LLEAGUEID_FIELD_NUMBER, this.lLeagueID_);
            }
            if ((this.bitField0_ & 1073741824) == 1073741824) {
                i += CodedOutputStream.computeBytesSize(SLEAGUENAME_FIELD_NUMBER, getSLeagueNameBytes());
            }
            if ((this.bitField0_ & RtlSpacingHelper.UNDEFINED) == RtlSpacingHelper.UNDEFINED) {
                i += CodedOutputStream.computeBytesSize(SFROMCLUBNAME_FIELD_NUMBER, getSFromClubNameBytes());
            }
            if ((this.bitField1_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SFROMCLUBURL_FIELD_NUMBER, getSFromClubUrlBytes());
            }
            if ((this.bitField1_ & STRROOMNAME_FIELD_NUMBER) == STRROOMNAME_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(ITHINKINGINTERVAL_FIELD_NUMBER, this.iThinkingInterval_);
            }
            if ((this.bitField1_ & BPRIVATEROOM_FIELD_NUMBER) == BPRIVATEROOM_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(BSTRADDLE_FIELD_NUMBER, this.bStraddle_);
            }
            if ((this.bitField1_ & BBUYIN_FIELD_NUMBER) == BBUYIN_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SFROMCLUBCREATORNAME_FIELD_NUMBER, getSFromClubCreatorNameBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GameRoomBaseInfo parseFrom(ByteString byteString) {
            return (GameRoomBaseInfo) PARSER.parseFrom(byteString);
        }

        public static GameRoomBaseInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomBaseInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GameRoomBaseInfo parseFrom(byte[] bArr) {
            return (GameRoomBaseInfo) PARSER.parseFrom(bArr);
        }

        public static GameRoomBaseInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomBaseInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GameRoomBaseInfo parseFrom(InputStream inputStream) {
            return (GameRoomBaseInfo) PARSER.parseFrom(inputStream);
        }

        public static GameRoomBaseInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomBaseInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomBaseInfo parseDelimitedFrom(InputStream inputStream) {
            return (GameRoomBaseInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GameRoomBaseInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomBaseInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomBaseInfo parseFrom(CodedInputStream codedInputStream) {
            return (GameRoomBaseInfo) PARSER.parseFrom(codedInputStream);
        }

        public static GameRoomBaseInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomBaseInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GameRoomBaseInfo gameRoomBaseInfo) {
            return newBuilder().mergeFrom(gameRoomBaseInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface GameRoomInfoOrBuilder extends MessageOrBuilder {
        int getBAllAllin();

        int getBStateChange();

        GAME_ROOM_TYPE getEGameRoomType();

        GAME_ROOM_GAME_STATE getEGameState();

        INSURANCE_STATUS getEInsuranceStatus();

        long getLEffectiveRaise();

        long getLGameHandID();

        GameResultInfo getStGameResultInfo();

        GameResultInfoOrBuilder getStGameResultInfoOrBuilder();

        GameRoomBaseInfo getStGameRoomBaseInfo();

        GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder();

        SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo();

        SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder();

        int getVCurrentCards(int i);

        int getVCurrentCardsCount();

        List<Integer> getVCurrentCardsList();

        int getVCurrentPots(int i);

        int getVCurrentPotsCount();

        List<Integer> getVCurrentPotsList();

        InsuranceInfo getVInsuranceInfos();

        InsuranceInfoOrBuilder getVInsuranceInfosOrBuilder();

        long getVKickUserIDs(int i);

        int getVKickUserIDsCount();

        List<Long> getVKickUserIDsList();

        PotInfo getVPotInfos(int i);

        int getVPotInfosCount();

        List<PotInfo> getVPotInfosList();

        PotInfoOrBuilder getVPotInfosOrBuilder(int i);

        List<? extends PotInfoOrBuilder> getVPotInfosOrBuilderList();

        UserGameInfoNet getVUserGameInfos(int i);

        int getVUserGameInfosCount();

        List<UserGameInfoNet> getVUserGameInfosList();

        UserGameInfoNetOrBuilder getVUserGameInfosOrBuilder(int i);

        List<? extends UserGameInfoNetOrBuilder> getVUserGameInfosOrBuilderList();

        boolean hasBAllAllin();

        boolean hasBStateChange();

        boolean hasEGameRoomType();

        boolean hasEGameState();

        boolean hasEInsuranceStatus();

        boolean hasLEffectiveRaise();

        boolean hasLGameHandID();

        boolean hasStGameResultInfo();

        boolean hasStGameRoomBaseInfo();

        boolean hasStSNGGameRoomBaseInfo();

        boolean hasVInsuranceInfos();
    }

    public static final class GameRoomInfo extends GeneratedMessage implements GameRoomInfoOrBuilder {
        public static final int BALLALLIN_FIELD_NUMBER = 10;
        public static final int BSTATECHANGE_FIELD_NUMBER = 9;
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 1;
        public static final int EGAMESTATE_FIELD_NUMBER = 4;
        public static final int EINSURANCESTATUS_FIELD_NUMBER = 13;
        public static final int LEFFECTIVERAISE_FIELD_NUMBER = 12;
        public static final int LGAMEHANDID_FIELD_NUMBER = 11;
        public static Parser<GameRoomInfo> PARSER = null;
        public static final int STGAMERESULTINFO_FIELD_NUMBER = 8;
        public static final int STGAMEROOMBASEINFO_FIELD_NUMBER = 2;
        public static final int STSNGGAMEROOMBASEINFO_FIELD_NUMBER = 3;
        public static final int VCURRENTCARDS_FIELD_NUMBER = 5;
        public static final int VCURRENTPOTS_FIELD_NUMBER = 6;
        public static final int VINSURANCEINFOS_FIELD_NUMBER = 14;
        public static final int VKICKUSERIDS_FIELD_NUMBER = 16;
        public static final int VPOTINFOS_FIELD_NUMBER = 15;
        public static final int VUSERGAMEINFOS_FIELD_NUMBER = 7;
        private static final GameRoomInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bAllAllin_;
        private int bStateChange_;
        private int bitField0_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private GAME_ROOM_GAME_STATE eGameState_;
        private INSURANCE_STATUS eInsuranceStatus_;
        private long lEffectiveRaise_;
        private long lGameHandID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameResultInfo stGameResultInfo_;
        private GameRoomBaseInfo stGameRoomBaseInfo_;
        private SNGGameRoomBaseInfo stSNGGameRoomBaseInfo_;
        private final UnknownFieldSet unknownFields;
        private List<Integer> vCurrentCards_;
        private List<Integer> vCurrentPots_;
        private InsuranceInfo vInsuranceInfos_;
        private List<Long> vKickUserIDs_;
        private List<PotInfo> vPotInfos_;
        private List<UserGameInfoNet> vUserGameInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.GameRoomInfo.1 */
        class C12311 extends AbstractParser<GameRoomInfo> {
            C12311() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new GameRoomInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GameRoomInfoOrBuilder {
            private int bAllAllin_;
            private int bStateChange_;
            private int bitField0_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private GAME_ROOM_GAME_STATE eGameState_;
            private INSURANCE_STATUS eInsuranceStatus_;
            private long lEffectiveRaise_;
            private long lGameHandID_;
            private SingleFieldBuilder<GameResultInfo, Builder, GameResultInfoOrBuilder> stGameResultInfoBuilder_;
            private GameResultInfo stGameResultInfo_;
            private SingleFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> stGameRoomBaseInfoBuilder_;
            private GameRoomBaseInfo stGameRoomBaseInfo_;
            private SingleFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> stSNGGameRoomBaseInfoBuilder_;
            private SNGGameRoomBaseInfo stSNGGameRoomBaseInfo_;
            private List<Integer> vCurrentCards_;
            private List<Integer> vCurrentPots_;
            private SingleFieldBuilder<InsuranceInfo, Builder, InsuranceInfoOrBuilder> vInsuranceInfosBuilder_;
            private InsuranceInfo vInsuranceInfos_;
            private List<Long> vKickUserIDs_;
            private RepeatedFieldBuilder<PotInfo, Builder, PotInfoOrBuilder> vPotInfosBuilder_;
            private List<PotInfo> vPotInfos_;
            private RepeatedFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> vUserGameInfosBuilder_;
            private List<UserGameInfoNet> vUserGameInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bG;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bH.ensureFieldAccessorsInitialized(GameRoomInfo.class, Builder.class);
            }

            private Builder() {
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                this.eGameState_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.vCurrentCards_ = Collections.emptyList();
                this.vCurrentPots_ = Collections.emptyList();
                this.vUserGameInfos_ = Collections.emptyList();
                this.stGameResultInfo_ = GameResultInfo.getDefaultInstance();
                this.eInsuranceStatus_ = INSURANCE_STATUS.INSURANCE_STATUS_NO;
                this.vInsuranceInfos_ = InsuranceInfo.getDefaultInstance();
                this.vPotInfos_ = Collections.emptyList();
                this.vKickUserIDs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                this.eGameState_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.vCurrentCards_ = Collections.emptyList();
                this.vCurrentPots_ = Collections.emptyList();
                this.vUserGameInfos_ = Collections.emptyList();
                this.stGameResultInfo_ = GameResultInfo.getDefaultInstance();
                this.eInsuranceStatus_ = INSURANCE_STATUS.INSURANCE_STATUS_NO;
                this.vInsuranceInfos_ = InsuranceInfo.getDefaultInstance();
                this.vPotInfos_ = Collections.emptyList();
                this.vKickUserIDs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GameRoomInfo.alwaysUseFieldBuilders) {
                    getStGameRoomBaseInfoFieldBuilder();
                    getStSNGGameRoomBaseInfoFieldBuilder();
                    getVUserGameInfosFieldBuilder();
                    getStGameResultInfoFieldBuilder();
                    getVInsuranceInfosFieldBuilder();
                    getVPotInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.bitField0_ &= -2;
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                this.eGameState_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                this.bitField0_ &= -9;
                this.vCurrentCards_ = Collections.emptyList();
                this.bitField0_ &= -17;
                this.vCurrentPots_ = Collections.emptyList();
                this.bitField0_ &= -33;
                if (this.vUserGameInfosBuilder_ == null) {
                    this.vUserGameInfos_ = Collections.emptyList();
                    this.bitField0_ &= -65;
                } else {
                    this.vUserGameInfosBuilder_.clear();
                }
                if (this.stGameResultInfoBuilder_ == null) {
                    this.stGameResultInfo_ = GameResultInfo.getDefaultInstance();
                } else {
                    this.stGameResultInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                this.bStateChange_ = 0;
                this.bitField0_ &= -257;
                this.bAllAllin_ = 0;
                this.bitField0_ &= -513;
                this.lGameHandID_ = 0;
                this.bitField0_ &= -1025;
                this.lEffectiveRaise_ = 0;
                this.bitField0_ &= -2049;
                this.eInsuranceStatus_ = INSURANCE_STATUS.INSURANCE_STATUS_NO;
                this.bitField0_ &= -4097;
                if (this.vInsuranceInfosBuilder_ == null) {
                    this.vInsuranceInfos_ = InsuranceInfo.getDefaultInstance();
                } else {
                    this.vInsuranceInfosBuilder_.clear();
                }
                this.bitField0_ &= -8193;
                if (this.vPotInfosBuilder_ == null) {
                    this.vPotInfos_ = Collections.emptyList();
                    this.bitField0_ &= -16385;
                } else {
                    this.vPotInfosBuilder_.clear();
                }
                this.vKickUserIDs_ = Collections.emptyList();
                this.bitField0_ &= -32769;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bG;
            }

            public final GameRoomInfo getDefaultInstanceForType() {
                return GameRoomInfo.getDefaultInstance();
            }

            public final GameRoomInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GameRoomInfo buildPartial() {
                int i;
                int i2 = GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
                GameRoomInfo gameRoomInfo = new GameRoomInfo(null);
                int i3 = this.bitField0_;
                if ((i3 & GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) != GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) {
                    i2 = 0;
                }
                gameRoomInfo.eGameRoomType_ = this.eGameRoomType_;
                if ((i3 & GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER) == GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER) {
                    i = i2 | GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    gameRoomInfo.stGameRoomBaseInfo_ = this.stGameRoomBaseInfo_;
                } else {
                    gameRoomInfo.stGameRoomBaseInfo_ = (GameRoomBaseInfo) this.stGameRoomBaseInfoBuilder_.build();
                }
                if ((i3 & GameRoomInfo.EGAMESTATE_FIELD_NUMBER) == GameRoomInfo.EGAMESTATE_FIELD_NUMBER) {
                    i |= GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
                }
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    gameRoomInfo.stSNGGameRoomBaseInfo_ = this.stSNGGameRoomBaseInfo_;
                } else {
                    gameRoomInfo.stSNGGameRoomBaseInfo_ = (SNGGameRoomBaseInfo) this.stSNGGameRoomBaseInfoBuilder_.build();
                }
                if ((i3 & GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER) == GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER) {
                    i |= GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER;
                }
                gameRoomInfo.eGameState_ = this.eGameState_;
                if ((this.bitField0_ & GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER) == GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER) {
                    this.vCurrentCards_ = Collections.unmodifiableList(this.vCurrentCards_);
                    this.bitField0_ &= -17;
                }
                gameRoomInfo.vCurrentCards_ = this.vCurrentCards_;
                if ((this.bitField0_ & 32) == 32) {
                    this.vCurrentPots_ = Collections.unmodifiableList(this.vCurrentPots_);
                    this.bitField0_ &= -33;
                }
                gameRoomInfo.vCurrentPots_ = this.vCurrentPots_;
                if (this.vUserGameInfosBuilder_ == null) {
                    if ((this.bitField0_ & 64) == 64) {
                        this.vUserGameInfos_ = Collections.unmodifiableList(this.vUserGameInfos_);
                        this.bitField0_ &= -65;
                    }
                    gameRoomInfo.vUserGameInfos_ = this.vUserGameInfos_;
                } else {
                    gameRoomInfo.vUserGameInfos_ = this.vUserGameInfosBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER;
                }
                if (this.stGameResultInfoBuilder_ == null) {
                    gameRoomInfo.stGameResultInfo_ = this.stGameResultInfo_;
                } else {
                    gameRoomInfo.stGameResultInfo_ = (GameResultInfo) this.stGameResultInfoBuilder_.build();
                }
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= 32;
                }
                gameRoomInfo.bStateChange_ = this.bStateChange_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= 64;
                }
                gameRoomInfo.bAllAllin_ = this.bAllAllin_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                gameRoomInfo.lGameHandID_ = this.lGameHandID_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                gameRoomInfo.lEffectiveRaise_ = this.lEffectiveRaise_;
                if ((i3 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                gameRoomInfo.eInsuranceStatus_ = this.eInsuranceStatus_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                if (this.vInsuranceInfosBuilder_ == null) {
                    gameRoomInfo.vInsuranceInfos_ = this.vInsuranceInfos_;
                } else {
                    gameRoomInfo.vInsuranceInfos_ = (InsuranceInfo) this.vInsuranceInfosBuilder_.build();
                }
                if (this.vPotInfosBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                        this.vPotInfos_ = Collections.unmodifiableList(this.vPotInfos_);
                        this.bitField0_ &= -16385;
                    }
                    gameRoomInfo.vPotInfos_ = this.vPotInfos_;
                } else {
                    gameRoomInfo.vPotInfos_ = this.vPotInfosBuilder_.build();
                }
                if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                    this.vKickUserIDs_ = Collections.unmodifiableList(this.vKickUserIDs_);
                    this.bitField0_ &= -32769;
                }
                gameRoomInfo.vKickUserIDs_ = this.vKickUserIDs_;
                gameRoomInfo.bitField0_ = i;
                onBuilt();
                return gameRoomInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GameRoomInfo) {
                    return mergeFrom((GameRoomInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GameRoomInfo gameRoomInfo) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (gameRoomInfo != GameRoomInfo.getDefaultInstance()) {
                    if (gameRoomInfo.hasEGameRoomType()) {
                        setEGameRoomType(gameRoomInfo.getEGameRoomType());
                    }
                    if (gameRoomInfo.hasStGameRoomBaseInfo()) {
                        mergeStGameRoomBaseInfo(gameRoomInfo.getStGameRoomBaseInfo());
                    }
                    if (gameRoomInfo.hasStSNGGameRoomBaseInfo()) {
                        mergeStSNGGameRoomBaseInfo(gameRoomInfo.getStSNGGameRoomBaseInfo());
                    }
                    if (gameRoomInfo.hasEGameState()) {
                        setEGameState(gameRoomInfo.getEGameState());
                    }
                    if (!gameRoomInfo.vCurrentCards_.isEmpty()) {
                        if (this.vCurrentCards_.isEmpty()) {
                            this.vCurrentCards_ = gameRoomInfo.vCurrentCards_;
                            this.bitField0_ &= -17;
                        } else {
                            ensureVCurrentCardsIsMutable();
                            this.vCurrentCards_.addAll(gameRoomInfo.vCurrentCards_);
                        }
                        onChanged();
                    }
                    if (!gameRoomInfo.vCurrentPots_.isEmpty()) {
                        if (this.vCurrentPots_.isEmpty()) {
                            this.vCurrentPots_ = gameRoomInfo.vCurrentPots_;
                            this.bitField0_ &= -33;
                        } else {
                            ensureVCurrentPotsIsMutable();
                            this.vCurrentPots_.addAll(gameRoomInfo.vCurrentPots_);
                        }
                        onChanged();
                    }
                    if (this.vUserGameInfosBuilder_ == null) {
                        if (!gameRoomInfo.vUserGameInfos_.isEmpty()) {
                            if (this.vUserGameInfos_.isEmpty()) {
                                this.vUserGameInfos_ = gameRoomInfo.vUserGameInfos_;
                                this.bitField0_ &= -65;
                            } else {
                                ensureVUserGameInfosIsMutable();
                                this.vUserGameInfos_.addAll(gameRoomInfo.vUserGameInfos_);
                            }
                            onChanged();
                        }
                    } else if (!gameRoomInfo.vUserGameInfos_.isEmpty()) {
                        if (this.vUserGameInfosBuilder_.isEmpty()) {
                            RepeatedFieldBuilder vUserGameInfosFieldBuilder;
                            this.vUserGameInfosBuilder_.dispose();
                            this.vUserGameInfosBuilder_ = null;
                            this.vUserGameInfos_ = gameRoomInfo.vUserGameInfos_;
                            this.bitField0_ &= -65;
                            if (GameRoomInfo.alwaysUseFieldBuilders) {
                                vUserGameInfosFieldBuilder = getVUserGameInfosFieldBuilder();
                            } else {
                                vUserGameInfosFieldBuilder = null;
                            }
                            this.vUserGameInfosBuilder_ = vUserGameInfosFieldBuilder;
                        } else {
                            this.vUserGameInfosBuilder_.addAllMessages(gameRoomInfo.vUserGameInfos_);
                        }
                    }
                    if (gameRoomInfo.hasStGameResultInfo()) {
                        mergeStGameResultInfo(gameRoomInfo.getStGameResultInfo());
                    }
                    if (gameRoomInfo.hasBStateChange()) {
                        setBStateChange(gameRoomInfo.getBStateChange());
                    }
                    if (gameRoomInfo.hasBAllAllin()) {
                        setBAllAllin(gameRoomInfo.getBAllAllin());
                    }
                    if (gameRoomInfo.hasLGameHandID()) {
                        setLGameHandID(gameRoomInfo.getLGameHandID());
                    }
                    if (gameRoomInfo.hasLEffectiveRaise()) {
                        setLEffectiveRaise(gameRoomInfo.getLEffectiveRaise());
                    }
                    if (gameRoomInfo.hasEInsuranceStatus()) {
                        setEInsuranceStatus(gameRoomInfo.getEInsuranceStatus());
                    }
                    if (gameRoomInfo.hasVInsuranceInfos()) {
                        mergeVInsuranceInfos(gameRoomInfo.getVInsuranceInfos());
                    }
                    if (this.vPotInfosBuilder_ == null) {
                        if (!gameRoomInfo.vPotInfos_.isEmpty()) {
                            if (this.vPotInfos_.isEmpty()) {
                                this.vPotInfos_ = gameRoomInfo.vPotInfos_;
                                this.bitField0_ &= -16385;
                            } else {
                                ensureVPotInfosIsMutable();
                                this.vPotInfos_.addAll(gameRoomInfo.vPotInfos_);
                            }
                            onChanged();
                        }
                    } else if (!gameRoomInfo.vPotInfos_.isEmpty()) {
                        if (this.vPotInfosBuilder_.isEmpty()) {
                            this.vPotInfosBuilder_.dispose();
                            this.vPotInfosBuilder_ = null;
                            this.vPotInfos_ = gameRoomInfo.vPotInfos_;
                            this.bitField0_ &= -16385;
                            if (GameRoomInfo.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVPotInfosFieldBuilder();
                            }
                            this.vPotInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vPotInfosBuilder_.addAllMessages(gameRoomInfo.vPotInfos_);
                        }
                    }
                    if (!gameRoomInfo.vKickUserIDs_.isEmpty()) {
                        if (this.vKickUserIDs_.isEmpty()) {
                            this.vKickUserIDs_ = gameRoomInfo.vKickUserIDs_;
                            this.bitField0_ &= -32769;
                        } else {
                            ensureVKickUserIDsIsMutable();
                            this.vKickUserIDs_.addAll(gameRoomInfo.vKickUserIDs_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(gameRoomInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEGameRoomType() || !hasEGameState()) {
                    return false;
                }
                if (hasStGameRoomBaseInfo() && !getStGameRoomBaseInfo().isInitialized()) {
                    return false;
                }
                if (hasStSNGGameRoomBaseInfo() && !getStSNGGameRoomBaseInfo().isInitialized()) {
                    return false;
                }
                int i;
                for (i = 0; i < getVUserGameInfosCount(); i += GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) {
                    if (!getVUserGameInfos(i).isInitialized()) {
                        return false;
                    }
                }
                if (hasStGameResultInfo() && !getStGameResultInfo().isInitialized()) {
                    return false;
                }
                if (hasVInsuranceInfos() && !getVInsuranceInfos().isInitialized()) {
                    return false;
                }
                for (i = 0; i < getVPotInfosCount(); i += GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) {
                    if (!getVPotInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GameRoomInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GameRoomInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GameRoomInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GameRoomInfo$Builder");
            }

            public final boolean hasEGameRoomType() {
                return (this.bitField0_ & GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) == GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
            }

            public final GAME_ROOM_TYPE getEGameRoomType() {
                return this.eGameRoomType_;
            }

            public final Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type) {
                if (game_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
                this.eGameRoomType_ = game_room_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomType() {
                this.bitField0_ &= -2;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomBaseInfo() {
                return (this.bitField0_ & GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER) == GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
            }

            public final GameRoomBaseInfo getStGameRoomBaseInfo() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    return this.stGameRoomBaseInfo_;
                }
                return (GameRoomBaseInfo) this.stGameRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomBaseInfo(GameRoomBaseInfo gameRoomBaseInfo) {
                if (this.stGameRoomBaseInfoBuilder_ != null) {
                    this.stGameRoomBaseInfoBuilder_.setMessage(gameRoomBaseInfo);
                } else if (gameRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomBaseInfo_ = gameRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomBaseInfo(Builder builder) {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomBaseInfo(GameRoomBaseInfo gameRoomBaseInfo) {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER) != GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER || this.stGameRoomBaseInfo_ == GameRoomBaseInfo.getDefaultInstance()) {
                        this.stGameRoomBaseInfo_ = gameRoomBaseInfo;
                    } else {
                        this.stGameRoomBaseInfo_ = GameRoomBaseInfo.newBuilder(this.stGameRoomBaseInfo_).mergeFrom(gameRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.mergeFrom(gameRoomBaseInfo);
                }
                this.bitField0_ |= GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomBaseInfo() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStGameRoomBaseInfoBuilder() {
                this.bitField0_ |= GameRoomInfo.STGAMEROOMBASEINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder() {
                if (this.stGameRoomBaseInfoBuilder_ != null) {
                    return (GameRoomBaseInfoOrBuilder) this.stGameRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomBaseInfo_;
            }

            private SingleFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> getStGameRoomBaseInfoFieldBuilder() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStGameRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stGameRoomBaseInfo_ = null;
                }
                return this.stGameRoomBaseInfoBuilder_;
            }

            public final boolean hasStSNGGameRoomBaseInfo() {
                return (this.bitField0_ & GameRoomInfo.EGAMESTATE_FIELD_NUMBER) == GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
            }

            public final SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    return this.stSNGGameRoomBaseInfo_;
                }
                return (SNGGameRoomBaseInfo) this.stSNGGameRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStSNGGameRoomBaseInfo(SNGGameRoomBaseInfo sNGGameRoomBaseInfo) {
                if (this.stSNGGameRoomBaseInfoBuilder_ != null) {
                    this.stSNGGameRoomBaseInfoBuilder_.setMessage(sNGGameRoomBaseInfo);
                } else if (sNGGameRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stSNGGameRoomBaseInfo_ = sNGGameRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
                return this;
            }

            public final Builder setStSNGGameRoomBaseInfo(Builder builder) {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStSNGGameRoomBaseInfo(SNGGameRoomBaseInfo sNGGameRoomBaseInfo) {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & GameRoomInfo.EGAMESTATE_FIELD_NUMBER) != GameRoomInfo.EGAMESTATE_FIELD_NUMBER || this.stSNGGameRoomBaseInfo_ == SNGGameRoomBaseInfo.getDefaultInstance()) {
                        this.stSNGGameRoomBaseInfo_ = sNGGameRoomBaseInfo;
                    } else {
                        this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.newBuilder(this.stSNGGameRoomBaseInfo_).mergeFrom(sNGGameRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.mergeFrom(sNGGameRoomBaseInfo);
                }
                this.bitField0_ |= GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStSNGGameRoomBaseInfo() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder getStSNGGameRoomBaseInfoBuilder() {
                this.bitField0_ |= GameRoomInfo.EGAMESTATE_FIELD_NUMBER;
                onChanged();
                return (Builder) getStSNGGameRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder() {
                if (this.stSNGGameRoomBaseInfoBuilder_ != null) {
                    return (SNGGameRoomBaseInfoOrBuilder) this.stSNGGameRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stSNGGameRoomBaseInfo_;
            }

            private SingleFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> getStSNGGameRoomBaseInfoFieldBuilder() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStSNGGameRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stSNGGameRoomBaseInfo_ = null;
                }
                return this.stSNGGameRoomBaseInfoBuilder_;
            }

            public final boolean hasEGameState() {
                return (this.bitField0_ & GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER) == GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER;
            }

            public final GAME_ROOM_GAME_STATE getEGameState() {
                return this.eGameState_;
            }

            public final Builder setEGameState(GAME_ROOM_GAME_STATE game_room_game_state) {
                if (game_room_game_state == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomInfo.STGAMERESULTINFO_FIELD_NUMBER;
                this.eGameState_ = game_room_game_state;
                onChanged();
                return this;
            }

            public final Builder clearEGameState() {
                this.bitField0_ &= -9;
                this.eGameState_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
                onChanged();
                return this;
            }

            private void ensureVCurrentCardsIsMutable() {
                if ((this.bitField0_ & GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER) != GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER) {
                    this.vCurrentCards_ = new ArrayList(this.vCurrentCards_);
                    this.bitField0_ |= GameRoomInfo.VKICKUSERIDS_FIELD_NUMBER;
                }
            }

            public final List<Integer> getVCurrentCardsList() {
                return Collections.unmodifiableList(this.vCurrentCards_);
            }

            public final int getVCurrentCardsCount() {
                return this.vCurrentCards_.size();
            }

            public final int getVCurrentCards(int i) {
                return ((Integer) this.vCurrentCards_.get(i)).intValue();
            }

            public final Builder setVCurrentCards(int i, int i2) {
                ensureVCurrentCardsIsMutable();
                this.vCurrentCards_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVCurrentCards(int i) {
                ensureVCurrentCardsIsMutable();
                this.vCurrentCards_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVCurrentCards(Iterable<? extends Integer> iterable) {
                ensureVCurrentCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vCurrentCards_);
                onChanged();
                return this;
            }

            public final Builder clearVCurrentCards() {
                this.vCurrentCards_ = Collections.emptyList();
                this.bitField0_ &= -17;
                onChanged();
                return this;
            }

            private void ensureVCurrentPotsIsMutable() {
                if ((this.bitField0_ & 32) != 32) {
                    this.vCurrentPots_ = new ArrayList(this.vCurrentPots_);
                    this.bitField0_ |= 32;
                }
            }

            public final List<Integer> getVCurrentPotsList() {
                return Collections.unmodifiableList(this.vCurrentPots_);
            }

            public final int getVCurrentPotsCount() {
                return this.vCurrentPots_.size();
            }

            public final int getVCurrentPots(int i) {
                return ((Integer) this.vCurrentPots_.get(i)).intValue();
            }

            public final Builder setVCurrentPots(int i, int i2) {
                ensureVCurrentPotsIsMutable();
                this.vCurrentPots_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVCurrentPots(int i) {
                ensureVCurrentPotsIsMutable();
                this.vCurrentPots_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVCurrentPots(Iterable<? extends Integer> iterable) {
                ensureVCurrentPotsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vCurrentPots_);
                onChanged();
                return this;
            }

            public final Builder clearVCurrentPots() {
                this.vCurrentPots_ = Collections.emptyList();
                this.bitField0_ &= -33;
                onChanged();
                return this;
            }

            private void ensureVUserGameInfosIsMutable() {
                if ((this.bitField0_ & 64) != 64) {
                    this.vUserGameInfos_ = new ArrayList(this.vUserGameInfos_);
                    this.bitField0_ |= 64;
                }
            }

            public final List<UserGameInfoNet> getVUserGameInfosList() {
                if (this.vUserGameInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vUserGameInfos_);
                }
                return this.vUserGameInfosBuilder_.getMessageList();
            }

            public final int getVUserGameInfosCount() {
                if (this.vUserGameInfosBuilder_ == null) {
                    return this.vUserGameInfos_.size();
                }
                return this.vUserGameInfosBuilder_.getCount();
            }

            public final UserGameInfoNet getVUserGameInfos(int i) {
                if (this.vUserGameInfosBuilder_ == null) {
                    return (UserGameInfoNet) this.vUserGameInfos_.get(i);
                }
                return (UserGameInfoNet) this.vUserGameInfosBuilder_.getMessage(i);
            }

            public final Builder setVUserGameInfos(int i, UserGameInfoNet userGameInfoNet) {
                if (this.vUserGameInfosBuilder_ != null) {
                    this.vUserGameInfosBuilder_.setMessage(i, userGameInfoNet);
                } else if (userGameInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.set(i, userGameInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder setVUserGameInfos(int i, Builder builder) {
                if (this.vUserGameInfosBuilder_ == null) {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVUserGameInfos(UserGameInfoNet userGameInfoNet) {
                if (this.vUserGameInfosBuilder_ != null) {
                    this.vUserGameInfosBuilder_.addMessage(userGameInfoNet);
                } else if (userGameInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.add(userGameInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserGameInfos(int i, UserGameInfoNet userGameInfoNet) {
                if (this.vUserGameInfosBuilder_ != null) {
                    this.vUserGameInfosBuilder_.addMessage(i, userGameInfoNet);
                } else if (userGameInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.add(i, userGameInfoNet);
                    onChanged();
                }
                return this;
            }

            public final Builder addVUserGameInfos(Builder builder) {
                if (this.vUserGameInfosBuilder_ == null) {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVUserGameInfos(int i, Builder builder) {
                if (this.vUserGameInfosBuilder_ == null) {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVUserGameInfos(Iterable<? extends UserGameInfoNet> iterable) {
                if (this.vUserGameInfosBuilder_ == null) {
                    ensureVUserGameInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUserGameInfos_);
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVUserGameInfos() {
                if (this.vUserGameInfosBuilder_ == null) {
                    this.vUserGameInfos_ = Collections.emptyList();
                    this.bitField0_ &= -65;
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVUserGameInfos(int i) {
                if (this.vUserGameInfosBuilder_ == null) {
                    ensureVUserGameInfosIsMutable();
                    this.vUserGameInfos_.remove(i);
                    onChanged();
                } else {
                    this.vUserGameInfosBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVUserGameInfosBuilder(int i) {
                return (Builder) getVUserGameInfosFieldBuilder().getBuilder(i);
            }

            public final UserGameInfoNetOrBuilder getVUserGameInfosOrBuilder(int i) {
                if (this.vUserGameInfosBuilder_ == null) {
                    return (UserGameInfoNetOrBuilder) this.vUserGameInfos_.get(i);
                }
                return (UserGameInfoNetOrBuilder) this.vUserGameInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends UserGameInfoNetOrBuilder> getVUserGameInfosOrBuilderList() {
                if (this.vUserGameInfosBuilder_ != null) {
                    return this.vUserGameInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vUserGameInfos_);
            }

            public final Builder addVUserGameInfosBuilder() {
                return (Builder) getVUserGameInfosFieldBuilder().addBuilder(UserGameInfoNet.getDefaultInstance());
            }

            public final Builder addVUserGameInfosBuilder(int i) {
                return (Builder) getVUserGameInfosFieldBuilder().addBuilder(i, UserGameInfoNet.getDefaultInstance());
            }

            public final List<Builder> getVUserGameInfosBuilderList() {
                return getVUserGameInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> getVUserGameInfosFieldBuilder() {
                if (this.vUserGameInfosBuilder_ == null) {
                    this.vUserGameInfosBuilder_ = new RepeatedFieldBuilder(this.vUserGameInfos_, (this.bitField0_ & 64) == 64, getParentForChildren(), isClean());
                    this.vUserGameInfos_ = null;
                }
                return this.vUserGameInfosBuilder_;
            }

            public final boolean hasStGameResultInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final GameResultInfo getStGameResultInfo() {
                if (this.stGameResultInfoBuilder_ == null) {
                    return this.stGameResultInfo_;
                }
                return (GameResultInfo) this.stGameResultInfoBuilder_.getMessage();
            }

            public final Builder setStGameResultInfo(GameResultInfo gameResultInfo) {
                if (this.stGameResultInfoBuilder_ != null) {
                    this.stGameResultInfoBuilder_.setMessage(gameResultInfo);
                } else if (gameResultInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameResultInfo_ = gameResultInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder setStGameResultInfo(Builder builder) {
                if (this.stGameResultInfoBuilder_ == null) {
                    this.stGameResultInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameResultInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder mergeStGameResultInfo(GameResultInfo gameResultInfo) {
                if (this.stGameResultInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) != AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS || this.stGameResultInfo_ == GameResultInfo.getDefaultInstance()) {
                        this.stGameResultInfo_ = gameResultInfo;
                    } else {
                        this.stGameResultInfo_ = GameResultInfo.newBuilder(this.stGameResultInfo_).mergeFrom(gameResultInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameResultInfoBuilder_.mergeFrom(gameResultInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                return this;
            }

            public final Builder clearStGameResultInfo() {
                if (this.stGameResultInfoBuilder_ == null) {
                    this.stGameResultInfo_ = GameResultInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameResultInfoBuilder_.clear();
                }
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder getStGameResultInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                onChanged();
                return (Builder) getStGameResultInfoFieldBuilder().getBuilder();
            }

            public final GameResultInfoOrBuilder getStGameResultInfoOrBuilder() {
                if (this.stGameResultInfoBuilder_ != null) {
                    return (GameResultInfoOrBuilder) this.stGameResultInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameResultInfo_;
            }

            private SingleFieldBuilder<GameResultInfo, Builder, GameResultInfoOrBuilder> getStGameResultInfoFieldBuilder() {
                if (this.stGameResultInfoBuilder_ == null) {
                    this.stGameResultInfoBuilder_ = new SingleFieldBuilder(getStGameResultInfo(), getParentForChildren(), isClean());
                    this.stGameResultInfo_ = null;
                }
                return this.stGameResultInfoBuilder_;
            }

            public final boolean hasBStateChange() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final int getBStateChange() {
                return this.bStateChange_;
            }

            public final Builder setBStateChange(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.bStateChange_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBStateChange() {
                this.bitField0_ &= -257;
                this.bStateChange_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBAllAllin() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final int getBAllAllin() {
                return this.bAllAllin_;
            }

            public final Builder setBAllAllin(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.bAllAllin_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBAllAllin() {
                this.bitField0_ &= -513;
                this.bAllAllin_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameHandID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final long getLGameHandID() {
                return this.lGameHandID_;
            }

            public final Builder setLGameHandID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.lGameHandID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameHandID() {
                this.bitField0_ &= -1025;
                this.lGameHandID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLEffectiveRaise() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final long getLEffectiveRaise() {
                return this.lEffectiveRaise_;
            }

            public final Builder setLEffectiveRaise(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.lEffectiveRaise_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLEffectiveRaise() {
                this.bitField0_ &= -2049;
                this.lEffectiveRaise_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEInsuranceStatus() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final INSURANCE_STATUS getEInsuranceStatus() {
                return this.eInsuranceStatus_;
            }

            public final Builder setEInsuranceStatus(INSURANCE_STATUS insurance_status) {
                if (insurance_status == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                this.eInsuranceStatus_ = insurance_status;
                onChanged();
                return this;
            }

            public final Builder clearEInsuranceStatus() {
                this.bitField0_ &= -4097;
                this.eInsuranceStatus_ = INSURANCE_STATUS.INSURANCE_STATUS_NO;
                onChanged();
                return this;
            }

            public final boolean hasVInsuranceInfos() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
            }

            public final InsuranceInfo getVInsuranceInfos() {
                if (this.vInsuranceInfosBuilder_ == null) {
                    return this.vInsuranceInfos_;
                }
                return (InsuranceInfo) this.vInsuranceInfosBuilder_.getMessage();
            }

            public final Builder setVInsuranceInfos(InsuranceInfo insuranceInfo) {
                if (this.vInsuranceInfosBuilder_ != null) {
                    this.vInsuranceInfosBuilder_.setMessage(insuranceInfo);
                } else if (insuranceInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.vInsuranceInfos_ = insuranceInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                return this;
            }

            public final Builder setVInsuranceInfos(Builder builder) {
                if (this.vInsuranceInfosBuilder_ == null) {
                    this.vInsuranceInfos_ = builder.build();
                    onChanged();
                } else {
                    this.vInsuranceInfosBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                return this;
            }

            public final Builder mergeVInsuranceInfos(InsuranceInfo insuranceInfo) {
                if (this.vInsuranceInfosBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) != AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD || this.vInsuranceInfos_ == InsuranceInfo.getDefaultInstance()) {
                        this.vInsuranceInfos_ = insuranceInfo;
                    } else {
                        this.vInsuranceInfos_ = InsuranceInfo.newBuilder(this.vInsuranceInfos_).mergeFrom(insuranceInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.vInsuranceInfosBuilder_.mergeFrom(insuranceInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                return this;
            }

            public final Builder clearVInsuranceInfos() {
                if (this.vInsuranceInfosBuilder_ == null) {
                    this.vInsuranceInfos_ = InsuranceInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.vInsuranceInfosBuilder_.clear();
                }
                this.bitField0_ &= -8193;
                return this;
            }

            public final Builder getVInsuranceInfosBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                onChanged();
                return (Builder) getVInsuranceInfosFieldBuilder().getBuilder();
            }

            public final InsuranceInfoOrBuilder getVInsuranceInfosOrBuilder() {
                if (this.vInsuranceInfosBuilder_ != null) {
                    return (InsuranceInfoOrBuilder) this.vInsuranceInfosBuilder_.getMessageOrBuilder();
                }
                return this.vInsuranceInfos_;
            }

            private SingleFieldBuilder<InsuranceInfo, Builder, InsuranceInfoOrBuilder> getVInsuranceInfosFieldBuilder() {
                if (this.vInsuranceInfosBuilder_ == null) {
                    this.vInsuranceInfosBuilder_ = new SingleFieldBuilder(getVInsuranceInfos(), getParentForChildren(), isClean());
                    this.vInsuranceInfos_ = null;
                }
                return this.vInsuranceInfosBuilder_;
            }

            private void ensureVPotInfosIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) != AccessibilityNodeInfoCompat.ACTION_COPY) {
                    this.vPotInfos_ = new ArrayList(this.vPotInfos_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                }
            }

            public final List<PotInfo> getVPotInfosList() {
                if (this.vPotInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vPotInfos_);
                }
                return this.vPotInfosBuilder_.getMessageList();
            }

            public final int getVPotInfosCount() {
                if (this.vPotInfosBuilder_ == null) {
                    return this.vPotInfos_.size();
                }
                return this.vPotInfosBuilder_.getCount();
            }

            public final PotInfo getVPotInfos(int i) {
                if (this.vPotInfosBuilder_ == null) {
                    return (PotInfo) this.vPotInfos_.get(i);
                }
                return (PotInfo) this.vPotInfosBuilder_.getMessage(i);
            }

            public final Builder setVPotInfos(int i, PotInfo potInfo) {
                if (this.vPotInfosBuilder_ != null) {
                    this.vPotInfosBuilder_.setMessage(i, potInfo);
                } else if (potInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.set(i, potInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder setVPotInfos(int i, Builder builder) {
                if (this.vPotInfosBuilder_ == null) {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVPotInfos(PotInfo potInfo) {
                if (this.vPotInfosBuilder_ != null) {
                    this.vPotInfosBuilder_.addMessage(potInfo);
                } else if (potInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.add(potInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVPotInfos(int i, PotInfo potInfo) {
                if (this.vPotInfosBuilder_ != null) {
                    this.vPotInfosBuilder_.addMessage(i, potInfo);
                } else if (potInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.add(i, potInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVPotInfos(Builder builder) {
                if (this.vPotInfosBuilder_ == null) {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVPotInfos(int i, Builder builder) {
                if (this.vPotInfosBuilder_ == null) {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVPotInfos(Iterable<? extends PotInfo> iterable) {
                if (this.vPotInfosBuilder_ == null) {
                    ensureVPotInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vPotInfos_);
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVPotInfos() {
                if (this.vPotInfosBuilder_ == null) {
                    this.vPotInfos_ = Collections.emptyList();
                    this.bitField0_ &= -16385;
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVPotInfos(int i) {
                if (this.vPotInfosBuilder_ == null) {
                    ensureVPotInfosIsMutable();
                    this.vPotInfos_.remove(i);
                    onChanged();
                } else {
                    this.vPotInfosBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVPotInfosBuilder(int i) {
                return (Builder) getVPotInfosFieldBuilder().getBuilder(i);
            }

            public final PotInfoOrBuilder getVPotInfosOrBuilder(int i) {
                if (this.vPotInfosBuilder_ == null) {
                    return (PotInfoOrBuilder) this.vPotInfos_.get(i);
                }
                return (PotInfoOrBuilder) this.vPotInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends PotInfoOrBuilder> getVPotInfosOrBuilderList() {
                if (this.vPotInfosBuilder_ != null) {
                    return this.vPotInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vPotInfos_);
            }

            public final Builder addVPotInfosBuilder() {
                return (Builder) getVPotInfosFieldBuilder().addBuilder(PotInfo.getDefaultInstance());
            }

            public final Builder addVPotInfosBuilder(int i) {
                return (Builder) getVPotInfosFieldBuilder().addBuilder(i, PotInfo.getDefaultInstance());
            }

            public final List<Builder> getVPotInfosBuilderList() {
                return getVPotInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<PotInfo, Builder, PotInfoOrBuilder> getVPotInfosFieldBuilder() {
                if (this.vPotInfosBuilder_ == null) {
                    this.vPotInfosBuilder_ = new RepeatedFieldBuilder(this.vPotInfos_, (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY, getParentForChildren(), isClean());
                    this.vPotInfos_ = null;
                }
                return this.vPotInfosBuilder_;
            }

            private void ensureVKickUserIDsIsMutable() {
                if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) != WXMediaMessage.THUMB_LENGTH_LIMIT) {
                    this.vKickUserIDs_ = new ArrayList(this.vKickUserIDs_);
                    this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                }
            }

            public final List<Long> getVKickUserIDsList() {
                return Collections.unmodifiableList(this.vKickUserIDs_);
            }

            public final int getVKickUserIDsCount() {
                return this.vKickUserIDs_.size();
            }

            public final long getVKickUserIDs(int i) {
                return ((Long) this.vKickUserIDs_.get(i)).longValue();
            }

            public final Builder setVKickUserIDs(int i, long j) {
                ensureVKickUserIDsIsMutable();
                this.vKickUserIDs_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVKickUserIDs(long j) {
                ensureVKickUserIDsIsMutable();
                this.vKickUserIDs_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVKickUserIDs(Iterable<? extends Long> iterable) {
                ensureVKickUserIDsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vKickUserIDs_);
                onChanged();
                return this;
            }

            public final Builder clearVKickUserIDs() {
                this.vKickUserIDs_ = Collections.emptyList();
                this.bitField0_ &= -32769;
                onChanged();
                return this;
            }
        }

        private GameRoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GameRoomInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GameRoomInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final GameRoomInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GameRoomInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int i = 0;
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EGAMEROOMTYPE_FIELD_NUMBER;
                            break;
                        case STGAMERESULTINFO_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EGAMEROOMTYPE_FIELD_NUMBER;
                                this.eGameRoomType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMBASEINFO_FIELD_NUMBER) == STGAMEROOMBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomBaseInfo_ = (GameRoomBaseInfo) codedInputStream.readMessage(GameRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomBaseInfo_);
                                this.stGameRoomBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMBASEINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & EGAMESTATE_FIELD_NUMBER) == EGAMESTATE_FIELD_NUMBER) {
                                toBuilder2 = this.stSNGGameRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stSNGGameRoomBaseInfo_ = (SNGGameRoomBaseInfo) codedInputStream.readMessage(SNGGameRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stSNGGameRoomBaseInfo_);
                                this.stSNGGameRoomBaseInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= EGAMESTATE_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_GAME_STATE valueOf2 = GAME_ROOM_GAME_STATE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= STGAMERESULTINFO_FIELD_NUMBER;
                                this.eGameState_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMESTATE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            if ((i & VKICKUSERIDS_FIELD_NUMBER) != VKICKUSERIDS_FIELD_NUMBER) {
                                this.vCurrentCards_ = new ArrayList();
                                i |= VKICKUSERIDS_FIELD_NUMBER;
                            }
                            this.vCurrentCards_.add(Integer.valueOf(codedInputStream.readInt32()));
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VKICKUSERIDS_FIELD_NUMBER) != VKICKUSERIDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vCurrentCards_ = new ArrayList();
                                i |= VKICKUSERIDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vCurrentCards_.add(Integer.valueOf(codedInputStream.readInt32()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            if ((i & 32) != 32) {
                                this.vCurrentPots_ = new ArrayList();
                                i |= 32;
                            }
                            this.vCurrentPots_.add(Integer.valueOf(codedInputStream.readInt32()));
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & 32) != 32 && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vCurrentPots_ = new ArrayList();
                                i |= 32;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vCurrentPots_.add(Integer.valueOf(codedInputStream.readInt32()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            if ((i & 64) != 64) {
                                this.vUserGameInfos_ = new ArrayList();
                                i |= 64;
                            }
                            this.vUserGameInfos_.add((UserGameInfoNet) codedInputStream.readMessage(UserGameInfoNet.PARSER, extensionRegistryLite));
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            Builder toBuilder3;
                            if ((this.bitField0_ & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER) {
                                toBuilder3 = this.stGameResultInfo_.toBuilder();
                            } else {
                                toBuilder3 = null;
                            }
                            this.stGameResultInfo_ = (GameResultInfo) codedInputStream.readMessage(GameResultInfo.PARSER, extensionRegistryLite);
                            if (toBuilder3 != null) {
                                toBuilder3.mergeFrom(this.stGameResultInfo_);
                                this.stGameResultInfo_ = toBuilder3.buildPartial();
                            }
                            this.bitField0_ |= VKICKUSERIDS_FIELD_NUMBER;
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= 32;
                            this.bStateChange_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= 64;
                            this.bAllAllin_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.lGameHandID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.lEffectiveRaise_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_checkboxStyle /*104*/:
                            readTag = codedInputStream.readEnum();
                            INSURANCE_STATUS valueOf3 = INSURANCE_STATUS.valueOf(readTag);
                            if (valueOf3 != null) {
                                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                                this.eInsuranceStatus_ = valueOf3;
                                break;
                            }
                            newBuilder.mergeVarintField(EINSURANCESTATUS_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_listMenuViewStyle /*114*/:
                            Builder toBuilder4;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                                toBuilder4 = this.vInsuranceInfos_.toBuilder();
                            } else {
                                toBuilder4 = null;
                            }
                            this.vInsuranceInfos_ = (InsuranceInfo) codedInputStream.readMessage(InsuranceInfo.PARSER, extensionRegistryLite);
                            if (toBuilder4 != null) {
                                toBuilder4.mergeFrom(this.vInsuranceInfos_);
                                this.vInsuranceInfos_ = toBuilder4.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            break;
                        case 122:
                            if ((i & AccessibilityNodeInfoCompat.ACTION_COPY) != AccessibilityNodeInfoCompat.ACTION_COPY) {
                                this.vPotInfos_ = new ArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_COPY;
                            }
                            this.vPotInfos_.add((PotInfo) codedInputStream.readMessage(PotInfo.PARSER, extensionRegistryLite));
                            break;
                        case AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS /*128*/:
                            if ((i & WXMediaMessage.THUMB_LENGTH_LIMIT) != WXMediaMessage.THUMB_LENGTH_LIMIT) {
                                this.vKickUserIDs_ = new ArrayList();
                                i |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                            }
                            this.vKickUserIDs_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case TransportMediator.KEYCODE_MEDIA_RECORD /*130*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & WXMediaMessage.THUMB_LENGTH_LIMIT) != WXMediaMessage.THUMB_LENGTH_LIMIT && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vKickUserIDs_ = new ArrayList();
                                i |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vKickUserIDs_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EGAMEROOMTYPE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER) {
                        this.vCurrentCards_ = Collections.unmodifiableList(this.vCurrentCards_);
                    }
                    if ((i & 32) == 32) {
                        this.vCurrentPots_ = Collections.unmodifiableList(this.vCurrentPots_);
                    }
                    if ((i & 64) == 64) {
                        this.vUserGameInfos_ = Collections.unmodifiableList(this.vUserGameInfos_);
                    }
                    if ((i & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                        this.vPotInfos_ = Collections.unmodifiableList(this.vPotInfos_);
                    }
                    if ((i & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                        this.vKickUserIDs_ = Collections.unmodifiableList(this.vKickUserIDs_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER) {
                this.vCurrentCards_ = Collections.unmodifiableList(this.vCurrentCards_);
            }
            if ((i & 32) == 32) {
                this.vCurrentPots_ = Collections.unmodifiableList(this.vCurrentPots_);
            }
            if ((i & 64) == 64) {
                this.vUserGameInfos_ = Collections.unmodifiableList(this.vUserGameInfos_);
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                this.vPotInfos_ = Collections.unmodifiableList(this.vPotInfos_);
            }
            if ((i & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                this.vKickUserIDs_ = Collections.unmodifiableList(this.vKickUserIDs_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bG;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bH.ensureFieldAccessorsInitialized(GameRoomInfo.class, Builder.class);
        }

        static {
            PARSER = new C12311();
            GameRoomInfo gameRoomInfo = new GameRoomInfo(true);
            defaultInstance = gameRoomInfo;
            gameRoomInfo.initFields();
        }

        public final Parser<GameRoomInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasStGameRoomBaseInfo() {
            return (this.bitField0_ & STGAMEROOMBASEINFO_FIELD_NUMBER) == STGAMEROOMBASEINFO_FIELD_NUMBER;
        }

        public final GameRoomBaseInfo getStGameRoomBaseInfo() {
            return this.stGameRoomBaseInfo_;
        }

        public final GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder() {
            return this.stGameRoomBaseInfo_;
        }

        public final boolean hasStSNGGameRoomBaseInfo() {
            return (this.bitField0_ & EGAMESTATE_FIELD_NUMBER) == EGAMESTATE_FIELD_NUMBER;
        }

        public final SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo() {
            return this.stSNGGameRoomBaseInfo_;
        }

        public final SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder() {
            return this.stSNGGameRoomBaseInfo_;
        }

        public final boolean hasEGameState() {
            return (this.bitField0_ & STGAMERESULTINFO_FIELD_NUMBER) == STGAMERESULTINFO_FIELD_NUMBER;
        }

        public final GAME_ROOM_GAME_STATE getEGameState() {
            return this.eGameState_;
        }

        public final List<Integer> getVCurrentCardsList() {
            return this.vCurrentCards_;
        }

        public final int getVCurrentCardsCount() {
            return this.vCurrentCards_.size();
        }

        public final int getVCurrentCards(int i) {
            return ((Integer) this.vCurrentCards_.get(i)).intValue();
        }

        public final List<Integer> getVCurrentPotsList() {
            return this.vCurrentPots_;
        }

        public final int getVCurrentPotsCount() {
            return this.vCurrentPots_.size();
        }

        public final int getVCurrentPots(int i) {
            return ((Integer) this.vCurrentPots_.get(i)).intValue();
        }

        public final List<UserGameInfoNet> getVUserGameInfosList() {
            return this.vUserGameInfos_;
        }

        public final List<? extends UserGameInfoNetOrBuilder> getVUserGameInfosOrBuilderList() {
            return this.vUserGameInfos_;
        }

        public final int getVUserGameInfosCount() {
            return this.vUserGameInfos_.size();
        }

        public final UserGameInfoNet getVUserGameInfos(int i) {
            return (UserGameInfoNet) this.vUserGameInfos_.get(i);
        }

        public final UserGameInfoNetOrBuilder getVUserGameInfosOrBuilder(int i) {
            return (UserGameInfoNetOrBuilder) this.vUserGameInfos_.get(i);
        }

        public final boolean hasStGameResultInfo() {
            return (this.bitField0_ & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER;
        }

        public final GameResultInfo getStGameResultInfo() {
            return this.stGameResultInfo_;
        }

        public final GameResultInfoOrBuilder getStGameResultInfoOrBuilder() {
            return this.stGameResultInfo_;
        }

        public final boolean hasBStateChange() {
            return (this.bitField0_ & 32) == 32;
        }

        public final int getBStateChange() {
            return this.bStateChange_;
        }

        public final boolean hasBAllAllin() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getBAllAllin() {
            return this.bAllAllin_;
        }

        public final boolean hasLGameHandID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final long getLGameHandID() {
            return this.lGameHandID_;
        }

        public final boolean hasLEffectiveRaise() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLEffectiveRaise() {
            return this.lEffectiveRaise_;
        }

        public final boolean hasEInsuranceStatus() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final INSURANCE_STATUS getEInsuranceStatus() {
            return this.eInsuranceStatus_;
        }

        public final boolean hasVInsuranceInfos() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final InsuranceInfo getVInsuranceInfos() {
            return this.vInsuranceInfos_;
        }

        public final InsuranceInfoOrBuilder getVInsuranceInfosOrBuilder() {
            return this.vInsuranceInfos_;
        }

        public final List<PotInfo> getVPotInfosList() {
            return this.vPotInfos_;
        }

        public final List<? extends PotInfoOrBuilder> getVPotInfosOrBuilderList() {
            return this.vPotInfos_;
        }

        public final int getVPotInfosCount() {
            return this.vPotInfos_.size();
        }

        public final PotInfo getVPotInfos(int i) {
            return (PotInfo) this.vPotInfos_.get(i);
        }

        public final PotInfoOrBuilder getVPotInfosOrBuilder(int i) {
            return (PotInfoOrBuilder) this.vPotInfos_.get(i);
        }

        public final List<Long> getVKickUserIDsList() {
            return this.vKickUserIDs_;
        }

        public final int getVKickUserIDsCount() {
            return this.vKickUserIDs_.size();
        }

        public final long getVKickUserIDs(int i) {
            return ((Long) this.vKickUserIDs_.get(i)).longValue();
        }

        private void initFields() {
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
            this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
            this.eGameState_ = GAME_ROOM_GAME_STATE.ROOM_GAME_STATE_GameWait;
            this.vCurrentCards_ = Collections.emptyList();
            this.vCurrentPots_ = Collections.emptyList();
            this.vUserGameInfos_ = Collections.emptyList();
            this.stGameResultInfo_ = GameResultInfo.getDefaultInstance();
            this.bStateChange_ = 0;
            this.bAllAllin_ = 0;
            this.lGameHandID_ = 0;
            this.lEffectiveRaise_ = 0;
            this.eInsuranceStatus_ = INSURANCE_STATUS.INSURANCE_STATUS_NO;
            this.vInsuranceInfos_ = InsuranceInfo.getDefaultInstance();
            this.vPotInfos_ = Collections.emptyList();
            this.vKickUserIDs_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEGameRoomType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEGameState()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomBaseInfo() && !getStGameRoomBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStSNGGameRoomBaseInfo() || getStSNGGameRoomBaseInfo().isInitialized()) {
                int i = 0;
                while (i < getVUserGameInfosCount()) {
                    if (getVUserGameInfos(i).isInitialized()) {
                        i += EGAMEROOMTYPE_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                if (hasStGameResultInfo() && !getStGameResultInfo().isInitialized()) {
                    this.memoizedIsInitialized = (byte) 0;
                    return false;
                } else if (!hasVInsuranceInfos() || getVInsuranceInfos().isInitialized()) {
                    i = 0;
                    while (i < getVPotInfosCount()) {
                        if (getVPotInfos(i).isInitialized()) {
                            i += EGAMEROOMTYPE_FIELD_NUMBER;
                        } else {
                            this.memoizedIsInitialized = (byte) 0;
                            return false;
                        }
                    }
                    this.memoizedIsInitialized = (byte) 1;
                    return true;
                } else {
                    this.memoizedIsInitialized = (byte) 0;
                    return false;
                }
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i;
            int i2 = 0;
            getSerializedSize();
            if ((this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMBASEINFO_FIELD_NUMBER) == STGAMEROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMBASEINFO_FIELD_NUMBER, this.stGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & EGAMESTATE_FIELD_NUMBER) == EGAMESTATE_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STSNGGAMEROOMBASEINFO_FIELD_NUMBER, this.stSNGGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & STGAMERESULTINFO_FIELD_NUMBER) == STGAMERESULTINFO_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EGAMESTATE_FIELD_NUMBER, this.eGameState_.getNumber());
            }
            for (i = 0; i < this.vCurrentCards_.size(); i += EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeInt32(VCURRENTCARDS_FIELD_NUMBER, ((Integer) this.vCurrentCards_.get(i)).intValue());
            }
            for (i = 0; i < this.vCurrentPots_.size(); i += EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeInt32(VCURRENTPOTS_FIELD_NUMBER, ((Integer) this.vCurrentPots_.get(i)).intValue());
            }
            for (i = 0; i < this.vUserGameInfos_.size(); i += EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERGAMEINFOS_FIELD_NUMBER, (MessageLite) this.vUserGameInfos_.get(i));
            }
            if ((this.bitField0_ & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMERESULTINFO_FIELD_NUMBER, this.stGameResultInfo_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt32(BSTATECHANGE_FIELD_NUMBER, this.bStateChange_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(BALLALLIN_FIELD_NUMBER, this.bAllAllin_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt64(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LEFFECTIVERAISE_FIELD_NUMBER, this.lEffectiveRaise_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeEnum(EINSURANCESTATUS_FIELD_NUMBER, this.eInsuranceStatus_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeMessage(VINSURANCEINFOS_FIELD_NUMBER, this.vInsuranceInfos_);
            }
            for (i = 0; i < this.vPotInfos_.size(); i += EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VPOTINFOS_FIELD_NUMBER, (MessageLite) this.vPotInfos_.get(i));
            }
            while (i2 < this.vKickUserIDs_.size()) {
                codedOutputStream.writeInt64(VKICKUSERIDS_FIELD_NUMBER, ((Long) this.vKickUserIDs_.get(i2)).longValue());
                i2 += EGAMEROOMTYPE_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeEnumSize;
            int i3;
            if ((this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber()) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & STGAMEROOMBASEINFO_FIELD_NUMBER) == STGAMEROOMBASEINFO_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeMessageSize(STGAMEROOMBASEINFO_FIELD_NUMBER, this.stGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & EGAMESTATE_FIELD_NUMBER) == EGAMESTATE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeMessageSize(STSNGGAMEROOMBASEINFO_FIELD_NUMBER, this.stSNGGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & STGAMERESULTINFO_FIELD_NUMBER) == STGAMERESULTINFO_FIELD_NUMBER) {
                computeEnumSize = i2 + CodedOutputStream.computeEnumSize(EGAMESTATE_FIELD_NUMBER, this.eGameState_.getNumber());
            } else {
                computeEnumSize = i2;
            }
            int i4 = 0;
            for (i3 = 0; i3 < this.vCurrentCards_.size(); i3 += EGAMEROOMTYPE_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeInt32SizeNoTag(((Integer) this.vCurrentCards_.get(i3)).intValue());
            }
            i4 = (computeEnumSize + i4) + (getVCurrentCardsList().size() * EGAMEROOMTYPE_FIELD_NUMBER);
            i3 = 0;
            for (computeEnumSize = 0; computeEnumSize < this.vCurrentPots_.size(); computeEnumSize += EGAMEROOMTYPE_FIELD_NUMBER) {
                i3 += CodedOutputStream.computeInt32SizeNoTag(((Integer) this.vCurrentPots_.get(computeEnumSize)).intValue());
            }
            i3 = (i4 + i3) + (getVCurrentPotsList().size() * EGAMEROOMTYPE_FIELD_NUMBER);
            for (computeEnumSize = 0; computeEnumSize < this.vUserGameInfos_.size(); computeEnumSize += EGAMEROOMTYPE_FIELD_NUMBER) {
                i3 += CodedOutputStream.computeMessageSize(VUSERGAMEINFOS_FIELD_NUMBER, (MessageLite) this.vUserGameInfos_.get(computeEnumSize));
            }
            if ((this.bitField0_ & VKICKUSERIDS_FIELD_NUMBER) == VKICKUSERIDS_FIELD_NUMBER) {
                i3 += CodedOutputStream.computeMessageSize(STGAMERESULTINFO_FIELD_NUMBER, this.stGameResultInfo_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i3 += CodedOutputStream.computeInt32Size(BSTATECHANGE_FIELD_NUMBER, this.bStateChange_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i3 += CodedOutputStream.computeInt32Size(BALLALLIN_FIELD_NUMBER, this.bAllAllin_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i3 += CodedOutputStream.computeInt64Size(LGAMEHANDID_FIELD_NUMBER, this.lGameHandID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i3 += CodedOutputStream.computeInt64Size(LEFFECTIVERAISE_FIELD_NUMBER, this.lEffectiveRaise_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i3 += CodedOutputStream.computeEnumSize(EINSURANCESTATUS_FIELD_NUMBER, this.eInsuranceStatus_.getNumber());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i3 += CodedOutputStream.computeMessageSize(VINSURANCEINFOS_FIELD_NUMBER, this.vInsuranceInfos_);
            }
            for (computeEnumSize = 0; computeEnumSize < this.vPotInfos_.size(); computeEnumSize += EGAMEROOMTYPE_FIELD_NUMBER) {
                i3 += CodedOutputStream.computeMessageSize(VPOTINFOS_FIELD_NUMBER, (MessageLite) this.vPotInfos_.get(computeEnumSize));
            }
            computeEnumSize = 0;
            while (i < this.vKickUserIDs_.size()) {
                i += EGAMEROOMTYPE_FIELD_NUMBER;
                computeEnumSize = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vKickUserIDs_.get(i)).longValue()) + computeEnumSize;
            }
            i2 = ((i3 + computeEnumSize) + (getVKickUserIDsList().size() * STGAMEROOMBASEINFO_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GameRoomInfo parseFrom(ByteString byteString) {
            return (GameRoomInfo) PARSER.parseFrom(byteString);
        }

        public static GameRoomInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GameRoomInfo parseFrom(byte[] bArr) {
            return (GameRoomInfo) PARSER.parseFrom(bArr);
        }

        public static GameRoomInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GameRoomInfo parseFrom(InputStream inputStream) {
            return (GameRoomInfo) PARSER.parseFrom(inputStream);
        }

        public static GameRoomInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomInfo parseDelimitedFrom(InputStream inputStream) {
            return (GameRoomInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GameRoomInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomInfo parseFrom(CodedInputStream codedInputStream) {
            return (GameRoomInfo) PARSER.parseFrom(codedInputStream);
        }

        public static GameRoomInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GameRoomInfo gameRoomInfo) {
            return newBuilder().mergeFrom(gameRoomInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface GameRoomPushMsgOrBuilder extends MessageOrBuilder {
        GAME_ROOM_MESSAGE_TYPE getEGameMessageType();

        int getIPos();

        int getIThinkingInterval();

        long getLCreateTime();

        long getLMsgID();

        String getSMsg();

        ByteString getSMsgBytes();

        UserGameInfoNet getStFromUser();

        UserGameInfoNetOrBuilder getStFromUserOrBuilder();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEGameMessageType();

        boolean hasIPos();

        boolean hasIThinkingInterval();

        boolean hasLCreateTime();

        boolean hasLMsgID();

        boolean hasSMsg();

        boolean hasStFromUser();

        boolean hasStGameRoomInfo();
    }

    public static final class GameRoomPushMsg extends GeneratedMessage implements GameRoomPushMsgOrBuilder {
        public static final int EGAMEMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int IPOS_FIELD_NUMBER = 7;
        public static final int ITHINKINGINTERVAL_FIELD_NUMBER = 8;
        public static final int LCREATETIME_FIELD_NUMBER = 5;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static Parser<GameRoomPushMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 4;
        public static final int STFROMUSER_FIELD_NUMBER = 3;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 6;
        private static final GameRoomPushMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ROOM_MESSAGE_TYPE eGameMessageType_;
        private int iPos_;
        private int iThinkingInterval_;
        private long lCreateTime_;
        private long lMsgID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private UserGameInfoNet stFromUser_;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.GameRoomPushMsg.1 */
        class C12321 extends AbstractParser<GameRoomPushMsg> {
            C12321() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new GameRoomPushMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GameRoomPushMsgOrBuilder {
            private int bitField0_;
            private GAME_ROOM_MESSAGE_TYPE eGameMessageType_;
            private int iPos_;
            private int iThinkingInterval_;
            private long lCreateTime_;
            private long lMsgID_;
            private Object sMsg_;
            private SingleFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> stFromUserBuilder_;
            private UserGameInfoNet stFromUser_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fe;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ff.ensureFieldAccessorsInitialized(GameRoomPushMsg.class, Builder.class);
            }

            private Builder() {
                this.eGameMessageType_ = GAME_ROOM_MESSAGE_TYPE.GAME_ROOM_MESSAGE_INVITE;
                this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eGameMessageType_ = GAME_ROOM_MESSAGE_TYPE.GAME_ROOM_MESSAGE_INVITE;
                this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GameRoomPushMsg.alwaysUseFieldBuilders) {
                    getStFromUserFieldBuilder();
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lMsgID_ = 0;
                this.bitField0_ &= -2;
                this.eGameMessageType_ = GAME_ROOM_MESSAGE_TYPE.GAME_ROOM_MESSAGE_INVITE;
                this.bitField0_ &= -3;
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -5;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.lCreateTime_ = 0;
                this.bitField0_ &= -17;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                this.iPos_ = 0;
                this.bitField0_ &= -65;
                this.iThinkingInterval_ = 0;
                this.bitField0_ &= -129;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fe;
            }

            public final GameRoomPushMsg getDefaultInstanceForType() {
                return GameRoomPushMsg.getDefaultInstance();
            }

            public final GameRoomPushMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GameRoomPushMsg buildPartial() {
                int i;
                int i2 = GameRoomPushMsg.LMSGID_FIELD_NUMBER;
                GameRoomPushMsg gameRoomPushMsg = new GameRoomPushMsg(null);
                int i3 = this.bitField0_;
                if ((i3 & GameRoomPushMsg.LMSGID_FIELD_NUMBER) != GameRoomPushMsg.LMSGID_FIELD_NUMBER) {
                    i2 = 0;
                }
                gameRoomPushMsg.lMsgID_ = this.lMsgID_;
                if ((i3 & GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) == GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) {
                    i2 |= GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
                }
                gameRoomPushMsg.eGameMessageType_ = this.eGameMessageType_;
                if ((i3 & GameRoomPushMsg.SMSG_FIELD_NUMBER) == GameRoomPushMsg.SMSG_FIELD_NUMBER) {
                    i = i2 | GameRoomPushMsg.SMSG_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stFromUserBuilder_ == null) {
                    gameRoomPushMsg.stFromUser_ = this.stFromUser_;
                } else {
                    gameRoomPushMsg.stFromUser_ = (UserGameInfoNet) this.stFromUserBuilder_.build();
                }
                if ((i3 & GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER) == GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER) {
                    i |= GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER;
                }
                gameRoomPushMsg.sMsg_ = this.sMsg_;
                if ((i3 & 16) == 16) {
                    i |= 16;
                }
                gameRoomPushMsg.lCreateTime_ = this.lCreateTime_;
                if ((i3 & 32) == 32) {
                    i |= 32;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    gameRoomPushMsg.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    gameRoomPushMsg.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((i3 & 64) == 64) {
                    i |= 64;
                }
                gameRoomPushMsg.iPos_ = this.iPos_;
                if ((i3 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                gameRoomPushMsg.iThinkingInterval_ = this.iThinkingInterval_;
                gameRoomPushMsg.bitField0_ = i;
                onBuilt();
                return gameRoomPushMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GameRoomPushMsg) {
                    return mergeFrom((GameRoomPushMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GameRoomPushMsg gameRoomPushMsg) {
                if (gameRoomPushMsg != GameRoomPushMsg.getDefaultInstance()) {
                    if (gameRoomPushMsg.hasLMsgID()) {
                        setLMsgID(gameRoomPushMsg.getLMsgID());
                    }
                    if (gameRoomPushMsg.hasEGameMessageType()) {
                        setEGameMessageType(gameRoomPushMsg.getEGameMessageType());
                    }
                    if (gameRoomPushMsg.hasStFromUser()) {
                        mergeStFromUser(gameRoomPushMsg.getStFromUser());
                    }
                    if (gameRoomPushMsg.hasSMsg()) {
                        this.bitField0_ |= GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER;
                        this.sMsg_ = gameRoomPushMsg.sMsg_;
                        onChanged();
                    }
                    if (gameRoomPushMsg.hasLCreateTime()) {
                        setLCreateTime(gameRoomPushMsg.getLCreateTime());
                    }
                    if (gameRoomPushMsg.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(gameRoomPushMsg.getStGameRoomInfo());
                    }
                    if (gameRoomPushMsg.hasIPos()) {
                        setIPos(gameRoomPushMsg.getIPos());
                    }
                    if (gameRoomPushMsg.hasIThinkingInterval()) {
                        setIThinkingInterval(gameRoomPushMsg.getIThinkingInterval());
                    }
                    mergeUnknownFields(gameRoomPushMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLMsgID() || !hasEGameMessageType() || !hasSMsg() || !hasLCreateTime()) {
                    return false;
                }
                if (hasStFromUser() && !getStFromUser().isInitialized()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GameRoomPushMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GameRoomPushMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomPushMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GameRoomPushMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GameRoomPushMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GameRoomPushMsg$Builder");
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & GameRoomPushMsg.LMSGID_FIELD_NUMBER) == GameRoomPushMsg.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= GameRoomPushMsg.LMSGID_FIELD_NUMBER;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -2;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameMessageType() {
                return (this.bitField0_ & GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER) == GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
            }

            public final GAME_ROOM_MESSAGE_TYPE getEGameMessageType() {
                return this.eGameMessageType_;
            }

            public final Builder setEGameMessageType(GAME_ROOM_MESSAGE_TYPE game_room_message_type) {
                if (game_room_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomPushMsg.EGAMEMESSAGETYPE_FIELD_NUMBER;
                this.eGameMessageType_ = game_room_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameMessageType() {
                this.bitField0_ &= -3;
                this.eGameMessageType_ = GAME_ROOM_MESSAGE_TYPE.GAME_ROOM_MESSAGE_INVITE;
                onChanged();
                return this;
            }

            public final boolean hasStFromUser() {
                return (this.bitField0_ & GameRoomPushMsg.SMSG_FIELD_NUMBER) == GameRoomPushMsg.SMSG_FIELD_NUMBER;
            }

            public final UserGameInfoNet getStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    return this.stFromUser_;
                }
                return (UserGameInfoNet) this.stFromUserBuilder_.getMessage();
            }

            public final Builder setStFromUser(UserGameInfoNet userGameInfoNet) {
                if (this.stFromUserBuilder_ != null) {
                    this.stFromUserBuilder_.setMessage(userGameInfoNet);
                } else if (userGameInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stFromUser_ = userGameInfoNet;
                    onChanged();
                }
                this.bitField0_ |= GameRoomPushMsg.SMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder setStFromUser(Builder builder) {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = builder.build();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= GameRoomPushMsg.SMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStFromUser(UserGameInfoNet userGameInfoNet) {
                if (this.stFromUserBuilder_ == null) {
                    if ((this.bitField0_ & GameRoomPushMsg.SMSG_FIELD_NUMBER) != GameRoomPushMsg.SMSG_FIELD_NUMBER || this.stFromUser_ == UserGameInfoNet.getDefaultInstance()) {
                        this.stFromUser_ = userGameInfoNet;
                    } else {
                        this.stFromUser_ = UserGameInfoNet.newBuilder(this.stFromUser_).mergeFrom(userGameInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stFromUserBuilder_.mergeFrom(userGameInfoNet);
                }
                this.bitField0_ |= GameRoomPushMsg.SMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder getStFromUserBuilder() {
                this.bitField0_ |= GameRoomPushMsg.SMSG_FIELD_NUMBER;
                onChanged();
                return (Builder) getStFromUserFieldBuilder().getBuilder();
            }

            public final UserGameInfoNetOrBuilder getStFromUserOrBuilder() {
                if (this.stFromUserBuilder_ != null) {
                    return (UserGameInfoNetOrBuilder) this.stFromUserBuilder_.getMessageOrBuilder();
                }
                return this.stFromUser_;
            }

            private SingleFieldBuilder<UserGameInfoNet, Builder, UserGameInfoNetOrBuilder> getStFromUserFieldBuilder() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUserBuilder_ = new SingleFieldBuilder(getStFromUser(), getParentForChildren(), isClean());
                    this.stFromUser_ = null;
                }
                return this.stFromUserBuilder_;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER) == GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -9;
                this.sMsg_ = GameRoomPushMsg.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= GameRoomPushMsg.ITHINKINGINTERVAL_FIELD_NUMBER;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLCreateTime() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLCreateTime() {
                return this.lCreateTime_;
            }

            public final Builder setLCreateTime(long j) {
                this.bitField0_ |= 16;
                this.lCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateTime() {
                this.bitField0_ &= -17;
                this.lCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & 32) == 32;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & 32) != 32 || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= 32;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            public final boolean hasIPos() {
                return (this.bitField0_ & 64) == 64;
            }

            public final int getIPos() {
                return this.iPos_;
            }

            public final Builder setIPos(int i) {
                this.bitField0_ |= 64;
                this.iPos_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIPos() {
                this.bitField0_ &= -65;
                this.iPos_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIThinkingInterval() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final int getIThinkingInterval() {
                return this.iThinkingInterval_;
            }

            public final Builder setIThinkingInterval(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.iThinkingInterval_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIThinkingInterval() {
                this.bitField0_ &= -129;
                this.iThinkingInterval_ = 0;
                onChanged();
                return this;
            }
        }

        private GameRoomPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GameRoomPushMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GameRoomPushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final GameRoomPushMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GameRoomPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LMSGID_FIELD_NUMBER;
                            break;
                        case ITHINKINGINTERVAL_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_MESSAGE_TYPE valueOf = GAME_ROOM_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EGAMEMESSAGETYPE_FIELD_NUMBER;
                                this.eGameMessageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & SMSG_FIELD_NUMBER) == SMSG_FIELD_NUMBER) {
                                toBuilder = this.stFromUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stFromUser_ = (UserGameInfoNet) codedInputStream.readMessage(UserGameInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stFromUser_);
                                this.stFromUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= SMSG_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= ITHINKINGINTERVAL_FIELD_NUMBER;
                            this.sMsg_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lCreateTime_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 32) == 32) {
                                toBuilder2 = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 32;
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 64;
                            this.iPos_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.iThinkingInterval_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LMSGID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fe;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ff.ensureFieldAccessorsInitialized(GameRoomPushMsg.class, Builder.class);
        }

        static {
            PARSER = new C12321();
            GameRoomPushMsg gameRoomPushMsg = new GameRoomPushMsg(true);
            defaultInstance = gameRoomPushMsg;
            gameRoomPushMsg.initFields();
        }

        public final Parser<GameRoomPushMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasEGameMessageType() {
            return (this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER;
        }

        public final GAME_ROOM_MESSAGE_TYPE getEGameMessageType() {
            return this.eGameMessageType_;
        }

        public final boolean hasStFromUser() {
            return (this.bitField0_ & SMSG_FIELD_NUMBER) == SMSG_FIELD_NUMBER;
        }

        public final UserGameInfoNet getStFromUser() {
            return this.stFromUser_;
        }

        public final UserGameInfoNetOrBuilder getStFromUserOrBuilder() {
            return this.stFromUser_;
        }

        public final boolean hasSMsg() {
            return (this.bitField0_ & ITHINKINGINTERVAL_FIELD_NUMBER) == ITHINKINGINTERVAL_FIELD_NUMBER;
        }

        public final String getSMsg() {
            Object obj = this.sMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSMsgBytes() {
            Object obj = this.sMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLCreateTime() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLCreateTime() {
            return this.lCreateTime_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & 32) == 32;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasIPos() {
            return (this.bitField0_ & 64) == 64;
        }

        public final int getIPos() {
            return this.iPos_;
        }

        public final boolean hasIThinkingInterval() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final int getIThinkingInterval() {
            return this.iThinkingInterval_;
        }

        private void initFields() {
            this.lMsgID_ = 0;
            this.eGameMessageType_ = GAME_ROOM_MESSAGE_TYPE.GAME_ROOM_MESSAGE_INVITE;
            this.stFromUser_ = UserGameInfoNet.getDefaultInstance();
            this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lCreateTime_ = 0;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.iPos_ = 0;
            this.iThinkingInterval_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLMsgID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEGameMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSMsg()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStFromUser() && !getStFromUser().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EGAMEMESSAGETYPE_FIELD_NUMBER, this.eGameMessageType_.getNumber());
            }
            if ((this.bitField0_ & SMSG_FIELD_NUMBER) == SMSG_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & ITHINKINGINTERVAL_FIELD_NUMBER) == ITHINKINGINTERVAL_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(IPOS_FIELD_NUMBER, this.iPos_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt32(ITHINKINGINTERVAL_FIELD_NUMBER, this.iThinkingInterval_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_) + 0;
            }
            if ((this.bitField0_ & EGAMEMESSAGETYPE_FIELD_NUMBER) == EGAMEMESSAGETYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EGAMEMESSAGETYPE_FIELD_NUMBER, this.eGameMessageType_.getNumber());
            }
            if ((this.bitField0_ & SMSG_FIELD_NUMBER) == SMSG_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & ITHINKINGINTERVAL_FIELD_NUMBER) == ITHINKINGINTERVAL_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i += CodedOutputStream.computeInt32Size(IPOS_FIELD_NUMBER, this.iPos_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i += CodedOutputStream.computeInt32Size(ITHINKINGINTERVAL_FIELD_NUMBER, this.iThinkingInterval_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GameRoomPushMsg parseFrom(ByteString byteString) {
            return (GameRoomPushMsg) PARSER.parseFrom(byteString);
        }

        public static GameRoomPushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomPushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GameRoomPushMsg parseFrom(byte[] bArr) {
            return (GameRoomPushMsg) PARSER.parseFrom(bArr);
        }

        public static GameRoomPushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomPushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GameRoomPushMsg parseFrom(InputStream inputStream) {
            return (GameRoomPushMsg) PARSER.parseFrom(inputStream);
        }

        public static GameRoomPushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomPushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomPushMsg parseDelimitedFrom(InputStream inputStream) {
            return (GameRoomPushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GameRoomPushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomPushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GameRoomPushMsg parseFrom(CodedInputStream codedInputStream) {
            return (GameRoomPushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static GameRoomPushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GameRoomPushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GameRoomPushMsg gameRoomPushMsg) {
            return newBuilder().mergeFrom(gameRoomPushMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface GiveMoneyPushMsgOrBuilder extends MessageOrBuilder {
        long getLFromUuid();

        long getLMsgID();

        int getLPopularity();

        long getLRoomID();

        long getLToUuid();

        String getSExtra();

        ByteString getSExtraBytes();

        boolean hasLFromUuid();

        boolean hasLMsgID();

        boolean hasLPopularity();

        boolean hasLRoomID();

        boolean hasLToUuid();

        boolean hasSExtra();
    }

    public static final class GiveMoneyPushMsg extends GeneratedMessage implements GiveMoneyPushMsgOrBuilder {
        public static final int LFROMUUID_FIELD_NUMBER = 2;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static final int LPOPULARITY_FIELD_NUMBER = 5;
        public static final int LROOMID_FIELD_NUMBER = 4;
        public static final int LTOUUID_FIELD_NUMBER = 3;
        public static Parser<GiveMoneyPushMsg> PARSER = null;
        public static final int SEXTRA_FIELD_NUMBER = 6;
        private static final GiveMoneyPushMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lFromUuid_;
        private long lMsgID_;
        private int lPopularity_;
        private long lRoomID_;
        private long lToUuid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sExtra_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg.1 */
        class C12331 extends AbstractParser<GiveMoneyPushMsg> {
            C12331() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new GiveMoneyPushMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements GiveMoneyPushMsgOrBuilder {
            private int bitField0_;
            private long lFromUuid_;
            private long lMsgID_;
            private int lPopularity_;
            private long lRoomID_;
            private long lToUuid_;
            private Object sExtra_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cs;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.ct.ensureFieldAccessorsInitialized(GiveMoneyPushMsg.class, Builder.class);
            }

            private Builder() {
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                GiveMoneyPushMsg.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lMsgID_ = 0;
                this.bitField0_ &= -2;
                this.lFromUuid_ = 0;
                this.bitField0_ &= -3;
                this.lToUuid_ = 0;
                this.bitField0_ &= -5;
                this.lRoomID_ = 0;
                this.bitField0_ &= -9;
                this.lPopularity_ = 0;
                this.bitField0_ &= -17;
                this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cs;
            }

            public final GiveMoneyPushMsg getDefaultInstanceForType() {
                return GiveMoneyPushMsg.getDefaultInstance();
            }

            public final GiveMoneyPushMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final GiveMoneyPushMsg buildPartial() {
                int i = GiveMoneyPushMsg.LMSGID_FIELD_NUMBER;
                GiveMoneyPushMsg giveMoneyPushMsg = new GiveMoneyPushMsg(null);
                int i2 = this.bitField0_;
                if ((i2 & GiveMoneyPushMsg.LMSGID_FIELD_NUMBER) != GiveMoneyPushMsg.LMSGID_FIELD_NUMBER) {
                    i = 0;
                }
                giveMoneyPushMsg.lMsgID_ = this.lMsgID_;
                if ((i2 & GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER) == GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER) {
                    i |= GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER;
                }
                giveMoneyPushMsg.lFromUuid_ = this.lFromUuid_;
                if ((i2 & GiveMoneyPushMsg.LROOMID_FIELD_NUMBER) == GiveMoneyPushMsg.LROOMID_FIELD_NUMBER) {
                    i |= GiveMoneyPushMsg.LROOMID_FIELD_NUMBER;
                }
                giveMoneyPushMsg.lToUuid_ = this.lToUuid_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                giveMoneyPushMsg.lRoomID_ = this.lRoomID_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                giveMoneyPushMsg.lPopularity_ = this.lPopularity_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                giveMoneyPushMsg.sExtra_ = this.sExtra_;
                giveMoneyPushMsg.bitField0_ = i;
                onBuilt();
                return giveMoneyPushMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof GiveMoneyPushMsg) {
                    return mergeFrom((GiveMoneyPushMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(GiveMoneyPushMsg giveMoneyPushMsg) {
                if (giveMoneyPushMsg != GiveMoneyPushMsg.getDefaultInstance()) {
                    if (giveMoneyPushMsg.hasLMsgID()) {
                        setLMsgID(giveMoneyPushMsg.getLMsgID());
                    }
                    if (giveMoneyPushMsg.hasLFromUuid()) {
                        setLFromUuid(giveMoneyPushMsg.getLFromUuid());
                    }
                    if (giveMoneyPushMsg.hasLToUuid()) {
                        setLToUuid(giveMoneyPushMsg.getLToUuid());
                    }
                    if (giveMoneyPushMsg.hasLRoomID()) {
                        setLRoomID(giveMoneyPushMsg.getLRoomID());
                    }
                    if (giveMoneyPushMsg.hasLPopularity()) {
                        setLPopularity(giveMoneyPushMsg.getLPopularity());
                    }
                    if (giveMoneyPushMsg.hasSExtra()) {
                        this.bitField0_ |= 32;
                        this.sExtra_ = giveMoneyPushMsg.sExtra_;
                        onChanged();
                    }
                    mergeUnknownFields(giveMoneyPushMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLMsgID() && hasLFromUuid() && hasLToUuid() && hasLRoomID() && hasLPopularity()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.GiveMoneyPushMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$GiveMoneyPushMsg$Builder");
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & GiveMoneyPushMsg.LMSGID_FIELD_NUMBER) == GiveMoneyPushMsg.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= GiveMoneyPushMsg.LMSGID_FIELD_NUMBER;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -2;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLFromUuid() {
                return (this.bitField0_ & GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER) == GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER;
            }

            public final long getLFromUuid() {
                return this.lFromUuid_;
            }

            public final Builder setLFromUuid(long j) {
                this.bitField0_ |= GiveMoneyPushMsg.LFROMUUID_FIELD_NUMBER;
                this.lFromUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLFromUuid() {
                this.bitField0_ &= -3;
                this.lFromUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLToUuid() {
                return (this.bitField0_ & GiveMoneyPushMsg.LROOMID_FIELD_NUMBER) == GiveMoneyPushMsg.LROOMID_FIELD_NUMBER;
            }

            public final long getLToUuid() {
                return this.lToUuid_;
            }

            public final Builder setLToUuid(long j) {
                this.bitField0_ |= GiveMoneyPushMsg.LROOMID_FIELD_NUMBER;
                this.lToUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLToUuid() {
                this.bitField0_ &= -5;
                this.lToUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= 8;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -9;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLPopularity() {
                return (this.bitField0_ & 16) == 16;
            }

            public final int getLPopularity() {
                return this.lPopularity_;
            }

            public final Builder setLPopularity(int i) {
                this.bitField0_ |= 16;
                this.lPopularity_ = i;
                onChanged();
                return this;
            }

            public final Builder clearLPopularity() {
                this.bitField0_ &= -17;
                this.lPopularity_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSExtra() {
                return (this.bitField0_ & 32) == 32;
            }

            public final String getSExtra() {
                Object obj = this.sExtra_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sExtra_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSExtraBytes() {
                Object obj = this.sExtra_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sExtra_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSExtra(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sExtra_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSExtra() {
                this.bitField0_ &= -33;
                this.sExtra_ = GiveMoneyPushMsg.getDefaultInstance().getSExtra();
                onChanged();
                return this;
            }

            public final Builder setSExtraBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32;
                this.sExtra_ = byteString;
                onChanged();
                return this;
            }
        }

        private GiveMoneyPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private GiveMoneyPushMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static GiveMoneyPushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final GiveMoneyPushMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private GiveMoneyPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LMSGID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LFROMUUID_FIELD_NUMBER;
                            this.lFromUuid_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lToUuid_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lPopularity_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.sExtra_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LMSGID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cs;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ct.ensureFieldAccessorsInitialized(GiveMoneyPushMsg.class, Builder.class);
        }

        static {
            PARSER = new C12331();
            GiveMoneyPushMsg giveMoneyPushMsg = new GiveMoneyPushMsg(true);
            defaultInstance = giveMoneyPushMsg;
            giveMoneyPushMsg.initFields();
        }

        public final Parser<GiveMoneyPushMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasLFromUuid() {
            return (this.bitField0_ & LFROMUUID_FIELD_NUMBER) == LFROMUUID_FIELD_NUMBER;
        }

        public final long getLFromUuid() {
            return this.lFromUuid_;
        }

        public final boolean hasLToUuid() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLToUuid() {
            return this.lToUuid_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasLPopularity() {
            return (this.bitField0_ & 16) == 16;
        }

        public final int getLPopularity() {
            return this.lPopularity_;
        }

        public final boolean hasSExtra() {
            return (this.bitField0_ & 32) == 32;
        }

        public final String getSExtra() {
            Object obj = this.sExtra_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sExtra_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSExtraBytes() {
            Object obj = this.sExtra_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sExtra_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.lMsgID_ = 0;
            this.lFromUuid_ = 0;
            this.lToUuid_ = 0;
            this.lRoomID_ = 0;
            this.lPopularity_ = 0;
            this.sExtra_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLMsgID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLFromUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLToUuid()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLRoomID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLPopularity()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & LFROMUUID_FIELD_NUMBER) == LFROMUUID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LFROMUUID_FIELD_NUMBER, this.lFromUuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LTOUUID_FIELD_NUMBER, this.lToUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt32(LPOPULARITY_FIELD_NUMBER, this.lPopularity_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBytes(SEXTRA_FIELD_NUMBER, getSExtraBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_) + 0;
            }
            if ((this.bitField0_ & LFROMUUID_FIELD_NUMBER) == LFROMUUID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LFROMUUID_FIELD_NUMBER, this.lFromUuid_);
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LTOUUID_FIELD_NUMBER, this.lToUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt32Size(LPOPULARITY_FIELD_NUMBER, this.lPopularity_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeBytesSize(SEXTRA_FIELD_NUMBER, getSExtraBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static GiveMoneyPushMsg parseFrom(ByteString byteString) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(byteString);
        }

        public static GiveMoneyPushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GiveMoneyPushMsg parseFrom(byte[] bArr) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(bArr);
        }

        public static GiveMoneyPushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GiveMoneyPushMsg parseFrom(InputStream inputStream) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(inputStream);
        }

        public static GiveMoneyPushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static GiveMoneyPushMsg parseDelimitedFrom(InputStream inputStream) {
            return (GiveMoneyPushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static GiveMoneyPushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GiveMoneyPushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static GiveMoneyPushMsg parseFrom(CodedInputStream codedInputStream) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static GiveMoneyPushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (GiveMoneyPushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(GiveMoneyPushMsg giveMoneyPushMsg) {
            return newBuilder().mergeFrom(giveMoneyPushMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public enum HAND_PATTERNS implements ProtocolMessageEnum {
        HAND_PATTERN_1(0, HAND_PATTERN_1_VALUE),
        HAND_PATTERN_2(HAND_PATTERN_1_VALUE, HAND_PATTERN_2_VALUE),
        HAND_PATTERN_3(HAND_PATTERN_2_VALUE, HAND_PATTERN_3_VALUE),
        HAND_PATTERN_4(HAND_PATTERN_3_VALUE, HAND_PATTERN_4_VALUE),
        HAND_PATTERN_5(HAND_PATTERN_4_VALUE, HAND_PATTERN_5_VALUE),
        HAND_PATTERN_6(HAND_PATTERN_5_VALUE, HAND_PATTERN_6_VALUE),
        HAND_PATTERN_7(HAND_PATTERN_6_VALUE, HAND_PATTERN_7_VALUE),
        HAND_PATTERN_8(HAND_PATTERN_7_VALUE, HAND_PATTERN_8_VALUE),
        HAND_PATTERN_9(HAND_PATTERN_8_VALUE, HAND_PATTERN_9_VALUE),
        HAND_PATTERN_10(HAND_PATTERN_9_VALUE, HAND_PATTERN_10_VALUE);
        
        public static final int HAND_PATTERN_10_VALUE = 10;
        public static final int HAND_PATTERN_1_VALUE = 1;
        public static final int HAND_PATTERN_2_VALUE = 2;
        public static final int HAND_PATTERN_3_VALUE = 3;
        public static final int HAND_PATTERN_4_VALUE = 4;
        public static final int HAND_PATTERN_5_VALUE = 5;
        public static final int HAND_PATTERN_6_VALUE = 6;
        public static final int HAND_PATTERN_7_VALUE = 7;
        public static final int HAND_PATTERN_8_VALUE = 8;
        public static final int HAND_PATTERN_9_VALUE = 9;
        private static final HAND_PATTERNS[] VALUES;
        private static EnumLiteMap<HAND_PATTERNS> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.HAND_PATTERNS.1 */
        class C12341 implements EnumLiteMap<HAND_PATTERNS> {
            C12341() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return HAND_PATTERNS.valueOf(i);
            }
        }

        static {
            internalValueMap = new C12341();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static HAND_PATTERNS valueOf(int i) {
            switch (i) {
                case HAND_PATTERN_1_VALUE:
                    return HAND_PATTERN_1;
                case HAND_PATTERN_2_VALUE:
                    return HAND_PATTERN_2;
                case HAND_PATTERN_3_VALUE:
                    return HAND_PATTERN_3;
                case HAND_PATTERN_4_VALUE:
                    return HAND_PATTERN_4;
                case HAND_PATTERN_5_VALUE:
                    return HAND_PATTERN_5;
                case HAND_PATTERN_6_VALUE:
                    return HAND_PATTERN_6;
                case HAND_PATTERN_7_VALUE:
                    return HAND_PATTERN_7;
                case HAND_PATTERN_8_VALUE:
                    return HAND_PATTERN_8;
                case HAND_PATTERN_9_VALUE:
                    return HAND_PATTERN_9;
                case HAND_PATTERN_10_VALUE:
                    return HAND_PATTERN_10;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<HAND_PATTERNS> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(HAND_PATTERN_2_VALUE);
        }

        public static HAND_PATTERNS valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private HAND_PATTERNS(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface HallBaseInfoNetOrBuilder extends MessageOrBuilder {
        int getNRoomNum();

        int getNUserNum();

        boolean hasNRoomNum();

        boolean hasNUserNum();
    }

    public static final class HallBaseInfoNet extends GeneratedMessage implements HallBaseInfoNetOrBuilder {
        public static final int NROOMNUM_FIELD_NUMBER = 1;
        public static final int NUSERNUM_FIELD_NUMBER = 2;
        public static Parser<HallBaseInfoNet> PARSER;
        private static final HallBaseInfoNet defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private int nRoomNum_;
        private int nUserNum_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.HallBaseInfoNet.1 */
        class C12351 extends AbstractParser<HallBaseInfoNet> {
            C12351() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new HallBaseInfoNet(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements HallBaseInfoNetOrBuilder {
            private int bitField0_;
            private int nRoomNum_;
            private int nUserNum_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8285c;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8286d.ensureFieldAccessorsInitialized(HallBaseInfoNet.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                HallBaseInfoNet.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.nRoomNum_ = 0;
                this.bitField0_ &= -2;
                this.nUserNum_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8285c;
            }

            public final HallBaseInfoNet getDefaultInstanceForType() {
                return HallBaseInfoNet.getDefaultInstance();
            }

            public final HallBaseInfoNet build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final HallBaseInfoNet buildPartial() {
                int i = HallBaseInfoNet.NROOMNUM_FIELD_NUMBER;
                HallBaseInfoNet hallBaseInfoNet = new HallBaseInfoNet(null);
                int i2 = this.bitField0_;
                if ((i2 & HallBaseInfoNet.NROOMNUM_FIELD_NUMBER) != HallBaseInfoNet.NROOMNUM_FIELD_NUMBER) {
                    i = 0;
                }
                hallBaseInfoNet.nRoomNum_ = this.nRoomNum_;
                if ((i2 & HallBaseInfoNet.NUSERNUM_FIELD_NUMBER) == HallBaseInfoNet.NUSERNUM_FIELD_NUMBER) {
                    i |= HallBaseInfoNet.NUSERNUM_FIELD_NUMBER;
                }
                hallBaseInfoNet.nUserNum_ = this.nUserNum_;
                hallBaseInfoNet.bitField0_ = i;
                onBuilt();
                return hallBaseInfoNet;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof HallBaseInfoNet) {
                    return mergeFrom((HallBaseInfoNet) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(HallBaseInfoNet hallBaseInfoNet) {
                if (hallBaseInfoNet != HallBaseInfoNet.getDefaultInstance()) {
                    if (hallBaseInfoNet.hasNRoomNum()) {
                        setNRoomNum(hallBaseInfoNet.getNRoomNum());
                    }
                    if (hallBaseInfoNet.hasNUserNum()) {
                        setNUserNum(hallBaseInfoNet.getNUserNum());
                    }
                    mergeUnknownFields(hallBaseInfoNet.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasNRoomNum()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.HallBaseInfoNet.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.HallBaseInfoNet.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.HallBaseInfoNet) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.HallBaseInfoNet) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.HallBaseInfoNet.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$HallBaseInfoNet$Builder");
            }

            public final boolean hasNRoomNum() {
                return (this.bitField0_ & HallBaseInfoNet.NROOMNUM_FIELD_NUMBER) == HallBaseInfoNet.NROOMNUM_FIELD_NUMBER;
            }

            public final int getNRoomNum() {
                return this.nRoomNum_;
            }

            public final Builder setNRoomNum(int i) {
                this.bitField0_ |= HallBaseInfoNet.NROOMNUM_FIELD_NUMBER;
                this.nRoomNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNRoomNum() {
                this.bitField0_ &= -2;
                this.nRoomNum_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasNUserNum() {
                return (this.bitField0_ & HallBaseInfoNet.NUSERNUM_FIELD_NUMBER) == HallBaseInfoNet.NUSERNUM_FIELD_NUMBER;
            }

            public final int getNUserNum() {
                return this.nUserNum_;
            }

            public final Builder setNUserNum(int i) {
                this.bitField0_ |= HallBaseInfoNet.NUSERNUM_FIELD_NUMBER;
                this.nUserNum_ = i;
                onChanged();
                return this;
            }

            public final Builder clearNUserNum() {
                this.bitField0_ &= -3;
                this.nUserNum_ = 0;
                onChanged();
                return this;
            }
        }

        private HallBaseInfoNet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private HallBaseInfoNet(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static HallBaseInfoNet getDefaultInstance() {
            return defaultInstance;
        }

        public final HallBaseInfoNet getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private HallBaseInfoNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = NROOMNUM_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= NROOMNUM_FIELD_NUMBER;
                            this.nRoomNum_ = codedInputStream.readInt32();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= NUSERNUM_FIELD_NUMBER;
                            this.nUserNum_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = NROOMNUM_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8285c;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8286d.ensureFieldAccessorsInitialized(HallBaseInfoNet.class, Builder.class);
        }

        static {
            PARSER = new C12351();
            HallBaseInfoNet hallBaseInfoNet = new HallBaseInfoNet(true);
            defaultInstance = hallBaseInfoNet;
            hallBaseInfoNet.initFields();
        }

        public final Parser<HallBaseInfoNet> getParserForType() {
            return PARSER;
        }

        public final boolean hasNRoomNum() {
            return (this.bitField0_ & NROOMNUM_FIELD_NUMBER) == NROOMNUM_FIELD_NUMBER;
        }

        public final int getNRoomNum() {
            return this.nRoomNum_;
        }

        public final boolean hasNUserNum() {
            return (this.bitField0_ & NUSERNUM_FIELD_NUMBER) == NUSERNUM_FIELD_NUMBER;
        }

        public final int getNUserNum() {
            return this.nUserNum_;
        }

        private void initFields() {
            this.nRoomNum_ = 0;
            this.nUserNum_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasNRoomNum()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & NROOMNUM_FIELD_NUMBER) == NROOMNUM_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NROOMNUM_FIELD_NUMBER, this.nRoomNum_);
            }
            if ((this.bitField0_ & NUSERNUM_FIELD_NUMBER) == NUSERNUM_FIELD_NUMBER) {
                codedOutputStream.writeInt32(NUSERNUM_FIELD_NUMBER, this.nUserNum_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & NROOMNUM_FIELD_NUMBER) == NROOMNUM_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt32Size(NROOMNUM_FIELD_NUMBER, this.nRoomNum_) + 0;
            }
            if ((this.bitField0_ & NUSERNUM_FIELD_NUMBER) == NUSERNUM_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(NUSERNUM_FIELD_NUMBER, this.nUserNum_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static HallBaseInfoNet parseFrom(ByteString byteString) {
            return (HallBaseInfoNet) PARSER.parseFrom(byteString);
        }

        public static HallBaseInfoNet parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (HallBaseInfoNet) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static HallBaseInfoNet parseFrom(byte[] bArr) {
            return (HallBaseInfoNet) PARSER.parseFrom(bArr);
        }

        public static HallBaseInfoNet parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (HallBaseInfoNet) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static HallBaseInfoNet parseFrom(InputStream inputStream) {
            return (HallBaseInfoNet) PARSER.parseFrom(inputStream);
        }

        public static HallBaseInfoNet parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (HallBaseInfoNet) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static HallBaseInfoNet parseDelimitedFrom(InputStream inputStream) {
            return (HallBaseInfoNet) PARSER.parseDelimitedFrom(inputStream);
        }

        public static HallBaseInfoNet parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (HallBaseInfoNet) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static HallBaseInfoNet parseFrom(CodedInputStream codedInputStream) {
            return (HallBaseInfoNet) PARSER.parseFrom(codedInputStream);
        }

        public static HallBaseInfoNet parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (HallBaseInfoNet) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(HallBaseInfoNet hallBaseInfoNet) {
            return newBuilder().mergeFrom(hallBaseInfoNet);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public enum INSURANCE_ACT implements ProtocolMessageEnum {
        INSURANCE_ACT_BET(0, INSURANCE_ACT_BET_VALUE),
        INSURANCE_ACT_FOLD(INSURANCE_ACT_BET_VALUE, INSURANCE_ACT_FOLD_VALUE);
        
        public static final int INSURANCE_ACT_BET_VALUE = 1;
        public static final int INSURANCE_ACT_FOLD_VALUE = 2;
        private static final INSURANCE_ACT[] VALUES;
        private static EnumLiteMap<INSURANCE_ACT> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.INSURANCE_ACT.1 */
        class C12361 implements EnumLiteMap<INSURANCE_ACT> {
            static {
                fixHelper.fixfunc(new int[]{261, 262});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12361();

            public final native /* synthetic */ EnumLite findValueByNumber(int i);
        }

        static {
            internalValueMap = new C12361();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static INSURANCE_ACT valueOf(int i) {
            switch (i) {
                case INSURANCE_ACT_BET_VALUE:
                    return INSURANCE_ACT_BET;
                case INSURANCE_ACT_FOLD_VALUE:
                    return INSURANCE_ACT_FOLD;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<INSURANCE_ACT> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(21);
        }

        public static INSURANCE_ACT valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private INSURANCE_ACT(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum INSURANCE_BET_STATUS implements ProtocolMessageEnum {
        INSURANCE_BET_BETTING(0, INSURANCE_BET_BETTING_VALUE),
        INSURANCE_BET_FOLD(INSURANCE_BET_BETTING_VALUE, INSURANCE_BET_FOLD_VALUE),
        INSURANCE_BET_BETED(INSURANCE_BET_FOLD_VALUE, INSURANCE_BET_BETED_VALUE);
        
        public static final int INSURANCE_BET_BETED_VALUE = 3;
        public static final int INSURANCE_BET_BETTING_VALUE = 1;
        public static final int INSURANCE_BET_FOLD_VALUE = 2;
        private static final INSURANCE_BET_STATUS[] VALUES;
        private static EnumLiteMap<INSURANCE_BET_STATUS> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.INSURANCE_BET_STATUS.1 */
        class C12371 implements EnumLiteMap<INSURANCE_BET_STATUS> {
            static {
                fixHelper.fixfunc(new int[]{2964, 2965});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12371();

            public final native /* synthetic */ EnumLite findValueByNumber(int i);
        }

        static {
            internalValueMap = new C12371();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static INSURANCE_BET_STATUS valueOf(int i) {
            switch (i) {
                case INSURANCE_BET_BETTING_VALUE:
                    return INSURANCE_BET_BETTING;
                case INSURANCE_BET_FOLD_VALUE:
                    return INSURANCE_BET_FOLD;
                case INSURANCE_BET_BETED_VALUE:
                    return INSURANCE_BET_BETED;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<INSURANCE_BET_STATUS> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(20);
        }

        public static INSURANCE_BET_STATUS valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private INSURANCE_BET_STATUS(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public enum INSURANCE_STATUS implements ProtocolMessageEnum {
        INSURANCE_STATUS_NO(0, INSURANCE_STATUS_NO_VALUE),
        INSURANCE_STATUS_BETTING(INSURANCE_STATUS_NO_VALUE, INSURANCE_STATUS_BETTING_VALUE),
        INSURANCE_STATUS_RESULT(INSURANCE_STATUS_BETTING_VALUE, INSURANCE_STATUS_RESULT_VALUE);
        
        public static final int INSURANCE_STATUS_BETTING_VALUE = 2;
        public static final int INSURANCE_STATUS_NO_VALUE = 1;
        public static final int INSURANCE_STATUS_RESULT_VALUE = 3;
        private static final INSURANCE_STATUS[] VALUES;
        private static EnumLiteMap<INSURANCE_STATUS> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.INSURANCE_STATUS.1 */
        class C12381 implements EnumLiteMap<INSURANCE_STATUS> {
            static {
                fixHelper.fixfunc(new int[]{819, 820});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12381();

            public final native /* synthetic */ EnumLite findValueByNumber(int i);
        }

        static {
            internalValueMap = new C12381();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static INSURANCE_STATUS valueOf(int i) {
            switch (i) {
                case INSURANCE_STATUS_NO_VALUE:
                    return INSURANCE_STATUS_NO;
                case INSURANCE_STATUS_BETTING_VALUE:
                    return INSURANCE_STATUS_BETTING;
                case INSURANCE_STATUS_RESULT_VALUE:
                    return INSURANCE_STATUS_RESULT;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<INSURANCE_STATUS> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(22);
        }

        public static INSURANCE_STATUS valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private INSURANCE_STATUS(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface InsuranceInfoOrBuilder extends MessageOrBuilder {
        int getIFirstInsurance();

        InsuranceUserInfo getVInsuranceUserInfos(int i);

        int getVInsuranceUserInfosCount();

        List<InsuranceUserInfo> getVInsuranceUserInfosList();

        InsuranceUserInfoOrBuilder getVInsuranceUserInfosOrBuilder(int i);

        List<? extends InsuranceUserInfoOrBuilder> getVInsuranceUserInfosOrBuilderList();

        long getVNoOutsUuids(int i);

        int getVNoOutsUuidsCount();

        List<Long> getVNoOutsUuidsList();

        boolean hasIFirstInsurance();
    }

    public static final class InsuranceInfo extends GeneratedMessage implements InsuranceInfoOrBuilder {
        public static final int IFIRSTINSURANCE_FIELD_NUMBER = 2;
        public static Parser<InsuranceInfo> PARSER = null;
        public static final int VINSURANCEUSERINFOS_FIELD_NUMBER = 1;
        public static final int VNOOUTSUUIDS_FIELD_NUMBER = 3;
        private static final InsuranceInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iFirstInsurance_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private List<InsuranceUserInfo> vInsuranceUserInfos_;
        private List<Long> vNoOutsUuids_;

        /* renamed from: com.texaspoker.moment.TexasPoker.InsuranceInfo.1 */
        class C12391 extends AbstractParser<InsuranceInfo> {
            C12391() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new InsuranceInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements InsuranceInfoOrBuilder {
            private int bitField0_;
            private int iFirstInsurance_;
            private RepeatedFieldBuilder<InsuranceUserInfo, Builder, InsuranceUserInfoOrBuilder> vInsuranceUserInfosBuilder_;
            private List<InsuranceUserInfo> vInsuranceUserInfos_;
            private List<Long> vNoOutsUuids_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ge;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gf.ensureFieldAccessorsInitialized(InsuranceInfo.class, Builder.class);
            }

            private Builder() {
                this.vInsuranceUserInfos_ = Collections.emptyList();
                this.vNoOutsUuids_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vInsuranceUserInfos_ = Collections.emptyList();
                this.vNoOutsUuids_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (InsuranceInfo.alwaysUseFieldBuilders) {
                    getVInsuranceUserInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    this.vInsuranceUserInfos_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                } else {
                    this.vInsuranceUserInfosBuilder_.clear();
                }
                this.iFirstInsurance_ = 0;
                this.bitField0_ &= -3;
                this.vNoOutsUuids_ = Collections.emptyList();
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ge;
            }

            public final InsuranceInfo getDefaultInstanceForType() {
                return InsuranceInfo.getDefaultInstance();
            }

            public final InsuranceInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final InsuranceInfo buildPartial() {
                int i = InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER;
                InsuranceInfo insuranceInfo = new InsuranceInfo(null);
                int i2 = this.bitField0_;
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    if ((this.bitField0_ & InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) == InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) {
                        this.vInsuranceUserInfos_ = Collections.unmodifiableList(this.vInsuranceUserInfos_);
                        this.bitField0_ &= -2;
                    }
                    insuranceInfo.vInsuranceUserInfos_ = this.vInsuranceUserInfos_;
                } else {
                    insuranceInfo.vInsuranceUserInfos_ = this.vInsuranceUserInfosBuilder_.build();
                }
                if ((i2 & InsuranceInfo.IFIRSTINSURANCE_FIELD_NUMBER) != InsuranceInfo.IFIRSTINSURANCE_FIELD_NUMBER) {
                    i = 0;
                }
                insuranceInfo.iFirstInsurance_ = this.iFirstInsurance_;
                if ((this.bitField0_ & 4) == 4) {
                    this.vNoOutsUuids_ = Collections.unmodifiableList(this.vNoOutsUuids_);
                    this.bitField0_ &= -5;
                }
                insuranceInfo.vNoOutsUuids_ = this.vNoOutsUuids_;
                insuranceInfo.bitField0_ = i;
                onBuilt();
                return insuranceInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof InsuranceInfo) {
                    return mergeFrom((InsuranceInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(InsuranceInfo insuranceInfo) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (insuranceInfo != InsuranceInfo.getDefaultInstance()) {
                    if (this.vInsuranceUserInfosBuilder_ == null) {
                        if (!insuranceInfo.vInsuranceUserInfos_.isEmpty()) {
                            if (this.vInsuranceUserInfos_.isEmpty()) {
                                this.vInsuranceUserInfos_ = insuranceInfo.vInsuranceUserInfos_;
                                this.bitField0_ &= -2;
                            } else {
                                ensureVInsuranceUserInfosIsMutable();
                                this.vInsuranceUserInfos_.addAll(insuranceInfo.vInsuranceUserInfos_);
                            }
                            onChanged();
                        }
                    } else if (!insuranceInfo.vInsuranceUserInfos_.isEmpty()) {
                        if (this.vInsuranceUserInfosBuilder_.isEmpty()) {
                            this.vInsuranceUserInfosBuilder_.dispose();
                            this.vInsuranceUserInfosBuilder_ = null;
                            this.vInsuranceUserInfos_ = insuranceInfo.vInsuranceUserInfos_;
                            this.bitField0_ &= -2;
                            if (InsuranceInfo.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVInsuranceUserInfosFieldBuilder();
                            }
                            this.vInsuranceUserInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vInsuranceUserInfosBuilder_.addAllMessages(insuranceInfo.vInsuranceUserInfos_);
                        }
                    }
                    if (insuranceInfo.hasIFirstInsurance()) {
                        setIFirstInsurance(insuranceInfo.getIFirstInsurance());
                    }
                    if (!insuranceInfo.vNoOutsUuids_.isEmpty()) {
                        if (this.vNoOutsUuids_.isEmpty()) {
                            this.vNoOutsUuids_ = insuranceInfo.vNoOutsUuids_;
                            this.bitField0_ &= -5;
                        } else {
                            ensureVNoOutsUuidsIsMutable();
                            this.vNoOutsUuids_.addAll(insuranceInfo.vNoOutsUuids_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(insuranceInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getVInsuranceUserInfosCount(); i += InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) {
                    if (!getVInsuranceUserInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.InsuranceInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.InsuranceInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.InsuranceInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.InsuranceInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.InsuranceInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$InsuranceInfo$Builder");
            }

            private void ensureVInsuranceUserInfosIsMutable() {
                if ((this.bitField0_ & InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) != InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) {
                    this.vInsuranceUserInfos_ = new ArrayList(this.vInsuranceUserInfos_);
                    this.bitField0_ |= InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER;
                }
            }

            public final List<InsuranceUserInfo> getVInsuranceUserInfosList() {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vInsuranceUserInfos_);
                }
                return this.vInsuranceUserInfosBuilder_.getMessageList();
            }

            public final int getVInsuranceUserInfosCount() {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    return this.vInsuranceUserInfos_.size();
                }
                return this.vInsuranceUserInfosBuilder_.getCount();
            }

            public final InsuranceUserInfo getVInsuranceUserInfos(int i) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    return (InsuranceUserInfo) this.vInsuranceUserInfos_.get(i);
                }
                return (InsuranceUserInfo) this.vInsuranceUserInfosBuilder_.getMessage(i);
            }

            public final Builder setVInsuranceUserInfos(int i, InsuranceUserInfo insuranceUserInfo) {
                if (this.vInsuranceUserInfosBuilder_ != null) {
                    this.vInsuranceUserInfosBuilder_.setMessage(i, insuranceUserInfo);
                } else if (insuranceUserInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.set(i, insuranceUserInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder setVInsuranceUserInfos(int i, Builder builder) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVInsuranceUserInfos(InsuranceUserInfo insuranceUserInfo) {
                if (this.vInsuranceUserInfosBuilder_ != null) {
                    this.vInsuranceUserInfosBuilder_.addMessage(insuranceUserInfo);
                } else if (insuranceUserInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.add(insuranceUserInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVInsuranceUserInfos(int i, InsuranceUserInfo insuranceUserInfo) {
                if (this.vInsuranceUserInfosBuilder_ != null) {
                    this.vInsuranceUserInfosBuilder_.addMessage(i, insuranceUserInfo);
                } else if (insuranceUserInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.add(i, insuranceUserInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVInsuranceUserInfos(Builder builder) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVInsuranceUserInfos(int i, Builder builder) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVInsuranceUserInfos(Iterable<? extends InsuranceUserInfo> iterable) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    ensureVInsuranceUserInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vInsuranceUserInfos_);
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVInsuranceUserInfos() {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    this.vInsuranceUserInfos_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVInsuranceUserInfos(int i) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    ensureVInsuranceUserInfosIsMutable();
                    this.vInsuranceUserInfos_.remove(i);
                    onChanged();
                } else {
                    this.vInsuranceUserInfosBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVInsuranceUserInfosBuilder(int i) {
                return (Builder) getVInsuranceUserInfosFieldBuilder().getBuilder(i);
            }

            public final InsuranceUserInfoOrBuilder getVInsuranceUserInfosOrBuilder(int i) {
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    return (InsuranceUserInfoOrBuilder) this.vInsuranceUserInfos_.get(i);
                }
                return (InsuranceUserInfoOrBuilder) this.vInsuranceUserInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends InsuranceUserInfoOrBuilder> getVInsuranceUserInfosOrBuilderList() {
                if (this.vInsuranceUserInfosBuilder_ != null) {
                    return this.vInsuranceUserInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vInsuranceUserInfos_);
            }

            public final Builder addVInsuranceUserInfosBuilder() {
                return (Builder) getVInsuranceUserInfosFieldBuilder().addBuilder(InsuranceUserInfo.getDefaultInstance());
            }

            public final Builder addVInsuranceUserInfosBuilder(int i) {
                return (Builder) getVInsuranceUserInfosFieldBuilder().addBuilder(i, InsuranceUserInfo.getDefaultInstance());
            }

            public final List<Builder> getVInsuranceUserInfosBuilderList() {
                return getVInsuranceUserInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<InsuranceUserInfo, Builder, InsuranceUserInfoOrBuilder> getVInsuranceUserInfosFieldBuilder() {
                boolean z = true;
                if (this.vInsuranceUserInfosBuilder_ == null) {
                    List list = this.vInsuranceUserInfos_;
                    if ((this.bitField0_ & InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) != InsuranceInfo.VINSURANCEUSERINFOS_FIELD_NUMBER) {
                        z = false;
                    }
                    this.vInsuranceUserInfosBuilder_ = new RepeatedFieldBuilder(list, z, getParentForChildren(), isClean());
                    this.vInsuranceUserInfos_ = null;
                }
                return this.vInsuranceUserInfosBuilder_;
            }

            public final boolean hasIFirstInsurance() {
                return (this.bitField0_ & InsuranceInfo.IFIRSTINSURANCE_FIELD_NUMBER) == InsuranceInfo.IFIRSTINSURANCE_FIELD_NUMBER;
            }

            public final int getIFirstInsurance() {
                return this.iFirstInsurance_;
            }

            public final Builder setIFirstInsurance(int i) {
                this.bitField0_ |= InsuranceInfo.IFIRSTINSURANCE_FIELD_NUMBER;
                this.iFirstInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIFirstInsurance() {
                this.bitField0_ &= -3;
                this.iFirstInsurance_ = 0;
                onChanged();
                return this;
            }

            private void ensureVNoOutsUuidsIsMutable() {
                if ((this.bitField0_ & 4) != 4) {
                    this.vNoOutsUuids_ = new ArrayList(this.vNoOutsUuids_);
                    this.bitField0_ |= 4;
                }
            }

            public final List<Long> getVNoOutsUuidsList() {
                return Collections.unmodifiableList(this.vNoOutsUuids_);
            }

            public final int getVNoOutsUuidsCount() {
                return this.vNoOutsUuids_.size();
            }

            public final long getVNoOutsUuids(int i) {
                return ((Long) this.vNoOutsUuids_.get(i)).longValue();
            }

            public final Builder setVNoOutsUuids(int i, long j) {
                ensureVNoOutsUuidsIsMutable();
                this.vNoOutsUuids_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVNoOutsUuids(long j) {
                ensureVNoOutsUuidsIsMutable();
                this.vNoOutsUuids_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVNoOutsUuids(Iterable<? extends Long> iterable) {
                ensureVNoOutsUuidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vNoOutsUuids_);
                onChanged();
                return this;
            }

            public final Builder clearVNoOutsUuids() {
                this.vNoOutsUuids_ = Collections.emptyList();
                this.bitField0_ &= -5;
                onChanged();
                return this;
            }
        }

        private InsuranceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private InsuranceInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static InsuranceInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final InsuranceInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private InsuranceInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = VINSURANCEUSERINFOS_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            if ((i & VINSURANCEUSERINFOS_FIELD_NUMBER) != VINSURANCEUSERINFOS_FIELD_NUMBER) {
                                this.vInsuranceUserInfos_ = new ArrayList();
                                i |= VINSURANCEUSERINFOS_FIELD_NUMBER;
                            }
                            this.vInsuranceUserInfos_.add((InsuranceUserInfo) codedInputStream.readMessage(InsuranceUserInfo.PARSER, extensionRegistryLite));
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= VINSURANCEUSERINFOS_FIELD_NUMBER;
                            this.iFirstInsurance_ = codedInputStream.readInt32();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            if ((i & 4) != 4) {
                                this.vNoOutsUuids_ = new ArrayList();
                                i |= 4;
                            }
                            this.vNoOutsUuids_.add(Long.valueOf(codedInputStream.readInt64()));
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & 4) != 4 && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vNoOutsUuids_ = new ArrayList();
                                i |= 4;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vNoOutsUuids_.add(Long.valueOf(codedInputStream.readInt64()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = VINSURANCEUSERINFOS_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VINSURANCEUSERINFOS_FIELD_NUMBER) == VINSURANCEUSERINFOS_FIELD_NUMBER) {
                        this.vInsuranceUserInfos_ = Collections.unmodifiableList(this.vInsuranceUserInfos_);
                    }
                    if ((i & 4) == 4) {
                        this.vNoOutsUuids_ = Collections.unmodifiableList(this.vNoOutsUuids_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VINSURANCEUSERINFOS_FIELD_NUMBER) == VINSURANCEUSERINFOS_FIELD_NUMBER) {
                this.vInsuranceUserInfos_ = Collections.unmodifiableList(this.vInsuranceUserInfos_);
            }
            if ((i & 4) == 4) {
                this.vNoOutsUuids_ = Collections.unmodifiableList(this.vNoOutsUuids_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ge;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gf.ensureFieldAccessorsInitialized(InsuranceInfo.class, Builder.class);
        }

        static {
            PARSER = new C12391();
            InsuranceInfo insuranceInfo = new InsuranceInfo(true);
            defaultInstance = insuranceInfo;
            insuranceInfo.initFields();
        }

        public final Parser<InsuranceInfo> getParserForType() {
            return PARSER;
        }

        public final List<InsuranceUserInfo> getVInsuranceUserInfosList() {
            return this.vInsuranceUserInfos_;
        }

        public final List<? extends InsuranceUserInfoOrBuilder> getVInsuranceUserInfosOrBuilderList() {
            return this.vInsuranceUserInfos_;
        }

        public final int getVInsuranceUserInfosCount() {
            return this.vInsuranceUserInfos_.size();
        }

        public final InsuranceUserInfo getVInsuranceUserInfos(int i) {
            return (InsuranceUserInfo) this.vInsuranceUserInfos_.get(i);
        }

        public final InsuranceUserInfoOrBuilder getVInsuranceUserInfosOrBuilder(int i) {
            return (InsuranceUserInfoOrBuilder) this.vInsuranceUserInfos_.get(i);
        }

        public final boolean hasIFirstInsurance() {
            return (this.bitField0_ & VINSURANCEUSERINFOS_FIELD_NUMBER) == VINSURANCEUSERINFOS_FIELD_NUMBER;
        }

        public final int getIFirstInsurance() {
            return this.iFirstInsurance_;
        }

        public final List<Long> getVNoOutsUuidsList() {
            return this.vNoOutsUuids_;
        }

        public final int getVNoOutsUuidsCount() {
            return this.vNoOutsUuids_.size();
        }

        public final long getVNoOutsUuids(int i) {
            return ((Long) this.vNoOutsUuids_.get(i)).longValue();
        }

        private void initFields() {
            this.vInsuranceUserInfos_ = Collections.emptyList();
            this.iFirstInsurance_ = 0;
            this.vNoOutsUuids_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            int i = 0;
            while (i < getVInsuranceUserInfosCount()) {
                if (getVInsuranceUserInfos(i).isInitialized()) {
                    i += VINSURANCEUSERINFOS_FIELD_NUMBER;
                } else {
                    this.memoizedIsInitialized = (byte) 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = (byte) 1;
            return true;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i = 0;
            getSerializedSize();
            for (int i2 = 0; i2 < this.vInsuranceUserInfos_.size(); i2 += VINSURANCEUSERINFOS_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VINSURANCEUSERINFOS_FIELD_NUMBER, (MessageLite) this.vInsuranceUserInfos_.get(i2));
            }
            if ((this.bitField0_ & VINSURANCEUSERINFOS_FIELD_NUMBER) == VINSURANCEUSERINFOS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IFIRSTINSURANCE_FIELD_NUMBER, this.iFirstInsurance_);
            }
            while (i < this.vNoOutsUuids_.size()) {
                codedOutputStream.writeInt64(VNOOUTSUUIDS_FIELD_NUMBER, ((Long) this.vNoOutsUuids_.get(i)).longValue());
                i += VINSURANCEUSERINFOS_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int i3;
            int i4 = 0;
            for (i3 = 0; i3 < this.vInsuranceUserInfos_.size(); i3 += VINSURANCEUSERINFOS_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeMessageSize(VINSURANCEUSERINFOS_FIELD_NUMBER, (MessageLite) this.vInsuranceUserInfos_.get(i3));
            }
            if ((this.bitField0_ & VINSURANCEUSERINFOS_FIELD_NUMBER) == VINSURANCEUSERINFOS_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeInt32Size(IFIRSTINSURANCE_FIELD_NUMBER, this.iFirstInsurance_);
            }
            i3 = 0;
            while (i < this.vNoOutsUuids_.size()) {
                i += VINSURANCEUSERINFOS_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt64SizeNoTag(((Long) this.vNoOutsUuids_.get(i)).longValue()) + i3;
            }
            i2 = ((i4 + i3) + (getVNoOutsUuidsList().size() * VINSURANCEUSERINFOS_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static InsuranceInfo parseFrom(ByteString byteString) {
            return (InsuranceInfo) PARSER.parseFrom(byteString);
        }

        public static InsuranceInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static InsuranceInfo parseFrom(byte[] bArr) {
            return (InsuranceInfo) PARSER.parseFrom(bArr);
        }

        public static InsuranceInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static InsuranceInfo parseFrom(InputStream inputStream) {
            return (InsuranceInfo) PARSER.parseFrom(inputStream);
        }

        public static InsuranceInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static InsuranceInfo parseDelimitedFrom(InputStream inputStream) {
            return (InsuranceInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static InsuranceInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static InsuranceInfo parseFrom(CodedInputStream codedInputStream) {
            return (InsuranceInfo) PARSER.parseFrom(codedInputStream);
        }

        public static InsuranceInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(InsuranceInfo insuranceInfo) {
            return newBuilder().mergeFrom(insuranceInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface InsurancePotInfoOrBuilder extends MessageOrBuilder {
        int getIOdds();

        int getIPotIndex();

        long getLBetStacks();

        long getLGetStacks();

        long getLMaxStacks();

        long getLMinStacks();

        long getLNoLosses();

        long getLPotID();

        long getLPotStacks();

        long getLSysStacks();

        long getLTotalPotStacks();

        int getVOuts(int i);

        int getVOutsCount();

        List<Integer> getVOutsList();

        boolean hasIOdds();

        boolean hasIPotIndex();

        boolean hasLBetStacks();

        boolean hasLGetStacks();

        boolean hasLMaxStacks();

        boolean hasLMinStacks();

        boolean hasLNoLosses();

        boolean hasLPotID();

        boolean hasLPotStacks();

        boolean hasLSysStacks();

        boolean hasLTotalPotStacks();
    }

    public static final class InsurancePotInfo extends GeneratedMessage implements InsurancePotInfoOrBuilder {
        public static final int IODDS_FIELD_NUMBER = 4;
        public static final int IPOTINDEX_FIELD_NUMBER = 11;
        public static final int LBETSTACKS_FIELD_NUMBER = 9;
        public static final int LGETSTACKS_FIELD_NUMBER = 10;
        public static final int LMAXSTACKS_FIELD_NUMBER = 8;
        public static final int LMINSTACKS_FIELD_NUMBER = 7;
        public static final int LNOLOSSES_FIELD_NUMBER = 6;
        public static final int LPOTID_FIELD_NUMBER = 1;
        public static final int LPOTSTACKS_FIELD_NUMBER = 2;
        public static final int LSYSSTACKS_FIELD_NUMBER = 12;
        public static final int LTOTALPOTSTACKS_FIELD_NUMBER = 5;
        public static Parser<InsurancePotInfo> PARSER = null;
        public static final int VOUTS_FIELD_NUMBER = 3;
        private static final InsurancePotInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iOdds_;
        private int iPotIndex_;
        private long lBetStacks_;
        private long lGetStacks_;
        private long lMaxStacks_;
        private long lMinStacks_;
        private long lNoLosses_;
        private long lPotID_;
        private long lPotStacks_;
        private long lSysStacks_;
        private long lTotalPotStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private List<Integer> vOuts_;

        /* renamed from: com.texaspoker.moment.TexasPoker.InsurancePotInfo.1 */
        class C12401 extends AbstractParser<InsurancePotInfo> {
            C12401() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new InsurancePotInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements InsurancePotInfoOrBuilder {
            private int bitField0_;
            private int iOdds_;
            private int iPotIndex_;
            private long lBetStacks_;
            private long lGetStacks_;
            private long lMaxStacks_;
            private long lMinStacks_;
            private long lNoLosses_;
            private long lPotID_;
            private long lPotStacks_;
            private long lSysStacks_;
            private long lTotalPotStacks_;
            private List<Integer> vOuts_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gi;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gj.ensureFieldAccessorsInitialized(InsurancePotInfo.class, Builder.class);
            }

            private Builder() {
                this.vOuts_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vOuts_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                InsurancePotInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lPotID_ = 0;
                this.bitField0_ &= -2;
                this.lPotStacks_ = 0;
                this.bitField0_ &= -3;
                this.vOuts_ = Collections.emptyList();
                this.bitField0_ &= -5;
                this.iOdds_ = 0;
                this.bitField0_ &= -9;
                this.lTotalPotStacks_ = 0;
                this.bitField0_ &= -17;
                this.lNoLosses_ = 0;
                this.bitField0_ &= -33;
                this.lMinStacks_ = 0;
                this.bitField0_ &= -65;
                this.lMaxStacks_ = 0;
                this.bitField0_ &= -129;
                this.lBetStacks_ = 0;
                this.bitField0_ &= -257;
                this.lGetStacks_ = 0;
                this.bitField0_ &= -513;
                this.iPotIndex_ = 0;
                this.bitField0_ &= -1025;
                this.lSysStacks_ = 0;
                this.bitField0_ &= -2049;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gi;
            }

            public final InsurancePotInfo getDefaultInstanceForType() {
                return InsurancePotInfo.getDefaultInstance();
            }

            public final InsurancePotInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final InsurancePotInfo buildPartial() {
                int i = InsurancePotInfo.LPOTID_FIELD_NUMBER;
                InsurancePotInfo insurancePotInfo = new InsurancePotInfo(null);
                int i2 = this.bitField0_;
                if ((i2 & InsurancePotInfo.LPOTID_FIELD_NUMBER) != InsurancePotInfo.LPOTID_FIELD_NUMBER) {
                    i = 0;
                }
                insurancePotInfo.lPotID_ = this.lPotID_;
                if ((i2 & InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER) == InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER) {
                    i |= InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER;
                }
                insurancePotInfo.lPotStacks_ = this.lPotStacks_;
                if ((this.bitField0_ & InsurancePotInfo.IODDS_FIELD_NUMBER) == InsurancePotInfo.IODDS_FIELD_NUMBER) {
                    this.vOuts_ = Collections.unmodifiableList(this.vOuts_);
                    this.bitField0_ &= -5;
                }
                insurancePotInfo.vOuts_ = this.vOuts_;
                if ((i2 & InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER) == InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER) {
                    i |= InsurancePotInfo.IODDS_FIELD_NUMBER;
                }
                insurancePotInfo.iOdds_ = this.iOdds_;
                if ((i2 & 16) == 16) {
                    i |= InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER;
                }
                insurancePotInfo.lTotalPotStacks_ = this.lTotalPotStacks_;
                if ((i2 & 32) == 32) {
                    i |= 16;
                }
                insurancePotInfo.lNoLosses_ = this.lNoLosses_;
                if ((i2 & 64) == 64) {
                    i |= 32;
                }
                insurancePotInfo.lMinStacks_ = this.lMinStacks_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= 64;
                }
                insurancePotInfo.lMaxStacks_ = this.lMaxStacks_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                insurancePotInfo.lBetStacks_ = this.lBetStacks_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                insurancePotInfo.lGetStacks_ = this.lGetStacks_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                insurancePotInfo.iPotIndex_ = this.iPotIndex_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                insurancePotInfo.lSysStacks_ = this.lSysStacks_;
                insurancePotInfo.bitField0_ = i;
                onBuilt();
                return insurancePotInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof InsurancePotInfo) {
                    return mergeFrom((InsurancePotInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(InsurancePotInfo insurancePotInfo) {
                if (insurancePotInfo != InsurancePotInfo.getDefaultInstance()) {
                    if (insurancePotInfo.hasLPotID()) {
                        setLPotID(insurancePotInfo.getLPotID());
                    }
                    if (insurancePotInfo.hasLPotStacks()) {
                        setLPotStacks(insurancePotInfo.getLPotStacks());
                    }
                    if (!insurancePotInfo.vOuts_.isEmpty()) {
                        if (this.vOuts_.isEmpty()) {
                            this.vOuts_ = insurancePotInfo.vOuts_;
                            this.bitField0_ &= -5;
                        } else {
                            ensureVOutsIsMutable();
                            this.vOuts_.addAll(insurancePotInfo.vOuts_);
                        }
                        onChanged();
                    }
                    if (insurancePotInfo.hasIOdds()) {
                        setIOdds(insurancePotInfo.getIOdds());
                    }
                    if (insurancePotInfo.hasLTotalPotStacks()) {
                        setLTotalPotStacks(insurancePotInfo.getLTotalPotStacks());
                    }
                    if (insurancePotInfo.hasLNoLosses()) {
                        setLNoLosses(insurancePotInfo.getLNoLosses());
                    }
                    if (insurancePotInfo.hasLMinStacks()) {
                        setLMinStacks(insurancePotInfo.getLMinStacks());
                    }
                    if (insurancePotInfo.hasLMaxStacks()) {
                        setLMaxStacks(insurancePotInfo.getLMaxStacks());
                    }
                    if (insurancePotInfo.hasLBetStacks()) {
                        setLBetStacks(insurancePotInfo.getLBetStacks());
                    }
                    if (insurancePotInfo.hasLGetStacks()) {
                        setLGetStacks(insurancePotInfo.getLGetStacks());
                    }
                    if (insurancePotInfo.hasIPotIndex()) {
                        setIPotIndex(insurancePotInfo.getIPotIndex());
                    }
                    if (insurancePotInfo.hasLSysStacks()) {
                        setLSysStacks(insurancePotInfo.getLSysStacks());
                    }
                    mergeUnknownFields(insurancePotInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLPotID() && hasLPotStacks()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.InsurancePotInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.InsurancePotInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.InsurancePotInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.InsurancePotInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.InsurancePotInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$InsurancePotInfo$Builder");
            }

            public final boolean hasLPotID() {
                return (this.bitField0_ & InsurancePotInfo.LPOTID_FIELD_NUMBER) == InsurancePotInfo.LPOTID_FIELD_NUMBER;
            }

            public final long getLPotID() {
                return this.lPotID_;
            }

            public final Builder setLPotID(long j) {
                this.bitField0_ |= InsurancePotInfo.LPOTID_FIELD_NUMBER;
                this.lPotID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPotID() {
                this.bitField0_ &= -2;
                this.lPotID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLPotStacks() {
                return (this.bitField0_ & InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER) == InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER;
            }

            public final long getLPotStacks() {
                return this.lPotStacks_;
            }

            public final Builder setLPotStacks(long j) {
                this.bitField0_ |= InsurancePotInfo.LPOTSTACKS_FIELD_NUMBER;
                this.lPotStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPotStacks() {
                this.bitField0_ &= -3;
                this.lPotStacks_ = 0;
                onChanged();
                return this;
            }

            private void ensureVOutsIsMutable() {
                if ((this.bitField0_ & InsurancePotInfo.IODDS_FIELD_NUMBER) != InsurancePotInfo.IODDS_FIELD_NUMBER) {
                    this.vOuts_ = new ArrayList(this.vOuts_);
                    this.bitField0_ |= InsurancePotInfo.IODDS_FIELD_NUMBER;
                }
            }

            public final List<Integer> getVOutsList() {
                return Collections.unmodifiableList(this.vOuts_);
            }

            public final int getVOutsCount() {
                return this.vOuts_.size();
            }

            public final int getVOuts(int i) {
                return ((Integer) this.vOuts_.get(i)).intValue();
            }

            public final Builder setVOuts(int i, int i2) {
                ensureVOutsIsMutable();
                this.vOuts_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVOuts(int i) {
                ensureVOutsIsMutable();
                this.vOuts_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVOuts(Iterable<? extends Integer> iterable) {
                ensureVOutsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vOuts_);
                onChanged();
                return this;
            }

            public final Builder clearVOuts() {
                this.vOuts_ = Collections.emptyList();
                this.bitField0_ &= -5;
                onChanged();
                return this;
            }

            public final boolean hasIOdds() {
                return (this.bitField0_ & InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER) == InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER;
            }

            public final int getIOdds() {
                return this.iOdds_;
            }

            public final Builder setIOdds(int i) {
                this.bitField0_ |= InsurancePotInfo.LMAXSTACKS_FIELD_NUMBER;
                this.iOdds_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIOdds() {
                this.bitField0_ &= -9;
                this.iOdds_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLTotalPotStacks() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLTotalPotStacks() {
                return this.lTotalPotStacks_;
            }

            public final Builder setLTotalPotStacks(long j) {
                this.bitField0_ |= 16;
                this.lTotalPotStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLTotalPotStacks() {
                this.bitField0_ &= -17;
                this.lTotalPotStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLNoLosses() {
                return (this.bitField0_ & 32) == 32;
            }

            public final long getLNoLosses() {
                return this.lNoLosses_;
            }

            public final Builder setLNoLosses(long j) {
                this.bitField0_ |= 32;
                this.lNoLosses_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLNoLosses() {
                this.bitField0_ &= -33;
                this.lNoLosses_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLMinStacks() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLMinStacks() {
                return this.lMinStacks_;
            }

            public final Builder setLMinStacks(long j) {
                this.bitField0_ |= 64;
                this.lMinStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMinStacks() {
                this.bitField0_ &= -65;
                this.lMinStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLMaxStacks() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLMaxStacks() {
                return this.lMaxStacks_;
            }

            public final Builder setLMaxStacks(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lMaxStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMaxStacks() {
                this.bitField0_ &= -129;
                this.lMaxStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBetStacks() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLBetStacks() {
                return this.lBetStacks_;
            }

            public final Builder setLBetStacks(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.lBetStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBetStacks() {
                this.bitField0_ &= -257;
                this.lBetStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGetStacks() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final long getLGetStacks() {
                return this.lGetStacks_;
            }

            public final Builder setLGetStacks(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.lGetStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGetStacks() {
                this.bitField0_ &= -513;
                this.lGetStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIPotIndex() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final int getIPotIndex() {
                return this.iPotIndex_;
            }

            public final Builder setIPotIndex(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.iPotIndex_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIPotIndex() {
                this.bitField0_ &= -1025;
                this.iPotIndex_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLSysStacks() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final long getLSysStacks() {
                return this.lSysStacks_;
            }

            public final Builder setLSysStacks(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                this.lSysStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLSysStacks() {
                this.bitField0_ &= -2049;
                this.lSysStacks_ = 0;
                onChanged();
                return this;
            }
        }

        private InsurancePotInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private InsurancePotInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static InsurancePotInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final InsurancePotInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private InsurancePotInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            Object obj = null;
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LPOTID_FIELD_NUMBER;
                            break;
                        case LMAXSTACKS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LPOTID_FIELD_NUMBER;
                            this.lPotID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LPOTSTACKS_FIELD_NUMBER;
                            this.lPotStacks_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            if ((i & IODDS_FIELD_NUMBER) != IODDS_FIELD_NUMBER) {
                                this.vOuts_ = new ArrayList();
                                i |= IODDS_FIELD_NUMBER;
                            }
                            this.vOuts_.add(Integer.valueOf(codedInputStream.readInt32()));
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & IODDS_FIELD_NUMBER) != IODDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vOuts_ = new ArrayList();
                                i |= IODDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vOuts_.add(Integer.valueOf(codedInputStream.readInt32()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= IODDS_FIELD_NUMBER;
                            this.iOdds_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= LMAXSTACKS_FIELD_NUMBER;
                            this.lTotalPotStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 16;
                            this.lNoLosses_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_dividerVertical /*56*/:
                            this.bitField0_ |= 32;
                            this.lMinStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= 64;
                            this.lMaxStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_listPreferredItemHeightLarge /*72*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.lBetStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_panelMenuListWidth /*80*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            this.lGetStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_colorControlHighlight /*88*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.iPotIndex_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_alertDialogTheme /*96*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.lSysStacks_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LPOTID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                        this.vOuts_ = Collections.unmodifiableList(this.vOuts_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                this.vOuts_ = Collections.unmodifiableList(this.vOuts_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gi;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gj.ensureFieldAccessorsInitialized(InsurancePotInfo.class, Builder.class);
        }

        static {
            PARSER = new C12401();
            InsurancePotInfo insurancePotInfo = new InsurancePotInfo(true);
            defaultInstance = insurancePotInfo;
            insurancePotInfo.initFields();
        }

        public final Parser<InsurancePotInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasLPotID() {
            return (this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER;
        }

        public final long getLPotID() {
            return this.lPotID_;
        }

        public final boolean hasLPotStacks() {
            return (this.bitField0_ & LPOTSTACKS_FIELD_NUMBER) == LPOTSTACKS_FIELD_NUMBER;
        }

        public final long getLPotStacks() {
            return this.lPotStacks_;
        }

        public final List<Integer> getVOutsList() {
            return this.vOuts_;
        }

        public final int getVOutsCount() {
            return this.vOuts_.size();
        }

        public final int getVOuts(int i) {
            return ((Integer) this.vOuts_.get(i)).intValue();
        }

        public final boolean hasIOdds() {
            return (this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER;
        }

        public final int getIOdds() {
            return this.iOdds_;
        }

        public final boolean hasLTotalPotStacks() {
            return (this.bitField0_ & LMAXSTACKS_FIELD_NUMBER) == LMAXSTACKS_FIELD_NUMBER;
        }

        public final long getLTotalPotStacks() {
            return this.lTotalPotStacks_;
        }

        public final boolean hasLNoLosses() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLNoLosses() {
            return this.lNoLosses_;
        }

        public final boolean hasLMinStacks() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLMinStacks() {
            return this.lMinStacks_;
        }

        public final boolean hasLMaxStacks() {
            return (this.bitField0_ & 64) == 64;
        }

        public final long getLMaxStacks() {
            return this.lMaxStacks_;
        }

        public final boolean hasLBetStacks() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final long getLBetStacks() {
            return this.lBetStacks_;
        }

        public final boolean hasLGetStacks() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final long getLGetStacks() {
            return this.lGetStacks_;
        }

        public final boolean hasIPotIndex() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final int getIPotIndex() {
            return this.iPotIndex_;
        }

        public final boolean hasLSysStacks() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final long getLSysStacks() {
            return this.lSysStacks_;
        }

        private void initFields() {
            this.lPotID_ = 0;
            this.lPotStacks_ = 0;
            this.vOuts_ = Collections.emptyList();
            this.iOdds_ = 0;
            this.lTotalPotStacks_ = 0;
            this.lNoLosses_ = 0;
            this.lMinStacks_ = 0;
            this.lMaxStacks_ = 0;
            this.lBetStacks_ = 0;
            this.lGetStacks_ = 0;
            this.iPotIndex_ = 0;
            this.lSysStacks_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLPotID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLPotStacks()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LPOTID_FIELD_NUMBER, this.lPotID_);
            }
            if ((this.bitField0_ & LPOTSTACKS_FIELD_NUMBER) == LPOTSTACKS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LPOTSTACKS_FIELD_NUMBER, this.lPotStacks_);
            }
            for (int i = 0; i < this.vOuts_.size(); i += LPOTID_FIELD_NUMBER) {
                codedOutputStream.writeInt32(VOUTS_FIELD_NUMBER, ((Integer) this.vOuts_.get(i)).intValue());
            }
            if ((this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IODDS_FIELD_NUMBER, this.iOdds_);
            }
            if ((this.bitField0_ & LMAXSTACKS_FIELD_NUMBER) == LMAXSTACKS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LTOTALPOTSTACKS_FIELD_NUMBER, this.lTotalPotStacks_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LNOLOSSES_FIELD_NUMBER, this.lNoLosses_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LMINSTACKS_FIELD_NUMBER, this.lMinStacks_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(LMAXSTACKS_FIELD_NUMBER, this.lMaxStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt64(LBETSTACKS_FIELD_NUMBER, this.lBetStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt64(LGETSTACKS_FIELD_NUMBER, this.lGetStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeInt32(IPOTINDEX_FIELD_NUMBER, this.iPotIndex_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeInt64(LSYSSTACKS_FIELD_NUMBER, this.lSysStacks_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeInt64Size;
            if ((this.bitField0_ & LPOTID_FIELD_NUMBER) == LPOTID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(LPOTID_FIELD_NUMBER, this.lPotID_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & LPOTSTACKS_FIELD_NUMBER) == LPOTSTACKS_FIELD_NUMBER) {
                computeInt64Size = i2 + CodedOutputStream.computeInt64Size(LPOTSTACKS_FIELD_NUMBER, this.lPotStacks_);
            } else {
                computeInt64Size = i2;
            }
            int i3 = 0;
            while (i < this.vOuts_.size()) {
                i += LPOTID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeInt32SizeNoTag(((Integer) this.vOuts_.get(i)).intValue()) + i3;
            }
            i2 = (computeInt64Size + i3) + (getVOutsList().size() * LPOTID_FIELD_NUMBER);
            if ((this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt32Size(IODDS_FIELD_NUMBER, this.iOdds_);
            }
            if ((this.bitField0_ & LMAXSTACKS_FIELD_NUMBER) == LMAXSTACKS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LTOTALPOTSTACKS_FIELD_NUMBER, this.lTotalPotStacks_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeInt64Size(LNOLOSSES_FIELD_NUMBER, this.lNoLosses_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeInt64Size(LMINSTACKS_FIELD_NUMBER, this.lMinStacks_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeInt64Size(LMAXSTACKS_FIELD_NUMBER, this.lMaxStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i2 += CodedOutputStream.computeInt64Size(LBETSTACKS_FIELD_NUMBER, this.lBetStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeInt64Size(LGETSTACKS_FIELD_NUMBER, this.lGetStacks_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeInt32Size(IPOTINDEX_FIELD_NUMBER, this.iPotIndex_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i2 += CodedOutputStream.computeInt64Size(LSYSSTACKS_FIELD_NUMBER, this.lSysStacks_);
            }
            i2 += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static InsurancePotInfo parseFrom(ByteString byteString) {
            return (InsurancePotInfo) PARSER.parseFrom(byteString);
        }

        public static InsurancePotInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (InsurancePotInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static InsurancePotInfo parseFrom(byte[] bArr) {
            return (InsurancePotInfo) PARSER.parseFrom(bArr);
        }

        public static InsurancePotInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (InsurancePotInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static InsurancePotInfo parseFrom(InputStream inputStream) {
            return (InsurancePotInfo) PARSER.parseFrom(inputStream);
        }

        public static InsurancePotInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsurancePotInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static InsurancePotInfo parseDelimitedFrom(InputStream inputStream) {
            return (InsurancePotInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static InsurancePotInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsurancePotInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static InsurancePotInfo parseFrom(CodedInputStream codedInputStream) {
            return (InsurancePotInfo) PARSER.parseFrom(codedInputStream);
        }

        public static InsurancePotInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsurancePotInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(InsurancePotInfo insurancePotInfo) {
            return newBuilder().mergeFrom(insurancePotInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface InsuranceUserInfoOrBuilder extends MessageOrBuilder {
        int getBCanInsurance();

        int getBDefaultInsurance();

        int getBFirstInsurance();

        INSURANCE_BET_STATUS getEInsuranceBetStatus();

        int getIInsuranceDelayCost();

        int getIInsuranceDelayLong();

        long getLInsuranceActDuration();

        long getLInsuranceStartTime();

        long getLTotalGetStacks();

        long getUuid();

        InsurancePotInfo getVInsurancePotInfos(int i);

        int getVInsurancePotInfosCount();

        List<InsurancePotInfo> getVInsurancePotInfosList();

        InsurancePotInfoOrBuilder getVInsurancePotInfosOrBuilder(int i);

        List<? extends InsurancePotInfoOrBuilder> getVInsurancePotInfosOrBuilderList();

        boolean hasBCanInsurance();

        boolean hasBDefaultInsurance();

        boolean hasBFirstInsurance();

        boolean hasEInsuranceBetStatus();

        boolean hasIInsuranceDelayCost();

        boolean hasIInsuranceDelayLong();

        boolean hasLInsuranceActDuration();

        boolean hasLInsuranceStartTime();

        boolean hasLTotalGetStacks();

        boolean hasUuid();
    }

    public static final class InsuranceUserInfo extends GeneratedMessage implements InsuranceUserInfoOrBuilder {
        public static final int BCANINSURANCE_FIELD_NUMBER = 5;
        public static final int BDEFAULTINSURANCE_FIELD_NUMBER = 6;
        public static final int BFIRSTINSURANCE_FIELD_NUMBER = 11;
        public static final int EINSURANCEBETSTATUS_FIELD_NUMBER = 2;
        public static final int IINSURANCEDELAYCOST_FIELD_NUMBER = 9;
        public static final int IINSURANCEDELAYLONG_FIELD_NUMBER = 10;
        public static final int LINSURANCEACTDURATION_FIELD_NUMBER = 8;
        public static final int LINSURANCESTARTTIME_FIELD_NUMBER = 7;
        public static final int LTOTALGETSTACKS_FIELD_NUMBER = 4;
        public static Parser<InsuranceUserInfo> PARSER = null;
        public static final int UUID_FIELD_NUMBER = 1;
        public static final int VINSURANCEPOTINFOS_FIELD_NUMBER = 3;
        private static final InsuranceUserInfo defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bCanInsurance_;
        private int bDefaultInsurance_;
        private int bFirstInsurance_;
        private int bitField0_;
        private INSURANCE_BET_STATUS eInsuranceBetStatus_;
        private int iInsuranceDelayCost_;
        private int iInsuranceDelayLong_;
        private long lInsuranceActDuration_;
        private long lInsuranceStartTime_;
        private long lTotalGetStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<InsurancePotInfo> vInsurancePotInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.InsuranceUserInfo.1 */
        class C12411 extends AbstractParser<InsuranceUserInfo> {
            C12411() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new InsuranceUserInfo(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements InsuranceUserInfoOrBuilder {
            private int bCanInsurance_;
            private int bDefaultInsurance_;
            private int bFirstInsurance_;
            private int bitField0_;
            private INSURANCE_BET_STATUS eInsuranceBetStatus_;
            private int iInsuranceDelayCost_;
            private int iInsuranceDelayLong_;
            private long lInsuranceActDuration_;
            private long lInsuranceStartTime_;
            private long lTotalGetStacks_;
            private long uuid_;
            private RepeatedFieldBuilder<InsurancePotInfo, Builder, InsurancePotInfoOrBuilder> vInsurancePotInfosBuilder_;
            private List<InsurancePotInfo> vInsurancePotInfos_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gg;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gh.ensureFieldAccessorsInitialized(InsuranceUserInfo.class, Builder.class);
            }

            private Builder() {
                this.eInsuranceBetStatus_ = INSURANCE_BET_STATUS.INSURANCE_BET_BETTING;
                this.vInsurancePotInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eInsuranceBetStatus_ = INSURANCE_BET_STATUS.INSURANCE_BET_BETTING;
                this.vInsurancePotInfos_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (InsuranceUserInfo.alwaysUseFieldBuilders) {
                    getVInsurancePotInfosFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.uuid_ = 0;
                this.bitField0_ &= -2;
                this.eInsuranceBetStatus_ = INSURANCE_BET_STATUS.INSURANCE_BET_BETTING;
                this.bitField0_ &= -3;
                if (this.vInsurancePotInfosBuilder_ == null) {
                    this.vInsurancePotInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                } else {
                    this.vInsurancePotInfosBuilder_.clear();
                }
                this.lTotalGetStacks_ = 0;
                this.bitField0_ &= -9;
                this.bCanInsurance_ = 0;
                this.bitField0_ &= -17;
                this.bDefaultInsurance_ = 0;
                this.bitField0_ &= -33;
                this.lInsuranceStartTime_ = 0;
                this.bitField0_ &= -65;
                this.lInsuranceActDuration_ = 0;
                this.bitField0_ &= -129;
                this.iInsuranceDelayCost_ = 0;
                this.bitField0_ &= -257;
                this.iInsuranceDelayLong_ = 0;
                this.bitField0_ &= -513;
                this.bFirstInsurance_ = 0;
                this.bitField0_ &= -1025;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gg;
            }

            public final InsuranceUserInfo getDefaultInstanceForType() {
                return InsuranceUserInfo.getDefaultInstance();
            }

            public final InsuranceUserInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final InsuranceUserInfo buildPartial() {
                int i = InsuranceUserInfo.UUID_FIELD_NUMBER;
                InsuranceUserInfo insuranceUserInfo = new InsuranceUserInfo((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & InsuranceUserInfo.UUID_FIELD_NUMBER) != InsuranceUserInfo.UUID_FIELD_NUMBER) {
                    i = 0;
                }
                insuranceUserInfo.uuid_ = this.uuid_;
                if ((i2 & InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER) == InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER) {
                    i |= InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER;
                }
                insuranceUserInfo.eInsuranceBetStatus_ = this.eInsuranceBetStatus_;
                if (this.vInsurancePotInfosBuilder_ == null) {
                    if ((this.bitField0_ & InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER) == InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER) {
                        this.vInsurancePotInfos_ = Collections.unmodifiableList(this.vInsurancePotInfos_);
                        this.bitField0_ &= -5;
                    }
                    insuranceUserInfo.vInsurancePotInfos_ = this.vInsurancePotInfos_;
                } else {
                    insuranceUserInfo.vInsurancePotInfos_ = this.vInsurancePotInfosBuilder_.build();
                }
                if ((i2 & InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER) == InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER) {
                    i |= InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER;
                }
                insuranceUserInfo.lTotalGetStacks_ = this.lTotalGetStacks_;
                if ((i2 & 16) == 16) {
                    i |= InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER;
                }
                insuranceUserInfo.bCanInsurance_ = this.bCanInsurance_;
                if ((i2 & 32) == 32) {
                    i |= 16;
                }
                insuranceUserInfo.bDefaultInsurance_ = this.bDefaultInsurance_;
                if ((i2 & 64) == 64) {
                    i |= 32;
                }
                insuranceUserInfo.lInsuranceStartTime_ = this.lInsuranceStartTime_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= 64;
                }
                insuranceUserInfo.lInsuranceActDuration_ = this.lInsuranceActDuration_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                insuranceUserInfo.iInsuranceDelayCost_ = this.iInsuranceDelayCost_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                insuranceUserInfo.iInsuranceDelayLong_ = this.iInsuranceDelayLong_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                insuranceUserInfo.bFirstInsurance_ = this.bFirstInsurance_;
                insuranceUserInfo.bitField0_ = i;
                onBuilt();
                return insuranceUserInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof InsuranceUserInfo) {
                    return mergeFrom((InsuranceUserInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(InsuranceUserInfo insuranceUserInfo) {
                RepeatedFieldBuilder repeatedFieldBuilder = null;
                if (insuranceUserInfo != InsuranceUserInfo.getDefaultInstance()) {
                    if (insuranceUserInfo.hasUuid()) {
                        setUuid(insuranceUserInfo.getUuid());
                    }
                    if (insuranceUserInfo.hasEInsuranceBetStatus()) {
                        setEInsuranceBetStatus(insuranceUserInfo.getEInsuranceBetStatus());
                    }
                    if (this.vInsurancePotInfosBuilder_ == null) {
                        if (!insuranceUserInfo.vInsurancePotInfos_.isEmpty()) {
                            if (this.vInsurancePotInfos_.isEmpty()) {
                                this.vInsurancePotInfos_ = insuranceUserInfo.vInsurancePotInfos_;
                                this.bitField0_ &= -5;
                            } else {
                                ensureVInsurancePotInfosIsMutable();
                                this.vInsurancePotInfos_.addAll(insuranceUserInfo.vInsurancePotInfos_);
                            }
                            onChanged();
                        }
                    } else if (!insuranceUserInfo.vInsurancePotInfos_.isEmpty()) {
                        if (this.vInsurancePotInfosBuilder_.isEmpty()) {
                            this.vInsurancePotInfosBuilder_.dispose();
                            this.vInsurancePotInfosBuilder_ = null;
                            this.vInsurancePotInfos_ = insuranceUserInfo.vInsurancePotInfos_;
                            this.bitField0_ &= -5;
                            if (InsuranceUserInfo.alwaysUseFieldBuilders) {
                                repeatedFieldBuilder = getVInsurancePotInfosFieldBuilder();
                            }
                            this.vInsurancePotInfosBuilder_ = repeatedFieldBuilder;
                        } else {
                            this.vInsurancePotInfosBuilder_.addAllMessages(insuranceUserInfo.vInsurancePotInfos_);
                        }
                    }
                    if (insuranceUserInfo.hasLTotalGetStacks()) {
                        setLTotalGetStacks(insuranceUserInfo.getLTotalGetStacks());
                    }
                    if (insuranceUserInfo.hasBCanInsurance()) {
                        setBCanInsurance(insuranceUserInfo.getBCanInsurance());
                    }
                    if (insuranceUserInfo.hasBDefaultInsurance()) {
                        setBDefaultInsurance(insuranceUserInfo.getBDefaultInsurance());
                    }
                    if (insuranceUserInfo.hasLInsuranceStartTime()) {
                        setLInsuranceStartTime(insuranceUserInfo.getLInsuranceStartTime());
                    }
                    if (insuranceUserInfo.hasLInsuranceActDuration()) {
                        setLInsuranceActDuration(insuranceUserInfo.getLInsuranceActDuration());
                    }
                    if (insuranceUserInfo.hasIInsuranceDelayCost()) {
                        setIInsuranceDelayCost(insuranceUserInfo.getIInsuranceDelayCost());
                    }
                    if (insuranceUserInfo.hasIInsuranceDelayLong()) {
                        setIInsuranceDelayLong(insuranceUserInfo.getIInsuranceDelayLong());
                    }
                    if (insuranceUserInfo.hasBFirstInsurance()) {
                        setBFirstInsurance(insuranceUserInfo.getBFirstInsurance());
                    }
                    mergeUnknownFields(insuranceUserInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid()) {
                    return false;
                }
                for (int i = 0; i < getVInsurancePotInfosCount(); i += InsuranceUserInfo.UUID_FIELD_NUMBER) {
                    if (!getVInsurancePotInfos(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.InsuranceUserInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.InsuranceUserInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.InsuranceUserInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.InsuranceUserInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.InsuranceUserInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$InsuranceUserInfo$Builder");
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & InsuranceUserInfo.UUID_FIELD_NUMBER) == InsuranceUserInfo.UUID_FIELD_NUMBER;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= InsuranceUserInfo.UUID_FIELD_NUMBER;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -2;
                this.uuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEInsuranceBetStatus() {
                return (this.bitField0_ & InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER) == InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER;
            }

            public final INSURANCE_BET_STATUS getEInsuranceBetStatus() {
                return this.eInsuranceBetStatus_;
            }

            public final Builder setEInsuranceBetStatus(INSURANCE_BET_STATUS insurance_bet_status) {
                if (insurance_bet_status == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= InsuranceUserInfo.EINSURANCEBETSTATUS_FIELD_NUMBER;
                this.eInsuranceBetStatus_ = insurance_bet_status;
                onChanged();
                return this;
            }

            public final Builder clearEInsuranceBetStatus() {
                this.bitField0_ &= -3;
                this.eInsuranceBetStatus_ = INSURANCE_BET_STATUS.INSURANCE_BET_BETTING;
                onChanged();
                return this;
            }

            private void ensureVInsurancePotInfosIsMutable() {
                if ((this.bitField0_ & InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER) != InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER) {
                    this.vInsurancePotInfos_ = new ArrayList(this.vInsurancePotInfos_);
                    this.bitField0_ |= InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER;
                }
            }

            public final List<InsurancePotInfo> getVInsurancePotInfosList() {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    return Collections.unmodifiableList(this.vInsurancePotInfos_);
                }
                return this.vInsurancePotInfosBuilder_.getMessageList();
            }

            public final int getVInsurancePotInfosCount() {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    return this.vInsurancePotInfos_.size();
                }
                return this.vInsurancePotInfosBuilder_.getCount();
            }

            public final InsurancePotInfo getVInsurancePotInfos(int i) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    return (InsurancePotInfo) this.vInsurancePotInfos_.get(i);
                }
                return (InsurancePotInfo) this.vInsurancePotInfosBuilder_.getMessage(i);
            }

            public final Builder setVInsurancePotInfos(int i, InsurancePotInfo insurancePotInfo) {
                if (this.vInsurancePotInfosBuilder_ != null) {
                    this.vInsurancePotInfosBuilder_.setMessage(i, insurancePotInfo);
                } else if (insurancePotInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.set(i, insurancePotInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder setVInsurancePotInfos(int i, Builder builder) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.set(i, builder.build());
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.setMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addVInsurancePotInfos(InsurancePotInfo insurancePotInfo) {
                if (this.vInsurancePotInfosBuilder_ != null) {
                    this.vInsurancePotInfosBuilder_.addMessage(insurancePotInfo);
                } else if (insurancePotInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.add(insurancePotInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVInsurancePotInfos(int i, InsurancePotInfo insurancePotInfo) {
                if (this.vInsurancePotInfosBuilder_ != null) {
                    this.vInsurancePotInfosBuilder_.addMessage(i, insurancePotInfo);
                } else if (insurancePotInfo == null) {
                    throw new NullPointerException();
                } else {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.add(i, insurancePotInfo);
                    onChanged();
                }
                return this;
            }

            public final Builder addVInsurancePotInfos(Builder builder) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.add(builder.build());
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.addMessage(builder.build());
                }
                return this;
            }

            public final Builder addVInsurancePotInfos(int i, Builder builder) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.add(i, builder.build());
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.addMessage(i, builder.build());
                }
                return this;
            }

            public final Builder addAllVInsurancePotInfos(Iterable<? extends InsurancePotInfo> iterable) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    ensureVInsurancePotInfosIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vInsurancePotInfos_);
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.addAllMessages(iterable);
                }
                return this;
            }

            public final Builder clearVInsurancePotInfos() {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    this.vInsurancePotInfos_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.clear();
                }
                return this;
            }

            public final Builder removeVInsurancePotInfos(int i) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    ensureVInsurancePotInfosIsMutable();
                    this.vInsurancePotInfos_.remove(i);
                    onChanged();
                } else {
                    this.vInsurancePotInfosBuilder_.remove(i);
                }
                return this;
            }

            public final Builder getVInsurancePotInfosBuilder(int i) {
                return (Builder) getVInsurancePotInfosFieldBuilder().getBuilder(i);
            }

            public final InsurancePotInfoOrBuilder getVInsurancePotInfosOrBuilder(int i) {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    return (InsurancePotInfoOrBuilder) this.vInsurancePotInfos_.get(i);
                }
                return (InsurancePotInfoOrBuilder) this.vInsurancePotInfosBuilder_.getMessageOrBuilder(i);
            }

            public final List<? extends InsurancePotInfoOrBuilder> getVInsurancePotInfosOrBuilderList() {
                if (this.vInsurancePotInfosBuilder_ != null) {
                    return this.vInsurancePotInfosBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.vInsurancePotInfos_);
            }

            public final Builder addVInsurancePotInfosBuilder() {
                return (Builder) getVInsurancePotInfosFieldBuilder().addBuilder(InsurancePotInfo.getDefaultInstance());
            }

            public final Builder addVInsurancePotInfosBuilder(int i) {
                return (Builder) getVInsurancePotInfosFieldBuilder().addBuilder(i, InsurancePotInfo.getDefaultInstance());
            }

            public final List<Builder> getVInsurancePotInfosBuilderList() {
                return getVInsurancePotInfosFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder<InsurancePotInfo, Builder, InsurancePotInfoOrBuilder> getVInsurancePotInfosFieldBuilder() {
                if (this.vInsurancePotInfosBuilder_ == null) {
                    this.vInsurancePotInfosBuilder_ = new RepeatedFieldBuilder(this.vInsurancePotInfos_, (this.bitField0_ & InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER) == InsuranceUserInfo.LTOTALGETSTACKS_FIELD_NUMBER, getParentForChildren(), isClean());
                    this.vInsurancePotInfos_ = null;
                }
                return this.vInsurancePotInfosBuilder_;
            }

            public final boolean hasLTotalGetStacks() {
                return (this.bitField0_ & InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER) == InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER;
            }

            public final long getLTotalGetStacks() {
                return this.lTotalGetStacks_;
            }

            public final Builder setLTotalGetStacks(long j) {
                this.bitField0_ |= InsuranceUserInfo.LINSURANCEACTDURATION_FIELD_NUMBER;
                this.lTotalGetStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLTotalGetStacks() {
                this.bitField0_ &= -9;
                this.lTotalGetStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBCanInsurance() {
                return (this.bitField0_ & 16) == 16;
            }

            public final int getBCanInsurance() {
                return this.bCanInsurance_;
            }

            public final Builder setBCanInsurance(int i) {
                this.bitField0_ |= 16;
                this.bCanInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBCanInsurance() {
                this.bitField0_ &= -17;
                this.bCanInsurance_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBDefaultInsurance() {
                return (this.bitField0_ & 32) == 32;
            }

            public final int getBDefaultInsurance() {
                return this.bDefaultInsurance_;
            }

            public final Builder setBDefaultInsurance(int i) {
                this.bitField0_ |= 32;
                this.bDefaultInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBDefaultInsurance() {
                this.bitField0_ &= -33;
                this.bDefaultInsurance_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLInsuranceStartTime() {
                return (this.bitField0_ & 64) == 64;
            }

            public final long getLInsuranceStartTime() {
                return this.lInsuranceStartTime_;
            }

            public final Builder setLInsuranceStartTime(long j) {
                this.bitField0_ |= 64;
                this.lInsuranceStartTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLInsuranceStartTime() {
                this.bitField0_ &= -65;
                this.lInsuranceStartTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLInsuranceActDuration() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLInsuranceActDuration() {
                return this.lInsuranceActDuration_;
            }

            public final Builder setLInsuranceActDuration(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lInsuranceActDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLInsuranceActDuration() {
                this.bitField0_ &= -129;
                this.lInsuranceActDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIInsuranceDelayCost() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final int getIInsuranceDelayCost() {
                return this.iInsuranceDelayCost_;
            }

            public final Builder setIInsuranceDelayCost(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                this.iInsuranceDelayCost_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIInsuranceDelayCost() {
                this.bitField0_ &= -257;
                this.iInsuranceDelayCost_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIInsuranceDelayLong() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final int getIInsuranceDelayLong() {
                return this.iInsuranceDelayLong_;
            }

            public final Builder setIInsuranceDelayLong(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.iInsuranceDelayLong_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIInsuranceDelayLong() {
                this.bitField0_ &= -513;
                this.iInsuranceDelayLong_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBFirstInsurance() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final int getBFirstInsurance() {
                return this.bFirstInsurance_;
            }

            public final Builder setBFirstInsurance(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.bFirstInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBFirstInsurance() {
                this.bitField0_ &= -1025;
                this.bFirstInsurance_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native InsuranceUserInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ InsuranceUserInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, InsuranceUserInfo insuranceUserInfo);

        private native InsuranceUserInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ InsuranceUserInfo(com.google.protobuf.GeneratedMessage.Builder builder, InsuranceUserInfo insuranceUserInfo);

        private native InsuranceUserInfo(boolean z);

        private native void initFields();

        public final native int getBCanInsurance();

        public final native int getBDefaultInsurance();

        public final native int getBFirstInsurance();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6448getDefaultInstanceForType();

        public final native InsuranceUserInfo m6449getDefaultInstanceForType();

        public final native INSURANCE_BET_STATUS getEInsuranceBetStatus();

        public final native int getIInsuranceDelayCost();

        public final native int getIInsuranceDelayLong();

        public final native long getLInsuranceActDuration();

        public final native long getLInsuranceStartTime();

        public final native long getLTotalGetStacks();

        public final native Parser<InsuranceUserInfo> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getUuid();

        public final native InsurancePotInfo getVInsurancePotInfos(int i);

        public final native int getVInsurancePotInfosCount();

        public final native List<InsurancePotInfo> getVInsurancePotInfosList();

        public final native InsurancePotInfoOrBuilder getVInsurancePotInfosOrBuilder(int i);

        public final native List<? extends InsurancePotInfoOrBuilder> getVInsurancePotInfosOrBuilderList();

        public final native boolean hasBCanInsurance();

        public final native boolean hasBDefaultInsurance();

        public final native boolean hasBFirstInsurance();

        public final native boolean hasEInsuranceBetStatus();

        public final native boolean hasIInsuranceDelayCost();

        public final native boolean hasIInsuranceDelayLong();

        public final native boolean hasLInsuranceActDuration();

        public final native boolean hasLInsuranceStartTime();

        public final native boolean hasLTotalGetStacks();

        public final native boolean hasUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6450newBuilderForType();

        public final native Builder m6451newBuilderForType();

        protected final native Builder m6452newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6453toBuilder();

        public final native Builder m6454toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static InsuranceUserInfo getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gg;
        }

        static void __clinit__() {
            PARSER = new C12411();
            InsuranceUserInfo insuranceUserInfo = new InsuranceUserInfo(true);
            defaultInstance = insuranceUserInfo;
            insuranceUserInfo.initFields();
        }

        public static InsuranceUserInfo parseFrom(ByteString byteString) {
            return (InsuranceUserInfo) PARSER.parseFrom(byteString);
        }

        public static InsuranceUserInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceUserInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static InsuranceUserInfo parseFrom(byte[] bArr) {
            return (InsuranceUserInfo) PARSER.parseFrom(bArr);
        }

        public static InsuranceUserInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceUserInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static InsuranceUserInfo parseFrom(InputStream inputStream) {
            return (InsuranceUserInfo) PARSER.parseFrom(inputStream);
        }

        public static InsuranceUserInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceUserInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static InsuranceUserInfo parseDelimitedFrom(InputStream inputStream) {
            return (InsuranceUserInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static InsuranceUserInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceUserInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static InsuranceUserInfo parseFrom(CodedInputStream codedInputStream) {
            return (InsuranceUserInfo) PARSER.parseFrom(codedInputStream);
        }

        public static InsuranceUserInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (InsuranceUserInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(InsuranceUserInfo insuranceUserInfo) {
            return newBuilder().mergeFrom(insuranceUserInfo);
        }
    }

    public interface NetPageShareInfoNetOrBuilder extends MessageOrBuilder {
        long getLPageID();

        String getSCoverPicUrl();

        ByteString getSCoverPicUrlBytes();

        String getSPageDesc();

        ByteString getSPageDescBytes();

        String getSPageTitle();

        ByteString getSPageTitleBytes();

        String getSUrl();

        ByteString getSUrlBytes();

        boolean hasLPageID();

        boolean hasSCoverPicUrl();

        boolean hasSPageDesc();

        boolean hasSPageTitle();

        boolean hasSUrl();
    }

    public static final class NetPageShareInfoNet extends GeneratedMessage implements NetPageShareInfoNetOrBuilder {
        public static final int LPAGEID_FIELD_NUMBER = 1;
        public static Parser<NetPageShareInfoNet> PARSER = null;
        public static final int SCOVERPICURL_FIELD_NUMBER = 3;
        public static final int SPAGEDESC_FIELD_NUMBER = 4;
        public static final int SPAGETITLE_FIELD_NUMBER = 2;
        public static final int SURL_FIELD_NUMBER = 5;
        private static final NetPageShareInfoNet defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lPageID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCoverPicUrl_;
        private Object sPageDesc_;
        private Object sPageTitle_;
        private Object sUrl_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.NetPageShareInfoNet.1 */
        class C12421 extends AbstractParser<NetPageShareInfoNet> {
            C12421() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new NetPageShareInfoNet(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements NetPageShareInfoNetOrBuilder {
            private int bitField0_;
            private long lPageID_;
            private Object sCoverPicUrl_;
            private Object sPageDesc_;
            private Object sPageTitle_;
            private Object sUrl_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eO;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eP.ensureFieldAccessorsInitialized(NetPageShareInfoNet.class, Builder.class);
            }

            private Builder() {
                this.sPageTitle_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCoverPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sPageDesc_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.sPageTitle_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sCoverPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sPageDesc_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.sUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                NetPageShareInfoNet.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lPageID_ = 0;
                this.bitField0_ &= -2;
                this.sPageTitle_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.sCoverPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -5;
                this.sPageDesc_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -9;
                this.sUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eO;
            }

            public final NetPageShareInfoNet getDefaultInstanceForType() {
                return NetPageShareInfoNet.getDefaultInstance();
            }

            public final NetPageShareInfoNet build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final NetPageShareInfoNet buildPartial() {
                int i = NetPageShareInfoNet.LPAGEID_FIELD_NUMBER;
                NetPageShareInfoNet netPageShareInfoNet = new NetPageShareInfoNet(null);
                int i2 = this.bitField0_;
                if ((i2 & NetPageShareInfoNet.LPAGEID_FIELD_NUMBER) != NetPageShareInfoNet.LPAGEID_FIELD_NUMBER) {
                    i = 0;
                }
                netPageShareInfoNet.lPageID_ = this.lPageID_;
                if ((i2 & NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER) == NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER) {
                    i |= NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER;
                }
                netPageShareInfoNet.sPageTitle_ = this.sPageTitle_;
                if ((i2 & NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER) == NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER) {
                    i |= NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER;
                }
                netPageShareInfoNet.sCoverPicUrl_ = this.sCoverPicUrl_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                netPageShareInfoNet.sPageDesc_ = this.sPageDesc_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                netPageShareInfoNet.sUrl_ = this.sUrl_;
                netPageShareInfoNet.bitField0_ = i;
                onBuilt();
                return netPageShareInfoNet;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof NetPageShareInfoNet) {
                    return mergeFrom((NetPageShareInfoNet) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(NetPageShareInfoNet netPageShareInfoNet) {
                if (netPageShareInfoNet != NetPageShareInfoNet.getDefaultInstance()) {
                    if (netPageShareInfoNet.hasLPageID()) {
                        setLPageID(netPageShareInfoNet.getLPageID());
                    }
                    if (netPageShareInfoNet.hasSPageTitle()) {
                        this.bitField0_ |= NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER;
                        this.sPageTitle_ = netPageShareInfoNet.sPageTitle_;
                        onChanged();
                    }
                    if (netPageShareInfoNet.hasSCoverPicUrl()) {
                        this.bitField0_ |= NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER;
                        this.sCoverPicUrl_ = netPageShareInfoNet.sCoverPicUrl_;
                        onChanged();
                    }
                    if (netPageShareInfoNet.hasSPageDesc()) {
                        this.bitField0_ |= 8;
                        this.sPageDesc_ = netPageShareInfoNet.sPageDesc_;
                        onChanged();
                    }
                    if (netPageShareInfoNet.hasSUrl()) {
                        this.bitField0_ |= 16;
                        this.sUrl_ = netPageShareInfoNet.sUrl_;
                        onChanged();
                    }
                    mergeUnknownFields(netPageShareInfoNet.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLPageID()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.NetPageShareInfoNet.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.NetPageShareInfoNet.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.NetPageShareInfoNet) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.NetPageShareInfoNet) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.NetPageShareInfoNet.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$NetPageShareInfoNet$Builder");
            }

            public final boolean hasLPageID() {
                return (this.bitField0_ & NetPageShareInfoNet.LPAGEID_FIELD_NUMBER) == NetPageShareInfoNet.LPAGEID_FIELD_NUMBER;
            }

            public final long getLPageID() {
                return this.lPageID_;
            }

            public final Builder setLPageID(long j) {
                this.bitField0_ |= NetPageShareInfoNet.LPAGEID_FIELD_NUMBER;
                this.lPageID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPageID() {
                this.bitField0_ &= -2;
                this.lPageID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasSPageTitle() {
                return (this.bitField0_ & NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER) == NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER;
            }

            public final String getSPageTitle() {
                Object obj = this.sPageTitle_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sPageTitle_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSPageTitleBytes() {
                Object obj = this.sPageTitle_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sPageTitle_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSPageTitle(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER;
                this.sPageTitle_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSPageTitle() {
                this.bitField0_ &= -3;
                this.sPageTitle_ = NetPageShareInfoNet.getDefaultInstance().getSPageTitle();
                onChanged();
                return this;
            }

            public final Builder setSPageTitleBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= NetPageShareInfoNet.SPAGETITLE_FIELD_NUMBER;
                this.sPageTitle_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSCoverPicUrl() {
                return (this.bitField0_ & NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER) == NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER;
            }

            public final String getSCoverPicUrl() {
                Object obj = this.sCoverPicUrl_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCoverPicUrl_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCoverPicUrlBytes() {
                Object obj = this.sCoverPicUrl_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCoverPicUrl_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCoverPicUrl(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER;
                this.sCoverPicUrl_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCoverPicUrl() {
                this.bitField0_ &= -5;
                this.sCoverPicUrl_ = NetPageShareInfoNet.getDefaultInstance().getSCoverPicUrl();
                onChanged();
                return this;
            }

            public final Builder setSCoverPicUrlBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= NetPageShareInfoNet.SPAGEDESC_FIELD_NUMBER;
                this.sCoverPicUrl_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSPageDesc() {
                return (this.bitField0_ & 8) == 8;
            }

            public final String getSPageDesc() {
                Object obj = this.sPageDesc_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sPageDesc_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSPageDescBytes() {
                Object obj = this.sPageDesc_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sPageDesc_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSPageDesc(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.sPageDesc_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSPageDesc() {
                this.bitField0_ &= -9;
                this.sPageDesc_ = NetPageShareInfoNet.getDefaultInstance().getSPageDesc();
                onChanged();
                return this;
            }

            public final Builder setSPageDescBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.sPageDesc_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasSUrl() {
                return (this.bitField0_ & 16) == 16;
            }

            public final String getSUrl() {
                Object obj = this.sUrl_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sUrl_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSUrlBytes() {
                Object obj = this.sUrl_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sUrl_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSUrl(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sUrl_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSUrl() {
                this.bitField0_ &= -17;
                this.sUrl_ = NetPageShareInfoNet.getDefaultInstance().getSUrl();
                onChanged();
                return this;
            }

            public final Builder setSUrlBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16;
                this.sUrl_ = byteString;
                onChanged();
                return this;
            }
        }

        private NetPageShareInfoNet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private NetPageShareInfoNet(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static NetPageShareInfoNet getDefaultInstance() {
            return defaultInstance;
        }

        public final NetPageShareInfoNet getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private NetPageShareInfoNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LPAGEID_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LPAGEID_FIELD_NUMBER;
                            this.lPageID_ = codedInputStream.readInt64();
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPAGETITLE_FIELD_NUMBER;
                            this.sPageTitle_ = readBytes;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SPAGEDESC_FIELD_NUMBER;
                            this.sCoverPicUrl_ = readBytes;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.sPageDesc_ = readBytes;
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.sUrl_ = readBytes;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LPAGEID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eO;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eP.ensureFieldAccessorsInitialized(NetPageShareInfoNet.class, Builder.class);
        }

        static {
            PARSER = new C12421();
            NetPageShareInfoNet netPageShareInfoNet = new NetPageShareInfoNet(true);
            defaultInstance = netPageShareInfoNet;
            netPageShareInfoNet.initFields();
        }

        public final Parser<NetPageShareInfoNet> getParserForType() {
            return PARSER;
        }

        public final boolean hasLPageID() {
            return (this.bitField0_ & LPAGEID_FIELD_NUMBER) == LPAGEID_FIELD_NUMBER;
        }

        public final long getLPageID() {
            return this.lPageID_;
        }

        public final boolean hasSPageTitle() {
            return (this.bitField0_ & SPAGETITLE_FIELD_NUMBER) == SPAGETITLE_FIELD_NUMBER;
        }

        public final String getSPageTitle() {
            Object obj = this.sPageTitle_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPageTitle_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPageTitleBytes() {
            Object obj = this.sPageTitle_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPageTitle_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSCoverPicUrl() {
            return (this.bitField0_ & SPAGEDESC_FIELD_NUMBER) == SPAGEDESC_FIELD_NUMBER;
        }

        public final String getSCoverPicUrl() {
            Object obj = this.sCoverPicUrl_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCoverPicUrl_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCoverPicUrlBytes() {
            Object obj = this.sCoverPicUrl_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCoverPicUrl_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSPageDesc() {
            return (this.bitField0_ & 8) == 8;
        }

        public final String getSPageDesc() {
            Object obj = this.sPageDesc_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sPageDesc_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSPageDescBytes() {
            Object obj = this.sPageDesc_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sPageDesc_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasSUrl() {
            return (this.bitField0_ & 16) == 16;
        }

        public final String getSUrl() {
            Object obj = this.sUrl_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sUrl_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSUrlBytes() {
            Object obj = this.sUrl_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sUrl_ = copyFromUtf8;
            return copyFromUtf8;
        }

        private void initFields() {
            this.lPageID_ = 0;
            this.sPageTitle_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sCoverPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sPageDesc_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.sUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasLPageID()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LPAGEID_FIELD_NUMBER) == LPAGEID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LPAGEID_FIELD_NUMBER, this.lPageID_);
            }
            if ((this.bitField0_ & SPAGETITLE_FIELD_NUMBER) == SPAGETITLE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SPAGETITLE_FIELD_NUMBER, getSPageTitleBytes());
            }
            if ((this.bitField0_ & SPAGEDESC_FIELD_NUMBER) == SPAGEDESC_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SCOVERPICURL_FIELD_NUMBER, getSCoverPicUrlBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBytes(SPAGEDESC_FIELD_NUMBER, getSPageDescBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBytes(SURL_FIELD_NUMBER, getSUrlBytes());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LPAGEID_FIELD_NUMBER) == LPAGEID_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt64Size(LPAGEID_FIELD_NUMBER, this.lPageID_) + 0;
            }
            if ((this.bitField0_ & SPAGETITLE_FIELD_NUMBER) == SPAGETITLE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SPAGETITLE_FIELD_NUMBER, getSPageTitleBytes());
            }
            if ((this.bitField0_ & SPAGEDESC_FIELD_NUMBER) == SPAGEDESC_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SCOVERPICURL_FIELD_NUMBER, getSCoverPicUrlBytes());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeBytesSize(SPAGEDESC_FIELD_NUMBER, getSPageDescBytes());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeBytesSize(SURL_FIELD_NUMBER, getSUrlBytes());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static NetPageShareInfoNet parseFrom(ByteString byteString) {
            return (NetPageShareInfoNet) PARSER.parseFrom(byteString);
        }

        public static NetPageShareInfoNet parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (NetPageShareInfoNet) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static NetPageShareInfoNet parseFrom(byte[] bArr) {
            return (NetPageShareInfoNet) PARSER.parseFrom(bArr);
        }

        public static NetPageShareInfoNet parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (NetPageShareInfoNet) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static NetPageShareInfoNet parseFrom(InputStream inputStream) {
            return (NetPageShareInfoNet) PARSER.parseFrom(inputStream);
        }

        public static NetPageShareInfoNet parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (NetPageShareInfoNet) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static NetPageShareInfoNet parseDelimitedFrom(InputStream inputStream) {
            return (NetPageShareInfoNet) PARSER.parseDelimitedFrom(inputStream);
        }

        public static NetPageShareInfoNet parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (NetPageShareInfoNet) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static NetPageShareInfoNet parseFrom(CodedInputStream codedInputStream) {
            return (NetPageShareInfoNet) PARSER.parseFrom(codedInputStream);
        }

        public static NetPageShareInfoNet parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (NetPageShareInfoNet) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(NetPageShareInfoNet netPageShareInfoNet) {
            return newBuilder().mergeFrom(netPageShareInfoNet);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface OddsStructureOrBuilder extends MessageOrBuilder {
        int getIOdds();

        int getIOuts();

        boolean hasIOdds();

        boolean hasIOuts();
    }

    public static final class OddsStructure extends GeneratedMessage implements OddsStructureOrBuilder {
        public static final int IODDS_FIELD_NUMBER = 2;
        public static final int IOUTS_FIELD_NUMBER = 1;
        public static Parser<OddsStructure> PARSER;
        private static final OddsStructure defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int iOdds_;
        private int iOuts_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.OddsStructure.1 */
        class C12431 extends AbstractParser<OddsStructure> {
            C12431() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new OddsStructure(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements OddsStructureOrBuilder {
            private int bitField0_;
            private int iOdds_;
            private int iOuts_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.f8292i;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.f8293j.ensureFieldAccessorsInitialized(OddsStructure.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                OddsStructure.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.iOuts_ = 0;
                this.bitField0_ &= -2;
                this.iOdds_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.f8292i;
            }

            public final OddsStructure getDefaultInstanceForType() {
                return OddsStructure.getDefaultInstance();
            }

            public final OddsStructure build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final OddsStructure buildPartial() {
                int i = OddsStructure.IOUTS_FIELD_NUMBER;
                OddsStructure oddsStructure = new OddsStructure(null);
                int i2 = this.bitField0_;
                if ((i2 & OddsStructure.IOUTS_FIELD_NUMBER) != OddsStructure.IOUTS_FIELD_NUMBER) {
                    i = 0;
                }
                oddsStructure.iOuts_ = this.iOuts_;
                if ((i2 & OddsStructure.IODDS_FIELD_NUMBER) == OddsStructure.IODDS_FIELD_NUMBER) {
                    i |= OddsStructure.IODDS_FIELD_NUMBER;
                }
                oddsStructure.iOdds_ = this.iOdds_;
                oddsStructure.bitField0_ = i;
                onBuilt();
                return oddsStructure;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof OddsStructure) {
                    return mergeFrom((OddsStructure) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(OddsStructure oddsStructure) {
                if (oddsStructure != OddsStructure.getDefaultInstance()) {
                    if (oddsStructure.hasIOuts()) {
                        setIOuts(oddsStructure.getIOuts());
                    }
                    if (oddsStructure.hasIOdds()) {
                        setIOdds(oddsStructure.getIOdds());
                    }
                    mergeUnknownFields(oddsStructure.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasIOuts() && hasIOdds()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.OddsStructure.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.OddsStructure.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.OddsStructure) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.OddsStructure) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.OddsStructure.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$OddsStructure$Builder");
            }

            public final boolean hasIOuts() {
                return (this.bitField0_ & OddsStructure.IOUTS_FIELD_NUMBER) == OddsStructure.IOUTS_FIELD_NUMBER;
            }

            public final int getIOuts() {
                return this.iOuts_;
            }

            public final Builder setIOuts(int i) {
                this.bitField0_ |= OddsStructure.IOUTS_FIELD_NUMBER;
                this.iOuts_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIOuts() {
                this.bitField0_ &= -2;
                this.iOuts_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIOdds() {
                return (this.bitField0_ & OddsStructure.IODDS_FIELD_NUMBER) == OddsStructure.IODDS_FIELD_NUMBER;
            }

            public final int getIOdds() {
                return this.iOdds_;
            }

            public final Builder setIOdds(int i) {
                this.bitField0_ |= OddsStructure.IODDS_FIELD_NUMBER;
                this.iOdds_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIOdds() {
                this.bitField0_ &= -3;
                this.iOdds_ = 0;
                onChanged();
                return this;
            }
        }

        private OddsStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private OddsStructure(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static OddsStructure getDefaultInstance() {
            return defaultInstance;
        }

        public final OddsStructure getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OddsStructure(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = IOUTS_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= IOUTS_FIELD_NUMBER;
                            this.iOuts_ = codedInputStream.readInt32();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= IODDS_FIELD_NUMBER;
                            this.iOdds_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = IOUTS_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.f8292i;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.f8293j.ensureFieldAccessorsInitialized(OddsStructure.class, Builder.class);
        }

        static {
            PARSER = new C12431();
            OddsStructure oddsStructure = new OddsStructure(true);
            defaultInstance = oddsStructure;
            oddsStructure.initFields();
        }

        public final Parser<OddsStructure> getParserForType() {
            return PARSER;
        }

        public final boolean hasIOuts() {
            return (this.bitField0_ & IOUTS_FIELD_NUMBER) == IOUTS_FIELD_NUMBER;
        }

        public final int getIOuts() {
            return this.iOuts_;
        }

        public final boolean hasIOdds() {
            return (this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER;
        }

        public final int getIOdds() {
            return this.iOdds_;
        }

        private void initFields() {
            this.iOuts_ = 0;
            this.iOdds_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasIOuts()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasIOdds()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & IOUTS_FIELD_NUMBER) == IOUTS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IOUTS_FIELD_NUMBER, this.iOuts_);
            }
            if ((this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                codedOutputStream.writeInt32(IODDS_FIELD_NUMBER, this.iOdds_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & IOUTS_FIELD_NUMBER) == IOUTS_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt32Size(IOUTS_FIELD_NUMBER, this.iOuts_) + 0;
            }
            if ((this.bitField0_ & IODDS_FIELD_NUMBER) == IODDS_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(IODDS_FIELD_NUMBER, this.iOdds_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static OddsStructure parseFrom(ByteString byteString) {
            return (OddsStructure) PARSER.parseFrom(byteString);
        }

        public static OddsStructure parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (OddsStructure) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static OddsStructure parseFrom(byte[] bArr) {
            return (OddsStructure) PARSER.parseFrom(bArr);
        }

        public static OddsStructure parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (OddsStructure) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static OddsStructure parseFrom(InputStream inputStream) {
            return (OddsStructure) PARSER.parseFrom(inputStream);
        }

        public static OddsStructure parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (OddsStructure) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static OddsStructure parseDelimitedFrom(InputStream inputStream) {
            return (OddsStructure) PARSER.parseDelimitedFrom(inputStream);
        }

        public static OddsStructure parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (OddsStructure) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static OddsStructure parseFrom(CodedInputStream codedInputStream) {
            return (OddsStructure) PARSER.parseFrom(codedInputStream);
        }

        public static OddsStructure parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (OddsStructure) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(OddsStructure oddsStructure) {
            return newBuilder().mergeFrom(oddsStructure);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface PicPackageInfoNetOrBuilder extends MessageOrBuilder {
        int getLCurrentSeq();

        int getLMaxSeq();

        ByteString getVVoiceDatas();

        boolean hasLCurrentSeq();

        boolean hasLMaxSeq();

        boolean hasVVoiceDatas();
    }

    public static final class PicPackageInfoNet extends GeneratedMessage implements PicPackageInfoNetOrBuilder {
        public static final int LCURRENTSEQ_FIELD_NUMBER = 1;
        public static final int LMAXSEQ_FIELD_NUMBER = 2;
        public static Parser<PicPackageInfoNet> PARSER = null;
        public static final int VVOICEDATAS_FIELD_NUMBER = 6;
        private static final PicPackageInfoNet defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private int lCurrentSeq_;
        private int lMaxSeq_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private ByteString vVoiceDatas_;

        /* renamed from: com.texaspoker.moment.TexasPoker.PicPackageInfoNet.1 */
        class C12441 extends AbstractParser<PicPackageInfoNet> {
            C12441() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new PicPackageInfoNet(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements PicPackageInfoNetOrBuilder {
            private int bitField0_;
            private int lCurrentSeq_;
            private int lMaxSeq_;
            private ByteString vVoiceDatas_;

            static {
                fixHelper.fixfunc(new int[]{3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6455build();

            public final native PicPackageInfoNet m6456build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6457buildPartial();

            public final native PicPackageInfoNet m6458buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6459clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6460clear();

            public final native Builder m6461clear();

            public final native Builder clearLCurrentSeq();

            public final native Builder clearLMaxSeq();

            public final native Builder clearVVoiceDatas();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6462clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6463clone();

            public final native Builder m6464clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6465getDefaultInstanceForType();

            public final native PicPackageInfoNet m6466getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native int getLCurrentSeq();

            public final native int getLMaxSeq();

            public final native ByteString getVVoiceDatas();

            public final native boolean hasLCurrentSeq();

            public final native boolean hasLMaxSeq();

            public final native boolean hasVVoiceDatas();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6467mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6468mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6469mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6470mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6471mergeFrom(Message message);

            public final native Builder mergeFrom(PicPackageInfoNet picPackageInfoNet);

            public final native Builder setLCurrentSeq(int i);

            public final native Builder setLMaxSeq(int i);

            public final native Builder setVVoiceDatas(ByteString byteString);

            public static final Descriptor getDescriptor() {
                return TexasPoker.eM;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private PicPackageInfoNet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PicPackageInfoNet(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PicPackageInfoNet getDefaultInstance() {
            return defaultInstance;
        }

        public final PicPackageInfoNet getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PicPackageInfoNet(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LCURRENTSEQ_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LCURRENTSEQ_FIELD_NUMBER;
                            this.lCurrentSeq_ = codedInputStream.readInt32();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LMAXSEQ_FIELD_NUMBER;
                            this.lMaxSeq_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            this.bitField0_ |= 4;
                            this.vVoiceDatas_ = codedInputStream.readBytes();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LCURRENTSEQ_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eM;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eN.ensureFieldAccessorsInitialized(PicPackageInfoNet.class, Builder.class);
        }

        static {
            PARSER = new C12441();
            PicPackageInfoNet picPackageInfoNet = new PicPackageInfoNet(true);
            defaultInstance = picPackageInfoNet;
            picPackageInfoNet.initFields();
        }

        public final Parser<PicPackageInfoNet> getParserForType() {
            return PARSER;
        }

        public final boolean hasLCurrentSeq() {
            return (this.bitField0_ & LCURRENTSEQ_FIELD_NUMBER) == LCURRENTSEQ_FIELD_NUMBER;
        }

        public final int getLCurrentSeq() {
            return this.lCurrentSeq_;
        }

        public final boolean hasLMaxSeq() {
            return (this.bitField0_ & LMAXSEQ_FIELD_NUMBER) == LMAXSEQ_FIELD_NUMBER;
        }

        public final int getLMaxSeq() {
            return this.lMaxSeq_;
        }

        public final boolean hasVVoiceDatas() {
            return (this.bitField0_ & 4) == 4;
        }

        public final ByteString getVVoiceDatas() {
            return this.vVoiceDatas_;
        }

        private void initFields() {
            this.lCurrentSeq_ = 0;
            this.lMaxSeq_ = 0;
            this.vVoiceDatas_ = ByteString.EMPTY;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLCurrentSeq()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasLMaxSeq()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LCURRENTSEQ_FIELD_NUMBER) == LCURRENTSEQ_FIELD_NUMBER) {
                codedOutputStream.writeInt32(LCURRENTSEQ_FIELD_NUMBER, this.lCurrentSeq_);
            }
            if ((this.bitField0_ & LMAXSEQ_FIELD_NUMBER) == LMAXSEQ_FIELD_NUMBER) {
                codedOutputStream.writeInt32(LMAXSEQ_FIELD_NUMBER, this.lMaxSeq_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeBytes(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & LCURRENTSEQ_FIELD_NUMBER) == LCURRENTSEQ_FIELD_NUMBER) {
                i = CodedOutputStream.computeInt32Size(LCURRENTSEQ_FIELD_NUMBER, this.lCurrentSeq_) + 0;
            }
            if ((this.bitField0_ & LMAXSEQ_FIELD_NUMBER) == LMAXSEQ_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt32Size(LMAXSEQ_FIELD_NUMBER, this.lMaxSeq_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeBytesSize(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static PicPackageInfoNet parseFrom(ByteString byteString) {
            return (PicPackageInfoNet) PARSER.parseFrom(byteString);
        }

        public static PicPackageInfoNet parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (PicPackageInfoNet) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PicPackageInfoNet parseFrom(byte[] bArr) {
            return (PicPackageInfoNet) PARSER.parseFrom(bArr);
        }

        public static PicPackageInfoNet parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (PicPackageInfoNet) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PicPackageInfoNet parseFrom(InputStream inputStream) {
            return (PicPackageInfoNet) PARSER.parseFrom(inputStream);
        }

        public static PicPackageInfoNet parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PicPackageInfoNet) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static PicPackageInfoNet parseDelimitedFrom(InputStream inputStream) {
            return (PicPackageInfoNet) PARSER.parseDelimitedFrom(inputStream);
        }

        public static PicPackageInfoNet parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PicPackageInfoNet) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static PicPackageInfoNet parseFrom(CodedInputStream codedInputStream) {
            return (PicPackageInfoNet) PARSER.parseFrom(codedInputStream);
        }

        public static PicPackageInfoNet parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PicPackageInfoNet) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PicPackageInfoNet picPackageInfoNet) {
            return newBuilder().mergeFrom(picPackageInfoNet);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface PotInfoOrBuilder extends MessageOrBuilder {
        long getLPotStacks();

        long getVUuids(int i);

        int getVUuidsCount();

        List<Long> getVUuidsList();

        boolean hasLPotStacks();
    }

    public static final class PotInfo extends GeneratedMessage implements PotInfoOrBuilder {
        public static final int LPOTSTACKS_FIELD_NUMBER = 1;
        public static Parser<PotInfo> PARSER = null;
        public static final int VUUIDS_FIELD_NUMBER = 2;
        private static final PotInfo defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private long lPotStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private List<Long> vUuids_;

        /* renamed from: com.texaspoker.moment.TexasPoker.PotInfo.1 */
        class C12451 extends AbstractParser<PotInfo> {
            static {
                fixHelper.fixfunc(new int[]{3433, 3434});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12451();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements PotInfoOrBuilder {
            private int bitField0_;
            private long lPotStacks_;
            private List<Long> vUuids_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bE;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bF.ensureFieldAccessorsInitialized(PotInfo.class, Builder.class);
            }

            private Builder() {
                this.vUuids_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.vUuids_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                PotInfo.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lPotStacks_ = 0;
                this.bitField0_ &= -2;
                this.vUuids_ = Collections.emptyList();
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bE;
            }

            public final PotInfo getDefaultInstanceForType() {
                return PotInfo.getDefaultInstance();
            }

            public final PotInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final PotInfo buildPartial() {
                int i = PotInfo.LPOTSTACKS_FIELD_NUMBER;
                PotInfo potInfo = new PotInfo((com.google.protobuf.GeneratedMessage.Builder) this, null);
                if ((this.bitField0_ & PotInfo.LPOTSTACKS_FIELD_NUMBER) != PotInfo.LPOTSTACKS_FIELD_NUMBER) {
                    i = 0;
                }
                potInfo.lPotStacks_ = this.lPotStacks_;
                if ((this.bitField0_ & PotInfo.VUUIDS_FIELD_NUMBER) == PotInfo.VUUIDS_FIELD_NUMBER) {
                    this.vUuids_ = Collections.unmodifiableList(this.vUuids_);
                    this.bitField0_ &= -3;
                }
                potInfo.vUuids_ = this.vUuids_;
                potInfo.bitField0_ = i;
                onBuilt();
                return potInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof PotInfo) {
                    return mergeFrom((PotInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(PotInfo potInfo) {
                if (potInfo != PotInfo.getDefaultInstance()) {
                    if (potInfo.hasLPotStacks()) {
                        setLPotStacks(potInfo.getLPotStacks());
                    }
                    if (!potInfo.vUuids_.isEmpty()) {
                        if (this.vUuids_.isEmpty()) {
                            this.vUuids_ = potInfo.vUuids_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVUuidsIsMutable();
                            this.vUuids_.addAll(potInfo.vUuids_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(potInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasLPotStacks()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.PotInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.PotInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.PotInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.PotInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.PotInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$PotInfo$Builder");
            }

            public final boolean hasLPotStacks() {
                return (this.bitField0_ & PotInfo.LPOTSTACKS_FIELD_NUMBER) == PotInfo.LPOTSTACKS_FIELD_NUMBER;
            }

            public final long getLPotStacks() {
                return this.lPotStacks_;
            }

            public final Builder setLPotStacks(long j) {
                this.bitField0_ |= PotInfo.LPOTSTACKS_FIELD_NUMBER;
                this.lPotStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLPotStacks() {
                this.bitField0_ &= -2;
                this.lPotStacks_ = 0;
                onChanged();
                return this;
            }

            private void ensureVUuidsIsMutable() {
                if ((this.bitField0_ & PotInfo.VUUIDS_FIELD_NUMBER) != PotInfo.VUUIDS_FIELD_NUMBER) {
                    this.vUuids_ = new ArrayList(this.vUuids_);
                    this.bitField0_ |= PotInfo.VUUIDS_FIELD_NUMBER;
                }
            }

            public final List<Long> getVUuidsList() {
                return Collections.unmodifiableList(this.vUuids_);
            }

            public final int getVUuidsCount() {
                return this.vUuids_.size();
            }

            public final long getVUuids(int i) {
                return ((Long) this.vUuids_.get(i)).longValue();
            }

            public final Builder setVUuids(int i, long j) {
                ensureVUuidsIsMutable();
                this.vUuids_.set(i, Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addVUuids(long j) {
                ensureVUuidsIsMutable();
                this.vUuids_.add(Long.valueOf(j));
                onChanged();
                return this;
            }

            public final Builder addAllVUuids(Iterable<? extends Long> iterable) {
                ensureVUuidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vUuids_);
                onChanged();
                return this;
            }

            public final Builder clearVUuids() {
                this.vUuids_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native PotInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ PotInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, PotInfo potInfo);

        private native PotInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ PotInfo(com.google.protobuf.GeneratedMessage.Builder builder, PotInfo potInfo);

        private native PotInfo(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6472getDefaultInstanceForType();

        public final native PotInfo m6473getDefaultInstanceForType();

        public final native long getLPotStacks();

        public final native Parser<PotInfo> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native long getVUuids(int i);

        public final native int getVUuidsCount();

        public final native List<Long> getVUuidsList();

        public final native boolean hasLPotStacks();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6474newBuilderForType();

        public final native Builder m6475newBuilderForType();

        protected final native Builder m6476newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6477toBuilder();

        public final native Builder m6478toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static PotInfo getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bE;
        }

        static void __clinit__() {
            PARSER = new C12451();
            PotInfo potInfo = new PotInfo(true);
            defaultInstance = potInfo;
            potInfo.initFields();
        }

        public static PotInfo parseFrom(ByteString byteString) {
            return (PotInfo) PARSER.parseFrom(byteString);
        }

        public static PotInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (PotInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PotInfo parseFrom(byte[] bArr) {
            return (PotInfo) PARSER.parseFrom(bArr);
        }

        public static PotInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (PotInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PotInfo parseFrom(InputStream inputStream) {
            return (PotInfo) PARSER.parseFrom(inputStream);
        }

        public static PotInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PotInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static PotInfo parseDelimitedFrom(InputStream inputStream) {
            return (PotInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static PotInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PotInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static PotInfo parseFrom(CodedInputStream codedInputStream) {
            return (PotInfo) PARSER.parseFrom(codedInputStream);
        }

        public static PotInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PotInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(PotInfo potInfo) {
            return newBuilder().mergeFrom(potInfo);
        }
    }

    public interface PushMsgOrBuilder extends MessageOrBuilder {
        int getBChatRoom();

        CHAT_MESSAGE_TYPE getEChatMessageType();

        CHAT_TYPE getETalkType();

        int getIMute();

        int getIVibrate();

        long getLCreateTime();

        long getLDuration();

        long getLGameRoomID();

        long getLMsgID();

        String getSMsg();

        ByteString getSMsgBytes();

        ChatRoomBaseInfo getStChatRoomBaseInfo();

        ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder();

        ClubBaseInfo getStCluBasebInfo();

        ClubBaseInfoOrBuilder getStCluBasebInfoOrBuilder();

        UserBaseInfoNet getStFromUser();

        UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

        NetPageShareInfoNet getStNetPageShareInfoNet();

        NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder();

        PokerProcessInfo getStPokerProcessBaseInfo();

        PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder();

        ShareBillInfoNet getStShareBillInfo();

        ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder();

        SharePokerHistoryInfo getStSharePokerHistoryInfo();

        SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder();

        UserBaseInfoNet getStToUser();

        UserBaseInfoNetOrBuilder getStToUserOrBuilder();

        String getStrPicUrl();

        ByteString getStrPicUrlBytes();

        String getVExtras(int i);

        ByteString getVExtrasBytes(int i);

        int getVExtrasCount();

        ProtocolStringList getVExtrasList();

        ByteString getVVoiceDatas();

        boolean hasBChatRoom();

        boolean hasEChatMessageType();

        boolean hasETalkType();

        boolean hasIMute();

        boolean hasIVibrate();

        boolean hasLCreateTime();

        boolean hasLDuration();

        boolean hasLGameRoomID();

        boolean hasLMsgID();

        boolean hasSMsg();

        boolean hasStChatRoomBaseInfo();

        boolean hasStCluBasebInfo();

        boolean hasStFromUser();

        boolean hasStNetPageShareInfoNet();

        boolean hasStPokerProcessBaseInfo();

        boolean hasStShareBillInfo();

        boolean hasStSharePokerHistoryInfo();

        boolean hasStToUser();

        boolean hasStrPicUrl();

        boolean hasVVoiceDatas();
    }

    public static final class PushMsg extends GeneratedMessage implements PushMsgOrBuilder {
        public static final int BCHATROOM_FIELD_NUMBER = 4;
        public static final int ECHATMESSAGETYPE_FIELD_NUMBER = 3;
        public static final int ETALKTYPE_FIELD_NUMBER = 2;
        public static final int IMUTE_FIELD_NUMBER = 17;
        public static final int IVIBRATE_FIELD_NUMBER = 18;
        public static final int LCREATETIME_FIELD_NUMBER = 15;
        public static final int LDURATION_FIELD_NUMBER = 16;
        public static final int LGAMEROOMID_FIELD_NUMBER = 8;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static Parser<PushMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 10;
        public static final int STCHATROOMBASEINFO_FIELD_NUMBER = 7;
        public static final int STCLUBASEBINFO_FIELD_NUMBER = 9;
        public static final int STFROMUSER_FIELD_NUMBER = 5;
        public static final int STNETPAGESHAREINFONET_FIELD_NUMBER = 19;
        public static final int STPOKERPROCESSBASEINFO_FIELD_NUMBER = 13;
        public static final int STRPICURL_FIELD_NUMBER = 14;
        public static final int STSHAREBILLINFO_FIELD_NUMBER = 12;
        public static final int STSHAREPOKERHISTORYINFO_FIELD_NUMBER = 20;
        public static final int STTOUSER_FIELD_NUMBER = 6;
        public static final int VEXTRAS_FIELD_NUMBER = 21;
        public static final int VVOICEDATAS_FIELD_NUMBER = 11;
        private static final PushMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bChatRoom_;
        private int bitField0_;
        private CHAT_MESSAGE_TYPE eChatMessageType_;
        private CHAT_TYPE eTalkType_;
        private int iMute_;
        private int iVibrate_;
        private long lCreateTime_;
        private long lDuration_;
        private long lGameRoomID_;
        private long lMsgID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private ChatRoomBaseInfo stChatRoomBaseInfo_;
        private ClubBaseInfo stCluBasebInfo_;
        private UserBaseInfoNet stFromUser_;
        private NetPageShareInfoNet stNetPageShareInfoNet_;
        private PokerProcessInfo stPokerProcessBaseInfo_;
        private ShareBillInfoNet stShareBillInfo_;
        private SharePokerHistoryInfo stSharePokerHistoryInfo_;
        private UserBaseInfoNet stToUser_;
        private Object strPicUrl_;
        private final UnknownFieldSet unknownFields;
        private LazyStringList vExtras_;
        private ByteString vVoiceDatas_;

        /* renamed from: com.texaspoker.moment.TexasPoker.PushMsg.1 */
        class C12461 extends AbstractParser<PushMsg> {
            C12461() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new PushMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements PushMsgOrBuilder {
            private int bChatRoom_;
            private int bitField0_;
            private CHAT_MESSAGE_TYPE eChatMessageType_;
            private CHAT_TYPE eTalkType_;
            private int iMute_;
            private int iVibrate_;
            private long lCreateTime_;
            private long lDuration_;
            private long lGameRoomID_;
            private long lMsgID_;
            private Object sMsg_;
            private SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> stChatRoomBaseInfoBuilder_;
            private ChatRoomBaseInfo stChatRoomBaseInfo_;
            private SingleFieldBuilder<ClubBaseInfo, com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder, ClubBaseInfoOrBuilder> stCluBasebInfoBuilder_;
            private ClubBaseInfo stCluBasebInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stFromUserBuilder_;
            private UserBaseInfoNet stFromUser_;
            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> stNetPageShareInfoNetBuilder_;
            private NetPageShareInfoNet stNetPageShareInfoNet_;
            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> stPokerProcessBaseInfoBuilder_;
            private PokerProcessInfo stPokerProcessBaseInfo_;
            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> stShareBillInfoBuilder_;
            private ShareBillInfoNet stShareBillInfo_;
            private SingleFieldBuilder<SharePokerHistoryInfo, com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder, SharePokerHistoryInfoOrBuilder> stSharePokerHistoryInfoBuilder_;
            private SharePokerHistoryInfo stSharePokerHistoryInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stToUserBuilder_;
            private UserBaseInfoNet stToUser_;
            private Object strPicUrl_;
            private LazyStringList vExtras_;
            private ByteString vVoiceDatas_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.eK;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eL.ensureFieldAccessorsInitialized(PushMsg.class, Builder.class);
            }

            private Builder() {
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                this.stCluBasebInfo_ = ClubBaseInfo.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.strPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                this.vExtras_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                this.stCluBasebInfo_ = ClubBaseInfo.getDefaultInstance();
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                this.strPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                this.vExtras_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PushMsg.alwaysUseFieldBuilders) {
                    getStFromUserFieldBuilder();
                    getStToUserFieldBuilder();
                    getStChatRoomBaseInfoFieldBuilder();
                    getStCluBasebInfoFieldBuilder();
                    getStShareBillInfoFieldBuilder();
                    getStPokerProcessBaseInfoFieldBuilder();
                    getStNetPageShareInfoNetFieldBuilder();
                    getStSharePokerHistoryInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.lMsgID_ = 0;
                this.bitField0_ &= -2;
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                this.bitField0_ &= -3;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                this.bitField0_ &= -5;
                this.bChatRoom_ = 0;
                this.bitField0_ &= -9;
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -17;
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stToUserBuilder_.clear();
                }
                this.bitField0_ &= -33;
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stChatRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -65;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -129;
                if (this.stCluBasebInfoBuilder_ == null) {
                    this.stCluBasebInfo_ = ClubBaseInfo.getDefaultInstance();
                } else {
                    this.stCluBasebInfoBuilder_.clear();
                }
                this.bitField0_ &= -257;
                this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -513;
                this.vVoiceDatas_ = ByteString.EMPTY;
                this.bitField0_ &= -1025;
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -2049;
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -4097;
                this.strPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -8193;
                this.lCreateTime_ = 0;
                this.bitField0_ &= -16385;
                this.lDuration_ = 0;
                this.bitField0_ &= -32769;
                this.iMute_ = 0;
                this.bitField0_ &= -65537;
                this.iVibrate_ = 0;
                this.bitField0_ &= -131073;
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -262145;
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.clear();
                }
                this.bitField0_ &= -524289;
                this.vExtras_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -1048577;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.eK;
            }

            public final PushMsg getDefaultInstanceForType() {
                return PushMsg.getDefaultInstance();
            }

            public final PushMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final PushMsg buildPartial() {
                int i;
                PushMsg pushMsg = new PushMsg(null);
                int i2 = this.bitField0_;
                int i3 = 0;
                if ((i2 & PushMsg.LMSGID_FIELD_NUMBER) == PushMsg.LMSGID_FIELD_NUMBER) {
                    i3 = PushMsg.LMSGID_FIELD_NUMBER;
                }
                pushMsg.lMsgID_ = this.lMsgID_;
                if ((i2 & PushMsg.ETALKTYPE_FIELD_NUMBER) == PushMsg.ETALKTYPE_FIELD_NUMBER) {
                    i3 |= PushMsg.ETALKTYPE_FIELD_NUMBER;
                }
                pushMsg.eTalkType_ = this.eTalkType_;
                if ((i2 & PushMsg.BCHATROOM_FIELD_NUMBER) == PushMsg.BCHATROOM_FIELD_NUMBER) {
                    i3 |= PushMsg.BCHATROOM_FIELD_NUMBER;
                }
                pushMsg.eChatMessageType_ = this.eChatMessageType_;
                if ((i2 & PushMsg.LGAMEROOMID_FIELD_NUMBER) == PushMsg.LGAMEROOMID_FIELD_NUMBER) {
                    i3 |= PushMsg.LGAMEROOMID_FIELD_NUMBER;
                }
                pushMsg.bChatRoom_ = this.bChatRoom_;
                if ((i2 & PushMsg.LDURATION_FIELD_NUMBER) == PushMsg.LDURATION_FIELD_NUMBER) {
                    i = i3 | PushMsg.LDURATION_FIELD_NUMBER;
                } else {
                    i = i3;
                }
                if (this.stFromUserBuilder_ == null) {
                    pushMsg.stFromUser_ = this.stFromUser_;
                } else {
                    pushMsg.stFromUser_ = (UserBaseInfoNet) this.stFromUserBuilder_.build();
                }
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                if (this.stToUserBuilder_ == null) {
                    pushMsg.stToUser_ = this.stToUser_;
                } else {
                    pushMsg.stToUser_ = (UserBaseInfoNet) this.stToUserBuilder_.build();
                }
                if ((i2 & 64) == 64) {
                    i |= 64;
                }
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    pushMsg.stChatRoomBaseInfo_ = this.stChatRoomBaseInfo_;
                } else {
                    pushMsg.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) this.stChatRoomBaseInfoBuilder_.build();
                }
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                }
                pushMsg.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                }
                if (this.stCluBasebInfoBuilder_ == null) {
                    pushMsg.stCluBasebInfo_ = this.stCluBasebInfo_;
                } else {
                    pushMsg.stCluBasebInfo_ = (ClubBaseInfo) this.stCluBasebInfoBuilder_.build();
                }
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                }
                pushMsg.sMsg_ = this.sMsg_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                }
                pushMsg.vVoiceDatas_ = this.vVoiceDatas_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                }
                if (this.stShareBillInfoBuilder_ == null) {
                    pushMsg.stShareBillInfo_ = this.stShareBillInfo_;
                } else {
                    pushMsg.stShareBillInfo_ = (ShareBillInfoNet) this.stShareBillInfoBuilder_.build();
                }
                if ((i2 & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                    i |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                }
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    pushMsg.stPokerProcessBaseInfo_ = this.stPokerProcessBaseInfo_;
                } else {
                    pushMsg.stPokerProcessBaseInfo_ = (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.build();
                }
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                }
                pushMsg.strPicUrl_ = this.strPicUrl_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                    i |= AccessibilityNodeInfoCompat.ACTION_COPY;
                }
                pushMsg.lCreateTime_ = this.lCreateTime_;
                if ((i2 & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                    i |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                }
                pushMsg.lDuration_ = this.lDuration_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                    i |= AccessibilityNodeInfoCompat.ACTION_CUT;
                }
                pushMsg.iMute_ = this.iMute_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                    i |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                }
                pushMsg.iVibrate_ = this.iVibrate_;
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                    i |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                }
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    pushMsg.stNetPageShareInfoNet_ = this.stNetPageShareInfoNet_;
                } else {
                    pushMsg.stNetPageShareInfoNet_ = (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.build();
                }
                if ((i2 & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                    i |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                }
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    pushMsg.stSharePokerHistoryInfo_ = this.stSharePokerHistoryInfo_;
                } else {
                    pushMsg.stSharePokerHistoryInfo_ = (SharePokerHistoryInfo) this.stSharePokerHistoryInfoBuilder_.build();
                }
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                    this.vExtras_ = this.vExtras_.getUnmodifiableView();
                    this.bitField0_ &= -1048577;
                }
                pushMsg.vExtras_ = this.vExtras_;
                pushMsg.bitField0_ = i;
                onBuilt();
                return pushMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof PushMsg) {
                    return mergeFrom((PushMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(PushMsg pushMsg) {
                if (pushMsg != PushMsg.getDefaultInstance()) {
                    if (pushMsg.hasLMsgID()) {
                        setLMsgID(pushMsg.getLMsgID());
                    }
                    if (pushMsg.hasETalkType()) {
                        setETalkType(pushMsg.getETalkType());
                    }
                    if (pushMsg.hasEChatMessageType()) {
                        setEChatMessageType(pushMsg.getEChatMessageType());
                    }
                    if (pushMsg.hasBChatRoom()) {
                        setBChatRoom(pushMsg.getBChatRoom());
                    }
                    if (pushMsg.hasStFromUser()) {
                        mergeStFromUser(pushMsg.getStFromUser());
                    }
                    if (pushMsg.hasStToUser()) {
                        mergeStToUser(pushMsg.getStToUser());
                    }
                    if (pushMsg.hasStChatRoomBaseInfo()) {
                        mergeStChatRoomBaseInfo(pushMsg.getStChatRoomBaseInfo());
                    }
                    if (pushMsg.hasLGameRoomID()) {
                        setLGameRoomID(pushMsg.getLGameRoomID());
                    }
                    if (pushMsg.hasStCluBasebInfo()) {
                        mergeStCluBasebInfo(pushMsg.getStCluBasebInfo());
                    }
                    if (pushMsg.hasSMsg()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                        this.sMsg_ = pushMsg.sMsg_;
                        onChanged();
                    }
                    if (pushMsg.hasVVoiceDatas()) {
                        setVVoiceDatas(pushMsg.getVVoiceDatas());
                    }
                    if (pushMsg.hasStShareBillInfo()) {
                        mergeStShareBillInfo(pushMsg.getStShareBillInfo());
                    }
                    if (pushMsg.hasStPokerProcessBaseInfo()) {
                        mergeStPokerProcessBaseInfo(pushMsg.getStPokerProcessBaseInfo());
                    }
                    if (pushMsg.hasStrPicUrl()) {
                        this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                        this.strPicUrl_ = pushMsg.strPicUrl_;
                        onChanged();
                    }
                    if (pushMsg.hasLCreateTime()) {
                        setLCreateTime(pushMsg.getLCreateTime());
                    }
                    if (pushMsg.hasLDuration()) {
                        setLDuration(pushMsg.getLDuration());
                    }
                    if (pushMsg.hasIMute()) {
                        setIMute(pushMsg.getIMute());
                    }
                    if (pushMsg.hasIVibrate()) {
                        setIVibrate(pushMsg.getIVibrate());
                    }
                    if (pushMsg.hasStNetPageShareInfoNet()) {
                        mergeStNetPageShareInfoNet(pushMsg.getStNetPageShareInfoNet());
                    }
                    if (pushMsg.hasStSharePokerHistoryInfo()) {
                        mergeStSharePokerHistoryInfo(pushMsg.getStSharePokerHistoryInfo());
                    }
                    if (!pushMsg.vExtras_.isEmpty()) {
                        if (this.vExtras_.isEmpty()) {
                            this.vExtras_ = pushMsg.vExtras_;
                            this.bitField0_ &= -1048577;
                        } else {
                            ensureVExtrasIsMutable();
                            this.vExtras_.addAll(pushMsg.vExtras_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(pushMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLMsgID() || !hasETalkType() || !hasEChatMessageType()) {
                    return false;
                }
                if (hasStFromUser() && !getStFromUser().isInitialized()) {
                    return false;
                }
                if (hasStToUser() && !getStToUser().isInitialized()) {
                    return false;
                }
                if (hasStChatRoomBaseInfo() && !getStChatRoomBaseInfo().isInitialized()) {
                    return false;
                }
                if (hasStCluBasebInfo() && !getStCluBasebInfo().isInitialized()) {
                    return false;
                }
                if (hasStShareBillInfo() && !getStShareBillInfo().isInitialized()) {
                    return false;
                }
                if (hasStPokerProcessBaseInfo() && !getStPokerProcessBaseInfo().isInitialized()) {
                    return false;
                }
                if (hasStNetPageShareInfoNet() && !getStNetPageShareInfoNet().isInitialized()) {
                    return false;
                }
                if (!hasStSharePokerHistoryInfo() || getStSharePokerHistoryInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.PushMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.PushMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.PushMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.PushMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.PushMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$PushMsg$Builder");
            }

            public final boolean hasLMsgID() {
                return (this.bitField0_ & PushMsg.LMSGID_FIELD_NUMBER) == PushMsg.LMSGID_FIELD_NUMBER;
            }

            public final long getLMsgID() {
                return this.lMsgID_;
            }

            public final Builder setLMsgID(long j) {
                this.bitField0_ |= PushMsg.LMSGID_FIELD_NUMBER;
                this.lMsgID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLMsgID() {
                this.bitField0_ &= -2;
                this.lMsgID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasETalkType() {
                return (this.bitField0_ & PushMsg.ETALKTYPE_FIELD_NUMBER) == PushMsg.ETALKTYPE_FIELD_NUMBER;
            }

            public final CHAT_TYPE getETalkType() {
                return this.eTalkType_;
            }

            public final Builder setETalkType(CHAT_TYPE chat_type) {
                if (chat_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= PushMsg.ETALKTYPE_FIELD_NUMBER;
                this.eTalkType_ = chat_type;
                onChanged();
                return this;
            }

            public final Builder clearETalkType() {
                this.bitField0_ &= -3;
                this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
                onChanged();
                return this;
            }

            public final boolean hasEChatMessageType() {
                return (this.bitField0_ & PushMsg.BCHATROOM_FIELD_NUMBER) == PushMsg.BCHATROOM_FIELD_NUMBER;
            }

            public final CHAT_MESSAGE_TYPE getEChatMessageType() {
                return this.eChatMessageType_;
            }

            public final Builder setEChatMessageType(CHAT_MESSAGE_TYPE chat_message_type) {
                if (chat_message_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= PushMsg.BCHATROOM_FIELD_NUMBER;
                this.eChatMessageType_ = chat_message_type;
                onChanged();
                return this;
            }

            public final Builder clearEChatMessageType() {
                this.bitField0_ &= -5;
                this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
                onChanged();
                return this;
            }

            public final boolean hasBChatRoom() {
                return (this.bitField0_ & PushMsg.LGAMEROOMID_FIELD_NUMBER) == PushMsg.LGAMEROOMID_FIELD_NUMBER;
            }

            public final int getBChatRoom() {
                return this.bChatRoom_;
            }

            public final Builder setBChatRoom(int i) {
                this.bitField0_ |= PushMsg.LGAMEROOMID_FIELD_NUMBER;
                this.bChatRoom_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBChatRoom() {
                this.bitField0_ &= -9;
                this.bChatRoom_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStFromUser() {
                return (this.bitField0_ & PushMsg.LDURATION_FIELD_NUMBER) == PushMsg.LDURATION_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    return this.stFromUser_;
                }
                return (UserBaseInfoNet) this.stFromUserBuilder_.getMessage();
            }

            public final Builder setStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ != null) {
                    this.stFromUserBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stFromUser_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= PushMsg.LDURATION_FIELD_NUMBER;
                return this;
            }

            public final Builder setStFromUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = builder.build();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= PushMsg.LDURATION_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStFromUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stFromUserBuilder_ == null) {
                    if ((this.bitField0_ & PushMsg.LDURATION_FIELD_NUMBER) != PushMsg.LDURATION_FIELD_NUMBER || this.stFromUser_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stFromUser_ = userBaseInfoNet;
                    } else {
                        this.stFromUser_ = UserBaseInfoNet.newBuilder(this.stFromUser_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stFromUserBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= PushMsg.LDURATION_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStFromUser() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stFromUserBuilder_.clear();
                }
                this.bitField0_ &= -17;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStFromUserBuilder() {
                this.bitField0_ |= PushMsg.LDURATION_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStFromUserFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
                if (this.stFromUserBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stFromUserBuilder_.getMessageOrBuilder();
                }
                return this.stFromUser_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStFromUserFieldBuilder() {
                if (this.stFromUserBuilder_ == null) {
                    this.stFromUserBuilder_ = new SingleFieldBuilder(getStFromUser(), getParentForChildren(), isClean());
                    this.stFromUser_ = null;
                }
                return this.stFromUserBuilder_;
            }

            public final boolean hasStToUser() {
                return (this.bitField0_ & 32) == 32;
            }

            public final UserBaseInfoNet getStToUser() {
                if (this.stToUserBuilder_ == null) {
                    return this.stToUser_;
                }
                return (UserBaseInfoNet) this.stToUserBuilder_.getMessage();
            }

            public final Builder setStToUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stToUserBuilder_ != null) {
                    this.stToUserBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stToUser_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder setStToUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = builder.build();
                    onChanged();
                } else {
                    this.stToUserBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder mergeStToUser(UserBaseInfoNet userBaseInfoNet) {
                if (this.stToUserBuilder_ == null) {
                    if ((this.bitField0_ & 32) != 32 || this.stToUser_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stToUser_ = userBaseInfoNet;
                    } else {
                        this.stToUser_ = UserBaseInfoNet.newBuilder(this.stToUser_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stToUserBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder clearStToUser() {
                if (this.stToUserBuilder_ == null) {
                    this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stToUserBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStToUserBuilder() {
                this.bitField0_ |= 32;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStToUserFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStToUserOrBuilder() {
                if (this.stToUserBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stToUserBuilder_.getMessageOrBuilder();
                }
                return this.stToUser_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStToUserFieldBuilder() {
                if (this.stToUserBuilder_ == null) {
                    this.stToUserBuilder_ = new SingleFieldBuilder(getStToUser(), getParentForChildren(), isClean());
                    this.stToUser_ = null;
                }
                return this.stToUserBuilder_;
            }

            public final boolean hasStChatRoomBaseInfo() {
                return (this.bitField0_ & 64) == 64;
            }

            public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    return this.stChatRoomBaseInfo_;
                }
                return (ChatRoomBaseInfo) this.stChatRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo) {
                if (this.stChatRoomBaseInfoBuilder_ != null) {
                    this.stChatRoomBaseInfoBuilder_.setMessage(chatRoomBaseInfo);
                } else if (chatRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stChatRoomBaseInfo_ = chatRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder setStChatRoomBaseInfo(Builder builder) {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder mergeStChatRoomBaseInfo(ChatRoomBaseInfo chatRoomBaseInfo) {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 64) != 64 || this.stChatRoomBaseInfo_ == ChatRoomBaseInfo.getDefaultInstance()) {
                        this.stChatRoomBaseInfo_ = chatRoomBaseInfo;
                    } else {
                        this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.newBuilder(this.stChatRoomBaseInfo_).mergeFrom(chatRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.mergeFrom(chatRoomBaseInfo);
                }
                this.bitField0_ |= 64;
                return this;
            }

            public final Builder clearStChatRoomBaseInfo() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stChatRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -65;
                return this;
            }

            public final Builder getStChatRoomBaseInfoBuilder() {
                this.bitField0_ |= 64;
                onChanged();
                return (Builder) getStChatRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
                if (this.stChatRoomBaseInfoBuilder_ != null) {
                    return (ChatRoomBaseInfoOrBuilder) this.stChatRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stChatRoomBaseInfo_;
            }

            private SingleFieldBuilder<ChatRoomBaseInfo, Builder, ChatRoomBaseInfoOrBuilder> getStChatRoomBaseInfoFieldBuilder() {
                if (this.stChatRoomBaseInfoBuilder_ == null) {
                    this.stChatRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStChatRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stChatRoomBaseInfo_ = null;
                }
                return this.stChatRoomBaseInfoBuilder_;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -129;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStCluBasebInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
            }

            public final ClubBaseInfo getStCluBasebInfo() {
                if (this.stCluBasebInfoBuilder_ == null) {
                    return this.stCluBasebInfo_;
                }
                return (ClubBaseInfo) this.stCluBasebInfoBuilder_.getMessage();
            }

            public final Builder setStCluBasebInfo(ClubBaseInfo clubBaseInfo) {
                if (this.stCluBasebInfoBuilder_ != null) {
                    this.stCluBasebInfoBuilder_.setMessage(clubBaseInfo);
                } else if (clubBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stCluBasebInfo_ = clubBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder setStCluBasebInfo(com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder builder) {
                if (this.stCluBasebInfoBuilder_ == null) {
                    this.stCluBasebInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stCluBasebInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder mergeStCluBasebInfo(ClubBaseInfo clubBaseInfo) {
                if (this.stCluBasebInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) != AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY || this.stCluBasebInfo_ == ClubBaseInfo.getDefaultInstance()) {
                        this.stCluBasebInfo_ = clubBaseInfo;
                    } else {
                        this.stCluBasebInfo_ = ClubBaseInfo.newBuilder(this.stCluBasebInfo_).mergeFrom(clubBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stCluBasebInfoBuilder_.mergeFrom(clubBaseInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                return this;
            }

            public final Builder clearStCluBasebInfo() {
                if (this.stCluBasebInfoBuilder_ == null) {
                    this.stCluBasebInfo_ = ClubBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stCluBasebInfoBuilder_.clear();
                }
                this.bitField0_ &= -257;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder getStCluBasebInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder) getStCluBasebInfoFieldBuilder().getBuilder();
            }

            public final ClubBaseInfoOrBuilder getStCluBasebInfoOrBuilder() {
                if (this.stCluBasebInfoBuilder_ != null) {
                    return (ClubBaseInfoOrBuilder) this.stCluBasebInfoBuilder_.getMessageOrBuilder();
                }
                return this.stCluBasebInfo_;
            }

            private SingleFieldBuilder<ClubBaseInfo, com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder, ClubBaseInfoOrBuilder> getStCluBasebInfoFieldBuilder() {
                if (this.stCluBasebInfoBuilder_ == null) {
                    this.stCluBasebInfoBuilder_ = new SingleFieldBuilder(getStCluBasebInfo(), getParentForChildren(), isClean());
                    this.stCluBasebInfo_ = null;
                }
                return this.stCluBasebInfoBuilder_;
            }

            public final boolean hasSMsg() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
            }

            public final String getSMsg() {
                Object obj = this.sMsg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sMsg_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSMsgBytes() {
                Object obj = this.sMsg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sMsg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSMsg(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sMsg_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSMsg() {
                this.bitField0_ &= -513;
                this.sMsg_ = PushMsg.getDefaultInstance().getSMsg();
                onChanged();
                return this;
            }

            public final Builder setSMsgBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                this.sMsg_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasVVoiceDatas() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
            }

            public final ByteString getVVoiceDatas() {
                return this.vVoiceDatas_;
            }

            public final Builder setVVoiceDatas(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                this.vVoiceDatas_ = byteString;
                onChanged();
                return this;
            }

            public final Builder clearVVoiceDatas() {
                this.bitField0_ &= -1025;
                this.vVoiceDatas_ = PushMsg.getDefaultInstance().getVVoiceDatas();
                onChanged();
                return this;
            }

            public final boolean hasStShareBillInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
            }

            public final ShareBillInfoNet getStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    return this.stShareBillInfo_;
                }
                return (ShareBillInfoNet) this.stShareBillInfoBuilder_.getMessage();
            }

            public final Builder setStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ != null) {
                    this.stShareBillInfoBuilder_.setMessage(shareBillInfoNet);
                } else if (shareBillInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stShareBillInfo_ = shareBillInfoNet;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder setStShareBillInfo(com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder builder) {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder mergeStShareBillInfo(ShareBillInfoNet shareBillInfoNet) {
                if (this.stShareBillInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) != AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT || this.stShareBillInfo_ == ShareBillInfoNet.getDefaultInstance()) {
                        this.stShareBillInfo_ = shareBillInfoNet;
                    } else {
                        this.stShareBillInfo_ = ShareBillInfoNet.newBuilder(this.stShareBillInfo_).mergeFrom(shareBillInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.mergeFrom(shareBillInfoNet);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                return this;
            }

            public final Builder clearStShareBillInfo() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stShareBillInfoBuilder_.clear();
                }
                this.bitField0_ &= -2049;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder getStShareBillInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                onChanged();
                return (com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder) getStShareBillInfoFieldBuilder().getBuilder();
            }

            public final ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder() {
                if (this.stShareBillInfoBuilder_ != null) {
                    return (ShareBillInfoNetOrBuilder) this.stShareBillInfoBuilder_.getMessageOrBuilder();
                }
                return this.stShareBillInfo_;
            }

            private SingleFieldBuilder<ShareBillInfoNet, com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder, ShareBillInfoNetOrBuilder> getStShareBillInfoFieldBuilder() {
                if (this.stShareBillInfoBuilder_ == null) {
                    this.stShareBillInfoBuilder_ = new SingleFieldBuilder(getStShareBillInfo(), getParentForChildren(), isClean());
                    this.stShareBillInfo_ = null;
                }
                return this.stShareBillInfoBuilder_;
            }

            public final boolean hasStPokerProcessBaseInfo() {
                return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
            }

            public final PokerProcessInfo getStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    return this.stPokerProcessBaseInfo_;
                }
                return (PokerProcessInfo) this.stPokerProcessBaseInfoBuilder_.getMessage();
            }

            public final Builder setStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(pokerProcessInfo);
                } else if (pokerProcessInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    onChanged();
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder setStPokerProcessBaseInfo(com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder builder) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder mergeStPokerProcessBaseInfo(PokerProcessInfo pokerProcessInfo) {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) != CodedOutputStream.DEFAULT_BUFFER_SIZE || this.stPokerProcessBaseInfo_ == PokerProcessInfo.getDefaultInstance()) {
                        this.stPokerProcessBaseInfo_ = pokerProcessInfo;
                    } else {
                        this.stPokerProcessBaseInfo_ = PokerProcessInfo.newBuilder(this.stPokerProcessBaseInfo_).mergeFrom(pokerProcessInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.mergeFrom(pokerProcessInfo);
                }
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                return this;
            }

            public final Builder clearStPokerProcessBaseInfo() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stPokerProcessBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -4097;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder getStPokerProcessBaseInfoBuilder() {
                this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder) getStPokerProcessBaseInfoFieldBuilder().getBuilder();
            }

            public final PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ != null) {
                    return (PokerProcessInfoOrBuilder) this.stPokerProcessBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stPokerProcessBaseInfo_;
            }

            private SingleFieldBuilder<PokerProcessInfo, com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder, PokerProcessInfoOrBuilder> getStPokerProcessBaseInfoFieldBuilder() {
                if (this.stPokerProcessBaseInfoBuilder_ == null) {
                    this.stPokerProcessBaseInfoBuilder_ = new SingleFieldBuilder(getStPokerProcessBaseInfo(), getParentForChildren(), isClean());
                    this.stPokerProcessBaseInfo_ = null;
                }
                return this.stPokerProcessBaseInfoBuilder_;
            }

            public final boolean hasStrPicUrl() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
            }

            public final String getStrPicUrl() {
                Object obj = this.strPicUrl_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.strPicUrl_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getStrPicUrlBytes() {
                Object obj = this.strPicUrl_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.strPicUrl_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setStrPicUrl(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                this.strPicUrl_ = str;
                onChanged();
                return this;
            }

            public final Builder clearStrPicUrl() {
                this.bitField0_ &= -8193;
                this.strPicUrl_ = PushMsg.getDefaultInstance().getStrPicUrl();
                onChanged();
                return this;
            }

            public final Builder setStrPicUrlBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                this.strPicUrl_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasLCreateTime() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
            }

            public final long getLCreateTime() {
                return this.lCreateTime_;
            }

            public final Builder setLCreateTime(long j) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                this.lCreateTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLCreateTime() {
                this.bitField0_ &= -16385;
                this.lCreateTime_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLDuration() {
                return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
            }

            public final long getLDuration() {
                return this.lDuration_;
            }

            public final Builder setLDuration(long j) {
                this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                this.lDuration_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLDuration() {
                this.bitField0_ &= -32769;
                this.lDuration_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIMute() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
            }

            public final int getIMute() {
                return this.iMute_;
            }

            public final Builder setIMute(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                this.iMute_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIMute() {
                this.bitField0_ &= -65537;
                this.iMute_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasIVibrate() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
            }

            public final int getIVibrate() {
                return this.iVibrate_;
            }

            public final Builder setIVibrate(int i) {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                this.iVibrate_ = i;
                onChanged();
                return this;
            }

            public final Builder clearIVibrate() {
                this.bitField0_ &= -131073;
                this.iVibrate_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStNetPageShareInfoNet() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND;
            }

            public final NetPageShareInfoNet getStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    return this.stNetPageShareInfoNet_;
                }
                return (NetPageShareInfoNet) this.stNetPageShareInfoNetBuilder_.getMessage();
            }

            public final Builder setStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    this.stNetPageShareInfoNetBuilder_.setMessage(netPageShareInfoNet);
                } else if (netPageShareInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                return this;
            }

            public final Builder setStNetPageShareInfoNet(Builder builder) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                return this;
            }

            public final Builder mergeStNetPageShareInfoNet(NetPageShareInfoNet netPageShareInfoNet) {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) != AccessibilityNodeInfoCompat.ACTION_EXPAND || this.stNetPageShareInfoNet_ == NetPageShareInfoNet.getDefaultInstance()) {
                        this.stNetPageShareInfoNet_ = netPageShareInfoNet;
                    } else {
                        this.stNetPageShareInfoNet_ = NetPageShareInfoNet.newBuilder(this.stNetPageShareInfoNet_).mergeFrom(netPageShareInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.mergeFrom(netPageShareInfoNet);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                return this;
            }

            public final Builder clearStNetPageShareInfoNet() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stNetPageShareInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -262145;
                return this;
            }

            public final Builder getStNetPageShareInfoNetBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                onChanged();
                return (Builder) getStNetPageShareInfoNetFieldBuilder().getBuilder();
            }

            public final NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ != null) {
                    return (NetPageShareInfoNetOrBuilder) this.stNetPageShareInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stNetPageShareInfoNet_;
            }

            private SingleFieldBuilder<NetPageShareInfoNet, Builder, NetPageShareInfoNetOrBuilder> getStNetPageShareInfoNetFieldBuilder() {
                if (this.stNetPageShareInfoNetBuilder_ == null) {
                    this.stNetPageShareInfoNetBuilder_ = new SingleFieldBuilder(getStNetPageShareInfoNet(), getParentForChildren(), isClean());
                    this.stNetPageShareInfoNet_ = null;
                }
                return this.stNetPageShareInfoNetBuilder_;
            }

            public final boolean hasStSharePokerHistoryInfo() {
                return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
            }

            public final SharePokerHistoryInfo getStSharePokerHistoryInfo() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    return this.stSharePokerHistoryInfo_;
                }
                return (SharePokerHistoryInfo) this.stSharePokerHistoryInfoBuilder_.getMessage();
            }

            public final Builder setStSharePokerHistoryInfo(SharePokerHistoryInfo sharePokerHistoryInfo) {
                if (this.stSharePokerHistoryInfoBuilder_ != null) {
                    this.stSharePokerHistoryInfoBuilder_.setMessage(sharePokerHistoryInfo);
                } else if (sharePokerHistoryInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stSharePokerHistoryInfo_ = sharePokerHistoryInfo;
                    onChanged();
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                return this;
            }

            public final Builder setStSharePokerHistoryInfo(com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder builder) {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                return this;
            }

            public final Builder mergeStSharePokerHistoryInfo(SharePokerHistoryInfo sharePokerHistoryInfo) {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) != AccessibilityNodeInfoCompat.ACTION_COLLAPSE || this.stSharePokerHistoryInfo_ == SharePokerHistoryInfo.getDefaultInstance()) {
                        this.stSharePokerHistoryInfo_ = sharePokerHistoryInfo;
                    } else {
                        this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.newBuilder(this.stSharePokerHistoryInfo_).mergeFrom(sharePokerHistoryInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.mergeFrom(sharePokerHistoryInfo);
                }
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                return this;
            }

            public final Builder clearStSharePokerHistoryInfo() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stSharePokerHistoryInfoBuilder_.clear();
                }
                this.bitField0_ &= -524289;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder getStSharePokerHistoryInfoBuilder() {
                this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder) getStSharePokerHistoryInfoFieldBuilder().getBuilder();
            }

            public final SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder() {
                if (this.stSharePokerHistoryInfoBuilder_ != null) {
                    return (SharePokerHistoryInfoOrBuilder) this.stSharePokerHistoryInfoBuilder_.getMessageOrBuilder();
                }
                return this.stSharePokerHistoryInfo_;
            }

            private SingleFieldBuilder<SharePokerHistoryInfo, com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder, SharePokerHistoryInfoOrBuilder> getStSharePokerHistoryInfoFieldBuilder() {
                if (this.stSharePokerHistoryInfoBuilder_ == null) {
                    this.stSharePokerHistoryInfoBuilder_ = new SingleFieldBuilder(getStSharePokerHistoryInfo(), getParentForChildren(), isClean());
                    this.stSharePokerHistoryInfo_ = null;
                }
                return this.stSharePokerHistoryInfoBuilder_;
            }

            private void ensureVExtrasIsMutable() {
                if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_DISMISS) != AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                    this.vExtras_ = new LazyStringArrayList(this.vExtras_);
                    this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                }
            }

            public final ProtocolStringList getVExtrasList() {
                return this.vExtras_.getUnmodifiableView();
            }

            public final int getVExtrasCount() {
                return this.vExtras_.size();
            }

            public final String getVExtras(int i) {
                return (String) this.vExtras_.get(i);
            }

            public final ByteString getVExtrasBytes(int i) {
                return this.vExtras_.getByteString(i);
            }

            public final Builder setVExtras(int i, String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.set(i, str);
                onChanged();
                return this;
            }

            public final Builder addVExtras(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.add(str);
                onChanged();
                return this;
            }

            public final Builder addAllVExtras(Iterable<String> iterable) {
                ensureVExtrasIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vExtras_);
                onChanged();
                return this;
            }

            public final Builder clearVExtras() {
                this.vExtras_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -1048577;
                onChanged();
                return this;
            }

            public final Builder addVExtrasBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                ensureVExtrasIsMutable();
                this.vExtras_.add(byteString);
                onChanged();
                return this;
            }
        }

        private PushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private PushMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static PushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final PushMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            int i = 0;
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                    ByteString readBytes;
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LMSGID_FIELD_NUMBER;
                            break;
                        case LGAMEROOMID_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case LDURATION_FIELD_NUMBER /*16*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_TYPE valueOf = CHAT_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= ETALKTYPE_FIELD_NUMBER;
                                this.eTalkType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ETALKTYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            CHAT_MESSAGE_TYPE valueOf2 = CHAT_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= BCHATROOM_FIELD_NUMBER;
                                this.eChatMessageType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(ECHATMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.bChatRoom_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            if ((this.bitField0_ & LDURATION_FIELD_NUMBER) == LDURATION_FIELD_NUMBER) {
                                toBuilder = this.stFromUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stFromUser_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stFromUser_);
                                this.stFromUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= LDURATION_FIELD_NUMBER;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            if ((this.bitField0_ & 32) == 32) {
                                toBuilder = this.stToUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stToUser_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stToUser_);
                                this.stToUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= 32;
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 64) == 64) {
                                toBuilder2 = this.stChatRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) codedInputStream.readMessage(ChatRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stChatRoomBaseInfo_);
                                this.stChatRoomBaseInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 64;
                            break;
                        case R.AppCompatTheme_editTextBackground /*64*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_listPreferredItemPaddingRight /*74*/:
                            com.texaspoker.moment.TexasPokerCommon.ClubBaseInfo.Builder toBuilder3;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                                toBuilder3 = this.stCluBasebInfo_.toBuilder();
                            } else {
                                toBuilder3 = null;
                            }
                            this.stCluBasebInfo_ = (ClubBaseInfo) codedInputStream.readMessage(ClubBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder3 != null) {
                                toBuilder3.mergeFrom(this.stCluBasebInfo_);
                                this.stCluBasebInfo_ = toBuilder3.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
                            break;
                        case R.AppCompatTheme_listChoiceBackgroundIndicator /*82*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
                            this.sMsg_ = readBytes;
                            break;
                        case R.AppCompatTheme_colorSwitchThumbNormal /*90*/:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
                            this.vVoiceDatas_ = codedInputStream.readBytes();
                            break;
                        case R.AppCompatTheme_buttonBarPositiveButtonStyle /*98*/:
                            com.texaspoker.moment.TexasPokerHttpBill.ShareBillInfoNet.Builder toBuilder4;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                                toBuilder4 = this.stShareBillInfo_.toBuilder();
                            } else {
                                toBuilder4 = null;
                            }
                            this.stShareBillInfo_ = (ShareBillInfoNet) codedInputStream.readMessage(ShareBillInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder4 != null) {
                                toBuilder4.mergeFrom(this.stShareBillInfo_);
                                this.stShareBillInfo_ = toBuilder4.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
                            break;
                        case R.AppCompatTheme_editTextStyle /*106*/:
                            com.texaspoker.moment.TexasPokerCommon.PokerProcessInfo.Builder toBuilder5;
                            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                                toBuilder5 = this.stPokerProcessBaseInfo_.toBuilder();
                            } else {
                                toBuilder5 = null;
                            }
                            this.stPokerProcessBaseInfo_ = (PokerProcessInfo) codedInputStream.readMessage(PokerProcessInfo.PARSER, extensionRegistryLite);
                            if (toBuilder5 != null) {
                                toBuilder5.mergeFrom(this.stPokerProcessBaseInfo_);
                                this.stPokerProcessBaseInfo_ = toBuilder5.buildPartial();
                            }
                            this.bitField0_ |= CodedOutputStream.DEFAULT_BUFFER_SIZE;
                            break;
                        case R.AppCompatTheme_listMenuViewStyle /*114*/:
                            readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
                            this.strPicUrl_ = readBytes;
                            break;
                        case 120:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COPY;
                            this.lCreateTime_ = codedInputStream.readInt64();
                            break;
                        case AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS /*128*/:
                            this.bitField0_ |= WXMediaMessage.THUMB_LENGTH_LIMIT;
                            this.lDuration_ = codedInputStream.readInt64();
                            break;
                        case 136:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_CUT;
                            this.iMute_ = codedInputStream.readInt32();
                            break;
                        case 144:
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
                            this.iVibrate_ = codedInputStream.readInt32();
                            break;
                        case 154:
                            Builder toBuilder6;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                                toBuilder6 = this.stNetPageShareInfoNet_.toBuilder();
                            } else {
                                toBuilder6 = null;
                            }
                            this.stNetPageShareInfoNet_ = (NetPageShareInfoNet) codedInputStream.readMessage(NetPageShareInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder6 != null) {
                                toBuilder6.mergeFrom(this.stNetPageShareInfoNet_);
                                this.stNetPageShareInfoNet_ = toBuilder6.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_EXPAND;
                            break;
                        case 162:
                            com.texaspoker.moment.TexasPokerCommon.SharePokerHistoryInfo.Builder toBuilder7;
                            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                                toBuilder7 = this.stSharePokerHistoryInfo_.toBuilder();
                            } else {
                                toBuilder7 = null;
                            }
                            this.stSharePokerHistoryInfo_ = (SharePokerHistoryInfo) codedInputStream.readMessage(SharePokerHistoryInfo.PARSER, extensionRegistryLite);
                            if (toBuilder7 != null) {
                                toBuilder7.mergeFrom(this.stSharePokerHistoryInfo_);
                                this.stSharePokerHistoryInfo_ = toBuilder7.buildPartial();
                            }
                            this.bitField0_ |= AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
                            break;
                        case 170:
                            readBytes = codedInputStream.readBytes();
                            if ((i & AccessibilityNodeInfoCompat.ACTION_DISMISS) != AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                                this.vExtras_ = new LazyStringArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_DISMISS;
                            }
                            this.vExtras_.add(readBytes);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LMSGID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                        this.vExtras_ = this.vExtras_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_DISMISS) == AccessibilityNodeInfoCompat.ACTION_DISMISS) {
                this.vExtras_ = this.vExtras_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eK;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eL.ensureFieldAccessorsInitialized(PushMsg.class, Builder.class);
        }

        static {
            PARSER = new C12461();
            PushMsg pushMsg = new PushMsg(true);
            defaultInstance = pushMsg;
            pushMsg.initFields();
        }

        public final Parser<PushMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasETalkType() {
            return (this.bitField0_ & ETALKTYPE_FIELD_NUMBER) == ETALKTYPE_FIELD_NUMBER;
        }

        public final CHAT_TYPE getETalkType() {
            return this.eTalkType_;
        }

        public final boolean hasEChatMessageType() {
            return (this.bitField0_ & BCHATROOM_FIELD_NUMBER) == BCHATROOM_FIELD_NUMBER;
        }

        public final CHAT_MESSAGE_TYPE getEChatMessageType() {
            return this.eChatMessageType_;
        }

        public final boolean hasBChatRoom() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final int getBChatRoom() {
            return this.bChatRoom_;
        }

        public final boolean hasStFromUser() {
            return (this.bitField0_ & LDURATION_FIELD_NUMBER) == LDURATION_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStFromUser() {
            return this.stFromUser_;
        }

        public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
            return this.stFromUser_;
        }

        public final boolean hasStToUser() {
            return (this.bitField0_ & 32) == 32;
        }

        public final UserBaseInfoNet getStToUser() {
            return this.stToUser_;
        }

        public final UserBaseInfoNetOrBuilder getStToUserOrBuilder() {
            return this.stToUser_;
        }

        public final boolean hasStChatRoomBaseInfo() {
            return (this.bitField0_ & 64) == 64;
        }

        public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
            return this.stChatRoomBaseInfo_;
        }

        public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
            return this.stChatRoomBaseInfo_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasStCluBasebInfo() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
        }

        public final ClubBaseInfo getStCluBasebInfo() {
            return this.stCluBasebInfo_;
        }

        public final ClubBaseInfoOrBuilder getStCluBasebInfoOrBuilder() {
            return this.stCluBasebInfo_;
        }

        public final boolean hasSMsg() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
        }

        public final String getSMsg() {
            Object obj = this.sMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSMsgBytes() {
            Object obj = this.sMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasVVoiceDatas() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT;
        }

        public final ByteString getVVoiceDatas() {
            return this.vVoiceDatas_;
        }

        public final boolean hasStShareBillInfo() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT;
        }

        public final ShareBillInfoNet getStShareBillInfo() {
            return this.stShareBillInfo_;
        }

        public final ShareBillInfoNetOrBuilder getStShareBillInfoOrBuilder() {
            return this.stShareBillInfo_;
        }

        public final boolean hasStPokerProcessBaseInfo() {
            return (this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE;
        }

        public final PokerProcessInfo getStPokerProcessBaseInfo() {
            return this.stPokerProcessBaseInfo_;
        }

        public final PokerProcessInfoOrBuilder getStPokerProcessBaseInfoOrBuilder() {
            return this.stPokerProcessBaseInfo_;
        }

        public final boolean hasStrPicUrl() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD;
        }

        public final String getStrPicUrl() {
            Object obj = this.strPicUrl_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.strPicUrl_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getStrPicUrlBytes() {
            Object obj = this.strPicUrl_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.strPicUrl_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLCreateTime() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY;
        }

        public final long getLCreateTime() {
            return this.lCreateTime_;
        }

        public final boolean hasLDuration() {
            return (this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT;
        }

        public final long getLDuration() {
            return this.lDuration_;
        }

        public final boolean hasIMute() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT;
        }

        public final int getIMute() {
            return this.iMute_;
        }

        public final boolean hasIVibrate() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION;
        }

        public final int getIVibrate() {
            return this.iVibrate_;
        }

        public final boolean hasStNetPageShareInfoNet() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND;
        }

        public final NetPageShareInfoNet getStNetPageShareInfoNet() {
            return this.stNetPageShareInfoNet_;
        }

        public final NetPageShareInfoNetOrBuilder getStNetPageShareInfoNetOrBuilder() {
            return this.stNetPageShareInfoNet_;
        }

        public final boolean hasStSharePokerHistoryInfo() {
            return (this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE;
        }

        public final SharePokerHistoryInfo getStSharePokerHistoryInfo() {
            return this.stSharePokerHistoryInfo_;
        }

        public final SharePokerHistoryInfoOrBuilder getStSharePokerHistoryInfoOrBuilder() {
            return this.stSharePokerHistoryInfo_;
        }

        public final ProtocolStringList getVExtrasList() {
            return this.vExtras_;
        }

        public final int getVExtrasCount() {
            return this.vExtras_.size();
        }

        public final String getVExtras(int i) {
            return (String) this.vExtras_.get(i);
        }

        public final ByteString getVExtrasBytes(int i) {
            return this.vExtras_.getByteString(i);
        }

        private void initFields() {
            this.lMsgID_ = 0;
            this.eTalkType_ = CHAT_TYPE.CHAT_TYPE_SINGLE;
            this.eChatMessageType_ = CHAT_MESSAGE_TYPE.CHAT_MESSAGE_TYPE_TEXT;
            this.bChatRoom_ = 0;
            this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
            this.stToUser_ = UserBaseInfoNet.getDefaultInstance();
            this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
            this.lGameRoomID_ = 0;
            this.stCluBasebInfo_ = ClubBaseInfo.getDefaultInstance();
            this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.vVoiceDatas_ = ByteString.EMPTY;
            this.stShareBillInfo_ = ShareBillInfoNet.getDefaultInstance();
            this.stPokerProcessBaseInfo_ = PokerProcessInfo.getDefaultInstance();
            this.strPicUrl_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lCreateTime_ = 0;
            this.lDuration_ = 0;
            this.iMute_ = 0;
            this.iVibrate_ = 0;
            this.stNetPageShareInfoNet_ = NetPageShareInfoNet.getDefaultInstance();
            this.stSharePokerHistoryInfo_ = SharePokerHistoryInfo.getDefaultInstance();
            this.vExtras_ = LazyStringArrayList.EMPTY;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLMsgID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasETalkType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEChatMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStFromUser() && !getStFromUser().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStToUser() && !getStToUser().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStChatRoomBaseInfo() && !getStChatRoomBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStCluBasebInfo() && !getStCluBasebInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStShareBillInfo() && !getStShareBillInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStPokerProcessBaseInfo() && !getStPokerProcessBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStNetPageShareInfoNet() && !getStNetPageShareInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStSharePokerHistoryInfo() || getStSharePokerHistoryInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & ETALKTYPE_FIELD_NUMBER) == ETALKTYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ETALKTYPE_FIELD_NUMBER, this.eTalkType_.getNumber());
            }
            if ((this.bitField0_ & BCHATROOM_FIELD_NUMBER) == BCHATROOM_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ECHATMESSAGETYPE_FIELD_NUMBER, this.eChatMessageType_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt32(BCHATROOM_FIELD_NUMBER, this.bChatRoom_);
            }
            if ((this.bitField0_ & LDURATION_FIELD_NUMBER) == LDURATION_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeMessage(STTOUSER_FIELD_NUMBER, this.stToUser_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeMessage(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeMessage(STCLUBASEBINFO_FIELD_NUMBER, this.stCluBasebInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                codedOutputStream.writeBytes(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                codedOutputStream.writeBytes(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                codedOutputStream.writeMessage(STSHAREBILLINFO_FIELD_NUMBER, this.stShareBillInfo_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                codedOutputStream.writeMessage(STPOKERPROCESSBASEINFO_FIELD_NUMBER, this.stPokerProcessBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                codedOutputStream.writeBytes(STRPICURL_FIELD_NUMBER, getStrPicUrlBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                codedOutputStream.writeInt64(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                codedOutputStream.writeInt64(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                codedOutputStream.writeInt32(IMUTE_FIELD_NUMBER, this.iMute_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                codedOutputStream.writeInt32(IVIBRATE_FIELD_NUMBER, this.iVibrate_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                codedOutputStream.writeMessage(STNETPAGESHAREINFONET_FIELD_NUMBER, this.stNetPageShareInfoNet_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                codedOutputStream.writeMessage(STSHAREPOKERHISTORYINFO_FIELD_NUMBER, this.stSharePokerHistoryInfo_);
            }
            for (int i = 0; i < this.vExtras_.size(); i += LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeBytes(VEXTRAS_FIELD_NUMBER, this.vExtras_.getByteString(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & ETALKTYPE_FIELD_NUMBER) == ETALKTYPE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(ETALKTYPE_FIELD_NUMBER, this.eTalkType_.getNumber());
            }
            if ((this.bitField0_ & BCHATROOM_FIELD_NUMBER) == BCHATROOM_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(ECHATMESSAGETYPE_FIELD_NUMBER, this.eChatMessageType_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt32Size(BCHATROOM_FIELD_NUMBER, this.bChatRoom_);
            }
            if ((this.bitField0_ & LDURATION_FIELD_NUMBER) == LDURATION_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeMessageSize(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeMessageSize(STTOUSER_FIELD_NUMBER, this.stToUser_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeMessageSize(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                i2 += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_NEXT_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeMessageSize(STCLUBASEBINFO_FIELD_NUMBER, this.stCluBasebInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY) {
                i2 += CodedOutputStream.computeBytesSize(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_NEXT_HTML_ELEMENT) {
                i2 += CodedOutputStream.computeBytesSize(VVOICEDATAS_FIELD_NUMBER, this.vVoiceDatas_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) == AccessibilityNodeInfoCompat.ACTION_PREVIOUS_HTML_ELEMENT) {
                i2 += CodedOutputStream.computeMessageSize(STSHAREBILLINFO_FIELD_NUMBER, this.stShareBillInfo_);
            }
            if ((this.bitField0_ & CodedOutputStream.DEFAULT_BUFFER_SIZE) == CodedOutputStream.DEFAULT_BUFFER_SIZE) {
                i2 += CodedOutputStream.computeMessageSize(STPOKERPROCESSBASEINFO_FIELD_NUMBER, this.stPokerProcessBaseInfo_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) == AccessibilityNodeInfoCompat.ACTION_SCROLL_BACKWARD) {
                i2 += CodedOutputStream.computeBytesSize(STRPICURL_FIELD_NUMBER, getStrPicUrlBytes());
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COPY) == AccessibilityNodeInfoCompat.ACTION_COPY) {
                i2 += CodedOutputStream.computeInt64Size(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & WXMediaMessage.THUMB_LENGTH_LIMIT) == WXMediaMessage.THUMB_LENGTH_LIMIT) {
                i2 += CodedOutputStream.computeInt64Size(LDURATION_FIELD_NUMBER, this.lDuration_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_CUT) == AccessibilityNodeInfoCompat.ACTION_CUT) {
                i2 += CodedOutputStream.computeInt32Size(IMUTE_FIELD_NUMBER, this.iMute_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) == AccessibilityNodeInfoCompat.ACTION_SET_SELECTION) {
                i2 += CodedOutputStream.computeInt32Size(IVIBRATE_FIELD_NUMBER, this.iVibrate_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_EXPAND) == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
                i2 += CodedOutputStream.computeMessageSize(STNETPAGESHAREINFONET_FIELD_NUMBER, this.stNetPageShareInfoNet_);
            }
            if ((this.bitField0_ & AccessibilityNodeInfoCompat.ACTION_COLLAPSE) == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
                i2 += CodedOutputStream.computeMessageSize(STSHAREPOKERHISTORYINFO_FIELD_NUMBER, this.stSharePokerHistoryInfo_);
            }
            int i3 = 0;
            while (i < this.vExtras_.size()) {
                i3 += CodedOutputStream.computeBytesSizeNoTag(this.vExtras_.getByteString(i));
                i += LMSGID_FIELD_NUMBER;
            }
            i2 = ((i2 + i3) + (getVExtrasList().size() * ETALKTYPE_FIELD_NUMBER)) + getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static PushMsg parseFrom(ByteString byteString) {
            return (PushMsg) PARSER.parseFrom(byteString);
        }

        public static PushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (PushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PushMsg parseFrom(byte[] bArr) {
            return (PushMsg) PARSER.parseFrom(bArr);
        }

        public static PushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (PushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PushMsg parseFrom(InputStream inputStream) {
            return (PushMsg) PARSER.parseFrom(inputStream);
        }

        public static PushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static PushMsg parseDelimitedFrom(InputStream inputStream) {
            return (PushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static PushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static PushMsg parseFrom(CodedInputStream codedInputStream) {
            return (PushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static PushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (PushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(PushMsg pushMsg) {
            return newBuilder().mergeFrom(pushMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public enum QUICK_GAME_ROOM_MESSAGE_TYPE implements ProtocolMessageEnum {
        ;
        
        public static final int QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE = 1;
        public static final int QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE = 4;
        public static final int QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE = 2;
        public static final int QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE = 3;
        public static final int QUICK_GAME_ROOM_MESSAGE_STARTGAME_VALUE = 5;
        private static final QUICK_GAME_ROOM_MESSAGE_TYPE[] VALUES = null;
        private static EnumLiteMap<QUICK_GAME_ROOM_MESSAGE_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.QUICK_GAME_ROOM_MESSAGE_TYPE.1 */
        class C12471 implements EnumLiteMap<QUICK_GAME_ROOM_MESSAGE_TYPE> {
            C12471() {
            }

            public final /* synthetic */ EnumLite findValueByNumber(int i) {
                return QUICK_GAME_ROOM_MESSAGE_TYPE.valueOf(i);
            }
        }

        static {
            fixHelper.fixfunc(new int[]{2945, 2946, 2947, 2948});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native QUICK_GAME_ROOM_MESSAGE_TYPE(int i, int i2);

        public final native EnumDescriptor getDescriptorForType();

        public final native int getNumber();

        public final native EnumValueDescriptor getValueDescriptor();

        static void __clinit__() {
            QUICK_GAME_ROOM_MESSAGE_ENTER = new QUICK_GAME_ROOM_MESSAGE_TYPE("QUICK_GAME_ROOM_MESSAGE_ENTER", 0, 0, QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE);
            QUICK_GAME_ROOM_MESSAGE_QUIT = new QUICK_GAME_ROOM_MESSAGE_TYPE("QUICK_GAME_ROOM_MESSAGE_QUIT", QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE, QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE, QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE);
            QUICK_GAME_ROOM_MESSAGE_REMOVEROOM = new QUICK_GAME_ROOM_MESSAGE_TYPE("QUICK_GAME_ROOM_MESSAGE_REMOVEROOM", QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE, QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE, QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE);
            QUICK_GAME_ROOM_MESSAGE_FINISH = new QUICK_GAME_ROOM_MESSAGE_TYPE("QUICK_GAME_ROOM_MESSAGE_FINISH", QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE, QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE, QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE);
            QUICK_GAME_ROOM_MESSAGE_STARTGAME = new QUICK_GAME_ROOM_MESSAGE_TYPE("QUICK_GAME_ROOM_MESSAGE_STARTGAME", QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE, QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE, QUICK_GAME_ROOM_MESSAGE_STARTGAME_VALUE);
            QUICK_GAME_ROOM_MESSAGE_TYPE[] quick_game_room_message_typeArr = new QUICK_GAME_ROOM_MESSAGE_TYPE[QUICK_GAME_ROOM_MESSAGE_STARTGAME_VALUE];
            quick_game_room_message_typeArr[0] = QUICK_GAME_ROOM_MESSAGE_ENTER;
            quick_game_room_message_typeArr[QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE] = QUICK_GAME_ROOM_MESSAGE_QUIT;
            quick_game_room_message_typeArr[QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE] = QUICK_GAME_ROOM_MESSAGE_REMOVEROOM;
            quick_game_room_message_typeArr[QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE] = QUICK_GAME_ROOM_MESSAGE_FINISH;
            quick_game_room_message_typeArr[QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE] = QUICK_GAME_ROOM_MESSAGE_STARTGAME;
            ENUM$VALUES = quick_game_room_message_typeArr;
            internalValueMap = new C12471();
            VALUES = values();
        }

        public static QUICK_GAME_ROOM_MESSAGE_TYPE valueOf(int i) {
            switch (i) {
                case QUICK_GAME_ROOM_MESSAGE_ENTER_VALUE:
                    return QUICK_GAME_ROOM_MESSAGE_ENTER;
                case QUICK_GAME_ROOM_MESSAGE_QUIT_VALUE:
                    return QUICK_GAME_ROOM_MESSAGE_QUIT;
                case QUICK_GAME_ROOM_MESSAGE_REMOVEROOM_VALUE:
                    return QUICK_GAME_ROOM_MESSAGE_REMOVEROOM;
                case QUICK_GAME_ROOM_MESSAGE_FINISH_VALUE:
                    return QUICK_GAME_ROOM_MESSAGE_FINISH;
                case QUICK_GAME_ROOM_MESSAGE_STARTGAME_VALUE:
                    return QUICK_GAME_ROOM_MESSAGE_STARTGAME;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<QUICK_GAME_ROOM_MESSAGE_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(9);
        }

        public static QUICK_GAME_ROOM_MESSAGE_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
    }

    public enum QUICK_GAME_ROOM_STATUS implements ProtocolMessageEnum {
        QUICK_GAME_ROOM_NOTSTART(0, QUICK_GAME_ROOM_NOTSTART_VALUE),
        QUICK_GAME_ROOM_START(QUICK_GAME_ROOM_NOTSTART_VALUE, QUICK_GAME_ROOM_START_VALUE),
        QUICK_GAME_ROOM_FINISH(QUICK_GAME_ROOM_START_VALUE, QUICK_GAME_ROOM_FINISH_VALUE);
        
        public static final int QUICK_GAME_ROOM_FINISH_VALUE = 3;
        public static final int QUICK_GAME_ROOM_NOTSTART_VALUE = 1;
        public static final int QUICK_GAME_ROOM_START_VALUE = 2;
        private static final QUICK_GAME_ROOM_STATUS[] VALUES;
        private static EnumLiteMap<QUICK_GAME_ROOM_STATUS> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.QUICK_GAME_ROOM_STATUS.1 */
        class C12481 implements EnumLiteMap<QUICK_GAME_ROOM_STATUS> {
            static {
                fixHelper.fixfunc(new int[]{2827, 2828});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12481();

            public final native /* synthetic */ EnumLite findValueByNumber(int i);
        }

        static {
            internalValueMap = new C12481();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static QUICK_GAME_ROOM_STATUS valueOf(int i) {
            switch (i) {
                case QUICK_GAME_ROOM_NOTSTART_VALUE:
                    return QUICK_GAME_ROOM_NOTSTART;
                case QUICK_GAME_ROOM_START_VALUE:
                    return QUICK_GAME_ROOM_START;
                case QUICK_GAME_ROOM_FINISH_VALUE:
                    return QUICK_GAME_ROOM_FINISH;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<QUICK_GAME_ROOM_STATUS> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(15);
        }

        public static QUICK_GAME_ROOM_STATUS valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private QUICK_GAME_ROOM_STATUS(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface QuickGameRoomInfoOrBuilder extends MessageOrBuilder {
        GAME_ROOM_TYPE getEGameRoomType();

        QUICK_GAME_ROOM_STATUS getEQuickGameRoomStatus();

        String getSCryptCode();

        ByteString getSCryptCodeBytes();

        ChatRoomInfo getStChatRoomInfo();

        ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

        GameRoomBaseInfo getStGameRoomBaseInfo();

        GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder();

        SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo();

        SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder();

        boolean hasEGameRoomType();

        boolean hasEQuickGameRoomStatus();

        boolean hasSCryptCode();

        boolean hasStChatRoomInfo();

        boolean hasStGameRoomBaseInfo();

        boolean hasStSNGGameRoomBaseInfo();
    }

    public static final class QuickGameRoomInfo extends GeneratedMessage implements QuickGameRoomInfoOrBuilder {
        public static final int EGAMEROOMTYPE_FIELD_NUMBER = 4;
        public static final int EQUICKGAMEROOMSTATUS_FIELD_NUMBER = 3;
        public static Parser<QuickGameRoomInfo> PARSER = null;
        public static final int SCRYPTCODE_FIELD_NUMBER = 2;
        public static final int STCHATROOMINFO_FIELD_NUMBER = 1;
        public static final int STGAMEROOMBASEINFO_FIELD_NUMBER = 5;
        public static final int STSNGGAMEROOMBASEINFO_FIELD_NUMBER = 6;
        private static final QuickGameRoomInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private GAME_ROOM_TYPE eGameRoomType_;
        private QUICK_GAME_ROOM_STATUS eQuickGameRoomStatus_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sCryptCode_;
        private ChatRoomInfo stChatRoomInfo_;
        private GameRoomBaseInfo stGameRoomBaseInfo_;
        private SNGGameRoomBaseInfo stSNGGameRoomBaseInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.QuickGameRoomInfo.1 */
        class C12491 extends AbstractParser<QuickGameRoomInfo> {
            C12491() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new QuickGameRoomInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements QuickGameRoomInfoOrBuilder {
            private int bitField0_;
            private GAME_ROOM_TYPE eGameRoomType_;
            private QUICK_GAME_ROOM_STATUS eQuickGameRoomStatus_;
            private Object sCryptCode_;
            private SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> stChatRoomInfoBuilder_;
            private ChatRoomInfo stChatRoomInfo_;
            private SingleFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> stGameRoomBaseInfoBuilder_;
            private GameRoomBaseInfo stGameRoomBaseInfo_;
            private SingleFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> stSNGGameRoomBaseInfoBuilder_;
            private SNGGameRoomBaseInfo stSNGGameRoomBaseInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dO;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dP.ensureFieldAccessorsInitialized(QuickGameRoomInfo.class, Builder.class);
            }

            private Builder() {
                this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eQuickGameRoomStatus_ = QUICK_GAME_ROOM_STATUS.QUICK_GAME_ROOM_NOTSTART;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.eQuickGameRoomStatus_ = QUICK_GAME_ROOM_STATUS.QUICK_GAME_ROOM_NOTSTART;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (QuickGameRoomInfo.alwaysUseFieldBuilders) {
                    getStChatRoomInfoFieldBuilder();
                    getStGameRoomBaseInfoFieldBuilder();
                    getStSNGGameRoomBaseInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stChatRoomInfoBuilder_ == null) {
                    this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
                } else {
                    this.stChatRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
                this.bitField0_ &= -3;
                this.eQuickGameRoomStatus_ = QUICK_GAME_ROOM_STATUS.QUICK_GAME_ROOM_NOTSTART;
                this.bitField0_ &= -5;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                this.bitField0_ &= -9;
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dO;
            }

            public final QuickGameRoomInfo getDefaultInstanceForType() {
                return QuickGameRoomInfo.getDefaultInstance();
            }

            public final QuickGameRoomInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final QuickGameRoomInfo buildPartial() {
                QuickGameRoomInfo quickGameRoomInfo = new QuickGameRoomInfo(null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER) == QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER) {
                    i2 = QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
                }
                if (this.stChatRoomInfoBuilder_ == null) {
                    quickGameRoomInfo.stChatRoomInfo_ = this.stChatRoomInfo_;
                } else {
                    quickGameRoomInfo.stChatRoomInfo_ = (ChatRoomInfo) this.stChatRoomInfoBuilder_.build();
                }
                if ((i & QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER) == QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER) {
                    i2 |= QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER;
                }
                quickGameRoomInfo.sCryptCode_ = this.sCryptCode_;
                if ((i & QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) == QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) {
                    i2 |= QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
                }
                quickGameRoomInfo.eQuickGameRoomStatus_ = this.eQuickGameRoomStatus_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                quickGameRoomInfo.eGameRoomType_ = this.eGameRoomType_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    quickGameRoomInfo.stGameRoomBaseInfo_ = this.stGameRoomBaseInfo_;
                } else {
                    quickGameRoomInfo.stGameRoomBaseInfo_ = (GameRoomBaseInfo) this.stGameRoomBaseInfoBuilder_.build();
                }
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    quickGameRoomInfo.stSNGGameRoomBaseInfo_ = this.stSNGGameRoomBaseInfo_;
                } else {
                    quickGameRoomInfo.stSNGGameRoomBaseInfo_ = (SNGGameRoomBaseInfo) this.stSNGGameRoomBaseInfoBuilder_.build();
                }
                quickGameRoomInfo.bitField0_ = i2;
                onBuilt();
                return quickGameRoomInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof QuickGameRoomInfo) {
                    return mergeFrom((QuickGameRoomInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(QuickGameRoomInfo quickGameRoomInfo) {
                if (quickGameRoomInfo != QuickGameRoomInfo.getDefaultInstance()) {
                    if (quickGameRoomInfo.hasStChatRoomInfo()) {
                        mergeStChatRoomInfo(quickGameRoomInfo.getStChatRoomInfo());
                    }
                    if (quickGameRoomInfo.hasSCryptCode()) {
                        this.bitField0_ |= QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER;
                        this.sCryptCode_ = quickGameRoomInfo.sCryptCode_;
                        onChanged();
                    }
                    if (quickGameRoomInfo.hasEQuickGameRoomStatus()) {
                        setEQuickGameRoomStatus(quickGameRoomInfo.getEQuickGameRoomStatus());
                    }
                    if (quickGameRoomInfo.hasEGameRoomType()) {
                        setEGameRoomType(quickGameRoomInfo.getEGameRoomType());
                    }
                    if (quickGameRoomInfo.hasStGameRoomBaseInfo()) {
                        mergeStGameRoomBaseInfo(quickGameRoomInfo.getStGameRoomBaseInfo());
                    }
                    if (quickGameRoomInfo.hasStSNGGameRoomBaseInfo()) {
                        mergeStSNGGameRoomBaseInfo(quickGameRoomInfo.getStSNGGameRoomBaseInfo());
                    }
                    mergeUnknownFields(quickGameRoomInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasStChatRoomInfo() || !getStChatRoomInfo().isInitialized()) {
                    return false;
                }
                if (hasStGameRoomBaseInfo() && !getStGameRoomBaseInfo().isInitialized()) {
                    return false;
                }
                if (!hasStSNGGameRoomBaseInfo() || getStSNGGameRoomBaseInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.QuickGameRoomInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.QuickGameRoomInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.QuickGameRoomInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.QuickGameRoomInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.QuickGameRoomInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$QuickGameRoomInfo$Builder");
            }

            public final boolean hasStChatRoomInfo() {
                return (this.bitField0_ & QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER) == QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
            }

            public final ChatRoomInfo getStChatRoomInfo() {
                if (this.stChatRoomInfoBuilder_ == null) {
                    return this.stChatRoomInfo_;
                }
                return (ChatRoomInfo) this.stChatRoomInfoBuilder_.getMessage();
            }

            public final Builder setStChatRoomInfo(ChatRoomInfo chatRoomInfo) {
                if (this.stChatRoomInfoBuilder_ != null) {
                    this.stChatRoomInfoBuilder_.setMessage(chatRoomInfo);
                } else if (chatRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stChatRoomInfo_ = chatRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStChatRoomInfo(Builder builder) {
                if (this.stChatRoomInfoBuilder_ == null) {
                    this.stChatRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stChatRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStChatRoomInfo(ChatRoomInfo chatRoomInfo) {
                if (this.stChatRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER) != QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER || this.stChatRoomInfo_ == ChatRoomInfo.getDefaultInstance()) {
                        this.stChatRoomInfo_ = chatRoomInfo;
                    } else {
                        this.stChatRoomInfo_ = ChatRoomInfo.newBuilder(this.stChatRoomInfo_).mergeFrom(chatRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stChatRoomInfoBuilder_.mergeFrom(chatRoomInfo);
                }
                this.bitField0_ |= QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStChatRoomInfo() {
                if (this.stChatRoomInfoBuilder_ == null) {
                    this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stChatRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder getStChatRoomInfoBuilder() {
                this.bitField0_ |= QuickGameRoomInfo.STCHATROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStChatRoomInfoFieldBuilder().getBuilder();
            }

            public final ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder() {
                if (this.stChatRoomInfoBuilder_ != null) {
                    return (ChatRoomInfoOrBuilder) this.stChatRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stChatRoomInfo_;
            }

            private SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> getStChatRoomInfoFieldBuilder() {
                if (this.stChatRoomInfoBuilder_ == null) {
                    this.stChatRoomInfoBuilder_ = new SingleFieldBuilder(getStChatRoomInfo(), getParentForChildren(), isClean());
                    this.stChatRoomInfo_ = null;
                }
                return this.stChatRoomInfoBuilder_;
            }

            public final boolean hasSCryptCode() {
                return (this.bitField0_ & QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER) == QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER;
            }

            public final String getSCryptCode() {
                Object obj = this.sCryptCode_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String toStringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sCryptCode_ = toStringUtf8;
                }
                return toStringUtf8;
            }

            public final ByteString getSCryptCodeBytes() {
                Object obj = this.sCryptCode_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sCryptCode_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public final Builder setSCryptCode(String str) {
                if (str == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER;
                this.sCryptCode_ = str;
                onChanged();
                return this;
            }

            public final Builder clearSCryptCode() {
                this.bitField0_ &= -3;
                this.sCryptCode_ = QuickGameRoomInfo.getDefaultInstance().getSCryptCode();
                onChanged();
                return this;
            }

            public final Builder setSCryptCodeBytes(ByteString byteString) {
                if (byteString == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= QuickGameRoomInfo.SCRYPTCODE_FIELD_NUMBER;
                this.sCryptCode_ = byteString;
                onChanged();
                return this;
            }

            public final boolean hasEQuickGameRoomStatus() {
                return (this.bitField0_ & QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER) == QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
            }

            public final QUICK_GAME_ROOM_STATUS getEQuickGameRoomStatus() {
                return this.eQuickGameRoomStatus_;
            }

            public final Builder setEQuickGameRoomStatus(QUICK_GAME_ROOM_STATUS quick_game_room_status) {
                if (quick_game_room_status == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= QuickGameRoomInfo.EGAMEROOMTYPE_FIELD_NUMBER;
                this.eQuickGameRoomStatus_ = quick_game_room_status;
                onChanged();
                return this;
            }

            public final Builder clearEQuickGameRoomStatus() {
                this.bitField0_ &= -5;
                this.eQuickGameRoomStatus_ = QUICK_GAME_ROOM_STATUS.QUICK_GAME_ROOM_NOTSTART;
                onChanged();
                return this;
            }

            public final boolean hasEGameRoomType() {
                return (this.bitField0_ & 8) == 8;
            }

            public final GAME_ROOM_TYPE getEGameRoomType() {
                return this.eGameRoomType_;
            }

            public final Builder setEGameRoomType(GAME_ROOM_TYPE game_room_type) {
                if (game_room_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8;
                this.eGameRoomType_ = game_room_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameRoomType() {
                this.bitField0_ &= -9;
                this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomBaseInfo() {
                return (this.bitField0_ & 16) == 16;
            }

            public final GameRoomBaseInfo getStGameRoomBaseInfo() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    return this.stGameRoomBaseInfo_;
                }
                return (GameRoomBaseInfo) this.stGameRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomBaseInfo(GameRoomBaseInfo gameRoomBaseInfo) {
                if (this.stGameRoomBaseInfoBuilder_ != null) {
                    this.stGameRoomBaseInfoBuilder_.setMessage(gameRoomBaseInfo);
                } else if (gameRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomBaseInfo_ = gameRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder setStGameRoomBaseInfo(Builder builder) {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder mergeStGameRoomBaseInfo(GameRoomBaseInfo gameRoomBaseInfo) {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 16) != 16 || this.stGameRoomBaseInfo_ == GameRoomBaseInfo.getDefaultInstance()) {
                        this.stGameRoomBaseInfo_ = gameRoomBaseInfo;
                    } else {
                        this.stGameRoomBaseInfo_ = GameRoomBaseInfo.newBuilder(this.stGameRoomBaseInfo_).mergeFrom(gameRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.mergeFrom(gameRoomBaseInfo);
                }
                this.bitField0_ |= 16;
                return this;
            }

            public final Builder clearStGameRoomBaseInfo() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder getStGameRoomBaseInfoBuilder() {
                this.bitField0_ |= 16;
                onChanged();
                return (Builder) getStGameRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder() {
                if (this.stGameRoomBaseInfoBuilder_ != null) {
                    return (GameRoomBaseInfoOrBuilder) this.stGameRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomBaseInfo_;
            }

            private SingleFieldBuilder<GameRoomBaseInfo, Builder, GameRoomBaseInfoOrBuilder> getStGameRoomBaseInfoFieldBuilder() {
                if (this.stGameRoomBaseInfoBuilder_ == null) {
                    this.stGameRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStGameRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stGameRoomBaseInfo_ = null;
                }
                return this.stGameRoomBaseInfoBuilder_;
            }

            public final boolean hasStSNGGameRoomBaseInfo() {
                return (this.bitField0_ & 32) == 32;
            }

            public final SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    return this.stSNGGameRoomBaseInfo_;
                }
                return (SNGGameRoomBaseInfo) this.stSNGGameRoomBaseInfoBuilder_.getMessage();
            }

            public final Builder setStSNGGameRoomBaseInfo(SNGGameRoomBaseInfo sNGGameRoomBaseInfo) {
                if (this.stSNGGameRoomBaseInfoBuilder_ != null) {
                    this.stSNGGameRoomBaseInfoBuilder_.setMessage(sNGGameRoomBaseInfo);
                } else if (sNGGameRoomBaseInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stSNGGameRoomBaseInfo_ = sNGGameRoomBaseInfo;
                    onChanged();
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder setStSNGGameRoomBaseInfo(Builder builder) {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder mergeStSNGGameRoomBaseInfo(SNGGameRoomBaseInfo sNGGameRoomBaseInfo) {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    if ((this.bitField0_ & 32) != 32 || this.stSNGGameRoomBaseInfo_ == SNGGameRoomBaseInfo.getDefaultInstance()) {
                        this.stSNGGameRoomBaseInfo_ = sNGGameRoomBaseInfo;
                    } else {
                        this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.newBuilder(this.stSNGGameRoomBaseInfo_).mergeFrom(sNGGameRoomBaseInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.mergeFrom(sNGGameRoomBaseInfo);
                }
                this.bitField0_ |= 32;
                return this;
            }

            public final Builder clearStSNGGameRoomBaseInfo() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stSNGGameRoomBaseInfoBuilder_.clear();
                }
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder getStSNGGameRoomBaseInfoBuilder() {
                this.bitField0_ |= 32;
                onChanged();
                return (Builder) getStSNGGameRoomBaseInfoFieldBuilder().getBuilder();
            }

            public final SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder() {
                if (this.stSNGGameRoomBaseInfoBuilder_ != null) {
                    return (SNGGameRoomBaseInfoOrBuilder) this.stSNGGameRoomBaseInfoBuilder_.getMessageOrBuilder();
                }
                return this.stSNGGameRoomBaseInfo_;
            }

            private SingleFieldBuilder<SNGGameRoomBaseInfo, Builder, SNGGameRoomBaseInfoOrBuilder> getStSNGGameRoomBaseInfoFieldBuilder() {
                if (this.stSNGGameRoomBaseInfoBuilder_ == null) {
                    this.stSNGGameRoomBaseInfoBuilder_ = new SingleFieldBuilder(getStSNGGameRoomBaseInfo(), getParentForChildren(), isClean());
                    this.stSNGGameRoomBaseInfo_ = null;
                }
                return this.stSNGGameRoomBaseInfoBuilder_;
            }
        }

        private QuickGameRoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private QuickGameRoomInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static QuickGameRoomInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final QuickGameRoomInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private QuickGameRoomInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STCHATROOMINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stChatRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stChatRoomInfo_ = (ChatRoomInfo) codedInputStream.readMessage(ChatRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stChatRoomInfo_);
                                this.stChatRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STCHATROOMINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= SCRYPTCODE_FIELD_NUMBER;
                            this.sCryptCode_ = readBytes;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            QUICK_GAME_ROOM_STATUS valueOf = QUICK_GAME_ROOM_STATUS.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EGAMEROOMTYPE_FIELD_NUMBER;
                                this.eQuickGameRoomStatus_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EQUICKGAMEROOMSTATUS_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ROOM_TYPE valueOf2 = GAME_ROOM_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= 8;
                                this.eGameRoomType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEROOMTYPE_FIELD_NUMBER, readTag);
                            break;
                        case R.AppCompatTheme_textAppearancePopupMenuHeader /*42*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 16) == 16) {
                                toBuilder2 = this.stGameRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stGameRoomBaseInfo_ = (GameRoomBaseInfo) codedInputStream.readMessage(GameRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stGameRoomBaseInfo_);
                                this.stGameRoomBaseInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 16;
                            break;
                        case R.AppCompatTheme_actionButtonStyle /*50*/:
                            Builder toBuilder3;
                            if ((this.bitField0_ & 32) == 32) {
                                toBuilder3 = this.stSNGGameRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder3 = null;
                            }
                            this.stSNGGameRoomBaseInfo_ = (SNGGameRoomBaseInfo) codedInputStream.readMessage(SNGGameRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder3 != null) {
                                toBuilder3.mergeFrom(this.stSNGGameRoomBaseInfo_);
                                this.stSNGGameRoomBaseInfo_ = toBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 32;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STCHATROOMINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dO;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dP.ensureFieldAccessorsInitialized(QuickGameRoomInfo.class, Builder.class);
        }

        static {
            PARSER = new C12491();
            QuickGameRoomInfo quickGameRoomInfo = new QuickGameRoomInfo(true);
            defaultInstance = quickGameRoomInfo;
            quickGameRoomInfo.initFields();
        }

        public final Parser<QuickGameRoomInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasStChatRoomInfo() {
            return (this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER;
        }

        public final ChatRoomInfo getStChatRoomInfo() {
            return this.stChatRoomInfo_;
        }

        public final ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder() {
            return this.stChatRoomInfo_;
        }

        public final boolean hasSCryptCode() {
            return (this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER;
        }

        public final String getSCryptCode() {
            Object obj = this.sCryptCode_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sCryptCode_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSCryptCodeBytes() {
            Object obj = this.sCryptCode_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sCryptCode_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasEQuickGameRoomStatus() {
            return (this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER;
        }

        public final QUICK_GAME_ROOM_STATUS getEQuickGameRoomStatus() {
            return this.eQuickGameRoomStatus_;
        }

        public final boolean hasEGameRoomType() {
            return (this.bitField0_ & 8) == 8;
        }

        public final GAME_ROOM_TYPE getEGameRoomType() {
            return this.eGameRoomType_;
        }

        public final boolean hasStGameRoomBaseInfo() {
            return (this.bitField0_ & 16) == 16;
        }

        public final GameRoomBaseInfo getStGameRoomBaseInfo() {
            return this.stGameRoomBaseInfo_;
        }

        public final GameRoomBaseInfoOrBuilder getStGameRoomBaseInfoOrBuilder() {
            return this.stGameRoomBaseInfo_;
        }

        public final boolean hasStSNGGameRoomBaseInfo() {
            return (this.bitField0_ & 32) == 32;
        }

        public final SNGGameRoomBaseInfo getStSNGGameRoomBaseInfo() {
            return this.stSNGGameRoomBaseInfo_;
        }

        public final SNGGameRoomBaseInfoOrBuilder getStSNGGameRoomBaseInfoOrBuilder() {
            return this.stSNGGameRoomBaseInfo_;
        }

        private void initFields() {
            this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
            this.sCryptCode_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.eQuickGameRoomStatus_ = QUICK_GAME_ROOM_STATUS.QUICK_GAME_ROOM_NOTSTART;
            this.eGameRoomType_ = GAME_ROOM_TYPE.GAME_ROOM_NORMAL;
            this.stGameRoomBaseInfo_ = GameRoomBaseInfo.getDefaultInstance();
            this.stSNGGameRoomBaseInfo_ = SNGGameRoomBaseInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStChatRoomInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!getStChatRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomBaseInfo() && !getStGameRoomBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStSNGGameRoomBaseInfo() || getStSNGGameRoomBaseInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STCHATROOMINFO_FIELD_NUMBER, this.stChatRoomInfo_);
            }
            if ((this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SCRYPTCODE_FIELD_NUMBER, getSCryptCodeBytes());
            }
            if ((this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EQUICKGAMEROOMSTATUS_FIELD_NUMBER, this.eQuickGameRoomStatus_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeEnum(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeMessage(STGAMEROOMBASEINFO_FIELD_NUMBER, this.stGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeMessage(STSNGGAMEROOMBASEINFO_FIELD_NUMBER, this.stSNGGameRoomBaseInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STCHATROOMINFO_FIELD_NUMBER, this.stChatRoomInfo_) + 0;
            }
            if ((this.bitField0_ & SCRYPTCODE_FIELD_NUMBER) == SCRYPTCODE_FIELD_NUMBER) {
                i += CodedOutputStream.computeBytesSize(SCRYPTCODE_FIELD_NUMBER, getSCryptCodeBytes());
            }
            if ((this.bitField0_ & EGAMEROOMTYPE_FIELD_NUMBER) == EGAMEROOMTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EQUICKGAMEROOMSTATUS_FIELD_NUMBER, this.eQuickGameRoomStatus_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeEnumSize(EGAMEROOMTYPE_FIELD_NUMBER, this.eGameRoomType_.getNumber());
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMBASEINFO_FIELD_NUMBER, this.stGameRoomBaseInfo_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeMessageSize(STSNGGAMEROOMBASEINFO_FIELD_NUMBER, this.stSNGGameRoomBaseInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static QuickGameRoomInfo parseFrom(ByteString byteString) {
            return (QuickGameRoomInfo) PARSER.parseFrom(byteString);
        }

        public static QuickGameRoomInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static QuickGameRoomInfo parseFrom(byte[] bArr) {
            return (QuickGameRoomInfo) PARSER.parseFrom(bArr);
        }

        public static QuickGameRoomInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static QuickGameRoomInfo parseFrom(InputStream inputStream) {
            return (QuickGameRoomInfo) PARSER.parseFrom(inputStream);
        }

        public static QuickGameRoomInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static QuickGameRoomInfo parseDelimitedFrom(InputStream inputStream) {
            return (QuickGameRoomInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static QuickGameRoomInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static QuickGameRoomInfo parseFrom(CodedInputStream codedInputStream) {
            return (QuickGameRoomInfo) PARSER.parseFrom(codedInputStream);
        }

        public static QuickGameRoomInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(QuickGameRoomInfo quickGameRoomInfo) {
            return newBuilder().mergeFrom(quickGameRoomInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface QuickGameRoomPushMsgOrBuilder extends MessageOrBuilder {
        QUICK_GAME_ROOM_MESSAGE_TYPE getEMessageType();

        long getLChatRoomID();

        long getLCreateTime();

        long getLGameRoomID();

        long getLMsgID();

        String getSMsg();

        ByteString getSMsgBytes();

        UserBaseInfoNet getStFromUser();

        UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

        UserBaseInfoNet getVUsers(int i);

        int getVUsersCount();

        List<UserBaseInfoNet> getVUsersList();

        UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i);

        List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList();

        boolean hasEMessageType();

        boolean hasLChatRoomID();

        boolean hasLCreateTime();

        boolean hasLGameRoomID();

        boolean hasLMsgID();

        boolean hasSMsg();

        boolean hasStFromUser();
    }

    public static final class QuickGameRoomPushMsg extends GeneratedMessage implements QuickGameRoomPushMsgOrBuilder {
        public static final int EMESSAGETYPE_FIELD_NUMBER = 2;
        public static final int LCHATROOMID_FIELD_NUMBER = 5;
        public static final int LCREATETIME_FIELD_NUMBER = 4;
        public static final int LGAMEROOMID_FIELD_NUMBER = 6;
        public static final int LMSGID_FIELD_NUMBER = 1;
        public static Parser<QuickGameRoomPushMsg> PARSER = null;
        public static final int SMSG_FIELD_NUMBER = 3;
        public static final int STFROMUSER_FIELD_NUMBER = 7;
        public static final int VUSERS_FIELD_NUMBER = 8;
        private static final QuickGameRoomPushMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private QUICK_GAME_ROOM_MESSAGE_TYPE eMessageType_;
        private long lChatRoomID_;
        private long lCreateTime_;
        private long lGameRoomID_;
        private long lMsgID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private Object sMsg_;
        private UserBaseInfoNet stFromUser_;
        private final UnknownFieldSet unknownFields;
        private List<UserBaseInfoNet> vUsers_;

        /* renamed from: com.texaspoker.moment.TexasPoker.QuickGameRoomPushMsg.1 */
        class C12501 extends AbstractParser<QuickGameRoomPushMsg> {
            C12501() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new QuickGameRoomPushMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements QuickGameRoomPushMsgOrBuilder {
            private int bitField0_;
            private QUICK_GAME_ROOM_MESSAGE_TYPE eMessageType_;
            private long lChatRoomID_;
            private long lCreateTime_;
            private long lGameRoomID_;
            private long lMsgID_;
            private Object sMsg_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stFromUserBuilder_;
            private UserBaseInfoNet stFromUser_;
            private RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> vUsersBuilder_;
            private List<UserBaseInfoNet> vUsers_;

            static {
                fixHelper.fixfunc(new int[]{2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVUsersIsMutable();

            private native SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStFromUserFieldBuilder();

            private native RepeatedFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getVUsersFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVUsers(Iterable<? extends UserBaseInfoNet> iterable);

            public final native Builder addVUsers(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUsers(int i, UserBaseInfoNet userBaseInfoNet);

            public final native Builder addVUsers(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder addVUsers(UserBaseInfoNet userBaseInfoNet);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUsersBuilder();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder addVUsersBuilder(int i);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6479build();

            public final native QuickGameRoomPushMsg m6480build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6481buildPartial();

            public final native QuickGameRoomPushMsg m6482buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6483clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6484clear();

            public final native Builder m6485clear();

            public final native Builder clearEMessageType();

            public final native Builder clearLChatRoomID();

            public final native Builder clearLCreateTime();

            public final native Builder clearLGameRoomID();

            public final native Builder clearLMsgID();

            public final native Builder clearSMsg();

            public final native Builder clearStFromUser();

            public final native Builder clearVUsers();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6486clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6487clone();

            public final native Builder m6488clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6489getDefaultInstanceForType();

            public final native QuickGameRoomPushMsg m6490getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native QUICK_GAME_ROOM_MESSAGE_TYPE getEMessageType();

            public final native long getLChatRoomID();

            public final native long getLCreateTime();

            public final native long getLGameRoomID();

            public final native long getLMsgID();

            public final native String getSMsg();

            public final native ByteString getSMsgBytes();

            public final native UserBaseInfoNet getStFromUser();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStFromUserBuilder();

            public final native UserBaseInfoNetOrBuilder getStFromUserOrBuilder();

            public final native UserBaseInfoNet getVUsers(int i);

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getVUsersBuilder(int i);

            public final native List<com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder> getVUsersBuilderList();

            public final native int getVUsersCount();

            public final native List<UserBaseInfoNet> getVUsersList();

            public final native UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i);

            public final native List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList();

            public final native boolean hasEMessageType();

            public final native boolean hasLChatRoomID();

            public final native boolean hasLCreateTime();

            public final native boolean hasLGameRoomID();

            public final native boolean hasLMsgID();

            public final native boolean hasSMsg();

            public final native boolean hasStFromUser();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6491mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6492mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6493mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6494mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6495mergeFrom(Message message);

            public final native Builder mergeFrom(QuickGameRoomPushMsg quickGameRoomPushMsg);

            public final native Builder mergeStFromUser(UserBaseInfoNet userBaseInfoNet);

            public final native Builder removeVUsers(int i);

            public final native Builder setEMessageType(QUICK_GAME_ROOM_MESSAGE_TYPE quick_game_room_message_type);

            public final native Builder setLChatRoomID(long j);

            public final native Builder setLCreateTime(long j);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setLMsgID(long j);

            public final native Builder setSMsg(String str);

            public final native Builder setSMsgBytes(ByteString byteString);

            public final native Builder setStFromUser(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setStFromUser(UserBaseInfoNet userBaseInfoNet);

            public final native Builder setVUsers(int i, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setVUsers(int i, UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.eo;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private QuickGameRoomPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private QuickGameRoomPushMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static QuickGameRoomPushMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final QuickGameRoomPushMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private QuickGameRoomPushMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = LMSGID_FIELD_NUMBER;
                            break;
                        case VUSERS_FIELD_NUMBER /*8*/:
                            this.bitField0_ |= LMSGID_FIELD_NUMBER;
                            this.lMsgID_ = codedInputStream.readInt64();
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            QUICK_GAME_ROOM_MESSAGE_TYPE valueOf = QUICK_GAME_ROOM_MESSAGE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EMESSAGETYPE_FIELD_NUMBER;
                                this.eMessageType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EMESSAGETYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= LCREATETIME_FIELD_NUMBER;
                            this.sMsg_ = readBytes;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= VUSERS_FIELD_NUMBER;
                            this.lCreateTime_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lChatRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_activityChooserViewStyle /*58*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & 64) == 64) {
                                toBuilder = this.stFromUser_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stFromUser_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stFromUser_);
                                this.stFromUser_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= 64;
                            break;
                        case R.AppCompatTheme_textAppearanceSearchResultTitle /*66*/:
                            if ((i & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) != AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                                this.vUsers_ = new ArrayList();
                                i |= AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS;
                            }
                            this.vUsers_.add((UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = LMSGID_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                        this.vUsers_ = Collections.unmodifiableList(this.vUsers_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) == AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS) {
                this.vUsers_ = Collections.unmodifiableList(this.vUsers_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.eo;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.ep.ensureFieldAccessorsInitialized(QuickGameRoomPushMsg.class, Builder.class);
        }

        static {
            PARSER = new C12501();
            QuickGameRoomPushMsg quickGameRoomPushMsg = new QuickGameRoomPushMsg(true);
            defaultInstance = quickGameRoomPushMsg;
            quickGameRoomPushMsg.initFields();
        }

        public final Parser<QuickGameRoomPushMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasLMsgID() {
            return (this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER;
        }

        public final long getLMsgID() {
            return this.lMsgID_;
        }

        public final boolean hasEMessageType() {
            return (this.bitField0_ & EMESSAGETYPE_FIELD_NUMBER) == EMESSAGETYPE_FIELD_NUMBER;
        }

        public final QUICK_GAME_ROOM_MESSAGE_TYPE getEMessageType() {
            return this.eMessageType_;
        }

        public final boolean hasSMsg() {
            return (this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER;
        }

        public final String getSMsg() {
            Object obj = this.sMsg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String toStringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sMsg_ = toStringUtf8;
            }
            return toStringUtf8;
        }

        public final ByteString getSMsgBytes() {
            Object obj = this.sMsg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sMsg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean hasLCreateTime() {
            return (this.bitField0_ & VUSERS_FIELD_NUMBER) == VUSERS_FIELD_NUMBER;
        }

        public final long getLCreateTime() {
            return this.lCreateTime_;
        }

        public final boolean hasLChatRoomID() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLChatRoomID() {
            return this.lChatRoomID_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasStFromUser() {
            return (this.bitField0_ & 64) == 64;
        }

        public final UserBaseInfoNet getStFromUser() {
            return this.stFromUser_;
        }

        public final UserBaseInfoNetOrBuilder getStFromUserOrBuilder() {
            return this.stFromUser_;
        }

        public final List<UserBaseInfoNet> getVUsersList() {
            return this.vUsers_;
        }

        public final List<? extends UserBaseInfoNetOrBuilder> getVUsersOrBuilderList() {
            return this.vUsers_;
        }

        public final int getVUsersCount() {
            return this.vUsers_.size();
        }

        public final UserBaseInfoNet getVUsers(int i) {
            return (UserBaseInfoNet) this.vUsers_.get(i);
        }

        public final UserBaseInfoNetOrBuilder getVUsersOrBuilder(int i) {
            return (UserBaseInfoNetOrBuilder) this.vUsers_.get(i);
        }

        private void initFields() {
            this.lMsgID_ = 0;
            this.eMessageType_ = QUICK_GAME_ROOM_MESSAGE_TYPE.QUICK_GAME_ROOM_MESSAGE_ENTER;
            this.sMsg_ = LetterIndexBar.SEARCH_ICON_LETTER;
            this.lCreateTime_ = 0;
            this.lChatRoomID_ = 0;
            this.lGameRoomID_ = 0;
            this.stFromUser_ = UserBaseInfoNet.getDefaultInstance();
            this.vUsers_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasLMsgID()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasEMessageType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasSMsg()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasLCreateTime()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStFromUser() || getStFromUser().isInitialized()) {
                int i = 0;
                while (i < getVUsersCount()) {
                    if (getVUsers(i).isInitialized()) {
                        i += LMSGID_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LMSGID_FIELD_NUMBER, this.lMsgID_);
            }
            if ((this.bitField0_ & EMESSAGETYPE_FIELD_NUMBER) == EMESSAGETYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EMESSAGETYPE_FIELD_NUMBER, this.eMessageType_.getNumber());
            }
            if ((this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER) {
                codedOutputStream.writeBytes(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & VUSERS_FIELD_NUMBER) == VUSERS_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LCHATROOMID_FIELD_NUMBER, this.lChatRoomID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeMessage(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            for (int i = 0; i < this.vUsers_.size(); i += LMSGID_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VUSERS_FIELD_NUMBER, (MessageLite) this.vUsers_.get(i));
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & LMSGID_FIELD_NUMBER) == LMSGID_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeInt64Size(LMSGID_FIELD_NUMBER, this.lMsgID_) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & EMESSAGETYPE_FIELD_NUMBER) == EMESSAGETYPE_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeEnumSize(EMESSAGETYPE_FIELD_NUMBER, this.eMessageType_.getNumber());
            }
            if ((this.bitField0_ & LCREATETIME_FIELD_NUMBER) == LCREATETIME_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeBytesSize(SMSG_FIELD_NUMBER, getSMsgBytes());
            }
            if ((this.bitField0_ & VUSERS_FIELD_NUMBER) == VUSERS_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeInt64Size(LCREATETIME_FIELD_NUMBER, this.lCreateTime_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeInt64Size(LCHATROOMID_FIELD_NUMBER, this.lChatRoomID_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeMessageSize(STFROMUSER_FIELD_NUMBER, this.stFromUser_);
            }
            int i3 = i2;
            while (i < this.vUsers_.size()) {
                i += LMSGID_FIELD_NUMBER;
                i3 = CodedOutputStream.computeMessageSize(VUSERS_FIELD_NUMBER, (MessageLite) this.vUsers_.get(i)) + i3;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static QuickGameRoomPushMsg parseFrom(ByteString byteString) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(byteString);
        }

        public static QuickGameRoomPushMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static QuickGameRoomPushMsg parseFrom(byte[] bArr) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(bArr);
        }

        public static QuickGameRoomPushMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static QuickGameRoomPushMsg parseFrom(InputStream inputStream) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(inputStream);
        }

        public static QuickGameRoomPushMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static QuickGameRoomPushMsg parseDelimitedFrom(InputStream inputStream) {
            return (QuickGameRoomPushMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static QuickGameRoomPushMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomPushMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static QuickGameRoomPushMsg parseFrom(CodedInputStream codedInputStream) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(codedInputStream);
        }

        public static QuickGameRoomPushMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (QuickGameRoomPushMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(QuickGameRoomPushMsg quickGameRoomPushMsg) {
            return newBuilder().mergeFrom(quickGameRoomPushMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public enum RECOMMEND_USER_TYPE implements ProtocolMessageEnum {
        RECOMMEND_BEAUTY_USER(0, RECOMMEND_BEAUTY_USER_VALUE),
        RECOMMEND_HUNTER_USER(RECOMMEND_BEAUTY_USER_VALUE, RECOMMEND_HUNTER_USER_VALUE),
        RECOMMEND_DIAMOND_USER(RECOMMEND_HUNTER_USER_VALUE, RECOMMEND_DIAMOND_USER_VALUE),
        RECOMMEND_FLOWER_GUARDIAN_USER(RECOMMEND_DIAMOND_USER_VALUE, RECOMMEND_FLOWER_GUARDIAN_USER_VALUE);
        
        public static final int RECOMMEND_BEAUTY_USER_VALUE = 1;
        public static final int RECOMMEND_DIAMOND_USER_VALUE = 3;
        public static final int RECOMMEND_FLOWER_GUARDIAN_USER_VALUE = 4;
        public static final int RECOMMEND_HUNTER_USER_VALUE = 2;
        private static final RECOMMEND_USER_TYPE[] VALUES;
        private static EnumLiteMap<RECOMMEND_USER_TYPE> internalValueMap;
        private final int index;
        private final int value;

        /* renamed from: com.texaspoker.moment.TexasPoker.RECOMMEND_USER_TYPE.1 */
        class C12511 implements EnumLiteMap<RECOMMEND_USER_TYPE> {
            static {
                fixHelper.fixfunc(new int[]{2837, 2838});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12511();

            public final native /* synthetic */ EnumLite findValueByNumber(int i);
        }

        static {
            internalValueMap = new C12511();
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        public static RECOMMEND_USER_TYPE valueOf(int i) {
            switch (i) {
                case RECOMMEND_BEAUTY_USER_VALUE:
                    return RECOMMEND_BEAUTY_USER;
                case RECOMMEND_HUNTER_USER_VALUE:
                    return RECOMMEND_HUNTER_USER;
                case RECOMMEND_DIAMOND_USER_VALUE:
                    return RECOMMEND_DIAMOND_USER;
                case RECOMMEND_FLOWER_GUARDIAN_USER_VALUE:
                    return RECOMMEND_FLOWER_GUARDIAN_USER;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<RECOMMEND_USER_TYPE> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(this.index);
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) TexasPoker.m5928a().getEnumTypes().get(RECOMMEND_DIAMOND_USER_VALUE);
        }

        public static RECOMMEND_USER_TYPE valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private RECOMMEND_USER_TYPE(int i, int i2) {
            this.index = i;
            this.value = i2;
        }
    }

    public interface RecommendUserInfoOrBuilder extends MessageOrBuilder {
        RECOMMEND_USER_TYPE getERecommendUserType();

        UserBaseInfoNet getStUserBaseInfoNet();

        UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

        boolean hasERecommendUserType();

        boolean hasStUserBaseInfoNet();
    }

    public static final class RecommendUserInfo extends GeneratedMessage implements RecommendUserInfoOrBuilder {
        public static final int ERECOMMENDUSERTYPE_FIELD_NUMBER = 2;
        public static Parser<RecommendUserInfo> PARSER = null;
        public static final int STUSERBASEINFONET_FIELD_NUMBER = 1;
        private static final RecommendUserInfo defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private RECOMMEND_USER_TYPE eRecommendUserType_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private UserBaseInfoNet stUserBaseInfoNet_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.RecommendUserInfo.1 */
        class C12521 extends AbstractParser<RecommendUserInfo> {
            C12521() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new RecommendUserInfo(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements RecommendUserInfoOrBuilder {
            private int bitField0_;
            private RECOMMEND_USER_TYPE eRecommendUserType_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoNetBuilder_;
            private UserBaseInfoNet stUserBaseInfoNet_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.fY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.fZ.ensureFieldAccessorsInitialized(RecommendUserInfo.class, Builder.class);
            }

            private Builder() {
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                this.eRecommendUserType_ = RECOMMEND_USER_TYPE.RECOMMEND_BEAUTY_USER;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                this.eRecommendUserType_ = RECOMMEND_USER_TYPE.RECOMMEND_BEAUTY_USER;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (RecommendUserInfo.alwaysUseFieldBuilders) {
                    getStUserBaseInfoNetFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.eRecommendUserType_ = RECOMMEND_USER_TYPE.RECOMMEND_BEAUTY_USER;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.fY;
            }

            public final RecommendUserInfo getDefaultInstanceForType() {
                return RecommendUserInfo.getDefaultInstance();
            }

            public final RecommendUserInfo build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final RecommendUserInfo buildPartial() {
                RecommendUserInfo recommendUserInfo = new RecommendUserInfo(null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER) == RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER) {
                    i2 = RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
                }
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    recommendUserInfo.stUserBaseInfoNet_ = this.stUserBaseInfoNet_;
                } else {
                    recommendUserInfo.stUserBaseInfoNet_ = (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.build();
                }
                if ((i & RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER) == RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER) {
                    i2 |= RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER;
                }
                recommendUserInfo.eRecommendUserType_ = this.eRecommendUserType_;
                recommendUserInfo.bitField0_ = i2;
                onBuilt();
                return recommendUserInfo;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof RecommendUserInfo) {
                    return mergeFrom((RecommendUserInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(RecommendUserInfo recommendUserInfo) {
                if (recommendUserInfo != RecommendUserInfo.getDefaultInstance()) {
                    if (recommendUserInfo.hasStUserBaseInfoNet()) {
                        mergeStUserBaseInfoNet(recommendUserInfo.getStUserBaseInfoNet());
                    }
                    if (recommendUserInfo.hasERecommendUserType()) {
                        setERecommendUserType(recommendUserInfo.getERecommendUserType());
                    }
                    mergeUnknownFields(recommendUserInfo.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStUserBaseInfoNet() && hasERecommendUserType() && getStUserBaseInfoNet().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.RecommendUserInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.RecommendUserInfo.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.RecommendUserInfo) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.RecommendUserInfo) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.RecommendUserInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$RecommendUserInfo$Builder");
            }

            public final boolean hasStUserBaseInfoNet() {
                return (this.bitField0_ & RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER) == RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    return this.stUserBaseInfoNet_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    this.stUserBaseInfoNetBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfoNet_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder setStUserBaseInfoNet(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER) != RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER || this.stUserBaseInfoNet_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfoNet_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfoNet_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfoNet_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoNetBuilder() {
                this.bitField0_ |= RecommendUserInfo.STUSERBASEINFONET_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoNetFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfoNet_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoNetFieldBuilder() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNetBuilder_ = new SingleFieldBuilder(getStUserBaseInfoNet(), getParentForChildren(), isClean());
                    this.stUserBaseInfoNet_ = null;
                }
                return this.stUserBaseInfoNetBuilder_;
            }

            public final boolean hasERecommendUserType() {
                return (this.bitField0_ & RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER) == RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER;
            }

            public final RECOMMEND_USER_TYPE getERecommendUserType() {
                return this.eRecommendUserType_;
            }

            public final Builder setERecommendUserType(RECOMMEND_USER_TYPE recommend_user_type) {
                if (recommend_user_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= RecommendUserInfo.ERECOMMENDUSERTYPE_FIELD_NUMBER;
                this.eRecommendUserType_ = recommend_user_type;
                onChanged();
                return this;
            }

            public final Builder clearERecommendUserType() {
                this.bitField0_ &= -3;
                this.eRecommendUserType_ = RECOMMEND_USER_TYPE.RECOMMEND_BEAUTY_USER;
                onChanged();
                return this;
            }
        }

        private RecommendUserInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private RecommendUserInfo(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static RecommendUserInfo getDefaultInstance() {
            return defaultInstance;
        }

        public final RecommendUserInfo getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RecommendUserInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STUSERBASEINFONET_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                                toBuilder = this.stUserBaseInfoNet_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stUserBaseInfoNet_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stUserBaseInfoNet_);
                                this.stUserBaseInfoNet_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFONET_FIELD_NUMBER;
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            readTag = codedInputStream.readEnum();
                            RECOMMEND_USER_TYPE valueOf = RECOMMEND_USER_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= ERECOMMENDUSERTYPE_FIELD_NUMBER;
                                this.eRecommendUserType_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(ERECOMMENDUSERTYPE_FIELD_NUMBER, readTag);
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STUSERBASEINFONET_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.fY;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.fZ.ensureFieldAccessorsInitialized(RecommendUserInfo.class, Builder.class);
        }

        static {
            PARSER = new C12521();
            RecommendUserInfo recommendUserInfo = new RecommendUserInfo(true);
            defaultInstance = recommendUserInfo;
            recommendUserInfo.initFields();
        }

        public final Parser<RecommendUserInfo> getParserForType() {
            return PARSER;
        }

        public final boolean hasStUserBaseInfoNet() {
            return (this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfoNet() {
            return this.stUserBaseInfoNet_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
            return this.stUserBaseInfoNet_;
        }

        public final boolean hasERecommendUserType() {
            return (this.bitField0_ & ERECOMMENDUSERTYPE_FIELD_NUMBER) == ERECOMMENDUSERTYPE_FIELD_NUMBER;
        }

        public final RECOMMEND_USER_TYPE getERecommendUserType() {
            return this.eRecommendUserType_;
        }

        private void initFields() {
            this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
            this.eRecommendUserType_ = RECOMMEND_USER_TYPE.RECOMMEND_BEAUTY_USER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStUserBaseInfoNet()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasERecommendUserType()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStUserBaseInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            if ((this.bitField0_ & ERECOMMENDUSERTYPE_FIELD_NUMBER) == ERECOMMENDUSERTYPE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(ERECOMMENDUSERTYPE_FIELD_NUMBER, this.eRecommendUserType_.getNumber());
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_) + 0;
            }
            if ((this.bitField0_ & ERECOMMENDUSERTYPE_FIELD_NUMBER) == ERECOMMENDUSERTYPE_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(ERECOMMENDUSERTYPE_FIELD_NUMBER, this.eRecommendUserType_.getNumber());
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static RecommendUserInfo parseFrom(ByteString byteString) {
            return (RecommendUserInfo) PARSER.parseFrom(byteString);
        }

        public static RecommendUserInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (RecommendUserInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static RecommendUserInfo parseFrom(byte[] bArr) {
            return (RecommendUserInfo) PARSER.parseFrom(bArr);
        }

        public static RecommendUserInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (RecommendUserInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static RecommendUserInfo parseFrom(InputStream inputStream) {
            return (RecommendUserInfo) PARSER.parseFrom(inputStream);
        }

        public static RecommendUserInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (RecommendUserInfo) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static RecommendUserInfo parseDelimitedFrom(InputStream inputStream) {
            return (RecommendUserInfo) PARSER.parseDelimitedFrom(inputStream);
        }

        public static RecommendUserInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (RecommendUserInfo) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static RecommendUserInfo parseFrom(CodedInputStream codedInputStream) {
            return (RecommendUserInfo) PARSER.parseFrom(codedInputStream);
        }

        public static RecommendUserInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (RecommendUserInfo) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(RecommendUserInfo recommendUserInfo) {
            return newBuilder().mergeFrom(recommendUserInfo);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCAddChatRoomUserRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        ChatRoomInfo getStChatRoomInfo();

        ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStChatRoomInfo();
    }

    public static final class SCAddChatRoomUserRsp extends GeneratedMessage implements SCAddChatRoomUserRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCAddChatRoomUserRsp> PARSER = null;
        public static final int STCHATROOMINFO_FIELD_NUMBER = 2;
        private static final SCAddChatRoomUserRsp defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private ChatRoomInfo stChatRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCAddChatRoomUserRsp.1 */
        class C12531 extends AbstractParser<SCAddChatRoomUserRsp> {
            C12531() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCAddChatRoomUserRsp(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCAddChatRoomUserRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> stChatRoomInfoBuilder_;
            private ChatRoomInfo stChatRoomInfo_;

            static {
                fixHelper.fixfunc(new int[]{1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> getStChatRoomInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6503build();

            public final native SCAddChatRoomUserRsp m6504build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6505buildPartial();

            public final native SCAddChatRoomUserRsp m6506buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6507clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6508clear();

            public final native Builder m6509clear();

            public final native Builder clearEErrCode();

            public final native Builder clearStChatRoomInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6510clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6511clone();

            public final native Builder m6512clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6513getDefaultInstanceForType();

            public final native SCAddChatRoomUserRsp m6514getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native ChatRoomInfo getStChatRoomInfo();

            public final native Builder getStChatRoomInfoBuilder();

            public final native ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasStChatRoomInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6515mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6516mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6517mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6518mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6519mergeFrom(Message message);

            public final native Builder mergeFrom(SCAddChatRoomUserRsp sCAddChatRoomUserRsp);

            public final native Builder mergeStChatRoomInfo(ChatRoomInfo chatRoomInfo);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setStChatRoomInfo(Builder builder);

            public final native Builder setStChatRoomInfo(ChatRoomInfo chatRoomInfo);

            public static final Descriptor getDescriptor() {
                return TexasPoker.aO;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        static {
            fixHelper.fixfunc(new int[]{1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native SCAddChatRoomUserRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ SCAddChatRoomUserRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, SCAddChatRoomUserRsp sCAddChatRoomUserRsp);

        private native SCAddChatRoomUserRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ SCAddChatRoomUserRsp(com.google.protobuf.GeneratedMessage.Builder builder, SCAddChatRoomUserRsp sCAddChatRoomUserRsp);

        private native SCAddChatRoomUserRsp(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6496getDefaultInstanceForType();

        public final native SCAddChatRoomUserRsp m6497getDefaultInstanceForType();

        public final native ERROR_CODE_TYPE getEErrCode();

        public final native Parser<SCAddChatRoomUserRsp> getParserForType();

        public final native int getSerializedSize();

        public final native ChatRoomInfo getStChatRoomInfo();

        public final native ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

        public final native UnknownFieldSet getUnknownFields();

        public final native boolean hasEErrCode();

        public final native boolean hasStChatRoomInfo();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6498newBuilderForType();

        public final native Builder m6499newBuilderForType();

        protected final native Builder m6500newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6501toBuilder();

        public final native Builder m6502toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static SCAddChatRoomUserRsp getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aO;
        }

        static void __clinit__() {
            PARSER = new C12531();
            SCAddChatRoomUserRsp sCAddChatRoomUserRsp = new SCAddChatRoomUserRsp(true);
            defaultInstance = sCAddChatRoomUserRsp;
            sCAddChatRoomUserRsp.initFields();
        }

        public static SCAddChatRoomUserRsp parseFrom(ByteString byteString) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(byteString);
        }

        public static SCAddChatRoomUserRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCAddChatRoomUserRsp parseFrom(byte[] bArr) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(bArr);
        }

        public static SCAddChatRoomUserRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCAddChatRoomUserRsp parseFrom(InputStream inputStream) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(inputStream);
        }

        public static SCAddChatRoomUserRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCAddChatRoomUserRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCAddChatRoomUserRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCAddChatRoomUserRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCAddChatRoomUserRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCAddChatRoomUserRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCAddChatRoomUserRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCAddChatRoomUserRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(SCAddChatRoomUserRsp sCAddChatRoomUserRsp) {
            return newBuilder().mergeFrom(sCAddChatRoomUserRsp);
        }
    }

    public interface SCBuyBuyInRspOrBuilder extends MessageOrBuilder {
        int getBWaitingBuyinConfirmation();

        ERROR_CODE_TYPE getEErrCode();

        long getLBuyinTime();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        UserBaseInfoNet getStUserBaseInfoNet();

        UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

        boolean hasBWaitingBuyinConfirmation();

        boolean hasEErrCode();

        boolean hasLBuyinTime();

        boolean hasStGameRoomInfo();

        boolean hasStUserBaseInfoNet();
    }

    public static final class SCBuyBuyInRsp extends GeneratedMessage implements SCBuyBuyInRspOrBuilder {
        public static final int BWAITINGBUYINCONFIRMATION_FIELD_NUMBER = 4;
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LBUYINTIME_FIELD_NUMBER = 5;
        public static Parser<SCBuyBuyInRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        public static final int STUSERBASEINFONET_FIELD_NUMBER = 3;
        private static final SCBuyBuyInRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bWaitingBuyinConfirmation_;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lBuyinTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private UserBaseInfoNet stUserBaseInfoNet_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyBuyInRsp.1 */
        class C12541 extends AbstractParser<SCBuyBuyInRsp> {
            C12541() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCBuyBuyInRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyBuyInRspOrBuilder {
            private int bWaitingBuyinConfirmation_;
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lBuyinTime_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoNetBuilder_;
            private UserBaseInfoNet stUserBaseInfoNet_;

            static {
                fixHelper.fixfunc(new int[]{3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder();

            private native SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoNetFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6520build();

            public final native SCBuyBuyInRsp m6521build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6522buildPartial();

            public final native SCBuyBuyInRsp m6523buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6524clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6525clear();

            public final native Builder m6526clear();

            public final native Builder clearBWaitingBuyinConfirmation();

            public final native Builder clearEErrCode();

            public final native Builder clearLBuyinTime();

            public final native Builder clearStGameRoomInfo();

            public final native Builder clearStUserBaseInfoNet();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6527clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6528clone();

            public final native Builder m6529clone();

            public final native int getBWaitingBuyinConfirmation();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6530getDefaultInstanceForType();

            public final native SCBuyBuyInRsp m6531getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native long getLBuyinTime();

            public final native GameRoomInfo getStGameRoomInfo();

            public final native Builder getStGameRoomInfoBuilder();

            public final native GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

            public final native UserBaseInfoNet getStUserBaseInfoNet();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoNetBuilder();

            public final native UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

            public final native boolean hasBWaitingBuyinConfirmation();

            public final native boolean hasEErrCode();

            public final native boolean hasLBuyinTime();

            public final native boolean hasStGameRoomInfo();

            public final native boolean hasStUserBaseInfoNet();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6532mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6533mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6534mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6535mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6536mergeFrom(Message message);

            public final native Builder mergeFrom(SCBuyBuyInRsp sCBuyBuyInRsp);

            public final native Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public final native Builder mergeStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet);

            public final native Builder setBWaitingBuyinConfirmation(int i);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setLBuyinTime(long j);

            public final native Builder setStGameRoomInfo(Builder builder);

            public final native Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public final native Builder setStUserBaseInfoNet(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.dw;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCBuyBuyInRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyBuyInRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyBuyInRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyBuyInRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyBuyInRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder2;
                            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                                toBuilder2 = this.stUserBaseInfoNet_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stUserBaseInfoNet_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stUserBaseInfoNet_);
                                this.stUserBaseInfoNet_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.bWaitingBuyinConfirmation_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lBuyinTime_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dw;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dx.ensureFieldAccessorsInitialized(SCBuyBuyInRsp.class, Builder.class);
        }

        static {
            PARSER = new C12541();
            SCBuyBuyInRsp sCBuyBuyInRsp = new SCBuyBuyInRsp(true);
            defaultInstance = sCBuyBuyInRsp;
            sCBuyBuyInRsp.initFields();
        }

        public final Parser<SCBuyBuyInRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasStUserBaseInfoNet() {
            return (this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfoNet() {
            return this.stUserBaseInfoNet_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
            return this.stUserBaseInfoNet_;
        }

        public final boolean hasBWaitingBuyinConfirmation() {
            return (this.bitField0_ & 8) == 8;
        }

        public final int getBWaitingBuyinConfirmation() {
            return this.bWaitingBuyinConfirmation_;
        }

        public final boolean hasLBuyinTime() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLBuyinTime() {
            return this.lBuyinTime_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
            this.bWaitingBuyinConfirmation_ = 0;
            this.lBuyinTime_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt32(BWAITINGBUYINCONFIRMATION_FIELD_NUMBER, this.bWaitingBuyinConfirmation_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LBUYINTIME_FIELD_NUMBER, this.lBuyinTime_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt32Size(BWAITINGBUYINCONFIRMATION_FIELD_NUMBER, this.bWaitingBuyinConfirmation_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LBUYINTIME_FIELD_NUMBER, this.lBuyinTime_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyBuyInRsp parseFrom(ByteString byteString) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(byteString);
        }

        public static SCBuyBuyInRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyBuyInRsp parseFrom(byte[] bArr) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(bArr);
        }

        public static SCBuyBuyInRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyBuyInRsp parseFrom(InputStream inputStream) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(inputStream);
        }

        public static SCBuyBuyInRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyBuyInRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyBuyInRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyBuyInRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyBuyInRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyBuyInRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyBuyInRsp sCBuyBuyInRsp) {
            return newBuilder().mergeFrom(sCBuyBuyInRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCBuyBuyInV2RspOrBuilder extends MessageOrBuilder {
        int getBWaitingBuyinConfirmation();

        ERROR_CODE_TYPE getEErrCode();

        long getLBuyinTime();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        UserBaseInfoNet getStUserBaseInfoNet();

        UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

        boolean hasBWaitingBuyinConfirmation();

        boolean hasEErrCode();

        boolean hasLBuyinTime();

        boolean hasStGameRoomInfo();

        boolean hasStUserBaseInfoNet();
    }

    public static final class SCBuyBuyInV2Rsp extends GeneratedMessage implements SCBuyBuyInV2RspOrBuilder {
        public static final int BWAITINGBUYINCONFIRMATION_FIELD_NUMBER = 4;
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LBUYINTIME_FIELD_NUMBER = 5;
        public static Parser<SCBuyBuyInV2Rsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        public static final int STUSERBASEINFONET_FIELD_NUMBER = 3;
        private static final SCBuyBuyInV2Rsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bWaitingBuyinConfirmation_;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lBuyinTime_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private UserBaseInfoNet stUserBaseInfoNet_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp.1 */
        class C12551 extends AbstractParser<SCBuyBuyInV2Rsp> {
            C12551() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCBuyBuyInV2Rsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyBuyInV2RspOrBuilder {
            private int bWaitingBuyinConfirmation_;
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lBuyinTime_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoNetBuilder_;
            private UserBaseInfoNet stUserBaseInfoNet_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dA;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dB.ensureFieldAccessorsInitialized(SCBuyBuyInV2Rsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCBuyBuyInV2Rsp.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                    getStUserBaseInfoNetFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -5;
                this.bWaitingBuyinConfirmation_ = 0;
                this.bitField0_ &= -9;
                this.lBuyinTime_ = 0;
                this.bitField0_ &= -17;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dA;
            }

            public final SCBuyBuyInV2Rsp getDefaultInstanceForType() {
                return SCBuyBuyInV2Rsp.getDefaultInstance();
            }

            public final SCBuyBuyInV2Rsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCBuyBuyInV2Rsp buildPartial() {
                int i;
                int i2 = SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER;
                SCBuyBuyInV2Rsp sCBuyBuyInV2Rsp = new SCBuyBuyInV2Rsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER) != SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCBuyBuyInV2Rsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCBuyBuyInV2Rsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCBuyBuyInV2Rsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((i3 & SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                    i |= SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                }
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    sCBuyBuyInV2Rsp.stUserBaseInfoNet_ = this.stUserBaseInfoNet_;
                } else {
                    sCBuyBuyInV2Rsp.stUserBaseInfoNet_ = (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.build();
                }
                if ((i3 & 8) == 8) {
                    i |= 8;
                }
                sCBuyBuyInV2Rsp.bWaitingBuyinConfirmation_ = this.bWaitingBuyinConfirmation_;
                if ((i3 & 16) == 16) {
                    i |= 16;
                }
                sCBuyBuyInV2Rsp.lBuyinTime_ = this.lBuyinTime_;
                sCBuyBuyInV2Rsp.bitField0_ = i;
                onBuilt();
                return sCBuyBuyInV2Rsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCBuyBuyInV2Rsp) {
                    return mergeFrom((SCBuyBuyInV2Rsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCBuyBuyInV2Rsp sCBuyBuyInV2Rsp) {
                if (sCBuyBuyInV2Rsp != SCBuyBuyInV2Rsp.getDefaultInstance()) {
                    if (sCBuyBuyInV2Rsp.hasEErrCode()) {
                        setEErrCode(sCBuyBuyInV2Rsp.getEErrCode());
                    }
                    if (sCBuyBuyInV2Rsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCBuyBuyInV2Rsp.getStGameRoomInfo());
                    }
                    if (sCBuyBuyInV2Rsp.hasStUserBaseInfoNet()) {
                        mergeStUserBaseInfoNet(sCBuyBuyInV2Rsp.getStUserBaseInfoNet());
                    }
                    if (sCBuyBuyInV2Rsp.hasBWaitingBuyinConfirmation()) {
                        setBWaitingBuyinConfirmation(sCBuyBuyInV2Rsp.getBWaitingBuyinConfirmation());
                    }
                    if (sCBuyBuyInV2Rsp.hasLBuyinTime()) {
                        setLBuyinTime(sCBuyBuyInV2Rsp.getLBuyinTime());
                    }
                    mergeUnknownFields(sCBuyBuyInV2Rsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                    return false;
                }
                if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCBuyBuyInV2Rsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCBuyBuyInV2Rsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER) == SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER) != SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCBuyBuyInV2Rsp.STGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            public final boolean hasStUserBaseInfoNet() {
                return (this.bitField0_ & SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
            }

            public final UserBaseInfoNet getStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    return this.stUserBaseInfoNet_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    this.stUserBaseInfoNetBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfoNet_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                return this;
            }

            public final Builder setStUserBaseInfoNet(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) != SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER || this.stUserBaseInfoNet_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfoNet_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfoNet_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfoNet_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoNetBuilder() {
                this.bitField0_ |= SCBuyBuyInV2Rsp.BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoNetFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfoNet_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoNetFieldBuilder() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNetBuilder_ = new SingleFieldBuilder(getStUserBaseInfoNet(), getParentForChildren(), isClean());
                    this.stUserBaseInfoNet_ = null;
                }
                return this.stUserBaseInfoNetBuilder_;
            }

            public final boolean hasBWaitingBuyinConfirmation() {
                return (this.bitField0_ & 8) == 8;
            }

            public final int getBWaitingBuyinConfirmation() {
                return this.bWaitingBuyinConfirmation_;
            }

            public final Builder setBWaitingBuyinConfirmation(int i) {
                this.bitField0_ |= 8;
                this.bWaitingBuyinConfirmation_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBWaitingBuyinConfirmation() {
                this.bitField0_ &= -9;
                this.bWaitingBuyinConfirmation_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBuyinTime() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLBuyinTime() {
                return this.lBuyinTime_;
            }

            public final Builder setLBuyinTime(long j) {
                this.bitField0_ |= 16;
                this.lBuyinTime_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBuyinTime() {
                this.bitField0_ &= -17;
                this.lBuyinTime_ = 0;
                onChanged();
                return this;
            }
        }

        private SCBuyBuyInV2Rsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyBuyInV2Rsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyBuyInV2Rsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyBuyInV2Rsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyBuyInV2Rsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder2;
                            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                                toBuilder2 = this.stUserBaseInfoNet_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stUserBaseInfoNet_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stUserBaseInfoNet_);
                                this.stUserBaseInfoNet_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.bWaitingBuyinConfirmation_ = codedInputStream.readInt32();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lBuyinTime_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dA;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dB.ensureFieldAccessorsInitialized(SCBuyBuyInV2Rsp.class, Builder.class);
        }

        static {
            PARSER = new C12551();
            SCBuyBuyInV2Rsp sCBuyBuyInV2Rsp = new SCBuyBuyInV2Rsp(true);
            defaultInstance = sCBuyBuyInV2Rsp;
            sCBuyBuyInV2Rsp.initFields();
        }

        public final Parser<SCBuyBuyInV2Rsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasStUserBaseInfoNet() {
            return (this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER;
        }

        public final UserBaseInfoNet getStUserBaseInfoNet() {
            return this.stUserBaseInfoNet_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
            return this.stUserBaseInfoNet_;
        }

        public final boolean hasBWaitingBuyinConfirmation() {
            return (this.bitField0_ & 8) == 8;
        }

        public final int getBWaitingBuyinConfirmation() {
            return this.bWaitingBuyinConfirmation_;
        }

        public final boolean hasLBuyinTime() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLBuyinTime() {
            return this.lBuyinTime_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
            this.bWaitingBuyinConfirmation_ = 0;
            this.lBuyinTime_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt32(BWAITINGBUYINCONFIRMATION_FIELD_NUMBER, this.bWaitingBuyinConfirmation_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LBUYINTIME_FIELD_NUMBER, this.lBuyinTime_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) == BWAITINGBUYINCONFIRMATION_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt32Size(BWAITINGBUYINCONFIRMATION_FIELD_NUMBER, this.bWaitingBuyinConfirmation_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LBUYINTIME_FIELD_NUMBER, this.lBuyinTime_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyBuyInV2Rsp parseFrom(ByteString byteString) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(byteString);
        }

        public static SCBuyBuyInV2Rsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyBuyInV2Rsp parseFrom(byte[] bArr) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(bArr);
        }

        public static SCBuyBuyInV2Rsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyBuyInV2Rsp parseFrom(InputStream inputStream) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(inputStream);
        }

        public static SCBuyBuyInV2Rsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyBuyInV2Rsp parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyBuyInV2Rsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyBuyInV2Rsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInV2Rsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyBuyInV2Rsp parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyBuyInV2Rsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyBuyInV2Rsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyBuyInV2Rsp sCBuyBuyInV2Rsp) {
            return newBuilder().mergeFrom(sCBuyBuyInV2Rsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCBuyInsuranceDelayRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLCoin();

        long getLGameRoomID();

        InsuranceUserInfo getStInsuranceUserInfo();

        InsuranceUserInfoOrBuilder getStInsuranceUserInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasLCoin();

        boolean hasLGameRoomID();

        boolean hasStInsuranceUserInfo();
    }

    public static final class SCBuyInsuranceDelayRsp extends GeneratedMessage implements SCBuyInsuranceDelayRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LCOIN_FIELD_NUMBER = 4;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<SCBuyInsuranceDelayRsp> PARSER = null;
        public static final int STINSURANCEUSERINFO_FIELD_NUMBER = 3;
        private static final SCBuyInsuranceDelayRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lCoin_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private InsuranceUserInfo stInsuranceUserInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyInsuranceDelayRsp.1 */
        class C12561 extends AbstractParser<SCBuyInsuranceDelayRsp> {
            C12561() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCBuyInsuranceDelayRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyInsuranceDelayRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lCoin_;
            private long lGameRoomID_;
            private SingleFieldBuilder<InsuranceUserInfo, Builder, InsuranceUserInfoOrBuilder> stInsuranceUserInfoBuilder_;
            private InsuranceUserInfo stInsuranceUserInfo_;

            static {
                fixHelper.fixfunc(new int[]{2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<InsuranceUserInfo, Builder, InsuranceUserInfoOrBuilder> getStInsuranceUserInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6537build();

            public final native SCBuyInsuranceDelayRsp m6538build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6539buildPartial();

            public final native SCBuyInsuranceDelayRsp m6540buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6541clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6542clear();

            public final native Builder m6543clear();

            public final native Builder clearEErrCode();

            public final native Builder clearLCoin();

            public final native Builder clearLGameRoomID();

            public final native Builder clearStInsuranceUserInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6544clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6545clone();

            public final native Builder m6546clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6547getDefaultInstanceForType();

            public final native SCBuyInsuranceDelayRsp m6548getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native long getLCoin();

            public final native long getLGameRoomID();

            public final native InsuranceUserInfo getStInsuranceUserInfo();

            public final native Builder getStInsuranceUserInfoBuilder();

            public final native InsuranceUserInfoOrBuilder getStInsuranceUserInfoOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasLCoin();

            public final native boolean hasLGameRoomID();

            public final native boolean hasStInsuranceUserInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6549mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6550mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6551mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6552mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6553mergeFrom(Message message);

            public final native Builder mergeFrom(SCBuyInsuranceDelayRsp sCBuyInsuranceDelayRsp);

            public final native Builder mergeStInsuranceUserInfo(InsuranceUserInfo insuranceUserInfo);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setLCoin(long j);

            public final native Builder setLGameRoomID(long j);

            public final native Builder setStInsuranceUserInfo(Builder builder);

            public final native Builder setStInsuranceUserInfo(InsuranceUserInfo insuranceUserInfo);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gA;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCBuyInsuranceDelayRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyInsuranceDelayRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyInsuranceDelayRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyInsuranceDelayRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyInsuranceDelayRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & LCOIN_FIELD_NUMBER) == LCOIN_FIELD_NUMBER) {
                                toBuilder = this.stInsuranceUserInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stInsuranceUserInfo_ = (InsuranceUserInfo) codedInputStream.readMessage(InsuranceUserInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stInsuranceUserInfo_);
                                this.stInsuranceUserInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= LCOIN_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lCoin_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gA;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gB.ensureFieldAccessorsInitialized(SCBuyInsuranceDelayRsp.class, Builder.class);
        }

        static {
            PARSER = new C12561();
            SCBuyInsuranceDelayRsp sCBuyInsuranceDelayRsp = new SCBuyInsuranceDelayRsp(true);
            defaultInstance = sCBuyInsuranceDelayRsp;
            sCBuyInsuranceDelayRsp.initFields();
        }

        public final Parser<SCBuyInsuranceDelayRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasStInsuranceUserInfo() {
            return (this.bitField0_ & LCOIN_FIELD_NUMBER) == LCOIN_FIELD_NUMBER;
        }

        public final InsuranceUserInfo getStInsuranceUserInfo() {
            return this.stInsuranceUserInfo_;
        }

        public final InsuranceUserInfoOrBuilder getStInsuranceUserInfoOrBuilder() {
            return this.stInsuranceUserInfo_;
        }

        public final boolean hasLCoin() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLCoin() {
            return this.lCoin_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.lGameRoomID_ = 0;
            this.stInsuranceUserInfo_ = InsuranceUserInfo.getDefaultInstance();
            this.lCoin_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStInsuranceUserInfo() || getStInsuranceUserInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & LCOIN_FIELD_NUMBER) == LCOIN_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STINSURANCEUSERINFO_FIELD_NUMBER, this.stInsuranceUserInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LCOIN_FIELD_NUMBER, this.lCoin_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & LCOIN_FIELD_NUMBER) == LCOIN_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STINSURANCEUSERINFO_FIELD_NUMBER, this.stInsuranceUserInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LCOIN_FIELD_NUMBER, this.lCoin_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyInsuranceDelayRsp parseFrom(ByteString byteString) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(byteString);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(byte[] bArr) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(bArr);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(InputStream inputStream) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(inputStream);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyInsuranceDelayRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyInsuranceDelayRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyInsuranceDelayRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceDelayRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyInsuranceDelayRsp sCBuyInsuranceDelayRsp) {
            return newBuilder().mergeFrom(sCBuyInsuranceDelayRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCBuyInsuranceRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStGameRoomInfo();
    }

    public static final class SCBuyInsuranceRsp extends GeneratedMessage implements SCBuyInsuranceRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCBuyInsuranceRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCBuyInsuranceRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp.1 */
        class C12571 extends AbstractParser<SCBuyInsuranceRsp> {
            C12571() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCBuyInsuranceRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyInsuranceRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.go;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gp.ensureFieldAccessorsInitialized(SCBuyInsuranceRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCBuyInsuranceRsp.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.go;
            }

            public final SCBuyInsuranceRsp getDefaultInstanceForType() {
                return SCBuyInsuranceRsp.getDefaultInstance();
            }

            public final SCBuyInsuranceRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCBuyInsuranceRsp buildPartial() {
                int i;
                int i2 = SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER;
                SCBuyInsuranceRsp sCBuyInsuranceRsp = new SCBuyInsuranceRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER) != SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCBuyInsuranceRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCBuyInsuranceRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCBuyInsuranceRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                sCBuyInsuranceRsp.bitField0_ = i;
                onBuilt();
                return sCBuyInsuranceRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCBuyInsuranceRsp) {
                    return mergeFrom((SCBuyInsuranceRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCBuyInsuranceRsp sCBuyInsuranceRsp) {
                if (sCBuyInsuranceRsp != SCBuyInsuranceRsp.getDefaultInstance()) {
                    if (sCBuyInsuranceRsp.hasEErrCode()) {
                        setEErrCode(sCBuyInsuranceRsp.getEErrCode());
                    }
                    if (sCBuyInsuranceRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCBuyInsuranceRsp.getStGameRoomInfo());
                    }
                    mergeUnknownFields(sCBuyInsuranceRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCBuyInsuranceRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCBuyInsuranceRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER) == SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCBuyInsuranceRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER) != SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCBuyInsuranceRsp.STGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }
        }

        private SCBuyInsuranceRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyInsuranceRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyInsuranceRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyInsuranceRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyInsuranceRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.go;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gp.ensureFieldAccessorsInitialized(SCBuyInsuranceRsp.class, Builder.class);
        }

        static {
            PARSER = new C12571();
            SCBuyInsuranceRsp sCBuyInsuranceRsp = new SCBuyInsuranceRsp(true);
            defaultInstance = sCBuyInsuranceRsp;
            sCBuyInsuranceRsp.initFields();
        }

        public final Parser<SCBuyInsuranceRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyInsuranceRsp parseFrom(ByteString byteString) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(byteString);
        }

        public static SCBuyInsuranceRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyInsuranceRsp parseFrom(byte[] bArr) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(bArr);
        }

        public static SCBuyInsuranceRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyInsuranceRsp parseFrom(InputStream inputStream) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(inputStream);
        }

        public static SCBuyInsuranceRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyInsuranceRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyInsuranceRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyInsuranceRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyInsuranceRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyInsuranceRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyInsuranceRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyInsuranceRsp sCBuyInsuranceRsp) {
            return newBuilder().mergeFrom(sCBuyInsuranceRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCBuyinActionRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLActionUuid();

        long getLGameRoomID();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasLActionUuid();

        boolean hasLGameRoomID();

        boolean hasStGameRoomInfo();
    }

    public static final class SCBuyinActionRsp extends GeneratedMessage implements SCBuyinActionRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LACTIONUUID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 4;
        public static Parser<SCBuyinActionRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCBuyinActionRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lActionUuid_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyinActionRsp.1 */
        class C12581 extends AbstractParser<SCBuyinActionRsp> {
            static {
                fixHelper.fixfunc(new int[]{1149, 1150});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12581();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyinActionRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lActionUuid_;
            private long lGameRoomID_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cG;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cH.ensureFieldAccessorsInitialized(SCBuyinActionRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCBuyinActionRsp.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                this.lActionUuid_ = 0;
                this.bitField0_ &= -5;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cG;
            }

            public final SCBuyinActionRsp getDefaultInstanceForType() {
                return SCBuyinActionRsp.getDefaultInstance();
            }

            public final SCBuyinActionRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCBuyinActionRsp buildPartial() {
                int i;
                int i2 = SCBuyinActionRsp.EERRCODE_FIELD_NUMBER;
                SCBuyinActionRsp sCBuyinActionRsp = new SCBuyinActionRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCBuyinActionRsp.EERRCODE_FIELD_NUMBER) != SCBuyinActionRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCBuyinActionRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCBuyinActionRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCBuyinActionRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((i3 & SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER) == SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER) {
                    i |= SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER;
                }
                sCBuyinActionRsp.lActionUuid_ = this.lActionUuid_;
                if ((i3 & 8) == 8) {
                    i |= 8;
                }
                sCBuyinActionRsp.lGameRoomID_ = this.lGameRoomID_;
                sCBuyinActionRsp.bitField0_ = i;
                onBuilt();
                return sCBuyinActionRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCBuyinActionRsp) {
                    return mergeFrom((SCBuyinActionRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCBuyinActionRsp sCBuyinActionRsp) {
                if (sCBuyinActionRsp != SCBuyinActionRsp.getDefaultInstance()) {
                    if (sCBuyinActionRsp.hasEErrCode()) {
                        setEErrCode(sCBuyinActionRsp.getEErrCode());
                    }
                    if (sCBuyinActionRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCBuyinActionRsp.getStGameRoomInfo());
                    }
                    if (sCBuyinActionRsp.hasLActionUuid()) {
                        setLActionUuid(sCBuyinActionRsp.getLActionUuid());
                    }
                    if (sCBuyinActionRsp.hasLGameRoomID()) {
                        setLGameRoomID(sCBuyinActionRsp.getLGameRoomID());
                    }
                    mergeUnknownFields(sCBuyinActionRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCBuyinActionRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCBuyinActionRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyinActionRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyinActionRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCBuyinActionRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCBuyinActionRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCBuyinActionRsp.EERRCODE_FIELD_NUMBER) == SCBuyinActionRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCBuyinActionRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER) != SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCBuyinActionRsp.STGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            public final boolean hasLActionUuid() {
                return (this.bitField0_ & SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER) == SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLActionUuid() {
                return this.lActionUuid_;
            }

            public final Builder setLActionUuid(long j) {
                this.bitField0_ |= SCBuyinActionRsp.LGAMEROOMID_FIELD_NUMBER;
                this.lActionUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLActionUuid() {
                this.bitField0_ &= -5;
                this.lActionUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= 8;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -9;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        private SCBuyinActionRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyinActionRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyinActionRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyinActionRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyinActionRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lActionUuid_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cG;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cH.ensureFieldAccessorsInitialized(SCBuyinActionRsp.class, Builder.class);
        }

        static {
            PARSER = new C12581();
            SCBuyinActionRsp sCBuyinActionRsp = new SCBuyinActionRsp(true);
            defaultInstance = sCBuyinActionRsp;
            sCBuyinActionRsp.initFields();
        }

        public final Parser<SCBuyinActionRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasLActionUuid() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLActionUuid() {
            return this.lActionUuid_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.lActionUuid_ = 0;
            this.lGameRoomID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LACTIONUUID_FIELD_NUMBER, this.lActionUuid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyinActionRsp parseFrom(ByteString byteString) {
            return (SCBuyinActionRsp) PARSER.parseFrom(byteString);
        }

        public static SCBuyinActionRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinActionRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyinActionRsp parseFrom(byte[] bArr) {
            return (SCBuyinActionRsp) PARSER.parseFrom(bArr);
        }

        public static SCBuyinActionRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinActionRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyinActionRsp parseFrom(InputStream inputStream) {
            return (SCBuyinActionRsp) PARSER.parseFrom(inputStream);
        }

        public static SCBuyinActionRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinActionRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyinActionRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyinActionRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyinActionRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinActionRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyinActionRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyinActionRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyinActionRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinActionRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyinActionRsp sCBuyinActionRsp) {
            return newBuilder().mergeFrom(sCBuyinActionRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCBuyinControlMsgOrBuilder extends MessageOrBuilder {
        BuyinControlMsg getStBuyinControlMsg();

        BuyinControlMsgOrBuilder getStBuyinControlMsgOrBuilder();

        boolean hasStBuyinControlMsg();
    }

    public static final class SCBuyinControlMsg extends GeneratedMessage implements SCBuyinControlMsgOrBuilder {
        public static Parser<SCBuyinControlMsg> PARSER = null;
        public static final int STBUYINCONTROLMSG_FIELD_NUMBER = 1;
        private static final SCBuyinControlMsg defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private BuyinControlMsg stBuyinControlMsg_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCBuyinControlMsg.1 */
        class C12591 extends AbstractParser<SCBuyinControlMsg> {
            C12591() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCBuyinControlMsg(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCBuyinControlMsgOrBuilder {
            private int bitField0_;
            private SingleFieldBuilder<BuyinControlMsg, Builder, BuyinControlMsgOrBuilder> stBuyinControlMsgBuilder_;
            private BuyinControlMsg stBuyinControlMsg_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.cA;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.cB.ensureFieldAccessorsInitialized(SCBuyinControlMsg.class, Builder.class);
            }

            private Builder() {
                this.stBuyinControlMsg_ = BuyinControlMsg.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stBuyinControlMsg_ = BuyinControlMsg.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCBuyinControlMsg.alwaysUseFieldBuilders) {
                    getStBuyinControlMsgFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stBuyinControlMsgBuilder_ == null) {
                    this.stBuyinControlMsg_ = BuyinControlMsg.getDefaultInstance();
                } else {
                    this.stBuyinControlMsgBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.cA;
            }

            public final SCBuyinControlMsg getDefaultInstanceForType() {
                return SCBuyinControlMsg.getDefaultInstance();
            }

            public final SCBuyinControlMsg build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCBuyinControlMsg buildPartial() {
                SCBuyinControlMsg sCBuyinControlMsg = new SCBuyinControlMsg(null);
                int i = 0;
                if ((this.bitField0_ & SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER) == SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER) {
                    i = SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
                }
                if (this.stBuyinControlMsgBuilder_ == null) {
                    sCBuyinControlMsg.stBuyinControlMsg_ = this.stBuyinControlMsg_;
                } else {
                    sCBuyinControlMsg.stBuyinControlMsg_ = (BuyinControlMsg) this.stBuyinControlMsgBuilder_.build();
                }
                sCBuyinControlMsg.bitField0_ = i;
                onBuilt();
                return sCBuyinControlMsg;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCBuyinControlMsg) {
                    return mergeFrom((SCBuyinControlMsg) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCBuyinControlMsg sCBuyinControlMsg) {
                if (sCBuyinControlMsg != SCBuyinControlMsg.getDefaultInstance()) {
                    if (sCBuyinControlMsg.hasStBuyinControlMsg()) {
                        mergeStBuyinControlMsg(sCBuyinControlMsg.getStBuyinControlMsg());
                    }
                    mergeUnknownFields(sCBuyinControlMsg.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStBuyinControlMsg() && getStBuyinControlMsg().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCBuyinControlMsg.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCBuyinControlMsg.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyinControlMsg) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCBuyinControlMsg) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCBuyinControlMsg.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCBuyinControlMsg$Builder");
            }

            public final boolean hasStBuyinControlMsg() {
                return (this.bitField0_ & SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER) == SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
            }

            public final BuyinControlMsg getStBuyinControlMsg() {
                if (this.stBuyinControlMsgBuilder_ == null) {
                    return this.stBuyinControlMsg_;
                }
                return (BuyinControlMsg) this.stBuyinControlMsgBuilder_.getMessage();
            }

            public final Builder setStBuyinControlMsg(BuyinControlMsg buyinControlMsg) {
                if (this.stBuyinControlMsgBuilder_ != null) {
                    this.stBuyinControlMsgBuilder_.setMessage(buyinControlMsg);
                } else if (buyinControlMsg == null) {
                    throw new NullPointerException();
                } else {
                    this.stBuyinControlMsg_ = buyinControlMsg;
                    onChanged();
                }
                this.bitField0_ |= SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder setStBuyinControlMsg(Builder builder) {
                if (this.stBuyinControlMsgBuilder_ == null) {
                    this.stBuyinControlMsg_ = builder.build();
                    onChanged();
                } else {
                    this.stBuyinControlMsgBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStBuyinControlMsg(BuyinControlMsg buyinControlMsg) {
                if (this.stBuyinControlMsgBuilder_ == null) {
                    if ((this.bitField0_ & SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER) != SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER || this.stBuyinControlMsg_ == BuyinControlMsg.getDefaultInstance()) {
                        this.stBuyinControlMsg_ = buyinControlMsg;
                    } else {
                        this.stBuyinControlMsg_ = BuyinControlMsg.newBuilder(this.stBuyinControlMsg_).mergeFrom(buyinControlMsg).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stBuyinControlMsgBuilder_.mergeFrom(buyinControlMsg);
                }
                this.bitField0_ |= SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStBuyinControlMsg() {
                if (this.stBuyinControlMsgBuilder_ == null) {
                    this.stBuyinControlMsg_ = BuyinControlMsg.getDefaultInstance();
                    onChanged();
                } else {
                    this.stBuyinControlMsgBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder getStBuyinControlMsgBuilder() {
                this.bitField0_ |= SCBuyinControlMsg.STBUYINCONTROLMSG_FIELD_NUMBER;
                onChanged();
                return (Builder) getStBuyinControlMsgFieldBuilder().getBuilder();
            }

            public final BuyinControlMsgOrBuilder getStBuyinControlMsgOrBuilder() {
                if (this.stBuyinControlMsgBuilder_ != null) {
                    return (BuyinControlMsgOrBuilder) this.stBuyinControlMsgBuilder_.getMessageOrBuilder();
                }
                return this.stBuyinControlMsg_;
            }

            private SingleFieldBuilder<BuyinControlMsg, Builder, BuyinControlMsgOrBuilder> getStBuyinControlMsgFieldBuilder() {
                if (this.stBuyinControlMsgBuilder_ == null) {
                    this.stBuyinControlMsgBuilder_ = new SingleFieldBuilder(getStBuyinControlMsg(), getParentForChildren(), isClean());
                    this.stBuyinControlMsg_ = null;
                }
                return this.stBuyinControlMsgBuilder_;
            }
        }

        private SCBuyinControlMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCBuyinControlMsg(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCBuyinControlMsg getDefaultInstance() {
            return defaultInstance;
        }

        public final SCBuyinControlMsg getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCBuyinControlMsg(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STBUYINCONTROLMSG_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STBUYINCONTROLMSG_FIELD_NUMBER) == STBUYINCONTROLMSG_FIELD_NUMBER) {
                                toBuilder = this.stBuyinControlMsg_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stBuyinControlMsg_ = (BuyinControlMsg) codedInputStream.readMessage(BuyinControlMsg.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stBuyinControlMsg_);
                                this.stBuyinControlMsg_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STBUYINCONTROLMSG_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STBUYINCONTROLMSG_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cA;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.cB.ensureFieldAccessorsInitialized(SCBuyinControlMsg.class, Builder.class);
        }

        static {
            PARSER = new C12591();
            SCBuyinControlMsg sCBuyinControlMsg = new SCBuyinControlMsg(true);
            defaultInstance = sCBuyinControlMsg;
            sCBuyinControlMsg.initFields();
        }

        public final Parser<SCBuyinControlMsg> getParserForType() {
            return PARSER;
        }

        public final boolean hasStBuyinControlMsg() {
            return (this.bitField0_ & STBUYINCONTROLMSG_FIELD_NUMBER) == STBUYINCONTROLMSG_FIELD_NUMBER;
        }

        public final BuyinControlMsg getStBuyinControlMsg() {
            return this.stBuyinControlMsg_;
        }

        public final BuyinControlMsgOrBuilder getStBuyinControlMsgOrBuilder() {
            return this.stBuyinControlMsg_;
        }

        private void initFields() {
            this.stBuyinControlMsg_ = BuyinControlMsg.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStBuyinControlMsg()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStBuyinControlMsg().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & STBUYINCONTROLMSG_FIELD_NUMBER) == STBUYINCONTROLMSG_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STBUYINCONTROLMSG_FIELD_NUMBER, this.stBuyinControlMsg_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & STBUYINCONTROLMSG_FIELD_NUMBER) == STBUYINCONTROLMSG_FIELD_NUMBER) {
                i = CodedOutputStream.computeMessageSize(STBUYINCONTROLMSG_FIELD_NUMBER, this.stBuyinControlMsg_) + 0;
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCBuyinControlMsg parseFrom(ByteString byteString) {
            return (SCBuyinControlMsg) PARSER.parseFrom(byteString);
        }

        public static SCBuyinControlMsg parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinControlMsg) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCBuyinControlMsg parseFrom(byte[] bArr) {
            return (SCBuyinControlMsg) PARSER.parseFrom(bArr);
        }

        public static SCBuyinControlMsg parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinControlMsg) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCBuyinControlMsg parseFrom(InputStream inputStream) {
            return (SCBuyinControlMsg) PARSER.parseFrom(inputStream);
        }

        public static SCBuyinControlMsg parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinControlMsg) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyinControlMsg parseDelimitedFrom(InputStream inputStream) {
            return (SCBuyinControlMsg) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCBuyinControlMsg parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinControlMsg) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCBuyinControlMsg parseFrom(CodedInputStream codedInputStream) {
            return (SCBuyinControlMsg) PARSER.parseFrom(codedInputStream);
        }

        public static SCBuyinControlMsg parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCBuyinControlMsg) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCBuyinControlMsg sCBuyinControlMsg) {
            return newBuilder().mergeFrom(sCBuyinControlMsg);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCCancelGameRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLGameRoomID();

        boolean hasEErrCode();

        boolean hasLGameRoomID();
    }

    public static final class SCCancelGameRsp extends GeneratedMessage implements SCCancelGameRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<SCCancelGameRsp> PARSER;
        private static final SCCancelGameRsp defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCancelGameRsp.1 */
        class C12601 extends AbstractParser<SCCancelGameRsp> {
            C12601() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCCancelGameRsp(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCancelGameRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lGameRoomID_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gY;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gZ.ensureFieldAccessorsInitialized(SCCancelGameRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                SCCancelGameRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gY;
            }

            public final SCCancelGameRsp getDefaultInstanceForType() {
                return SCCancelGameRsp.getDefaultInstance();
            }

            public final SCCancelGameRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCCancelGameRsp buildPartial() {
                int i = SCCancelGameRsp.EERRCODE_FIELD_NUMBER;
                SCCancelGameRsp sCCancelGameRsp = new SCCancelGameRsp((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & SCCancelGameRsp.EERRCODE_FIELD_NUMBER) != SCCancelGameRsp.EERRCODE_FIELD_NUMBER) {
                    i = 0;
                }
                sCCancelGameRsp.eErrCode_ = this.eErrCode_;
                if ((i2 & SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER) == SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER) {
                    i |= SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER;
                }
                sCCancelGameRsp.lGameRoomID_ = this.lGameRoomID_;
                sCCancelGameRsp.bitField0_ = i;
                onBuilt();
                return sCCancelGameRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCCancelGameRsp) {
                    return mergeFrom((SCCancelGameRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCCancelGameRsp sCCancelGameRsp) {
                if (sCCancelGameRsp != SCCancelGameRsp.getDefaultInstance()) {
                    if (sCCancelGameRsp.hasEErrCode()) {
                        setEErrCode(sCCancelGameRsp.getEErrCode());
                    }
                    if (sCCancelGameRsp.hasLGameRoomID()) {
                        setLGameRoomID(sCCancelGameRsp.getLGameRoomID());
                    }
                    mergeUnknownFields(sCCancelGameRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasEErrCode()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCCancelGameRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCCancelGameRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCCancelGameRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCCancelGameRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCCancelGameRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCCancelGameRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCCancelGameRsp.EERRCODE_FIELD_NUMBER) == SCCancelGameRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCCancelGameRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER) == SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= SCCancelGameRsp.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native SCCancelGameRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ SCCancelGameRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, SCCancelGameRsp sCCancelGameRsp);

        private native SCCancelGameRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ SCCancelGameRsp(com.google.protobuf.GeneratedMessage.Builder builder, SCCancelGameRsp sCCancelGameRsp);

        private native SCCancelGameRsp(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6554getDefaultInstanceForType();

        public final native SCCancelGameRsp m6555getDefaultInstanceForType();

        public final native ERROR_CODE_TYPE getEErrCode();

        public final native long getLGameRoomID();

        public final native Parser<SCCancelGameRsp> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native boolean hasEErrCode();

        public final native boolean hasLGameRoomID();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6556newBuilderForType();

        public final native Builder m6557newBuilderForType();

        protected final native Builder m6558newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6559toBuilder();

        public final native Builder m6560toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static SCCancelGameRsp getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gY;
        }

        static void __clinit__() {
            PARSER = new C12601();
            SCCancelGameRsp sCCancelGameRsp = new SCCancelGameRsp(true);
            defaultInstance = sCCancelGameRsp;
            sCCancelGameRsp.initFields();
        }

        public static SCCancelGameRsp parseFrom(ByteString byteString) {
            return (SCCancelGameRsp) PARSER.parseFrom(byteString);
        }

        public static SCCancelGameRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCancelGameRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCancelGameRsp parseFrom(byte[] bArr) {
            return (SCCancelGameRsp) PARSER.parseFrom(bArr);
        }

        public static SCCancelGameRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCancelGameRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCancelGameRsp parseFrom(InputStream inputStream) {
            return (SCCancelGameRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCancelGameRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCancelGameRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCancelGameRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCancelGameRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCancelGameRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCancelGameRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCancelGameRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCancelGameRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCancelGameRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCancelGameRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(SCCancelGameRsp sCCancelGameRsp) {
            return newBuilder().mergeFrom(sCCancelGameRsp);
        }
    }

    public interface SCCreateChatRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        ChatRoomInfo getStChatRoomInfo();

        ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStChatRoomInfo();
    }

    public static final class SCCreateChatRoomRsp extends GeneratedMessage implements SCCreateChatRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCCreateChatRoomRsp> PARSER = null;
        public static final int STCHATROOMINFO_FIELD_NUMBER = 2;
        private static final SCCreateChatRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private ChatRoomInfo stChatRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreateChatRoomRsp.1 */
        class C12611 extends AbstractParser<SCCreateChatRoomRsp> {
            static {
                fixHelper.fixfunc(new int[]{1147, 1148});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12611();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreateChatRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> stChatRoomInfoBuilder_;
            private ChatRoomInfo stChatRoomInfo_;

            static {
                fixHelper.fixfunc(new int[]{1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<ChatRoomInfo, Builder, ChatRoomInfoOrBuilder> getStChatRoomInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6561build();

            public final native SCCreateChatRoomRsp m6562build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6563buildPartial();

            public final native SCCreateChatRoomRsp m6564buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6565clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6566clear();

            public final native Builder m6567clear();

            public final native Builder clearEErrCode();

            public final native Builder clearStChatRoomInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6568clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6569clone();

            public final native Builder m6570clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6571getDefaultInstanceForType();

            public final native SCCreateChatRoomRsp m6572getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native ChatRoomInfo getStChatRoomInfo();

            public final native Builder getStChatRoomInfoBuilder();

            public final native ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasStChatRoomInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6573mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6574mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6575mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6576mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6577mergeFrom(Message message);

            public final native Builder mergeFrom(SCCreateChatRoomRsp sCCreateChatRoomRsp);

            public final native Builder mergeStChatRoomInfo(ChatRoomInfo chatRoomInfo);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setStChatRoomInfo(Builder builder);

            public final native Builder setStChatRoomInfo(ChatRoomInfo chatRoomInfo);

            public static final Descriptor getDescriptor() {
                return TexasPoker.aG;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCCreateChatRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCCreateChatRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCCreateChatRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCCreateChatRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCCreateChatRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stChatRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stChatRoomInfo_ = (ChatRoomInfo) codedInputStream.readMessage(ChatRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stChatRoomInfo_);
                                this.stChatRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STCHATROOMINFO_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.aG;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.aH.ensureFieldAccessorsInitialized(SCCreateChatRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12611();
            SCCreateChatRoomRsp sCCreateChatRoomRsp = new SCCreateChatRoomRsp(true);
            defaultInstance = sCCreateChatRoomRsp;
            sCCreateChatRoomRsp.initFields();
        }

        public final Parser<SCCreateChatRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStChatRoomInfo() {
            return (this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER;
        }

        public final ChatRoomInfo getStChatRoomInfo() {
            return this.stChatRoomInfo_;
        }

        public final ChatRoomInfoOrBuilder getStChatRoomInfoOrBuilder() {
            return this.stChatRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stChatRoomInfo_ = ChatRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStChatRoomInfo() || getStChatRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STCHATROOMINFO_FIELD_NUMBER, this.stChatRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STCHATROOMINFO_FIELD_NUMBER) == STCHATROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STCHATROOMINFO_FIELD_NUMBER, this.stChatRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCCreateChatRoomRsp parseFrom(ByteString byteString) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreateChatRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreateChatRoomRsp parseFrom(byte[] bArr) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreateChatRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreateChatRoomRsp parseFrom(InputStream inputStream) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreateChatRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateChatRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreateChatRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreateChatRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateChatRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateChatRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreateChatRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateChatRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCCreateChatRoomRsp sCCreateChatRoomRsp) {
            return newBuilder().mergeFrom(sCCreateChatRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCCreateGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLGameRoomId();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        UserBaseInfoNet getStUserBaseInfoNet();

        UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

        boolean hasEErrCode();

        boolean hasLGameRoomId();

        boolean hasStGameRoomInfo();

        boolean hasStUserBaseInfoNet();
    }

    public static final class SCCreateGameRoomRsp extends GeneratedMessage implements SCCreateGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<SCCreateGameRoomRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 3;
        public static final int STUSERBASEINFONET_FIELD_NUMBER = 4;
        private static final SCCreateGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lGameRoomId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private UserBaseInfoNet stUserBaseInfoNet_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreateGameRoomRsp.1 */
        class C12621 extends AbstractParser<SCCreateGameRoomRsp> {
            C12621() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCCreateGameRoomRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreateGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lGameRoomId_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoNetBuilder_;
            private UserBaseInfoNet stUserBaseInfoNet_;

            static {
                fixHelper.fixfunc(new int[]{2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder();

            private native SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoNetFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6578build();

            public final native SCCreateGameRoomRsp m6579build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6580buildPartial();

            public final native SCCreateGameRoomRsp m6581buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6582clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6583clear();

            public final native Builder m6584clear();

            public final native Builder clearEErrCode();

            public final native Builder clearLGameRoomId();

            public final native Builder clearStGameRoomInfo();

            public final native Builder clearStUserBaseInfoNet();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6585clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6586clone();

            public final native Builder m6587clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6588getDefaultInstanceForType();

            public final native SCCreateGameRoomRsp m6589getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native long getLGameRoomId();

            public final native GameRoomInfo getStGameRoomInfo();

            public final native Builder getStGameRoomInfoBuilder();

            public final native GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

            public final native UserBaseInfoNet getStUserBaseInfoNet();

            public final native com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoNetBuilder();

            public final native UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasLGameRoomId();

            public final native boolean hasStGameRoomInfo();

            public final native boolean hasStUserBaseInfoNet();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6590mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6591mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6592mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6593mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6594mergeFrom(Message message);

            public final native Builder mergeFrom(SCCreateGameRoomRsp sCCreateGameRoomRsp);

            public final native Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public final native Builder mergeStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setLGameRoomId(long j);

            public final native Builder setStGameRoomInfo(Builder builder);

            public final native Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public final native Builder setStUserBaseInfoNet(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder);

            public final native Builder setStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet);

            public static final Descriptor getDescriptor() {
                return TexasPoker.bK;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCCreateGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCCreateGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCCreateGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCCreateGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCCreateGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomId_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFONET_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder2;
                            if ((this.bitField0_ & 8) == 8) {
                                toBuilder2 = this.stUserBaseInfoNet_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stUserBaseInfoNet_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stUserBaseInfoNet_);
                                this.stUserBaseInfoNet_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 8;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bK;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bL.ensureFieldAccessorsInitialized(SCCreateGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12621();
            SCCreateGameRoomRsp sCCreateGameRoomRsp = new SCCreateGameRoomRsp(true);
            defaultInstance = sCCreateGameRoomRsp;
            sCCreateGameRoomRsp.initFields();
        }

        public final Parser<SCCreateGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasLGameRoomId() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomId() {
            return this.lGameRoomId_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasStUserBaseInfoNet() {
            return (this.bitField0_ & 8) == 8;
        }

        public final UserBaseInfoNet getStUserBaseInfoNet() {
            return this.stUserBaseInfoNet_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
            return this.stUserBaseInfoNet_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.lGameRoomId_ = 0;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_);
            }
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeMessage(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_);
            }
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeMessageSize(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCCreateGameRoomRsp parseFrom(ByteString byteString) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreateGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreateGameRoomRsp parseFrom(byte[] bArr) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreateGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreateGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreateGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreateGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreateGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreateGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCCreateGameRoomRsp sCCreateGameRoomRsp) {
            return newBuilder().mergeFrom(sCCreateGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCCreateQuickGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        QuickGameRoomInfo getStQuickGameRoomInfo();

        QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStQuickGameRoomInfo();
    }

    public static final class SCCreateQuickGameRoomRsp extends GeneratedMessage implements SCCreateQuickGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCCreateQuickGameRoomRsp> PARSER = null;
        public static final int STQUICKGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCCreateQuickGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private QuickGameRoomInfo stQuickGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreateQuickGameRoomRsp.1 */
        class C12631 extends AbstractParser<SCCreateQuickGameRoomRsp> {
            static {
                fixHelper.fixfunc(new int[]{2117, 2118});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12631();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreateQuickGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> stQuickGameRoomInfoBuilder_;
            private QuickGameRoomInfo stQuickGameRoomInfo_;

            static {
                fixHelper.fixfunc(new int[]{1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> getStQuickGameRoomInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6595build();

            public final native SCCreateQuickGameRoomRsp m6596build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6597buildPartial();

            public final native SCCreateQuickGameRoomRsp m6598buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6599clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6600clear();

            public final native Builder m6601clear();

            public final native Builder clearEErrCode();

            public final native Builder clearStQuickGameRoomInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6602clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6603clone();

            public final native Builder m6604clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6605getDefaultInstanceForType();

            public final native SCCreateQuickGameRoomRsp m6606getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native QuickGameRoomInfo getStQuickGameRoomInfo();

            public final native Builder getStQuickGameRoomInfoBuilder();

            public final native QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasStQuickGameRoomInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6607mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6608mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6609mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6610mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6611mergeFrom(Message message);

            public final native Builder mergeFrom(SCCreateQuickGameRoomRsp sCCreateQuickGameRoomRsp);

            public final native Builder mergeStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setStQuickGameRoomInfo(Builder builder);

            public final native Builder setStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo);

            public static final Descriptor getDescriptor() {
                return TexasPoker.dS;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCCreateQuickGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCCreateQuickGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCCreateQuickGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCCreateQuickGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCCreateQuickGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stQuickGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stQuickGameRoomInfo_ = (QuickGameRoomInfo) codedInputStream.readMessage(QuickGameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stQuickGameRoomInfo_);
                                this.stQuickGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STQUICKGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dS;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dT.ensureFieldAccessorsInitialized(SCCreateQuickGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12631();
            SCCreateQuickGameRoomRsp sCCreateQuickGameRoomRsp = new SCCreateQuickGameRoomRsp(true);
            defaultInstance = sCCreateQuickGameRoomRsp;
            sCCreateQuickGameRoomRsp.initFields();
        }

        public final Parser<SCCreateQuickGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStQuickGameRoomInfo() {
            return (this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER;
        }

        public final QuickGameRoomInfo getStQuickGameRoomInfo() {
            return this.stQuickGameRoomInfo_;
        }

        public final QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder() {
            return this.stQuickGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStQuickGameRoomInfo() || getStQuickGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCCreateQuickGameRoomRsp parseFrom(ByteString byteString) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(byte[] bArr) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateQuickGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreateQuickGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreateQuickGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCCreateQuickGameRoomRsp sCCreateQuickGameRoomRsp) {
            return newBuilder().mergeFrom(sCCreateQuickGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCCreateQuickSNGGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        QuickGameRoomInfo getStQuickGameRoomInfo();

        QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStGameRoomInfo();

        boolean hasStQuickGameRoomInfo();
    }

    public static final class SCCreateQuickSNGGameRoomRsp extends GeneratedMessage implements SCCreateQuickSNGGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCCreateQuickSNGGameRoomRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 3;
        public static final int STQUICKGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCCreateQuickSNGGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private QuickGameRoomInfo stQuickGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp.1 */
        class C12641 extends AbstractParser<SCCreateQuickSNGGameRoomRsp> {
            C12641() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCCreateQuickSNGGameRoomRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreateQuickSNGGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> stQuickGameRoomInfoBuilder_;
            private QuickGameRoomInfo stQuickGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dW;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dX.ensureFieldAccessorsInitialized(SCCreateQuickSNGGameRoomRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCCreateQuickSNGGameRoomRsp.alwaysUseFieldBuilders) {
                    getStQuickGameRoomInfoFieldBuilder();
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                } else {
                    this.stQuickGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dW;
            }

            public final SCCreateQuickSNGGameRoomRsp getDefaultInstanceForType() {
                return SCCreateQuickSNGGameRoomRsp.getDefaultInstance();
            }

            public final SCCreateQuickSNGGameRoomRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCCreateQuickSNGGameRoomRsp buildPartial() {
                int i;
                int i2 = SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
                SCCreateQuickSNGGameRoomRsp sCCreateQuickSNGGameRoomRsp = new SCCreateQuickSNGGameRoomRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) != SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCCreateQuickSNGGameRoomRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) == SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    sCCreateQuickSNGGameRoomRsp.stQuickGameRoomInfo_ = this.stQuickGameRoomInfo_;
                } else {
                    sCCreateQuickSNGGameRoomRsp.stQuickGameRoomInfo_ = (QuickGameRoomInfo) this.stQuickGameRoomInfoBuilder_.build();
                }
                if ((i3 & 4) == 4) {
                    i |= 4;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCCreateQuickSNGGameRoomRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCCreateQuickSNGGameRoomRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                sCCreateQuickSNGGameRoomRsp.bitField0_ = i;
                onBuilt();
                return sCCreateQuickSNGGameRoomRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCCreateQuickSNGGameRoomRsp) {
                    return mergeFrom((SCCreateQuickSNGGameRoomRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCCreateQuickSNGGameRoomRsp sCCreateQuickSNGGameRoomRsp) {
                if (sCCreateQuickSNGGameRoomRsp != SCCreateQuickSNGGameRoomRsp.getDefaultInstance()) {
                    if (sCCreateQuickSNGGameRoomRsp.hasEErrCode()) {
                        setEErrCode(sCCreateQuickSNGGameRoomRsp.getEErrCode());
                    }
                    if (sCCreateQuickSNGGameRoomRsp.hasStQuickGameRoomInfo()) {
                        mergeStQuickGameRoomInfo(sCCreateQuickSNGGameRoomRsp.getStQuickGameRoomInfo());
                    }
                    if (sCCreateQuickSNGGameRoomRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCCreateQuickSNGGameRoomRsp.getStGameRoomInfo());
                    }
                    mergeUnknownFields(sCCreateQuickSNGGameRoomRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (hasStQuickGameRoomInfo() && !getStQuickGameRoomInfo().isInitialized()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCCreateQuickSNGGameRoomRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCCreateQuickSNGGameRoomRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) == SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCCreateQuickSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStQuickGameRoomInfo() {
                return (this.bitField0_ & SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) == SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
            }

            public final QuickGameRoomInfo getStQuickGameRoomInfo() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    return this.stQuickGameRoomInfo_;
                }
                return (QuickGameRoomInfo) this.stQuickGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo) {
                if (this.stQuickGameRoomInfoBuilder_ != null) {
                    this.stQuickGameRoomInfoBuilder_.setMessage(quickGameRoomInfo);
                } else if (quickGameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stQuickGameRoomInfo_ = quickGameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStQuickGameRoomInfo(Builder builder) {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo) {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) != SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER || this.stQuickGameRoomInfo_ == QuickGameRoomInfo.getDefaultInstance()) {
                        this.stQuickGameRoomInfo_ = quickGameRoomInfo;
                    } else {
                        this.stQuickGameRoomInfo_ = QuickGameRoomInfo.newBuilder(this.stQuickGameRoomInfo_).mergeFrom(quickGameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.mergeFrom(quickGameRoomInfo);
                }
                this.bitField0_ |= SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStQuickGameRoomInfo() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStQuickGameRoomInfoBuilder() {
                this.bitField0_ |= SCCreateQuickSNGGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStQuickGameRoomInfoFieldBuilder().getBuilder();
            }

            public final QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder() {
                if (this.stQuickGameRoomInfoBuilder_ != null) {
                    return (QuickGameRoomInfoOrBuilder) this.stQuickGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stQuickGameRoomInfo_;
            }

            private SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> getStQuickGameRoomInfoFieldBuilder() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfoBuilder_ = new SingleFieldBuilder(getStQuickGameRoomInfo(), getParentForChildren(), isClean());
                    this.stQuickGameRoomInfo_ = null;
                }
                return this.stQuickGameRoomInfoBuilder_;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & 4) == 4;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & 4) != 4 || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= 4;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }
        }

        private SCCreateQuickSNGGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCCreateQuickSNGGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCCreateQuickSNGGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCCreateQuickSNGGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCCreateQuickSNGGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stQuickGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stQuickGameRoomInfo_ = (QuickGameRoomInfo) codedInputStream.readMessage(QuickGameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stQuickGameRoomInfo_);
                                this.stQuickGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STQUICKGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 4) == 4) {
                                toBuilder2 = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 4;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dW;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dX.ensureFieldAccessorsInitialized(SCCreateQuickSNGGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12641();
            SCCreateQuickSNGGameRoomRsp sCCreateQuickSNGGameRoomRsp = new SCCreateQuickSNGGameRoomRsp(true);
            defaultInstance = sCCreateQuickSNGGameRoomRsp;
            sCCreateQuickSNGGameRoomRsp.initFields();
        }

        public final Parser<SCCreateQuickSNGGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStQuickGameRoomInfo() {
            return (this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER;
        }

        public final QuickGameRoomInfo getStQuickGameRoomInfo() {
            return this.stQuickGameRoomInfo_;
        }

        public final QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder() {
            return this.stQuickGameRoomInfo_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & 4) == 4;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStQuickGameRoomInfo() && !getStQuickGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(ByteString byteString) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(byte[] bArr) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateQuickSNGGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreateQuickSNGGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreateQuickSNGGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateQuickSNGGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCCreateQuickSNGGameRoomRsp sCCreateQuickSNGGameRoomRsp) {
            return newBuilder().mergeFrom(sCCreateQuickSNGGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCCreateSNGGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLGameRoomId();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        UserBaseInfoNet getStUserBaseInfoNet();

        UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder();

        boolean hasEErrCode();

        boolean hasLGameRoomId();

        boolean hasStGameRoomInfo();

        boolean hasStUserBaseInfoNet();
    }

    public static final class SCCreateSNGGameRoomRsp extends GeneratedMessage implements SCCreateSNGGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<SCCreateSNGGameRoomRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 3;
        public static final int STUSERBASEINFONET_FIELD_NUMBER = 4;
        private static final SCCreateSNGGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lGameRoomId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private UserBaseInfoNet stUserBaseInfoNet_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp.1 */
        class C12651 extends AbstractParser<SCCreateSNGGameRoomRsp> {
            static {
                fixHelper.fixfunc(new int[]{2856, 2857});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12651();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreateSNGGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lGameRoomId_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> stUserBaseInfoNetBuilder_;
            private UserBaseInfoNet stUserBaseInfoNet_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bW;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bX.ensureFieldAccessorsInitialized(SCCreateSNGGameRoomRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCCreateSNGGameRoomRsp.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                    getStUserBaseInfoNetFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                this.lGameRoomId_ = 0;
                this.bitField0_ &= -3;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bW;
            }

            public final SCCreateSNGGameRoomRsp getDefaultInstanceForType() {
                return SCCreateSNGGameRoomRsp.getDefaultInstance();
            }

            public final SCCreateSNGGameRoomRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCCreateSNGGameRoomRsp buildPartial() {
                int i;
                int i2 = SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
                SCCreateSNGGameRoomRsp sCCreateSNGGameRoomRsp = new SCCreateSNGGameRoomRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) != SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCCreateSNGGameRoomRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER) == SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER) {
                    i2 |= SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER;
                }
                sCCreateSNGGameRoomRsp.lGameRoomId_ = this.lGameRoomId_;
                if ((i3 & SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER) == SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER) {
                    i = i2 | SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCCreateSNGGameRoomRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCCreateSNGGameRoomRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((i3 & 8) == 8) {
                    i |= 8;
                }
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    sCCreateSNGGameRoomRsp.stUserBaseInfoNet_ = this.stUserBaseInfoNet_;
                } else {
                    sCCreateSNGGameRoomRsp.stUserBaseInfoNet_ = (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.build();
                }
                sCCreateSNGGameRoomRsp.bitField0_ = i;
                onBuilt();
                return sCCreateSNGGameRoomRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCCreateSNGGameRoomRsp) {
                    return mergeFrom((SCCreateSNGGameRoomRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCCreateSNGGameRoomRsp sCCreateSNGGameRoomRsp) {
                if (sCCreateSNGGameRoomRsp != SCCreateSNGGameRoomRsp.getDefaultInstance()) {
                    if (sCCreateSNGGameRoomRsp.hasEErrCode()) {
                        setEErrCode(sCCreateSNGGameRoomRsp.getEErrCode());
                    }
                    if (sCCreateSNGGameRoomRsp.hasLGameRoomId()) {
                        setLGameRoomId(sCCreateSNGGameRoomRsp.getLGameRoomId());
                    }
                    if (sCCreateSNGGameRoomRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCCreateSNGGameRoomRsp.getStGameRoomInfo());
                    }
                    if (sCCreateSNGGameRoomRsp.hasStUserBaseInfoNet()) {
                        mergeStUserBaseInfoNet(sCCreateSNGGameRoomRsp.getStUserBaseInfoNet());
                    }
                    mergeUnknownFields(sCCreateSNGGameRoomRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                    return false;
                }
                if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCCreateSNGGameRoomRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCCreateSNGGameRoomRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER) == SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCCreateSNGGameRoomRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomId() {
                return (this.bitField0_ & SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER) == SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomId() {
                return this.lGameRoomId_;
            }

            public final Builder setLGameRoomId(long j) {
                this.bitField0_ |= SCCreateSNGGameRoomRsp.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomId_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomId() {
                this.bitField0_ &= -3;
                this.lGameRoomId_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER) == SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER) != SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCCreateSNGGameRoomRsp.STUSERBASEINFONET_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            public final boolean hasStUserBaseInfoNet() {
                return (this.bitField0_ & 8) == 8;
            }

            public final UserBaseInfoNet getStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    return this.stUserBaseInfoNet_;
                }
                return (UserBaseInfoNet) this.stUserBaseInfoNetBuilder_.getMessage();
            }

            public final Builder setStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    this.stUserBaseInfoNetBuilder_.setMessage(userBaseInfoNet);
                } else if (userBaseInfoNet == null) {
                    throw new NullPointerException();
                } else {
                    this.stUserBaseInfoNet_ = userBaseInfoNet;
                    onChanged();
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder setStUserBaseInfoNet(com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder builder) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = builder.build();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder mergeStUserBaseInfoNet(UserBaseInfoNet userBaseInfoNet) {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    if ((this.bitField0_ & 8) != 8 || this.stUserBaseInfoNet_ == UserBaseInfoNet.getDefaultInstance()) {
                        this.stUserBaseInfoNet_ = userBaseInfoNet;
                    } else {
                        this.stUserBaseInfoNet_ = UserBaseInfoNet.newBuilder(this.stUserBaseInfoNet_).mergeFrom(userBaseInfoNet).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.mergeFrom(userBaseInfoNet);
                }
                this.bitField0_ |= 8;
                return this;
            }

            public final Builder clearStUserBaseInfoNet() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
                    onChanged();
                } else {
                    this.stUserBaseInfoNetBuilder_.clear();
                }
                this.bitField0_ &= -9;
                return this;
            }

            public final com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder getStUserBaseInfoNetBuilder() {
                this.bitField0_ |= 8;
                onChanged();
                return (com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder) getStUserBaseInfoNetFieldBuilder().getBuilder();
            }

            public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
                if (this.stUserBaseInfoNetBuilder_ != null) {
                    return (UserBaseInfoNetOrBuilder) this.stUserBaseInfoNetBuilder_.getMessageOrBuilder();
                }
                return this.stUserBaseInfoNet_;
            }

            private SingleFieldBuilder<UserBaseInfoNet, com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder, UserBaseInfoNetOrBuilder> getStUserBaseInfoNetFieldBuilder() {
                if (this.stUserBaseInfoNetBuilder_ == null) {
                    this.stUserBaseInfoNetBuilder_ = new SingleFieldBuilder(getStUserBaseInfoNet(), getParentForChildren(), isClean());
                    this.stUserBaseInfoNet_ = null;
                }
                return this.stUserBaseInfoNetBuilder_;
            }
        }

        private SCCreateSNGGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCCreateSNGGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCCreateSNGGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCCreateSNGGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCCreateSNGGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomId_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STUSERBASEINFONET_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            com.texaspoker.moment.TexasPokerCommon.UserBaseInfoNet.Builder toBuilder2;
                            if ((this.bitField0_ & 8) == 8) {
                                toBuilder2 = this.stUserBaseInfoNet_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stUserBaseInfoNet_ = (UserBaseInfoNet) codedInputStream.readMessage(UserBaseInfoNet.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stUserBaseInfoNet_);
                                this.stUserBaseInfoNet_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 8;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bW;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bX.ensureFieldAccessorsInitialized(SCCreateSNGGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12651();
            SCCreateSNGGameRoomRsp sCCreateSNGGameRoomRsp = new SCCreateSNGGameRoomRsp(true);
            defaultInstance = sCCreateSNGGameRoomRsp;
            sCCreateSNGGameRoomRsp.initFields();
        }

        public final Parser<SCCreateSNGGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasLGameRoomId() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomId() {
            return this.lGameRoomId_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final boolean hasStUserBaseInfoNet() {
            return (this.bitField0_ & 8) == 8;
        }

        public final UserBaseInfoNet getStUserBaseInfoNet() {
            return this.stUserBaseInfoNet_;
        }

        public final UserBaseInfoNetOrBuilder getStUserBaseInfoNetOrBuilder() {
            return this.stUserBaseInfoNet_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.lGameRoomId_ = 0;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.stUserBaseInfoNet_ = UserBaseInfoNet.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStGameRoomInfo() && !getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStUserBaseInfoNet() || getStUserBaseInfoNet().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_);
            }
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeMessage(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomId_);
            }
            if ((this.bitField0_ & STUSERBASEINFONET_FIELD_NUMBER) == STUSERBASEINFONET_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeMessageSize(STUSERBASEINFONET_FIELD_NUMBER, this.stUserBaseInfoNet_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCCreateSNGGameRoomRsp parseFrom(ByteString byteString) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(byte[] bArr) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateSNGGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreateSNGGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreateSNGGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreateSNGGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCCreateSNGGameRoomRsp sCCreateSNGGameRoomRsp) {
            return newBuilder().mergeFrom(sCCreateSNGGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCCreatorInsuranceSettingRspOrBuilder extends MessageOrBuilder {
        int getBCanInsurance();

        ERROR_CODE_TYPE getEErrCode();

        long getLGameRoomID();

        long getLSettedUuid();

        boolean hasBCanInsurance();

        boolean hasEErrCode();

        boolean hasLGameRoomID();

        boolean hasLSettedUuid();
    }

    public static final class SCCreatorInsuranceSettingRsp extends GeneratedMessage implements SCCreatorInsuranceSettingRspOrBuilder {
        public static final int BCANINSURANCE_FIELD_NUMBER = 4;
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static final int LSETTEDUUID_FIELD_NUMBER = 3;
        public static Parser<SCCreatorInsuranceSettingRsp> PARSER;
        private static final SCCreatorInsuranceSettingRsp defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bCanInsurance_;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lGameRoomID_;
        private long lSettedUuid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp.1 */
        class C12661 extends AbstractParser<SCCreatorInsuranceSettingRsp> {
            C12661() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCCreatorInsuranceSettingRsp(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCCreatorInsuranceSettingRspOrBuilder {
            private int bCanInsurance_;
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lGameRoomID_;
            private long lSettedUuid_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.gs;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.gt.ensureFieldAccessorsInitialized(SCCreatorInsuranceSettingRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                SCCreatorInsuranceSettingRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lSettedUuid_ = 0;
                this.bitField0_ &= -5;
                this.bCanInsurance_ = 0;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.gs;
            }

            public final SCCreatorInsuranceSettingRsp getDefaultInstanceForType() {
                return SCCreatorInsuranceSettingRsp.getDefaultInstance();
            }

            public final SCCreatorInsuranceSettingRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCCreatorInsuranceSettingRsp buildPartial() {
                int i = SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER;
                SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp = new SCCreatorInsuranceSettingRsp((com.google.protobuf.GeneratedMessage.Builder) this, null);
                int i2 = this.bitField0_;
                if ((i2 & SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER) != SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER) {
                    i = 0;
                }
                sCCreatorInsuranceSettingRsp.eErrCode_ = this.eErrCode_;
                if ((i2 & SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER) == SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER) {
                    i |= SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER;
                }
                sCCreatorInsuranceSettingRsp.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER) == SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER) {
                    i |= SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER;
                }
                sCCreatorInsuranceSettingRsp.lSettedUuid_ = this.lSettedUuid_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                sCCreatorInsuranceSettingRsp.bCanInsurance_ = this.bCanInsurance_;
                sCCreatorInsuranceSettingRsp.bitField0_ = i;
                onBuilt();
                return sCCreatorInsuranceSettingRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCCreatorInsuranceSettingRsp) {
                    return mergeFrom((SCCreatorInsuranceSettingRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp) {
                if (sCCreatorInsuranceSettingRsp != SCCreatorInsuranceSettingRsp.getDefaultInstance()) {
                    if (sCCreatorInsuranceSettingRsp.hasEErrCode()) {
                        setEErrCode(sCCreatorInsuranceSettingRsp.getEErrCode());
                    }
                    if (sCCreatorInsuranceSettingRsp.hasLGameRoomID()) {
                        setLGameRoomID(sCCreatorInsuranceSettingRsp.getLGameRoomID());
                    }
                    if (sCCreatorInsuranceSettingRsp.hasLSettedUuid()) {
                        setLSettedUuid(sCCreatorInsuranceSettingRsp.getLSettedUuid());
                    }
                    if (sCCreatorInsuranceSettingRsp.hasBCanInsurance()) {
                        setBCanInsurance(sCCreatorInsuranceSettingRsp.getBCanInsurance());
                    }
                    mergeUnknownFields(sCCreatorInsuranceSettingRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasEErrCode()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCCreatorInsuranceSettingRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCCreatorInsuranceSettingRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER) == SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCCreatorInsuranceSettingRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER) == SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= SCCreatorInsuranceSettingRsp.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLSettedUuid() {
                return (this.bitField0_ & SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER) == SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER;
            }

            public final long getLSettedUuid() {
                return this.lSettedUuid_;
            }

            public final Builder setLSettedUuid(long j) {
                this.bitField0_ |= SCCreatorInsuranceSettingRsp.BCANINSURANCE_FIELD_NUMBER;
                this.lSettedUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLSettedUuid() {
                this.bitField0_ &= -5;
                this.lSettedUuid_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasBCanInsurance() {
                return (this.bitField0_ & 8) == 8;
            }

            public final int getBCanInsurance() {
                return this.bCanInsurance_;
            }

            public final Builder setBCanInsurance(int i) {
                this.bitField0_ |= 8;
                this.bCanInsurance_ = i;
                onChanged();
                return this;
            }

            public final Builder clearBCanInsurance() {
                this.bitField0_ &= -9;
                this.bCanInsurance_ = 0;
                onChanged();
                return this;
            }
        }

        static {
            fixHelper.fixfunc(new int[]{186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native SCCreatorInsuranceSettingRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ SCCreatorInsuranceSettingRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp);

        private native SCCreatorInsuranceSettingRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ SCCreatorInsuranceSettingRsp(com.google.protobuf.GeneratedMessage.Builder builder, SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp);

        private native SCCreatorInsuranceSettingRsp(boolean z);

        private native void initFields();

        public final native int getBCanInsurance();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6612getDefaultInstanceForType();

        public final native SCCreatorInsuranceSettingRsp m6613getDefaultInstanceForType();

        public final native ERROR_CODE_TYPE getEErrCode();

        public final native long getLGameRoomID();

        public final native long getLSettedUuid();

        public final native Parser<SCCreatorInsuranceSettingRsp> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native boolean hasBCanInsurance();

        public final native boolean hasEErrCode();

        public final native boolean hasLGameRoomID();

        public final native boolean hasLSettedUuid();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6614newBuilderForType();

        public final native Builder m6615newBuilderForType();

        protected final native Builder m6616newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6617toBuilder();

        public final native Builder m6618toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static SCCreatorInsuranceSettingRsp getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gs;
        }

        static void __clinit__() {
            PARSER = new C12661();
            SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp = new SCCreatorInsuranceSettingRsp(true);
            defaultInstance = sCCreatorInsuranceSettingRsp;
            sCCreatorInsuranceSettingRsp.initFields();
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(ByteString byteString) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(byteString);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(byte[] bArr) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(bArr);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(InputStream inputStream) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(inputStream);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreatorInsuranceSettingRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCCreatorInsuranceSettingRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCCreatorInsuranceSettingRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCCreatorInsuranceSettingRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(SCCreatorInsuranceSettingRsp sCCreatorInsuranceSettingRsp) {
            return newBuilder().mergeFrom(sCCreatorInsuranceSettingRsp);
        }
    }

    public interface SCEnterGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStGameRoomInfo();
    }

    public static final class SCEnterGameRoomRsp extends GeneratedMessage implements SCEnterGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCEnterGameRoomRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCEnterGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp.1 */
        class C12671 extends AbstractParser<SCEnterGameRoomRsp> {
            C12671() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCEnterGameRoomRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCEnterGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.bS;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.bT.ensureFieldAccessorsInitialized(SCEnterGameRoomRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCEnterGameRoomRsp.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.bS;
            }

            public final SCEnterGameRoomRsp getDefaultInstanceForType() {
                return SCEnterGameRoomRsp.getDefaultInstance();
            }

            public final SCEnterGameRoomRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCEnterGameRoomRsp buildPartial() {
                int i;
                int i2 = SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER;
                SCEnterGameRoomRsp sCEnterGameRoomRsp = new SCEnterGameRoomRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER) != SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCEnterGameRoomRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCEnterGameRoomRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCEnterGameRoomRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                sCEnterGameRoomRsp.bitField0_ = i;
                onBuilt();
                return sCEnterGameRoomRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCEnterGameRoomRsp) {
                    return mergeFrom((SCEnterGameRoomRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCEnterGameRoomRsp sCEnterGameRoomRsp) {
                if (sCEnterGameRoomRsp != SCEnterGameRoomRsp.getDefaultInstance()) {
                    if (sCEnterGameRoomRsp.hasEErrCode()) {
                        setEErrCode(sCEnterGameRoomRsp.getEErrCode());
                    }
                    if (sCEnterGameRoomRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCEnterGameRoomRsp.getStGameRoomInfo());
                    }
                    mergeUnknownFields(sCEnterGameRoomRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCEnterGameRoomRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCEnterGameRoomRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER) == SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCEnterGameRoomRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER) == SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER) != SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCEnterGameRoomRsp.STGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }
        }

        private SCEnterGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCEnterGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCEnterGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCEnterGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCEnterGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bS;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bT.ensureFieldAccessorsInitialized(SCEnterGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12671();
            SCEnterGameRoomRsp sCEnterGameRoomRsp = new SCEnterGameRoomRsp(true);
            defaultInstance = sCEnterGameRoomRsp;
            sCEnterGameRoomRsp.initFields();
        }

        public final Parser<SCEnterGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCEnterGameRoomRsp parseFrom(ByteString byteString) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCEnterGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCEnterGameRoomRsp parseFrom(byte[] bArr) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCEnterGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCEnterGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCEnterGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCEnterGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCEnterGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCEnterGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCEnterGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCEnterGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCEnterGameRoomRsp sCEnterGameRoomRsp) {
            return newBuilder().mergeFrom(sCEnterGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCEnterQuickGameRoomRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        QuickGameRoomInfo getStQuickGameRoomInfo();

        QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStGameRoomInfo();

        boolean hasStQuickGameRoomInfo();
    }

    public static final class SCEnterQuickGameRoomRsp extends GeneratedMessage implements SCEnterQuickGameRoomRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCEnterQuickGameRoomRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 3;
        public static final int STQUICKGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCEnterQuickGameRoomRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private QuickGameRoomInfo stQuickGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp.1 */
        class C12681 extends AbstractParser<SCEnterQuickGameRoomRsp> {
            C12681() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCEnterQuickGameRoomRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCEnterQuickGameRoomRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> stQuickGameRoomInfoBuilder_;
            private QuickGameRoomInfo stQuickGameRoomInfo_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ea;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.eb.ensureFieldAccessorsInitialized(SCEnterQuickGameRoomRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCEnterQuickGameRoomRsp.alwaysUseFieldBuilders) {
                    getStQuickGameRoomInfoFieldBuilder();
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                } else {
                    this.stQuickGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ea;
            }

            public final SCEnterQuickGameRoomRsp getDefaultInstanceForType() {
                return SCEnterQuickGameRoomRsp.getDefaultInstance();
            }

            public final SCEnterQuickGameRoomRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCEnterQuickGameRoomRsp buildPartial() {
                int i;
                int i2 = SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER;
                SCEnterQuickGameRoomRsp sCEnterQuickGameRoomRsp = new SCEnterQuickGameRoomRsp(null);
                int i3 = this.bitField0_;
                if ((i3 & SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER) != SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER) {
                    i2 = 0;
                }
                sCEnterQuickGameRoomRsp.eErrCode_ = this.eErrCode_;
                if ((i3 & SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) == SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                    i = i2 | SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                } else {
                    i = i2;
                }
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    sCEnterQuickGameRoomRsp.stQuickGameRoomInfo_ = this.stQuickGameRoomInfo_;
                } else {
                    sCEnterQuickGameRoomRsp.stQuickGameRoomInfo_ = (QuickGameRoomInfo) this.stQuickGameRoomInfoBuilder_.build();
                }
                if ((i3 & 4) == 4) {
                    i |= 4;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCEnterQuickGameRoomRsp.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCEnterQuickGameRoomRsp.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                sCEnterQuickGameRoomRsp.bitField0_ = i;
                onBuilt();
                return sCEnterQuickGameRoomRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCEnterQuickGameRoomRsp) {
                    return mergeFrom((SCEnterQuickGameRoomRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCEnterQuickGameRoomRsp sCEnterQuickGameRoomRsp) {
                if (sCEnterQuickGameRoomRsp != SCEnterQuickGameRoomRsp.getDefaultInstance()) {
                    if (sCEnterQuickGameRoomRsp.hasEErrCode()) {
                        setEErrCode(sCEnterQuickGameRoomRsp.getEErrCode());
                    }
                    if (sCEnterQuickGameRoomRsp.hasStQuickGameRoomInfo()) {
                        mergeStQuickGameRoomInfo(sCEnterQuickGameRoomRsp.getStQuickGameRoomInfo());
                    }
                    if (sCEnterQuickGameRoomRsp.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCEnterQuickGameRoomRsp.getStGameRoomInfo());
                    }
                    mergeUnknownFields(sCEnterQuickGameRoomRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasEErrCode()) {
                    return false;
                }
                if (hasStQuickGameRoomInfo() && !getStQuickGameRoomInfo().isInitialized()) {
                    return false;
                }
                if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCEnterQuickGameRoomRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCEnterQuickGameRoomRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER) == SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCEnterQuickGameRoomRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasStQuickGameRoomInfo() {
                return (this.bitField0_ & SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) == SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
            }

            public final QuickGameRoomInfo getStQuickGameRoomInfo() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    return this.stQuickGameRoomInfo_;
                }
                return (QuickGameRoomInfo) this.stQuickGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo) {
                if (this.stQuickGameRoomInfoBuilder_ != null) {
                    this.stQuickGameRoomInfoBuilder_.setMessage(quickGameRoomInfo);
                } else if (quickGameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stQuickGameRoomInfo_ = quickGameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStQuickGameRoomInfo(Builder builder) {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStQuickGameRoomInfo(QuickGameRoomInfo quickGameRoomInfo) {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER) != SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER || this.stQuickGameRoomInfo_ == QuickGameRoomInfo.getDefaultInstance()) {
                        this.stQuickGameRoomInfo_ = quickGameRoomInfo;
                    } else {
                        this.stQuickGameRoomInfo_ = QuickGameRoomInfo.newBuilder(this.stQuickGameRoomInfo_).mergeFrom(quickGameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.mergeFrom(quickGameRoomInfo);
                }
                this.bitField0_ |= SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStQuickGameRoomInfo() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stQuickGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -3;
                return this;
            }

            public final Builder getStQuickGameRoomInfoBuilder() {
                this.bitField0_ |= SCEnterQuickGameRoomRsp.STQUICKGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStQuickGameRoomInfoFieldBuilder().getBuilder();
            }

            public final QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder() {
                if (this.stQuickGameRoomInfoBuilder_ != null) {
                    return (QuickGameRoomInfoOrBuilder) this.stQuickGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stQuickGameRoomInfo_;
            }

            private SingleFieldBuilder<QuickGameRoomInfo, Builder, QuickGameRoomInfoOrBuilder> getStQuickGameRoomInfoFieldBuilder() {
                if (this.stQuickGameRoomInfoBuilder_ == null) {
                    this.stQuickGameRoomInfoBuilder_ = new SingleFieldBuilder(getStQuickGameRoomInfo(), getParentForChildren(), isClean());
                    this.stQuickGameRoomInfo_ = null;
                }
                return this.stQuickGameRoomInfoBuilder_;
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & 4) == 4;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & 4) != 4 || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= 4;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= 4;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }
        }

        private SCEnterQuickGameRoomRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCEnterQuickGameRoomRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCEnterQuickGameRoomRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCEnterQuickGameRoomRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCEnterQuickGameRoomRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stQuickGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stQuickGameRoomInfo_ = (QuickGameRoomInfo) codedInputStream.readMessage(QuickGameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stQuickGameRoomInfo_);
                                this.stQuickGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STQUICKGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            Builder toBuilder2;
                            if ((this.bitField0_ & 4) == 4) {
                                toBuilder2 = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder2 = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder2 != null) {
                                toBuilder2.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 4;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ea;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.eb.ensureFieldAccessorsInitialized(SCEnterQuickGameRoomRsp.class, Builder.class);
        }

        static {
            PARSER = new C12681();
            SCEnterQuickGameRoomRsp sCEnterQuickGameRoomRsp = new SCEnterQuickGameRoomRsp(true);
            defaultInstance = sCEnterQuickGameRoomRsp;
            sCEnterQuickGameRoomRsp.initFields();
        }

        public final Parser<SCEnterQuickGameRoomRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStQuickGameRoomInfo() {
            return (this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER;
        }

        public final QuickGameRoomInfo getStQuickGameRoomInfo() {
            return this.stQuickGameRoomInfo_;
        }

        public final QuickGameRoomInfoOrBuilder getStQuickGameRoomInfoOrBuilder() {
            return this.stQuickGameRoomInfo_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & 4) == 4;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stQuickGameRoomInfo_ = QuickGameRoomInfo.getDefaultInstance();
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (hasStQuickGameRoomInfo() && !getStQuickGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STQUICKGAMEROOMINFO_FIELD_NUMBER) == STQUICKGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STQUICKGAMEROOMINFO_FIELD_NUMBER, this.stQuickGameRoomInfo_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCEnterQuickGameRoomRsp parseFrom(ByteString byteString) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(byteString);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(byte[] bArr) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(bArr);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(InputStream inputStream) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(inputStream);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCEnterQuickGameRoomRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCEnterQuickGameRoomRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCEnterQuickGameRoomRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCEnterQuickGameRoomRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCEnterQuickGameRoomRsp sCEnterQuickGameRoomRsp) {
            return newBuilder().mergeFrom(sCEnterQuickGameRoomRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCForceBBRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        boolean hasEErrCode();

        boolean hasStGameRoomInfo();
    }

    public static final class SCForceBBRsp extends GeneratedMessage implements SCForceBBRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCForceBBRsp> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 2;
        private static final SCForceBBRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCForceBBRsp.1 */
        class C12691 extends AbstractParser<SCForceBBRsp> {
            static {
                fixHelper.fixfunc(new int[]{3290, 3291});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12691();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCForceBBRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;

            static {
                fixHelper.fixfunc(new int[]{2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6619build();

            public final native SCForceBBRsp m6620build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6621buildPartial();

            public final native SCForceBBRsp m6622buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6623clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6624clear();

            public final native Builder m6625clear();

            public final native Builder clearEErrCode();

            public final native Builder clearStGameRoomInfo();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6626clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6627clone();

            public final native Builder m6628clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6629getDefaultInstanceForType();

            public final native SCForceBBRsp m6630getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native GameRoomInfo getStGameRoomInfo();

            public final native Builder getStGameRoomInfoBuilder();

            public final native GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

            public final native boolean hasEErrCode();

            public final native boolean hasStGameRoomInfo();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6631mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6632mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6633mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6634mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6635mergeFrom(Message message);

            public final native Builder mergeFrom(SCForceBBRsp sCForceBBRsp);

            public final native Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setStGameRoomInfo(Builder builder);

            public final native Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo);

            public static final Descriptor getDescriptor() {
                return TexasPoker.gE;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        private SCForceBBRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCForceBBRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCForceBBRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCForceBBRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCForceBBRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.gE;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.gF.ensureFieldAccessorsInitialized(SCForceBBRsp.class, Builder.class);
        }

        static {
            PARSER = new C12691();
            SCForceBBRsp sCForceBBRsp = new SCForceBBRsp(true);
            defaultInstance = sCForceBBRsp;
            sCForceBBRsp.initFields();
        }

        public final Parser<SCForceBBRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStGameRoomInfo() || getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                i += CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCForceBBRsp parseFrom(ByteString byteString) {
            return (SCForceBBRsp) PARSER.parseFrom(byteString);
        }

        public static SCForceBBRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceBBRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCForceBBRsp parseFrom(byte[] bArr) {
            return (SCForceBBRsp) PARSER.parseFrom(bArr);
        }

        public static SCForceBBRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceBBRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCForceBBRsp parseFrom(InputStream inputStream) {
            return (SCForceBBRsp) PARSER.parseFrom(inputStream);
        }

        public static SCForceBBRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceBBRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCForceBBRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCForceBBRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCForceBBRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceBBRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCForceBBRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCForceBBRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCForceBBRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceBBRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCForceBBRsp sCForceBBRsp) {
            return newBuilder().mergeFrom(sCForceBBRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public interface SCForceStandupRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        long getLForceStandUpUuid();

        long getLGameRoomID();

        boolean hasEErrCode();

        boolean hasLForceStandUpUuid();

        boolean hasLGameRoomID();
    }

    public static final class SCForceStandupRsp extends GeneratedMessage implements SCForceStandupRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int LFORCESTANDUPUUID_FIELD_NUMBER = 3;
        public static final int LGAMEROOMID_FIELD_NUMBER = 2;
        public static Parser<SCForceStandupRsp> PARSER;
        private static final SCForceStandupRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private long lForceStandUpUuid_;
        private long lGameRoomID_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCForceStandupRsp.1 */
        class C12701 extends AbstractParser<SCForceStandupRsp> {
            C12701() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCForceStandupRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCForceStandupRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private long lForceStandUpUuid_;
            private long lGameRoomID_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.ho;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.hp.ensureFieldAccessorsInitialized(SCForceStandupRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                SCForceStandupRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                this.lGameRoomID_ = 0;
                this.bitField0_ &= -3;
                this.lForceStandUpUuid_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.ho;
            }

            public final SCForceStandupRsp getDefaultInstanceForType() {
                return SCForceStandupRsp.getDefaultInstance();
            }

            public final SCForceStandupRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCForceStandupRsp buildPartial() {
                int i = SCForceStandupRsp.EERRCODE_FIELD_NUMBER;
                SCForceStandupRsp sCForceStandupRsp = new SCForceStandupRsp(null);
                int i2 = this.bitField0_;
                if ((i2 & SCForceStandupRsp.EERRCODE_FIELD_NUMBER) != SCForceStandupRsp.EERRCODE_FIELD_NUMBER) {
                    i = 0;
                }
                sCForceStandupRsp.eErrCode_ = this.eErrCode_;
                if ((i2 & SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER) == SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER) {
                    i |= SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER;
                }
                sCForceStandupRsp.lGameRoomID_ = this.lGameRoomID_;
                if ((i2 & 4) == 4) {
                    i |= 4;
                }
                sCForceStandupRsp.lForceStandUpUuid_ = this.lForceStandUpUuid_;
                sCForceStandupRsp.bitField0_ = i;
                onBuilt();
                return sCForceStandupRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCForceStandupRsp) {
                    return mergeFrom((SCForceStandupRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCForceStandupRsp sCForceStandupRsp) {
                if (sCForceStandupRsp != SCForceStandupRsp.getDefaultInstance()) {
                    if (sCForceStandupRsp.hasEErrCode()) {
                        setEErrCode(sCForceStandupRsp.getEErrCode());
                    }
                    if (sCForceStandupRsp.hasLGameRoomID()) {
                        setLGameRoomID(sCForceStandupRsp.getLGameRoomID());
                    }
                    if (sCForceStandupRsp.hasLForceStandUpUuid()) {
                        setLForceStandUpUuid(sCForceStandupRsp.getLForceStandUpUuid());
                    }
                    mergeUnknownFields(sCForceStandupRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasEErrCode()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCForceStandupRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCForceStandupRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCForceStandupRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCForceStandupRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCForceStandupRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCForceStandupRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCForceStandupRsp.EERRCODE_FIELD_NUMBER) == SCForceStandupRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCForceStandupRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasLGameRoomID() {
                return (this.bitField0_ & SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER) == SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER;
            }

            public final long getLGameRoomID() {
                return this.lGameRoomID_;
            }

            public final Builder setLGameRoomID(long j) {
                this.bitField0_ |= SCForceStandupRsp.LGAMEROOMID_FIELD_NUMBER;
                this.lGameRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLGameRoomID() {
                this.bitField0_ &= -3;
                this.lGameRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLForceStandUpUuid() {
                return (this.bitField0_ & 4) == 4;
            }

            public final long getLForceStandUpUuid() {
                return this.lForceStandUpUuid_;
            }

            public final Builder setLForceStandUpUuid(long j) {
                this.bitField0_ |= 4;
                this.lForceStandUpUuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLForceStandUpUuid() {
                this.bitField0_ &= -5;
                this.lForceStandUpUuid_ = 0;
                onChanged();
                return this;
            }
        }

        private SCForceStandupRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCForceStandupRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCForceStandupRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCForceStandupRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCForceStandupRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LGAMEROOMID_FIELD_NUMBER;
                            this.lGameRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            this.bitField0_ |= 4;
                            this.lForceStandUpUuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.ho;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.hp.ensureFieldAccessorsInitialized(SCForceStandupRsp.class, Builder.class);
        }

        static {
            PARSER = new C12701();
            SCForceStandupRsp sCForceStandupRsp = new SCForceStandupRsp(true);
            defaultInstance = sCForceStandupRsp;
            sCForceStandupRsp.initFields();
        }

        public final Parser<SCForceStandupRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasLGameRoomID() {
            return (this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER;
        }

        public final long getLGameRoomID() {
            return this.lGameRoomID_;
        }

        public final boolean hasLForceStandUpUuid() {
            return (this.bitField0_ & 4) == 4;
        }

        public final long getLForceStandUpUuid() {
            return this.lForceStandUpUuid_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.lGameRoomID_ = 0;
            this.lForceStandUpUuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(LFORCESTANDUPUUID_FIELD_NUMBER, this.lForceStandUpUuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & LGAMEROOMID_FIELD_NUMBER) == LGAMEROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LGAMEROOMID_FIELD_NUMBER, this.lGameRoomID_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i += CodedOutputStream.computeInt64Size(LFORCESTANDUPUUID_FIELD_NUMBER, this.lForceStandUpUuid_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCForceStandupRsp parseFrom(ByteString byteString) {
            return (SCForceStandupRsp) PARSER.parseFrom(byteString);
        }

        public static SCForceStandupRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceStandupRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCForceStandupRsp parseFrom(byte[] bArr) {
            return (SCForceStandupRsp) PARSER.parseFrom(bArr);
        }

        public static SCForceStandupRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceStandupRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCForceStandupRsp parseFrom(InputStream inputStream) {
            return (SCForceStandupRsp) PARSER.parseFrom(inputStream);
        }

        public static SCForceStandupRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceStandupRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCForceStandupRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCForceStandupRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCForceStandupRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceStandupRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCForceStandupRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCForceStandupRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCForceStandupRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCForceStandupRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCForceStandupRsp sCForceStandupRsp) {
            return newBuilder().mergeFrom(sCForceStandupRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCGameActionRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        GAME_ACT_TYPE getEGameActType();

        long getLBettingID();

        long getLRemainStacks();

        long getLRoomID();

        long getLStacks();

        boolean hasEErrCode();

        boolean hasEGameActType();

        boolean hasLBettingID();

        boolean hasLRemainStacks();

        boolean hasLRoomID();

        boolean hasLStacks();
    }

    public static final class SCGameActionRsp extends GeneratedMessage implements SCGameActionRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static final int EGAMEACTTYPE_FIELD_NUMBER = 3;
        public static final int LBETTINGID_FIELD_NUMBER = 6;
        public static final int LREMAINSTACKS_FIELD_NUMBER = 5;
        public static final int LROOMID_FIELD_NUMBER = 2;
        public static final int LSTACKS_FIELD_NUMBER = 4;
        public static Parser<SCGameActionRsp> PARSER;
        private static final SCGameActionRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private GAME_ACT_TYPE eGameActType_;
        private long lBettingID_;
        private long lRemainStacks_;
        private long lRoomID_;
        private long lStacks_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCGameActionRsp.1 */
        class C12711 extends AbstractParser<SCGameActionRsp> {
            C12711() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCGameActionRsp(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCGameActionRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private GAME_ACT_TYPE eGameActType_;
            private long lBettingID_;
            private long lRemainStacks_;
            private long lRoomID_;
            private long lStacks_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dk;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dl.ensureFieldAccessorsInitialized(SCGameActionRsp.class, Builder.class);
            }

            private Builder() {
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                SCGameActionRsp.alwaysUseFieldBuilders;
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                this.bitField0_ &= -2;
                this.lRoomID_ = 0;
                this.bitField0_ &= -3;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                this.bitField0_ &= -5;
                this.lStacks_ = 0;
                this.bitField0_ &= -9;
                this.lRemainStacks_ = 0;
                this.bitField0_ &= -17;
                this.lBettingID_ = 0;
                this.bitField0_ &= -33;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dk;
            }

            public final SCGameActionRsp getDefaultInstanceForType() {
                return SCGameActionRsp.getDefaultInstance();
            }

            public final SCGameActionRsp build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCGameActionRsp buildPartial() {
                int i = SCGameActionRsp.EERRCODE_FIELD_NUMBER;
                SCGameActionRsp sCGameActionRsp = new SCGameActionRsp(null);
                int i2 = this.bitField0_;
                if ((i2 & SCGameActionRsp.EERRCODE_FIELD_NUMBER) != SCGameActionRsp.EERRCODE_FIELD_NUMBER) {
                    i = 0;
                }
                sCGameActionRsp.eErrCode_ = this.eErrCode_;
                if ((i2 & SCGameActionRsp.LROOMID_FIELD_NUMBER) == SCGameActionRsp.LROOMID_FIELD_NUMBER) {
                    i |= SCGameActionRsp.LROOMID_FIELD_NUMBER;
                }
                sCGameActionRsp.lRoomID_ = this.lRoomID_;
                if ((i2 & SCGameActionRsp.LSTACKS_FIELD_NUMBER) == SCGameActionRsp.LSTACKS_FIELD_NUMBER) {
                    i |= SCGameActionRsp.LSTACKS_FIELD_NUMBER;
                }
                sCGameActionRsp.eGameActType_ = this.eGameActType_;
                if ((i2 & 8) == 8) {
                    i |= 8;
                }
                sCGameActionRsp.lStacks_ = this.lStacks_;
                if ((i2 & 16) == 16) {
                    i |= 16;
                }
                sCGameActionRsp.lRemainStacks_ = this.lRemainStacks_;
                if ((i2 & 32) == 32) {
                    i |= 32;
                }
                sCGameActionRsp.lBettingID_ = this.lBettingID_;
                sCGameActionRsp.bitField0_ = i;
                onBuilt();
                return sCGameActionRsp;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCGameActionRsp) {
                    return mergeFrom((SCGameActionRsp) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCGameActionRsp sCGameActionRsp) {
                if (sCGameActionRsp != SCGameActionRsp.getDefaultInstance()) {
                    if (sCGameActionRsp.hasEErrCode()) {
                        setEErrCode(sCGameActionRsp.getEErrCode());
                    }
                    if (sCGameActionRsp.hasLRoomID()) {
                        setLRoomID(sCGameActionRsp.getLRoomID());
                    }
                    if (sCGameActionRsp.hasEGameActType()) {
                        setEGameActType(sCGameActionRsp.getEGameActType());
                    }
                    if (sCGameActionRsp.hasLStacks()) {
                        setLStacks(sCGameActionRsp.getLStacks());
                    }
                    if (sCGameActionRsp.hasLRemainStacks()) {
                        setLRemainStacks(sCGameActionRsp.getLRemainStacks());
                    }
                    if (sCGameActionRsp.hasLBettingID()) {
                        setLBettingID(sCGameActionRsp.getLBettingID());
                    }
                    mergeUnknownFields(sCGameActionRsp.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasEErrCode()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCGameActionRsp.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCGameActionRsp.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCGameActionRsp) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCGameActionRsp) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCGameActionRsp.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCGameActionRsp$Builder");
            }

            public final boolean hasEErrCode() {
                return (this.bitField0_ & SCGameActionRsp.EERRCODE_FIELD_NUMBER) == SCGameActionRsp.EERRCODE_FIELD_NUMBER;
            }

            public final ERROR_CODE_TYPE getEErrCode() {
                return this.eErrCode_;
            }

            public final Builder setEErrCode(ERROR_CODE_TYPE error_code_type) {
                if (error_code_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCGameActionRsp.EERRCODE_FIELD_NUMBER;
                this.eErrCode_ = error_code_type;
                onChanged();
                return this;
            }

            public final Builder clearEErrCode() {
                this.bitField0_ &= -2;
                this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
                onChanged();
                return this;
            }

            public final boolean hasLRoomID() {
                return (this.bitField0_ & SCGameActionRsp.LROOMID_FIELD_NUMBER) == SCGameActionRsp.LROOMID_FIELD_NUMBER;
            }

            public final long getLRoomID() {
                return this.lRoomID_;
            }

            public final Builder setLRoomID(long j) {
                this.bitField0_ |= SCGameActionRsp.LROOMID_FIELD_NUMBER;
                this.lRoomID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRoomID() {
                this.bitField0_ &= -3;
                this.lRoomID_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasEGameActType() {
                return (this.bitField0_ & SCGameActionRsp.LSTACKS_FIELD_NUMBER) == SCGameActionRsp.LSTACKS_FIELD_NUMBER;
            }

            public final GAME_ACT_TYPE getEGameActType() {
                return this.eGameActType_;
            }

            public final Builder setEGameActType(GAME_ACT_TYPE game_act_type) {
                if (game_act_type == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= SCGameActionRsp.LSTACKS_FIELD_NUMBER;
                this.eGameActType_ = game_act_type;
                onChanged();
                return this;
            }

            public final Builder clearEGameActType() {
                this.bitField0_ &= -5;
                this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
                onChanged();
                return this;
            }

            public final boolean hasLStacks() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getLStacks() {
                return this.lStacks_;
            }

            public final Builder setLStacks(long j) {
                this.bitField0_ |= 8;
                this.lStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLStacks() {
                this.bitField0_ &= -9;
                this.lStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLRemainStacks() {
                return (this.bitField0_ & 16) == 16;
            }

            public final long getLRemainStacks() {
                return this.lRemainStacks_;
            }

            public final Builder setLRemainStacks(long j) {
                this.bitField0_ |= 16;
                this.lRemainStacks_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLRemainStacks() {
                this.bitField0_ &= -17;
                this.lRemainStacks_ = 0;
                onChanged();
                return this;
            }

            public final boolean hasLBettingID() {
                return (this.bitField0_ & 32) == 32;
            }

            public final long getLBettingID() {
                return this.lBettingID_;
            }

            public final Builder setLBettingID(long j) {
                this.bitField0_ |= 32;
                this.lBettingID_ = j;
                onChanged();
                return this;
            }

            public final Builder clearLBettingID() {
                this.bitField0_ &= -33;
                this.lBettingID_ = 0;
                onChanged();
                return this;
            }
        }

        private SCGameActionRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCGameActionRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCGameActionRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCGameActionRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCGameActionRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case SQLiteDatabase.NO_LOCALIZED_COLLATORS /*16*/:
                            this.bitField0_ |= LROOMID_FIELD_NUMBER;
                            this.lRoomID_ = codedInputStream.readInt64();
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            readTag = codedInputStream.readEnum();
                            GAME_ACT_TYPE valueOf2 = GAME_ACT_TYPE.valueOf(readTag);
                            if (valueOf2 != null) {
                                this.bitField0_ |= LSTACKS_FIELD_NUMBER;
                                this.eGameActType_ = valueOf2;
                                break;
                            }
                            newBuilder.mergeVarintField(EGAMEACTTYPE_FIELD_NUMBER, readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            this.bitField0_ |= 8;
                            this.lStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 16;
                            this.lRemainStacks_ = codedInputStream.readInt64();
                            break;
                        case R.AppCompatTheme_spinnerDropDownItemStyle /*48*/:
                            this.bitField0_ |= 32;
                            this.lBettingID_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dk;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dl.ensureFieldAccessorsInitialized(SCGameActionRsp.class, Builder.class);
        }

        static {
            PARSER = new C12711();
            SCGameActionRsp sCGameActionRsp = new SCGameActionRsp(true);
            defaultInstance = sCGameActionRsp;
            sCGameActionRsp.initFields();
        }

        public final Parser<SCGameActionRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasLRoomID() {
            return (this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER;
        }

        public final long getLRoomID() {
            return this.lRoomID_;
        }

        public final boolean hasEGameActType() {
            return (this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER;
        }

        public final GAME_ACT_TYPE getEGameActType() {
            return this.eGameActType_;
        }

        public final boolean hasLStacks() {
            return (this.bitField0_ & 8) == 8;
        }

        public final long getLStacks() {
            return this.lStacks_;
        }

        public final boolean hasLRemainStacks() {
            return (this.bitField0_ & 16) == 16;
        }

        public final long getLRemainStacks() {
            return this.lRemainStacks_;
        }

        public final boolean hasLBettingID() {
            return (this.bitField0_ & 32) == 32;
        }

        public final long getLBettingID() {
            return this.lBettingID_;
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.lRoomID_ = 0;
            this.eGameActType_ = GAME_ACT_TYPE.GAME_ACT_TYPE_FOLD;
            this.lStacks_ = 0;
            this.lRemainStacks_ = 0;
            this.lBettingID_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            }
            this.memoizedIsInitialized = (byte) 0;
            return false;
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                codedOutputStream.writeInt64(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EGAMEACTTYPE_FIELD_NUMBER, this.eGameActType_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(LREMAINSTACKS_FIELD_NUMBER, this.lRemainStacks_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(LBETTINGID_FIELD_NUMBER, this.lBettingID_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = this.memoizedSerializedSize;
            if (i != -1) {
                return i;
            }
            i = 0;
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            }
            if ((this.bitField0_ & LROOMID_FIELD_NUMBER) == LROOMID_FIELD_NUMBER) {
                i += CodedOutputStream.computeInt64Size(LROOMID_FIELD_NUMBER, this.lRoomID_);
            }
            if ((this.bitField0_ & LSTACKS_FIELD_NUMBER) == LSTACKS_FIELD_NUMBER) {
                i += CodedOutputStream.computeEnumSize(EGAMEACTTYPE_FIELD_NUMBER, this.eGameActType_.getNumber());
            }
            if ((this.bitField0_ & 8) == 8) {
                i += CodedOutputStream.computeInt64Size(LSTACKS_FIELD_NUMBER, this.lStacks_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i += CodedOutputStream.computeInt64Size(LREMAINSTACKS_FIELD_NUMBER, this.lRemainStacks_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i += CodedOutputStream.computeInt64Size(LBETTINGID_FIELD_NUMBER, this.lBettingID_);
            }
            i += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i;
            return i;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCGameActionRsp parseFrom(ByteString byteString) {
            return (SCGameActionRsp) PARSER.parseFrom(byteString);
        }

        public static SCGameActionRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameActionRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCGameActionRsp parseFrom(byte[] bArr) {
            return (SCGameActionRsp) PARSER.parseFrom(bArr);
        }

        public static SCGameActionRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameActionRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCGameActionRsp parseFrom(InputStream inputStream) {
            return (SCGameActionRsp) PARSER.parseFrom(inputStream);
        }

        public static SCGameActionRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameActionRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCGameActionRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCGameActionRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCGameActionRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameActionRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCGameActionRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCGameActionRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCGameActionRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameActionRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCGameActionRsp sCGameActionRsp) {
            return newBuilder().mergeFrom(sCGameActionRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCGameRoomStateChangeOrBuilder extends MessageOrBuilder {
        GameRoomInfo getStGameRoomInfo();

        GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder();

        long getUuid();

        int getVGivenCards(int i);

        int getVGivenCardsCount();

        List<Integer> getVGivenCardsList();

        int getVGivenHands(int i);

        int getVGivenHandsCount();

        List<Integer> getVGivenHandsList();

        boolean hasStGameRoomInfo();

        boolean hasUuid();
    }

    public static final class SCGameRoomStateChange extends GeneratedMessage implements SCGameRoomStateChangeOrBuilder {
        public static Parser<SCGameRoomStateChange> PARSER = null;
        public static final int STGAMEROOMINFO_FIELD_NUMBER = 1;
        public static final int UUID_FIELD_NUMBER = 5;
        public static final int VGIVENCARDS_FIELD_NUMBER = 3;
        public static final int VGIVENHANDS_FIELD_NUMBER = 4;
        private static final SCGameRoomStateChange defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private GameRoomInfo stGameRoomInfo_;
        private final UnknownFieldSet unknownFields;
        private long uuid_;
        private List<Integer> vGivenCards_;
        private List<Integer> vGivenHands_;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCGameRoomStateChange.1 */
        class C12721 extends AbstractParser<SCGameRoomStateChange> {
            C12721() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCGameRoomStateChange(extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCGameRoomStateChangeOrBuilder {
            private int bitField0_;
            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> stGameRoomInfoBuilder_;
            private GameRoomInfo stGameRoomInfo_;
            private long uuid_;
            private List<Integer> vGivenCards_;
            private List<Integer> vGivenHands_;

            public static final Descriptor getDescriptor() {
                return TexasPoker.dg;
            }

            protected final FieldAccessorTable internalGetFieldAccessorTable() {
                return TexasPoker.dh.ensureFieldAccessorsInitialized(SCGameRoomStateChange.class, Builder.class);
            }

            private Builder() {
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.vGivenCards_ = Collections.emptyList();
                this.vGivenHands_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                this.vGivenCards_ = Collections.emptyList();
                this.vGivenHands_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (SCGameRoomStateChange.alwaysUseFieldBuilders) {
                    getStGameRoomInfoFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public final Builder clear() {
                super.clear();
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                this.vGivenCards_ = Collections.emptyList();
                this.bitField0_ &= -3;
                this.vGivenHands_ = Collections.emptyList();
                this.bitField0_ &= -5;
                this.uuid_ = 0;
                this.bitField0_ &= -9;
                return this;
            }

            public final Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public final Descriptor getDescriptorForType() {
                return TexasPoker.dg;
            }

            public final SCGameRoomStateChange getDefaultInstanceForType() {
                return SCGameRoomStateChange.getDefaultInstance();
            }

            public final SCGameRoomStateChange build() {
                Object buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw com.google.protobuf.AbstractMessage.Builder.newUninitializedMessageException(buildPartial);
            }

            public final SCGameRoomStateChange buildPartial() {
                SCGameRoomStateChange sCGameRoomStateChange = new SCGameRoomStateChange(null);
                int i = this.bitField0_;
                int i2 = 0;
                if ((i & SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER) == SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER) {
                    i2 = SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
                }
                if (this.stGameRoomInfoBuilder_ == null) {
                    sCGameRoomStateChange.stGameRoomInfo_ = this.stGameRoomInfo_;
                } else {
                    sCGameRoomStateChange.stGameRoomInfo_ = (GameRoomInfo) this.stGameRoomInfoBuilder_.build();
                }
                if ((this.bitField0_ & 2) == 2) {
                    this.vGivenCards_ = Collections.unmodifiableList(this.vGivenCards_);
                    this.bitField0_ &= -3;
                }
                sCGameRoomStateChange.vGivenCards_ = this.vGivenCards_;
                if ((this.bitField0_ & SCGameRoomStateChange.VGIVENHANDS_FIELD_NUMBER) == SCGameRoomStateChange.VGIVENHANDS_FIELD_NUMBER) {
                    this.vGivenHands_ = Collections.unmodifiableList(this.vGivenHands_);
                    this.bitField0_ &= -5;
                }
                sCGameRoomStateChange.vGivenHands_ = this.vGivenHands_;
                if ((i & 8) == 8) {
                    i2 |= 2;
                }
                sCGameRoomStateChange.uuid_ = this.uuid_;
                sCGameRoomStateChange.bitField0_ = i2;
                onBuilt();
                return sCGameRoomStateChange;
            }

            public final Builder mergeFrom(Message message) {
                if (message instanceof SCGameRoomStateChange) {
                    return mergeFrom((SCGameRoomStateChange) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public final Builder mergeFrom(SCGameRoomStateChange sCGameRoomStateChange) {
                if (sCGameRoomStateChange != SCGameRoomStateChange.getDefaultInstance()) {
                    if (sCGameRoomStateChange.hasStGameRoomInfo()) {
                        mergeStGameRoomInfo(sCGameRoomStateChange.getStGameRoomInfo());
                    }
                    if (!sCGameRoomStateChange.vGivenCards_.isEmpty()) {
                        if (this.vGivenCards_.isEmpty()) {
                            this.vGivenCards_ = sCGameRoomStateChange.vGivenCards_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureVGivenCardsIsMutable();
                            this.vGivenCards_.addAll(sCGameRoomStateChange.vGivenCards_);
                        }
                        onChanged();
                    }
                    if (!sCGameRoomStateChange.vGivenHands_.isEmpty()) {
                        if (this.vGivenHands_.isEmpty()) {
                            this.vGivenHands_ = sCGameRoomStateChange.vGivenHands_;
                            this.bitField0_ &= -5;
                        } else {
                            ensureVGivenHandsIsMutable();
                            this.vGivenHands_.addAll(sCGameRoomStateChange.vGivenHands_);
                        }
                        onChanged();
                    }
                    if (sCGameRoomStateChange.hasUuid()) {
                        setUuid(sCGameRoomStateChange.getUuid());
                    }
                    mergeUnknownFields(sCGameRoomStateChange.getUnknownFields());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasStGameRoomInfo() && getStGameRoomInfo().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: inconsistent code. */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public final com.texaspoker.moment.TexasPoker.SCGameRoomStateChange.Builder mergeFrom(com.google.protobuf.CodedInputStream r5, com.google.protobuf.ExtensionRegistryLite r6) {
                /*
                r4 = this;
                r2 = 0;
                r0 = com.texaspoker.moment.TexasPoker.SCGameRoomStateChange.PARSER;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = r0.parsePartialFrom(r5, r6);	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                r0 = (com.texaspoker.moment.TexasPoker.SCGameRoomStateChange) r0;	 Catch:{ InvalidProtocolBufferException -> 0x000f }
                if (r0 == 0) goto L_0x000e;
            L_0x000b:
                r4.mergeFrom(r0);
            L_0x000e:
                return r4;
            L_0x000f:
                r0 = move-exception;
                r1 = r0;
                r0 = r1.getUnfinishedMessage();	 Catch:{ all -> 0x0022 }
                r0 = (com.texaspoker.moment.TexasPoker.SCGameRoomStateChange) r0;	 Catch:{ all -> 0x0022 }
                throw r1;	 Catch:{ all -> 0x0018 }
            L_0x0018:
                r1 = move-exception;
                r3 = r1;
                r1 = r0;
                r0 = r3;
            L_0x001c:
                if (r1 == 0) goto L_0x0021;
            L_0x001e:
                r4.mergeFrom(r1);
            L_0x0021:
                throw r0;
            L_0x0022:
                r0 = move-exception;
                r1 = r2;
                goto L_0x001c;
                */
                throw new UnsupportedOperationException("Method not decompiled: com.texaspoker.moment.TexasPoker.SCGameRoomStateChange.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.texaspoker.moment.TexasPoker$SCGameRoomStateChange$Builder");
            }

            public final boolean hasStGameRoomInfo() {
                return (this.bitField0_ & SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER) == SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
            }

            public final GameRoomInfo getStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    return this.stGameRoomInfo_;
                }
                return (GameRoomInfo) this.stGameRoomInfoBuilder_.getMessage();
            }

            public final Builder setStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ != null) {
                    this.stGameRoomInfoBuilder_.setMessage(gameRoomInfo);
                } else if (gameRoomInfo == null) {
                    throw new NullPointerException();
                } else {
                    this.stGameRoomInfo_ = gameRoomInfo;
                    onChanged();
                }
                this.bitField0_ |= SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder setStGameRoomInfo(Builder builder) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = builder.build();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.setMessage(builder.build());
                }
                this.bitField0_ |= SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder mergeStGameRoomInfo(GameRoomInfo gameRoomInfo) {
                if (this.stGameRoomInfoBuilder_ == null) {
                    if ((this.bitField0_ & SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER) != SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER || this.stGameRoomInfo_ == GameRoomInfo.getDefaultInstance()) {
                        this.stGameRoomInfo_ = gameRoomInfo;
                    } else {
                        this.stGameRoomInfo_ = GameRoomInfo.newBuilder(this.stGameRoomInfo_).mergeFrom(gameRoomInfo).buildPartial();
                    }
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.mergeFrom(gameRoomInfo);
                }
                this.bitField0_ |= SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
                return this;
            }

            public final Builder clearStGameRoomInfo() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
                    onChanged();
                } else {
                    this.stGameRoomInfoBuilder_.clear();
                }
                this.bitField0_ &= -2;
                return this;
            }

            public final Builder getStGameRoomInfoBuilder() {
                this.bitField0_ |= SCGameRoomStateChange.STGAMEROOMINFO_FIELD_NUMBER;
                onChanged();
                return (Builder) getStGameRoomInfoFieldBuilder().getBuilder();
            }

            public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
                if (this.stGameRoomInfoBuilder_ != null) {
                    return (GameRoomInfoOrBuilder) this.stGameRoomInfoBuilder_.getMessageOrBuilder();
                }
                return this.stGameRoomInfo_;
            }

            private SingleFieldBuilder<GameRoomInfo, Builder, GameRoomInfoOrBuilder> getStGameRoomInfoFieldBuilder() {
                if (this.stGameRoomInfoBuilder_ == null) {
                    this.stGameRoomInfoBuilder_ = new SingleFieldBuilder(getStGameRoomInfo(), getParentForChildren(), isClean());
                    this.stGameRoomInfo_ = null;
                }
                return this.stGameRoomInfoBuilder_;
            }

            private void ensureVGivenCardsIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.vGivenCards_ = new ArrayList(this.vGivenCards_);
                    this.bitField0_ |= 2;
                }
            }

            public final List<Integer> getVGivenCardsList() {
                return Collections.unmodifiableList(this.vGivenCards_);
            }

            public final int getVGivenCardsCount() {
                return this.vGivenCards_.size();
            }

            public final int getVGivenCards(int i) {
                return ((Integer) this.vGivenCards_.get(i)).intValue();
            }

            public final Builder setVGivenCards(int i, int i2) {
                ensureVGivenCardsIsMutable();
                this.vGivenCards_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVGivenCards(int i) {
                ensureVGivenCardsIsMutable();
                this.vGivenCards_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVGivenCards(Iterable<? extends Integer> iterable) {
                ensureVGivenCardsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vGivenCards_);
                onChanged();
                return this;
            }

            public final Builder clearVGivenCards() {
                this.vGivenCards_ = Collections.emptyList();
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }

            private void ensureVGivenHandsIsMutable() {
                if ((this.bitField0_ & SCGameRoomStateChange.VGIVENHANDS_FIELD_NUMBER) != SCGameRoomStateChange.VGIVENHANDS_FIELD_NUMBER) {
                    this.vGivenHands_ = new ArrayList(this.vGivenHands_);
                    this.bitField0_ |= SCGameRoomStateChange.VGIVENHANDS_FIELD_NUMBER;
                }
            }

            public final List<Integer> getVGivenHandsList() {
                return Collections.unmodifiableList(this.vGivenHands_);
            }

            public final int getVGivenHandsCount() {
                return this.vGivenHands_.size();
            }

            public final int getVGivenHands(int i) {
                return ((Integer) this.vGivenHands_.get(i)).intValue();
            }

            public final Builder setVGivenHands(int i, int i2) {
                ensureVGivenHandsIsMutable();
                this.vGivenHands_.set(i, Integer.valueOf(i2));
                onChanged();
                return this;
            }

            public final Builder addVGivenHands(int i) {
                ensureVGivenHandsIsMutable();
                this.vGivenHands_.add(Integer.valueOf(i));
                onChanged();
                return this;
            }

            public final Builder addAllVGivenHands(Iterable<? extends Integer> iterable) {
                ensureVGivenHandsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(iterable, this.vGivenHands_);
                onChanged();
                return this;
            }

            public final Builder clearVGivenHands() {
                this.vGivenHands_ = Collections.emptyList();
                this.bitField0_ &= -5;
                onChanged();
                return this;
            }

            public final boolean hasUuid() {
                return (this.bitField0_ & 8) == 8;
            }

            public final long getUuid() {
                return this.uuid_;
            }

            public final Builder setUuid(long j) {
                this.bitField0_ |= 8;
                this.uuid_ = j;
                onChanged();
                return this;
            }

            public final Builder clearUuid() {
                this.bitField0_ &= -9;
                this.uuid_ = 0;
                onChanged();
                return this;
            }
        }

        private SCGameRoomStateChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCGameRoomStateChange(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCGameRoomStateChange getDefaultInstance() {
            return defaultInstance;
        }

        public final SCGameRoomStateChange getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCGameRoomStateChange(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case PushMsg.SMSG_FIELD_NUMBER /*10*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                                toBuilder = this.stGameRoomInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stGameRoomInfo_ = (GameRoomInfo) codedInputStream.readMessage(GameRoomInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stGameRoomInfo_);
                                this.stGameRoomInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STGAMEROOMINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.BINSURANCE_FIELD_NUMBER /*24*/:
                            if ((i & 2) != 2) {
                                this.vGivenCards_ = new ArrayList();
                                i |= 2;
                            }
                            this.vGivenCards_.add(Integer.valueOf(codedInputStream.readInt32()));
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & 2) != 2 && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vGivenCards_ = new ArrayList();
                                i |= 2;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vGivenCards_.add(Integer.valueOf(codedInputStream.readInt32()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        case GameRoomBaseInfo.SFROMCLUBNAME_FIELD_NUMBER /*32*/:
                            if ((i & VGIVENHANDS_FIELD_NUMBER) != VGIVENHANDS_FIELD_NUMBER) {
                                this.vGivenHands_ = new ArrayList();
                                i |= VGIVENHANDS_FIELD_NUMBER;
                            }
                            this.vGivenHands_.add(Integer.valueOf(codedInputStream.readInt32()));
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            readTag = codedInputStream.pushLimit(codedInputStream.readRawVarint32());
                            if ((i & VGIVENHANDS_FIELD_NUMBER) != VGIVENHANDS_FIELD_NUMBER && codedInputStream.getBytesUntilLimit() > 0) {
                                this.vGivenHands_ = new ArrayList();
                                i |= VGIVENHANDS_FIELD_NUMBER;
                            }
                            while (codedInputStream.getBytesUntilLimit() > 0) {
                                this.vGivenHands_.add(Integer.valueOf(codedInputStream.readInt32()));
                            }
                            codedInputStream.popLimit(readTag);
                            break;
                        case R.AppCompatTheme_textAppearanceLargePopupMenu /*40*/:
                            this.bitField0_ |= 2;
                            this.uuid_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = STGAMEROOMINFO_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & 2) == 2) {
                        this.vGivenCards_ = Collections.unmodifiableList(this.vGivenCards_);
                    }
                    if ((i & VGIVENHANDS_FIELD_NUMBER) == VGIVENHANDS_FIELD_NUMBER) {
                        this.vGivenHands_ = Collections.unmodifiableList(this.vGivenHands_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & 2) == 2) {
                this.vGivenCards_ = Collections.unmodifiableList(this.vGivenCards_);
            }
            if ((i & VGIVENHANDS_FIELD_NUMBER) == VGIVENHANDS_FIELD_NUMBER) {
                this.vGivenHands_ = Collections.unmodifiableList(this.vGivenHands_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.dg;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.dh.ensureFieldAccessorsInitialized(SCGameRoomStateChange.class, Builder.class);
        }

        static {
            PARSER = new C12721();
            SCGameRoomStateChange sCGameRoomStateChange = new SCGameRoomStateChange(true);
            defaultInstance = sCGameRoomStateChange;
            sCGameRoomStateChange.initFields();
        }

        public final Parser<SCGameRoomStateChange> getParserForType() {
            return PARSER;
        }

        public final boolean hasStGameRoomInfo() {
            return (this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER;
        }

        public final GameRoomInfo getStGameRoomInfo() {
            return this.stGameRoomInfo_;
        }

        public final GameRoomInfoOrBuilder getStGameRoomInfoOrBuilder() {
            return this.stGameRoomInfo_;
        }

        public final List<Integer> getVGivenCardsList() {
            return this.vGivenCards_;
        }

        public final int getVGivenCardsCount() {
            return this.vGivenCards_.size();
        }

        public final int getVGivenCards(int i) {
            return ((Integer) this.vGivenCards_.get(i)).intValue();
        }

        public final List<Integer> getVGivenHandsList() {
            return this.vGivenHands_;
        }

        public final int getVGivenHandsCount() {
            return this.vGivenHands_.size();
        }

        public final int getVGivenHands(int i) {
            return ((Integer) this.vGivenHands_.get(i)).intValue();
        }

        public final boolean hasUuid() {
            return (this.bitField0_ & 2) == 2;
        }

        public final long getUuid() {
            return this.uuid_;
        }

        private void initFields() {
            this.stGameRoomInfo_ = GameRoomInfo.getDefaultInstance();
            this.vGivenCards_ = Collections.emptyList();
            this.vGivenHands_ = Collections.emptyList();
            this.uuid_ = 0;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasStGameRoomInfo()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (getStGameRoomInfo().isInitialized()) {
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i = 0;
            getSerializedSize();
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_);
            }
            for (int i2 = 0; i2 < this.vGivenCards_.size(); i2 += STGAMEROOMINFO_FIELD_NUMBER) {
                codedOutputStream.writeInt32(VGIVENCARDS_FIELD_NUMBER, ((Integer) this.vGivenCards_.get(i2)).intValue());
            }
            while (i < this.vGivenHands_.size()) {
                codedOutputStream.writeInt32(VGIVENHANDS_FIELD_NUMBER, ((Integer) this.vGivenHands_.get(i)).intValue());
                i += STGAMEROOMINFO_FIELD_NUMBER;
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeInt64(UUID_FIELD_NUMBER, this.uuid_);
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            int computeMessageSize;
            int i3;
            if ((this.bitField0_ & STGAMEROOMINFO_FIELD_NUMBER) == STGAMEROOMINFO_FIELD_NUMBER) {
                computeMessageSize = CodedOutputStream.computeMessageSize(STGAMEROOMINFO_FIELD_NUMBER, this.stGameRoomInfo_) + 0;
            } else {
                computeMessageSize = 0;
            }
            int i4 = 0;
            for (i3 = 0; i3 < this.vGivenCards_.size(); i3 += STGAMEROOMINFO_FIELD_NUMBER) {
                i4 += CodedOutputStream.computeInt32SizeNoTag(((Integer) this.vGivenCards_.get(i3)).intValue());
            }
            i3 = (computeMessageSize + i4) + (getVGivenCardsList().size() * STGAMEROOMINFO_FIELD_NUMBER);
            computeMessageSize = 0;
            while (i < this.vGivenHands_.size()) {
                i += STGAMEROOMINFO_FIELD_NUMBER;
                computeMessageSize = CodedOutputStream.computeInt32SizeNoTag(((Integer) this.vGivenHands_.get(i)).intValue()) + computeMessageSize;
            }
            i2 = (i3 + computeMessageSize) + (getVGivenHandsList().size() * STGAMEROOMINFO_FIELD_NUMBER);
            if ((this.bitField0_ & 2) == 2) {
                i2 += CodedOutputStream.computeInt64Size(UUID_FIELD_NUMBER, this.uuid_);
            }
            i2 += getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCGameRoomStateChange parseFrom(ByteString byteString) {
            return (SCGameRoomStateChange) PARSER.parseFrom(byteString);
        }

        public static SCGameRoomStateChange parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameRoomStateChange) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCGameRoomStateChange parseFrom(byte[] bArr) {
            return (SCGameRoomStateChange) PARSER.parseFrom(bArr);
        }

        public static SCGameRoomStateChange parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameRoomStateChange) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCGameRoomStateChange parseFrom(InputStream inputStream) {
            return (SCGameRoomStateChange) PARSER.parseFrom(inputStream);
        }

        public static SCGameRoomStateChange parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameRoomStateChange) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCGameRoomStateChange parseDelimitedFrom(InputStream inputStream) {
            return (SCGameRoomStateChange) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCGameRoomStateChange parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameRoomStateChange) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCGameRoomStateChange parseFrom(CodedInputStream codedInputStream) {
            return (SCGameRoomStateChange) PARSER.parseFrom(codedInputStream);
        }

        public static SCGameRoomStateChange parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGameRoomStateChange) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCGameRoomStateChange sCGameRoomStateChange) {
            return newBuilder().mergeFrom(sCGameRoomStateChange);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(null);
        }
    }

    public interface SCGetAllBuyinControlsRspOrBuilder extends MessageOrBuilder {
        ERROR_CODE_TYPE getEErrCode();

        BuyinControl getVBuyinControls(int i);

        int getVBuyinControlsCount();

        List<BuyinControl> getVBuyinControlsList();

        BuyinControlOrBuilder getVBuyinControlsOrBuilder(int i);

        List<? extends BuyinControlOrBuilder> getVBuyinControlsOrBuilderList();

        boolean hasEErrCode();
    }

    public static final class SCGetAllBuyinControlsRsp extends GeneratedMessage implements SCGetAllBuyinControlsRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCGetAllBuyinControlsRsp> PARSER = null;
        public static final int VBUYINCONTROLS_FIELD_NUMBER = 2;
        private static final SCGetAllBuyinControlsRsp defaultInstance = null;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private final UnknownFieldSet unknownFields;
        private List<BuyinControl> vBuyinControls_;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCGetAllBuyinControlsRsp.1 */
        class C12731 extends AbstractParser<SCGetAllBuyinControlsRsp> {
            C12731() {
            }

            public final /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
                return new SCGetAllBuyinControlsRsp(codedInputStream, extensionRegistryLite, null);
            }
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements SCGetAllBuyinControlsRspOrBuilder {
            private int bitField0_;
            private ERROR_CODE_TYPE eErrCode_;
            private RepeatedFieldBuilder<BuyinControl, Builder, BuyinControlOrBuilder> vBuyinControlsBuilder_;
            private List<BuyinControl> vBuyinControls_;

            static {
                fixHelper.fixfunc(new int[]{3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            private native Builder();

            private native Builder(BuilderParent builderParent);

            native /* synthetic */ Builder(BuilderParent builderParent, Builder builder);

            private native void ensureVBuyinControlsIsMutable();

            private native RepeatedFieldBuilder<BuyinControl, Builder, BuyinControlOrBuilder> getVBuyinControlsFieldBuilder();

            private native void maybeForceBuilderInitialization();

            public final native Builder addAllVBuyinControls(Iterable<? extends BuyinControl> iterable);

            public final native Builder addVBuyinControls(int i, Builder builder);

            public final native Builder addVBuyinControls(int i, BuyinControl buyinControl);

            public final native Builder addVBuyinControls(Builder builder);

            public final native Builder addVBuyinControls(BuyinControl buyinControl);

            public final native Builder addVBuyinControlsBuilder();

            public final native Builder addVBuyinControlsBuilder(int i);

            public final native /* bridge */ /* synthetic */ Message build();

            public final native /* bridge */ /* synthetic */ MessageLite m6643build();

            public final native SCGetAllBuyinControlsRsp m6644build();

            public final native /* bridge */ /* synthetic */ Message buildPartial();

            public final native /* bridge */ /* synthetic */ MessageLite m6645buildPartial();

            public final native SCGetAllBuyinControlsRsp m6646buildPartial();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6647clear();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6648clear();

            public final native Builder m6649clear();

            public final native Builder clearEErrCode();

            public final native Builder clearVBuyinControls();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.GeneratedMessage.Builder clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6650clone();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6651clone();

            public final native Builder m6652clone();

            public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

            public final native /* bridge */ /* synthetic */ MessageLite m6653getDefaultInstanceForType();

            public final native SCGetAllBuyinControlsRsp m6654getDefaultInstanceForType();

            public final native Descriptor getDescriptorForType();

            public final native ERROR_CODE_TYPE getEErrCode();

            public final native BuyinControl getVBuyinControls(int i);

            public final native Builder getVBuyinControlsBuilder(int i);

            public final native List<Builder> getVBuyinControlsBuilderList();

            public final native int getVBuyinControlsCount();

            public final native List<BuyinControl> getVBuyinControlsList();

            public final native BuyinControlOrBuilder getVBuyinControlsOrBuilder(int i);

            public final native List<? extends BuyinControlOrBuilder> getVBuyinControlsOrBuilderList();

            public final native boolean hasEErrCode();

            protected final native FieldAccessorTable internalGetFieldAccessorTable();

            public final native boolean isInitialized();

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.AbstractMessage.Builder mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6655mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder m6656mergeFrom(Message message);

            public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6657mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6658mergeFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

            public final native Builder m6659mergeFrom(Message message);

            public final native Builder mergeFrom(SCGetAllBuyinControlsRsp sCGetAllBuyinControlsRsp);

            public final native Builder removeVBuyinControls(int i);

            public final native Builder setEErrCode(ERROR_CODE_TYPE error_code_type);

            public final native Builder setVBuyinControls(int i, Builder builder);

            public final native Builder setVBuyinControls(int i, BuyinControl buyinControl);

            public static final Descriptor getDescriptor() {
                return TexasPoker.cU;
            }

            private static Builder create() {
                return new Builder();
            }
        }

        static {
            fixHelper.fixfunc(new int[]{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42});
            __clinit__();
            if (VERSION.SDK_INT <= 0) {
                Exists2.class.toString();
            }
        }

        private native SCGetAllBuyinControlsRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);

        native /* synthetic */ SCGetAllBuyinControlsRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite, SCGetAllBuyinControlsRsp sCGetAllBuyinControlsRsp);

        private native SCGetAllBuyinControlsRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder);

        native /* synthetic */ SCGetAllBuyinControlsRsp(com.google.protobuf.GeneratedMessage.Builder builder, SCGetAllBuyinControlsRsp sCGetAllBuyinControlsRsp);

        private native SCGetAllBuyinControlsRsp(boolean z);

        private native void initFields();

        public final native /* bridge */ /* synthetic */ Message getDefaultInstanceForType();

        public final native /* bridge */ /* synthetic */ MessageLite m6636getDefaultInstanceForType();

        public final native SCGetAllBuyinControlsRsp m6637getDefaultInstanceForType();

        public final native ERROR_CODE_TYPE getEErrCode();

        public final native Parser<SCGetAllBuyinControlsRsp> getParserForType();

        public final native int getSerializedSize();

        public final native UnknownFieldSet getUnknownFields();

        public final native BuyinControl getVBuyinControls(int i);

        public final native int getVBuyinControlsCount();

        public final native List<BuyinControl> getVBuyinControlsList();

        public final native BuyinControlOrBuilder getVBuyinControlsOrBuilder(int i);

        public final native List<? extends BuyinControlOrBuilder> getVBuyinControlsOrBuilderList();

        public final native boolean hasEErrCode();

        protected final native FieldAccessorTable internalGetFieldAccessorTable();

        public final native boolean isInitialized();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType();

        protected final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6638newBuilderForType();

        public final native Builder m6639newBuilderForType();

        protected final native Builder m6640newBuilderForType(BuilderParent builderParent);

        public final native /* bridge */ /* synthetic */ com.google.protobuf.Message.Builder toBuilder();

        public final native /* bridge */ /* synthetic */ com.google.protobuf.MessageLite.Builder m6641toBuilder();

        public final native Builder m6642toBuilder();

        protected final native Object writeReplace();

        public final native void writeTo(CodedOutputStream codedOutputStream);

        public static SCGetAllBuyinControlsRsp getDefaultInstance() {
            return defaultInstance;
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.cU;
        }

        static void __clinit__() {
            PARSER = new C12731();
            SCGetAllBuyinControlsRsp sCGetAllBuyinControlsRsp = new SCGetAllBuyinControlsRsp(true);
            defaultInstance = sCGetAllBuyinControlsRsp;
            sCGetAllBuyinControlsRsp.initFields();
        }

        public static SCGetAllBuyinControlsRsp parseFrom(ByteString byteString) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(byteString);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(byte[] bArr) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(bArr);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(InputStream inputStream) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(inputStream);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCGetAllBuyinControlsRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCGetAllBuyinControlsRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCGetAllBuyinControlsRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetAllBuyinControlsRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(SCGetAllBuyinControlsRsp sCGetAllBuyinControlsRsp) {
            return newBuilder().mergeFrom(sCGetAllBuyinControlsRsp);
        }
    }

    public static final class SCGetChatRoomGamesByRoomIDRsp extends GeneratedMessage implements SCGetChatRoomGamesByRoomIDRspOrBuilder {
        public static final int EERRCODE_FIELD_NUMBER = 1;
        public static Parser<SCGetChatRoomGamesByRoomIDRsp> PARSER = null;
        public static final int STCHATROOMBASEINFO_FIELD_NUMBER = 2;
        public static final int VGAMEROOMBASEINFOS_FIELD_NUMBER = 3;
        public static final int VSNGGAMEROOMBASEINFOS_FIELD_NUMBER = 4;
        private static final SCGetChatRoomGamesByRoomIDRsp defaultInstance;
        private static final long serialVersionUID = 0;
        private int bitField0_;
        private ERROR_CODE_TYPE eErrCode_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private ChatRoomBaseInfo stChatRoomBaseInfo_;
        private final UnknownFieldSet unknownFields;
        private List<GameRoomBaseInfo> vGameRoomBaseInfos_;
        private List<SNGGameRoomBaseInfo> vSNGGameRoomBaseInfos_;

        /* renamed from: com.texaspoker.moment.TexasPoker.SCGetChatRoomGamesByRoomIDRsp.1 */
        class C12741 extends AbstractParser<SCGetChatRoomGamesByRoomIDRsp> {
            static {
                fixHelper.fixfunc(new int[]{3614, 3615});
                if (VERSION.SDK_INT <= 0) {
                    Exists2.class.toString();
                }
            }

            native C12741();

            public final native /* synthetic */ Object parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite);
        }

        private SCGetChatRoomGamesByRoomIDRsp(Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }

        private SCGetChatRoomGamesByRoomIDRsp(boolean z) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }

        public static SCGetChatRoomGamesByRoomIDRsp getDefaultInstance() {
            return defaultInstance;
        }

        public final SCGetChatRoomGamesByRoomIDRsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SCGetChatRoomGamesByRoomIDRsp(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            this.memoizedIsInitialized = (byte) -1;
            this.memoizedSerializedSize = -1;
            initFields();
            UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            Object obj = null;
            int i = 0;
            while (obj == null) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case SQLiteDatabase.OPEN_READWRITE /*0*/:
                            obj = EERRCODE_FIELD_NUMBER;
                            break;
                        case QuickGameRoomPushMsg.VUSERS_FIELD_NUMBER /*8*/:
                            readTag = codedInputStream.readEnum();
                            ERROR_CODE_TYPE valueOf = ERROR_CODE_TYPE.valueOf(readTag);
                            if (valueOf != null) {
                                this.bitField0_ |= EERRCODE_FIELD_NUMBER;
                                this.eErrCode_ = valueOf;
                                break;
                            }
                            newBuilder.mergeVarintField(EERRCODE_FIELD_NUMBER, readTag);
                            break;
                        case PushMsg.IVIBRATE_FIELD_NUMBER /*18*/:
                            Builder toBuilder;
                            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                                toBuilder = this.stChatRoomBaseInfo_.toBuilder();
                            } else {
                                toBuilder = null;
                            }
                            this.stChatRoomBaseInfo_ = (ChatRoomBaseInfo) codedInputStream.readMessage(ChatRoomBaseInfo.PARSER, extensionRegistryLite);
                            if (toBuilder != null) {
                                toBuilder.mergeFrom(this.stChatRoomBaseInfo_);
                                this.stChatRoomBaseInfo_ = toBuilder.buildPartial();
                            }
                            this.bitField0_ |= STCHATROOMBASEINFO_FIELD_NUMBER;
                            break;
                        case GameRoomBaseInfo.EGAMEROOMTYPE_FIELD_NUMBER /*26*/:
                            if ((i & VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) != VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) {
                                this.vGameRoomBaseInfos_ = new ArrayList();
                                i |= VSNGGAMEROOMBASEINFOS_FIELD_NUMBER;
                            }
                            this.vGameRoomBaseInfos_.add((GameRoomBaseInfo) codedInputStream.readMessage(GameRoomBaseInfo.PARSER, extensionRegistryLite));
                            break;
                        case GameRoomBaseInfo.ITHINKINGINTERVAL_FIELD_NUMBER /*34*/:
                            if ((i & 8) != 8) {
                                this.vSNGGameRoomBaseInfos_ = new ArrayList();
                                i |= 8;
                            }
                            this.vSNGGameRoomBaseInfos_.add((SNGGameRoomBaseInfo) codedInputStream.readMessage(SNGGameRoomBaseInfo.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                obj = EERRCODE_FIELD_NUMBER;
                                break;
                            }
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if ((i & VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) == VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) {
                        this.vGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGameRoomBaseInfos_);
                    }
                    if ((i & 8) == 8) {
                        this.vSNGGameRoomBaseInfos_ = Collections.unmodifiableList(this.vSNGGameRoomBaseInfos_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                }
            }
            if ((i & VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) == VSNGGAMEROOMBASEINFOS_FIELD_NUMBER) {
                this.vGameRoomBaseInfos_ = Collections.unmodifiableList(this.vGameRoomBaseInfos_);
            }
            if ((i & 8) == 8) {
                this.vSNGGameRoomBaseInfos_ = Collections.unmodifiableList(this.vSNGGameRoomBaseInfos_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return TexasPoker.bm;
        }

        protected final FieldAccessorTable internalGetFieldAccessorTable() {
            return TexasPoker.bn.ensureFieldAccessorsInitialized(SCGetChatRoomGamesByRoomIDRsp.class, Builder.class);
        }

        static {
            PARSER = new C12741();
            SCGetChatRoomGamesByRoomIDRsp sCGetChatRoomGamesByRoomIDRsp = new SCGetChatRoomGamesByRoomIDRsp(true);
            defaultInstance = sCGetChatRoomGamesByRoomIDRsp;
            sCGetChatRoomGamesByRoomIDRsp.initFields();
        }

        public final Parser<SCGetChatRoomGamesByRoomIDRsp> getParserForType() {
            return PARSER;
        }

        public final boolean hasEErrCode() {
            return (this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER;
        }

        public final ERROR_CODE_TYPE getEErrCode() {
            return this.eErrCode_;
        }

        public final boolean hasStChatRoomBaseInfo() {
            return (this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER;
        }

        public final ChatRoomBaseInfo getStChatRoomBaseInfo() {
            return this.stChatRoomBaseInfo_;
        }

        public final ChatRoomBaseInfoOrBuilder getStChatRoomBaseInfoOrBuilder() {
            return this.stChatRoomBaseInfo_;
        }

        public final List<GameRoomBaseInfo> getVGameRoomBaseInfosList() {
            return this.vGameRoomBaseInfos_;
        }

        public final List<? extends GameRoomBaseInfoOrBuilder> getVGameRoomBaseInfosOrBuilderList() {
            return this.vGameRoomBaseInfos_;
        }

        public final int getVGameRoomBaseInfosCount() {
            return this.vGameRoomBaseInfos_.size();
        }

        public final GameRoomBaseInfo getVGameRoomBaseInfos(int i) {
            return (GameRoomBaseInfo) this.vGameRoomBaseInfos_.get(i);
        }

        public final GameRoomBaseInfoOrBuilder getVGameRoomBaseInfosOrBuilder(int i) {
            return (GameRoomBaseInfoOrBuilder) this.vGameRoomBaseInfos_.get(i);
        }

        public final List<SNGGameRoomBaseInfo> getVSNGGameRoomBaseInfosList() {
            return this.vSNGGameRoomBaseInfos_;
        }

        public final List<? extends SNGGameRoomBaseInfoOrBuilder> getVSNGGameRoomBaseInfosOrBuilderList() {
            return this.vSNGGameRoomBaseInfos_;
        }

        public final int getVSNGGameRoomBaseInfosCount() {
            return this.vSNGGameRoomBaseInfos_.size();
        }

        public final SNGGameRoomBaseInfo getVSNGGameRoomBaseInfos(int i) {
            return (SNGGameRoomBaseInfo) this.vSNGGameRoomBaseInfos_.get(i);
        }

        public final SNGGameRoomBaseInfoOrBuilder getVSNGGameRoomBaseInfosOrBuilder(int i) {
            return (SNGGameRoomBaseInfoOrBuilder) this.vSNGGameRoomBaseInfos_.get(i);
        }

        private void initFields() {
            this.eErrCode_ = ERROR_CODE_TYPE.ERROR_CODE_TYPE_SUCCESS;
            this.stChatRoomBaseInfo_ = ChatRoomBaseInfo.getDefaultInstance();
            this.vGameRoomBaseInfos_ = Collections.emptyList();
            this.vSNGGameRoomBaseInfos_ = Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == (byte) 1) {
                return true;
            }
            if (b == null) {
                return false;
            }
            if (!hasEErrCode()) {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            } else if (!hasStChatRoomBaseInfo() || getStChatRoomBaseInfo().isInitialized()) {
                int i = 0;
                while (i < getVGameRoomBaseInfosCount()) {
                    if (getVGameRoomBaseInfos(i).isInitialized()) {
                        i += EERRCODE_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                i = 0;
                while (i < getVSNGGameRoomBaseInfosCount()) {
                    if (getVSNGGameRoomBaseInfos(i).isInitialized()) {
                        i += EERRCODE_FIELD_NUMBER;
                    } else {
                        this.memoizedIsInitialized = (byte) 0;
                        return false;
                    }
                }
                this.memoizedIsInitialized = (byte) 1;
                return true;
            } else {
                this.memoizedIsInitialized = (byte) 0;
                return false;
            }
        }

        public final void writeTo(CodedOutputStream codedOutputStream) {
            int i = 0;
            getSerializedSize();
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeEnum(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber());
            }
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                codedOutputStream.writeMessage(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            for (int i2 = 0; i2 < this.vGameRoomBaseInfos_.size(); i2 += EERRCODE_FIELD_NUMBER) {
                codedOutputStream.writeMessage(VGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGameRoomBaseInfos_.get(i2));
            }
            while (i < this.vSNGGameRoomBaseInfos_.size()) {
                codedOutputStream.writeMessage(VSNGGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vSNGGameRoomBaseInfos_.get(i));
                i += EERRCODE_FIELD_NUMBER;
            }
            getUnknownFields().writeTo(codedOutputStream);
        }

        public final int getSerializedSize() {
            int i = 0;
            int i2 = this.memoizedSerializedSize;
            if (i2 != -1) {
                return i2;
            }
            if ((this.bitField0_ & EERRCODE_FIELD_NUMBER) == EERRCODE_FIELD_NUMBER) {
                i2 = CodedOutputStream.computeEnumSize(EERRCODE_FIELD_NUMBER, this.eErrCode_.getNumber()) + 0;
            } else {
                i2 = 0;
            }
            if ((this.bitField0_ & STCHATROOMBASEINFO_FIELD_NUMBER) == STCHATROOMBASEINFO_FIELD_NUMBER) {
                i2 += CodedOutputStream.computeMessageSize(STCHATROOMBASEINFO_FIELD_NUMBER, this.stChatRoomBaseInfo_);
            }
            int i3 = i2;
            for (int i4 = 0; i4 < this.vGameRoomBaseInfos_.size(); i4 += EERRCODE_FIELD_NUMBER) {
                i3 += CodedOutputStream.computeMessageSize(VGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vGameRoomBaseInfos_.get(i4));
            }
            while (i < this.vSNGGameRoomBaseInfos_.size()) {
                i3 += CodedOutputStream.computeMessageSize(VSNGGAMEROOMBASEINFOS_FIELD_NUMBER, (MessageLite) this.vSNGGameRoomBaseInfos_.get(i));
                i += EERRCODE_FIELD_NUMBER;
            }
            i2 = getUnknownFields().getSerializedSize() + i3;
            this.memoizedSerializedSize = i2;
            return i2;
        }

        protected final Object writeReplace() {
            return super.writeReplace();
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(ByteString byteString) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(byteString);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(byte[] bArr) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(bArr);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(InputStream inputStream) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(inputStream);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(inputStream, extensionRegistryLite);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseDelimitedFrom(InputStream inputStream) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseDelimitedFrom(inputStream);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(CodedInputStream codedInputStream) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(codedInputStream);
        }

        public static SCGetChatRoomGamesByRoomIDRsp parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) {
            return (SCGetChatRoomGamesByRoomIDRsp) PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }

        public static Builder newBuilder() {
            return Builder.access$17();
        }

        public final Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(SCGetChatRoomGamesByRoomIDRsp sCGetChatRoomGamesByRoomIDRsp) {
            return newBuilder().mergeFrom(sCGetChatRoomGamesByRoomIDRsp);
        }

        public final Builder toBuilder() {
            return newBuilder(this);
        }

        protected final Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent, null);
        }
    }

    public static FileDescriptor m5928a() {
        return hu;
    }

    static {
        FileDescriptor[] fileDescriptorArr = new FileDescriptor[]{TexasPokerCommon.a(), TexasPokerHttpBill.a()};
        FileDescriptor.internalBuildGeneratedFileFrom(new String[]{"\n\u0010TexasPoker.proto\u0012\ntexaspoker\u001a\u0016TexasPokerCommon.proto\u001a\u0018TexasPokerHttpBill.proto\"\u00b9\u0005\n\u000fUserGameInfoNet\u0012/\n\nstUserInfo\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012/\n\neGameState\u0018\u0002 \u0002(\u000e2\u001b.texaspoker.USER_GAME_STATE\u0012-\n\teGameRole\u0018\u0003 \u0002(\u000e2\u001a.texaspoker.USER_GAME_ROLE\u0012\u000f\n\u0007lRoomId\u0018\u0004 \u0002(\u0003\u0012\u0015\n\rlRemainStacks\u0018\u0005 \u0001(\u0003\u0012\u000e\n\u0006bBuyin\u0018\u0006 \u0001(\u0005\u0012\u0012\n\nlBetStacks\u0018\u0007 \u0001(\u0003\u0012\u0015\n\rvCurrentHands\u0018\b \u0003(\u0005\u0012\u0013\n\u000bbGameDealer\u0018\t \u0001(\u0005\u0012\u0018\n\u0010iDelayTotalTimes\u0018\n \u0001(\u0005\u0012\u0010\n\blActT", "ime\u0018\u000b \u0001(\u0003\u0012\u0012\n\niDelayLong\u0018\f \u0001(\u0003\u0012\u0012\n\niDelayCost\u0018\r \u0001(\u0005\u0012\u0018\n\u0010iDelaySingleTime\u0018\u000e \u0001(\u0005\u0012\u0014\n\fbShowCardOne\u0018\u000f \u0001(\u0005\u0012\u0014\n\fbShowCardTwo\u0018\u0010 \u0001(\u0005\u0012\u0012\n\nlBettingID\u0018\u0011 \u0001(\u0003\u0012\u0014\n\flBuyinStacks\u0018\u0012 \u0001(\u0005\u0012!\n\u0019bWaitingBuyinConfirmation\u0018\u0013 \u0001(\u0005\u0012\u0012\n\nlBuyinTime\u0018\u0014 \u0001(\u0003\u0012\u0010\n\biSNGRank\u0018\u0015 \u0001(\u0005\u0012\u0011\n\tbDelegate\u0018\u0016 \u0001(\u0005\u0012\u000f\n\u0007bWaitBB\u0018\u0017 \u0001(\u0005\u0012\u0010\n\bbJustSit\u0018\u0018 \u0001(\u0005\u0012\u0016\n\u000ebShowCardThree\u0018\u0019 \u0001(\u0005\u0012\u0015\n\rbShowCardFour\u0018\u001a \u0001(\u0005\u0012\u0015\n\rbKickedInGame\u0018\u001b \u0001(\u0005\u0012\u0014\n\flBuyinClubID\u0018\u001c \u0001(\u0003\"5\n\u000fHallBaseInfoNet\u0012", "\u0010\n\bnRoomNum\u0018\u0001 \u0002(\u0005\u0012\u0010\n\bnUserNum\u0018\u0002 \u0001(\u0005\"\u00ec\u0001\n\u000eChatMessageNet\u0012\u0011\n\tmessageId\u0018\u0001 \u0002(\u0003\u00126\n\u000fchatMessageType\u0018\u0002 \u0002(\u000e2\u001d.texaspoker.CHAT_MESSAGE_TYPE\u00126\n\u000fchatMessageFrom\u0018\u0003 \u0002(\u000e2\u001d.texaspoker.CHAT_MESSAGE_FROM\u00123\n\u000estUserBaseinfo\u0018\u0004 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0013\n\u000bmessageText\u0018\u0005 \u0002(\t\u0012\r\n\u0005lTime\u0018\u0006 \u0002(\u0003\"V\n\u0012SNGBlindsStructure\u0012\u0017\n\u000flSNGSmallBlinds\u0018\u0001 \u0002(\u0003\u0012\u0015\n\rlSNGBigBlinds\u0018\u0002 \u0002(\u0003\u0012\u0010\n\blSNGAnte\u0018\u0003 \u0002(\u0003\"-\n\rOddsStructure\u0012\r\n\u0005iOuts\u0018\u0001 \u0002(\u0005\u0012\r\n\u0005iO", "dds\u0018\u0002 \u0002(\u0005\"\u00e7\u0002\n\u0015DefaultSettingInfoNet\u0012\u001a\n\u0012iMaxInGameUserInfo\u0018\u0001 \u0002(\u0005\u0012\u001a\n\u0012iSimultaneousPlays\u0018\u0002 \u0002(\u0005\u0012\u0010\n\biKickOff\u0018\u0003 \u0002(\u0005\u0012\u0014\n\fiFavoriteNum\u0018\u0004 \u0002(\u0005\u0012\f\n\u0004vSBs\u0018\u0005 \u0003(\u0005\u0012\u0015\n\rvPlayDuration\u0018\u0006 \u0003(\u0003\u0012\u0011\n\tiMaxLevel\u0018\u0007 \u0001(\u0005\u0012\u0014\n\fiMaxClubNums\u0018\b \u0001(\u0005\u0012\u001b\n\u0013iSeniorGamrRoomCost\u0018\t \u0001(\u0005\u0012<\n\u0014vSNGBlindsStructures\u0018\n \u0003(\u000b2\u001e.texaspoker.SNGBlindsStructure\u00121\n\u000evOddsStructure\u0018\u000b \u0003(\u000b2\u0019.texaspoker.OddsStructure\u0012\u0012\n\nbInsurance\u0018\f \u0002(\u0005\"N\n\nCSRegister\u00123\n\u000estUserBaseI", "nfo\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u000b\n\u0003pwd\u0018\u0002 \u0002(\t\">\n\rSCRegisterRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"v\n\u0013CSUploadPhoneNumber\u00123\n\u000estUserBaseInfo\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0014\n\fsPhoneNumber\u0018\u0002 \u0002(\t\u0012\u0014\n\fsCountryCode\u0018\u0003 \u0001(\t\"G\n\u0016SCUploadPhoneNumberRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"\u00fc\u0001\n\u0012CSUploadVerifyCode\u00123\n\u000estUserBaseInfo\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0014\n\fsVeryifyCode", "\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bstrIosToken\u0018\u0003 \u0001(\t\u0012\u0013\n\u000bstrSSOToken\u0018\u0004 \u0001(\t\u0012,\n\u000beDeviceType\u0018\u0005 \u0001(\u000e2\u0017.texaspoker.DEVICE_TYPE\u00120\n\reLanguageType\u0018\u0006 \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\u0012\u0011\n\tbRegister\u0018\u0007 \u0001(\u0005\"\u00fa\u0001\n\u0015SCUploadVerifyCodeRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00123\n\u000estUserBaseInfo\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012?\n\u0014stDefaultSettingInfo\u0018\u0003 \u0001(\u000b2!.texaspoker.DefaultSettingInfoNet\u0012\u0014\n\fsAccessToken\u0018\u0004 \u0001(\t\u0012\u0013\n\u000bsEncryptKey\u0018\u0005 \u0001(\t\u0012\u0011\n", "\tbRegister\u0018\u0006 \u0001(\u0005\"q\n\u0011CSRegetVerifyCode\u0012\u0014\n\fsPhoneNumber\u0018\u0001 \u0002(\t\u0012\u0014\n\fsCountryCode\u0018\u0002 \u0001(\t\u00120\n\reLanguageType\u0018\u0003 \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\"E\n\u0014SCRegetVerifyCodeRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"\u008c\u0002\n\u0007CSLogin\u0012\r\n\u0005strID\u0018\u0001 \u0002(\t\u0012\u000e\n\u0006strPWD\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bstrIosToken\u0018\u0003 \u0002(\t\u0012\u0013\n\u000bstrSSOToken\u0018\u0004 \u0001(\t\u0012\u0015\n\rstrSysVersion\u0018\u0005 \u0001(\t\u0012\u0014\n\fstrPhoneType\u0018\u0006 \u0001(\t\u0012\u0015\n\rstrScreenSize\u0018\u0007 \u0001(\t\u0012,\n\u000beDeviceType\u0018\b \u0001(\u000e2\u0017.texaspoker.DEVICE_TYP", "E\u00120\n\reLanguageType\u0018\t \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\u0012\u0014\n\fsCountryCode\u0018\n \u0001(\t\"\u008e\u0002\n\nSCLoginRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00123\n\u000estUserGameInfo\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\u00120\n\u000estGameItemInfo\u0018\u0003 \u0003(\u000b2\u0018.texaspoker.GameItemInfo\u0012?\n\u0014stDefaultSettingInfo\u0018\u0004 \u0001(\u000b2!.texaspoker.DefaultSettingInfoNet\u0012\u0014\n\fsAccessToken\u0018\u0005 \u0001(\t\u0012\u0013\n\u000bsEncryptKey\u0018\u0006 \u0001(\t\"\u00ca\u0002\n\u0011CSLoginThirdParty\u0012\r\n\u0005strID\u0018\u0001 \u0002(\t\u0012$\n\u0007eIDType\u0018\u0002 \u0002(\u000e", "2\u0013.texaspoker.ID_TYPE\u0012,\n\u000beDeviceType\u0018\u0003 \u0001(\u000e2\u0017.texaspoker.DEVICE_TYPE\u0012\u0013\n\u000bstrIosToken\u0018\u0004 \u0002(\t\u0012\u0013\n\u000bstrSSOToken\u0018\u0005 \u0001(\t\u0012\u0015\n\rstrSysVersion\u0018\u0006 \u0001(\t\u0012\u0014\n\fstrPhoneType\u0018\u0007 \u0001(\t\u0012\u0015\n\rstrScreenSize\u0018\b \u0001(\t\u0012\u0010\n\bstrCover\u0018\t \u0001(\t\u0012\u000f\n\u0007strNick\u0018\n \u0001(\t\u0012\u000f\n\u0007iGender\u0018\u000b \u0001(\u0005\u00120\n\reLanguageType\u0018\f \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\"\u00f8\u0001\n\u0014SCLoginThirdPartyRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00123\n\u000estUserBaseInfo\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserBaseInf", "oNet\u0012?\n\u0014stDefaultSettingInfo\u0018\u0003 \u0001(\u000b2!.texaspoker.DefaultSettingInfoNet\u0012\u0010\n\bbNewUser\u0018\u0004 \u0001(\u0005\u0012\u0014\n\fsAccessToken\u0018\u0005 \u0001(\t\u0012\u0013\n\u000bsEncryptKey\u0018\u0006 \u0001(\t\"\u00ea\u0001\n\fCSQuickLogin\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrIosToken\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bstrSSOToken\u0018\u0003 \u0001(\t\u0012\u0015\n\rstrSysVersion\u0018\u0004 \u0001(\t\u0012\u0014\n\fstrPhoneType\u0018\u0005 \u0001(\t\u0012\u0015\n\rstrScreenSize\u0018\u0006 \u0001(\t\u0012,\n\u000beDeviceType\u0018\u0007 \u0001(\u000e2\u0017.texaspoker.DEVICE_TYPE\u00120\n\reLanguageType\u0018\b \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\"\u00e8\u0001\n\u000fSCQuickLoginRsp\u0012-\n\beErrCode\u0018", "\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00123\n\u000estUserGameInfo\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\u00120\n\u000estGameItemInfo\u0018\u0003 \u0003(\u000b2\u0018.texaspoker.GameItemInfo\u0012?\n\u0014stDefaultSettingInfo\u0018\u0004 \u0001(\u000b2!.texaspoker.DefaultSettingInfoNet\"\u00ff\u0001\n\u000bCSReconnect\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrIosToken\u0018\u0002 \u0001(\t\u0012\u0013\n\u000bstrSSOToken\u0018\u0003 \u0001(\t\u0012\u0015\n\rstrSysVersion\u0018\u0004 \u0001(\t\u0012\u0014\n\fstrPhoneType\u0018\u0005 \u0001(\t\u0012\u0015\n\rstrScreenSize\u0018\u0006 \u0001(\t\u0012,\n\u000beDeviceType\u0018\u0007 \u0001(\u000e2\u0017.texaspoker.DEVICE_TYPE\u00120\n\reLanguag", "eType\u0018\b \u0001(\u000e2\u0019.texaspoker.LANGUAGE_TYPE\u0012\u0014\n\fsAccessToken\u0018\t \u0001(\t\"\u00ec\u0001\n\u000eSCReconnectRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00123\n\u000estUserGameInfo\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\u001a\n\u0012lCurrentSystemTime\u0018\u0004 \u0001(\u0003\u0012\u0012\n\niUploadLog\u0018\u0005 \u0001(\u0005\u0012\u0014\n\fsAccessToken\u0018\u0006 \u0001(\t\"{\n\u001bCSResetPwdUploadPhonenumber\u0012\u0014\n\fsPhoneNumber\u0018\u0001 \u0002(\t\u0012\u0014\n\fsCountryCode\u0018\u0002 \u0001(\t\u00120\n\reLanguageType\u0018\u0003 \u0001(\u000e2\u0019.", "texaspoker.LANGUAGE_TYPE\"O\n\u001eSCResetPwdUploadPhonenumberRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"n\n\u0014CSResetPwdVerifyCode\u0012\u0014\n\fsPhoneNumber\u0018\u0001 \u0002(\t\u0012\u0014\n\fsVeryifyCode\u0018\u0002 \u0002(\t\u0012\u0014\n\fsNewPassword\u0018\u0003 \u0002(\t\u0012\u0014\n\fsCountryCode\u0018\u0004 \u0001(\t\"^\n\u0017SCResetPwdVerifyCodeRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0014\n\fsNewPassword\u0018\u0002 \u0001(\t\"\u0017\n\u0007CSHello\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\";\n\nSCHelloRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"", "0\n\u000bCSHelloGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"?\n\u000eSCHelloGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"#\n\u0013CSGetDefaultSetting\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\"\u0088\u0001\n\u0016SCGetDefaultSettingRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012?\n\u0014stDefaultSettingInfo\u0018\u0002 \u0001(\u000b2!.texaspoker.DefaultSettingInfoNet\"\u001a\n\nCSShareOut\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\"S\n\rSCShareOutRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blPopularity\u0018\u0002 ", "\u0001(\u0003\"\u001e\n\rSCPushKickOff\u0012\r\n\u0005lTime\u0018\u0001 \u0002(\u0003\"\u0018\n\bCSLogout\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\"<\n\u000bSCLogoutRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"\u00a3\u0002\n\u0010ChatRoomBaseInfo\u0012\u0013\n\u000blChatRoomId\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrRoomName\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bnMaxMembers\u0018\u0003 \u0002(\u0005\u0012\u0013\n\u000bnCurMembers\u0018\u0004 \u0002(\u0005\u0012\u0013\n\u000blCreateUser\u0018\u0005 \u0002(\u0003\u0012\u0011\n\tiRoomType\u0018\u0006 \u0002(\u0005\u0012\u0014\n\fnOwnerInvite\u0018\u0007 \u0002(\u0005\u0012\u0014\n\fnOwnerCreate\u0018\b \u0002(\u0005\u0012\u0013\n\u000bstrRoomIcon\u0018\t \u0001(\t\u0012\u0018\n\u0010strSmallRoomIcon\u0018\n \u0001(\t\u0012\r\n\u0005iMute\u0018\u000b \u0001(\u0005\u0012\u0010\n\biVibrate\u0018\f \u0001(\u0005\u0012\u0017\n\u000fstrR", "oomTempName\u0018\r \u0001(\t\"\u00f7\u0001\n\fChatRoomInfo\u00128\n\u0012stChatRoomBaseInfo\u0018\u0001 \u0002(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\u00123\n\u000evUserBaseInfos\u0018\u0002 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\u00128\n\u0012vGameRoomBaseInfos\u0018\u0003 \u0003(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015vGSNGameRoomBaseInfos\u0018\u0004 \u0003(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\";\n\u0014CSUploadChatRoomIcon\u0012\u000f\n\u0007lRoomID\u0018\u0001 \u0002(\u0003\u0012\u0012\n\nvIconDatas\u0018\u0002 \u0001(\f\"\u0082\u0001\n\u0017SCUploadChatRoomIconRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_T", "YPE\u0012\u0010\n\bsIconUrl\u0018\u0002 \u0001(\t\u0012\u000f\n\u0007lRoomID\u0018\u0003 \u0001(\u0003\u0012\u0015\n\rsSmallIconUrl\u0018\u0004 \u0001(\t\"\u00e6\u0001\n\u0010CSCreateChatRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tsRoomName\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bnMaxMembers\u0018\u0003 \u0002(\u0005\u0012\u0013\n\u000bnCurMembers\u0018\u0004 \u0002(\u0005\u0012\u0013\n\u000blCreateUser\u0018\u0005 \u0002(\u0003\u0012\u0011\n\tiRoomType\u0018\u0006 \u0002(\u0005\u0012\u0014\n\fnOwnerInvite\u0018\u0007 \u0002(\u0005\u0012\u0014\n\fnOwnerCreate\u0018\b \u0002(\u0005\u00123\n\u000evUserBaseInfos\u0018\t \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\"v\n\u0013SCCreateChatRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estChatRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoke", "r.ChatRoomInfo\"g\n\u0011CSSetChatRoomUser\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u00123\n\u000evUserBaseInfos\u0018\u0003 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\"w\n\u0014SCSetChatRoomUserRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estChatRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.ChatRoomInfo\"g\n\u0011CSAddChatRoomUser\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u00123\n\u000evUserBaseInfos\u0018\u0003 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\"w\n\u0014SCAddChatRoomUserRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker", ".ERROR_CODE_TYPE\u00120\n\u000estChatRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.ChatRoomInfo\"j\n\u0014CSRemoveChatRoomUser\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u00123\n\u000evUserBaseInfos\u0018\u0003 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\"z\n\u0017SCRemoveChatRoomUserRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estChatRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.ChatRoomInfo\"q\n\u0011CSSetChatRoomInfo\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u0011\n\tsRoomName\u0018\u0003 \u0002(\t\u0012\u0014\n\fnOwnerInvite\u0018\u0004 \u0002(\u0005\u0012\u0014\n\fnOwne", "rCreate\u0018\u0005 \u0002(\u0005\"\u007f\n\u0014SCSetChatRoomInfoRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stChatRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\"J\n\u0017CSGetChatRoomInfoByUuid\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blStartIndex\u0018\u0002 \u0001(\u0005\u0012\f\n\u0004lNum\u0018\u0003 \u0001(\u0005\"\u0085\u0001\n\u001aSCGetChatRoomInfoByUuidRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012vChatRoomBaseInfos\u0018\u0002 \u0003(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\":\n\u0019CSGetChatRoomInfoByRoomID\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n", "\u0007lRoomID\u0018\u0002 \u0002(\u0003\"\u007f\n\u001cSCGetChatRoomInfoByRoomIDRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estChatRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.ChatRoomInfo\";\n\u001aCSGetChatRoomUsersByRoomID\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"\u00bd\u0001\n\u001dSCGetChatRoomUsersByRoomIDRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stChatRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\u00123\n\u000evUserBaseInfos\u0018\u0003 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\";\n\u001a", "CSGetChatRoomGamesByRoomID\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"\u0082\u0002\n\u001dSCGetChatRoomGamesByRoomIDRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stChatRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\u00128\n\u0012vGameRoomBaseInfos\u0018\u0003 \u0003(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015vSNGGameRoomBaseInfos\u0018\u0004 \u0003(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\"0\n\u000fCSLeaveChatRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"T\n\u0012SCLeaveChatRoomRsp\u0012-\n\beErrCo", "de\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\"1\n\u0010CSRemoveChatRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"U\n\u0013SCRemoveChatRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\"\u0092\u0001\n\u0014CSSetChatInfoSetting\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012(\n\teChatType\u0018\u0002 \u0002(\u000e2\u0015.texaspoker.CHAT_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0003 \u0001(\u0003\u0012\u0010\n\bchatUuid\u0018\u0004 \u0001(\u0003\u0012\r\n\u0005iMute\u0018\u0005 \u0001(\u0005\u0012\u0010\n\biVibrate\u0018\u0006 \u0001(\u0005\"\u00b6\u0001\n\u0017SCSetChatInfoSettingRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker", ".ERROR_CODE_TYPE\u0012(\n\teChatType\u0018\u0002 \u0002(\u000e2\u0015.texaspoker.CHAT_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0003 \u0001(\u0003\u0012\u0010\n\bchatUuid\u0018\u0004 \u0001(\u0003\u0012\r\n\u0005iMute\u0018\u0005 \u0001(\u0005\u0012\u0010\n\biVibrate\u0018\u0006 \u0001(\u0005\"\u009c\u0007\n\u0010GameRoomBaseInfo\u0012\u0013\n\u000blGameRoomId\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrRoomName\u0018\u0002 \u0002(\t\u00129\n\u0014stCreateUserBaseInfo\u0018\u0003 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0014\n\fbPrivateRoom\u0018\u0004 \u0002(\u0005\u0012\u0014\n\flSmallBlinds\u0018\u0005 \u0002(\u0003\u0012\u0012\n\nlBigBlinds\u0018\u0006 \u0002(\u0003\u0012\u000e\n\u0006lBuyIn\u0018\u0007 \u0002(\u0003\u0012\u000e\n\u0006bBuyIn\u0018\b \u0002(\u0005\u0012\u0013\n\u000blCreateTime\u0018\t \u0002(\u0003\u0012\u0011\n\tlDuration\u0018\n \u0002(\u0003\u0012\u0013\n\u000blChatRoomID\u0018", "\u000b \u0001(\u0003\u0012\u0010\n\bbStarted\u0018\f \u0001(\u0005\u0012\u0019\n\u0011iGameRoomUserNums\u0018\r \u0001(\u0005\u0012\u0010\n\bsFromMsg\u0018\u000e \u0001(\t\u00125\n\u000feCreateRoomType\u0018\u000f \u0001(\u000e2\u001c.texaspoker.CREATE_ROOM_TYPE\u0012>\n\u0013eGameRoomSeniorType\u0018\u0010 \u0001(\u000e2!.texaspoker.GAME_ROOM_SENIOR_TYPE\u0012\u0016\n\u000eiMaxBuyinRatio\u0018\u0011 \u0001(\u0005\u0012\u0016\n\u000eiMinBuyinRatio\u0018\u0012 \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\u0013 \u0001(\u0005\u0012\u0012\n\nbGamePause\u0018\u0014 \u0001(\u0005\u0012\u0016\n\u000elGamePauseTime\u0018\u0015 \u0001(\u0003\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\u0016 \u0001(\u0005\u0012\r\n\u0005iAnte\u0018\u0017 \u0001(\u0005\u0012\u0012\n\nbInsurance\u0018\u0018 \u0001(\u0005\u0012\u000f\n\u0007bInGame\u0018\u0019 \u0001(\u0005\u00121\n\reGameRoomTyp", "e\u0018\u001a \u0001(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u0012\u0012\n\nlStartTime\u0018\u001b \u0001(\u0003\u0012\u0010\n\bbIPLimit\u0018\u001c \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\u001d \u0001(\u0005\u0012\u0011\n\tlLeagueID\u0018\u001e \u0001(\u0003\u0012\u0013\n\u000bsLeagueName\u0018\u001f \u0001(\t\u0012\u0015\n\rsFromClubName\u0018  \u0001(\t\u0012\u0014\n\fsFromClubUrl\u0018! \u0001(\t\u0012\u0019\n\u0011iThinkingInterval\u0018\" \u0001(\u0005\u0012\u0011\n\tbStraddle\u0018# \u0001(\u0005\u0012\u001c\n\u0014sFromClubCreatorName\u0018$ \u0001(\t\"\u00af\u0006\n\u0013SNGGameRoomBaseInfo\u0012\u0013\n\u000blGameRoomId\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrRoomName\u0018\u0002 \u0002(\t\u00129\n\u0014stCreateUserBaseInfo\u0018\u0003 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0014\n\fbPrivateRoom\u0018\u0004 \u0001(\u0005", "\u0012\u0014\n\flSmallBlinds\u0018\u0005 \u0001(\u0003\u0012\u0012\n\nlBigBlinds\u0018\u0006 \u0001(\u0003\u0012\u0015\n\riCurrentLevel\u0018\u0007 \u0001(\u0005\u0012\u0012\n\niMaxiLevel\u0018\b \u0001(\u0005\u0012\u0015\n\rbLevelChanged\u0018\t \u0001(\u0005\u0012\u0012\n\nvWinLadder\u0018\n \u0003(\u0003\u0012\u0017\n\u000flOriginalStacks\u0018\u000b \u0001(\u0003\u0012\u0016\n\u000eiBlindInterval\u0018\f \u0001(\u0005\u00125\n\u000feCreateRoomType\u0018\r \u0001(\u000e2\u001c.texaspoker.CREATE_ROOM_TYPE\u0012\u0013\n\u000blFromRoomID\u0018\u000e \u0001(\u0003\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\u000f \u0001(\u0005\u0012\u0010\n\bsFromMsg\u0018\u0010 \u0001(\t\u0012\u0010\n\bbStarted\u0018\u0011 \u0001(\u0005\u0012\u0013\n\u000blCreateTime\u0018\u0012 \u0001(\u0003\u0012\u0012\n\nlStartTime\u0018\u0013 \u0001(\u0003\u0012/\n\feSNGRoomtype\u0018\u0014 \u0001(\u000e2\u0019.texaspoker.SNG_", "ROOM_TYPE\u0012\u0019\n\u0011iGameRoomUserNums\u0018\u0015 \u0001(\u0005\u0012\u000f\n\u0007bInGame\u0018\u0016 \u0001(\u0005\u0012\u0017\n\u000fbSignupInviting\u0018\u0017 \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\u0018 \u0001(\u0005\u0012\r\n\u0005iAnte\u0018\u0019 \u0001(\u0005\u0012\u0014\n\flPrepareTime\u0018\u001a \u0001(\u0003\u0012\u001b\n\u0013lCancelWaitInterval\u0018\u001b \u0001(\u0005\u0012\u0010\n\bbIPLimit\u0018\u001c \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\u001d \u0001(\u0005\u0012\u0011\n\tlLeagueID\u0018\u001e \u0001(\u0003\u0012\u0013\n\u000bsLeagueName\u0018\u001f \u0001(\t\u0012\u0019\n\u0011iThinkingInterval\u0018  \u0001(\u0005\"-\n\u0007PotInfo\u0012\u0012\n\nlPotStacks\u0018\u0001 \u0002(\u0003\u0012\u000e\n\u0006vUuids\u0018\u0002 \u0003(\u0003\"\u008a\u0005\n\fGameRoomInfo\u00121\n\reGameRoomType\u0018\u0001 \u0002(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u00128\n\u0012stGameRoom", "BaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015stSNGGameRoomBaseInfo\u0018\u0003 \u0001(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\u00124\n\neGameState\u0018\u0004 \u0002(\u000e2 .texaspoker.GAME_ROOM_GAME_STATE\u0012\u0015\n\rvCurrentCards\u0018\u0005 \u0003(\u0005\u0012\u0014\n\fvCurrentPots\u0018\u0006 \u0003(\u0005\u00123\n\u000evUserGameInfos\u0018\u0007 \u0003(\u000b2\u001b.texaspoker.UserGameInfoNet\u00124\n\u0010stGameResultInfo\u0018\b \u0001(\u000b2\u001a.texaspoker.GameResultInfo\u0012\u0014\n\fbStateChange\u0018\t \u0001(\u0005\u0012\u0011\n\tbAllAllin\u0018\n \u0001(\u0005\u0012\u0013\n\u000blGameHandID\u0018\u000b \u0001(\u0003\u0012\u0017\n\u000flEffectiveRaise\u0018\f \u0001(", "\u0003\u00126\n\u0010eInsuranceStatus\u0018\r \u0001(\u000e2\u001c.texaspoker.INSURANCE_STATUS\u00122\n\u000fvInsuranceInfos\u0018\u000e \u0001(\u000b2\u0019.texaspoker.InsuranceInfo\u0012&\n\tvPotInfos\u0018\u000f \u0003(\u000b2\u0013.texaspoker.PotInfo\u0012\u0014\n\fvKickUserIDs\u0018\u0010 \u0003(\u0003\"\u00da\u0004\n\u0010CSCreateGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tsRoomName\u0018\u0002 \u0002(\t\u0012\u0014\n\flSmallBlinds\u0018\u0003 \u0002(\u0003\u0012\u0012\n\nlBigBlinds\u0018\u0004 \u0002(\u0003\u0012\u000e\n\u0006lBuyIn\u0018\u0005 \u0002(\u0003\u0012\u000e\n\u0006bBuyIn\u0018\u0006 \u0002(\u0005\u0012\u0011\n\tlDuration\u0018\u0007 \u0002(\u0003\u0012\u0013\n\u000blFromRoomID\u0018\b \u0002(\u0003\u0012\u0014\n\fbPrivateRoom\u0018\t \u0002(\u0005\u00123\n\u000evUserBaseInfos\u0018\n \u0003(\u000b2\u001b.texaspoker.U", "serBaseInfoNet\u00121\n\reGameRoomType\u0018\u000b \u0001(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u00125\n\u000feCreateRoomType\u0018\f \u0001(\u000e2\u001c.texaspoker.CREATE_ROOM_TYPE\u0012>\n\u0013eGameRoomSeniorType\u0018\r \u0001(\u000e2!.texaspoker.GAME_ROOM_SENIOR_TYPE\u0012\u0016\n\u000eiMaxBuyinRatio\u0018\u000e \u0001(\u0005\u0012\u0016\n\u000eiMinBuyinRatio\u0018\u000f \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\u0010 \u0001(\u0005\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\u0011 \u0001(\u0005\u0012\r\n\u0005iAnte\u0018\u0012 \u0001(\u0005\u0012\u0012\n\nbInsurance\u0018\u0013 \u0001(\u0005\u0012\u0010\n\bbIPLimit\u0018\u0014 \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\u0015 \u0001(\u0005\u0012\u0011\n\tlLeagueID\u0018\u0016 \u0001(\u0003\"\u00c3\u0001\n\u0013SCCreateGameRoomRsp", "\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomId\u0018\u0002 \u0001(\u0003\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0004 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\"D\n\u0011CSGetGameRoomInfo\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blStartIndex\u0018\u0002 \u0001(\u0005\u0012\f\n\u0004lNum\u0018\u0003 \u0001(\u0005\"w\n\u0014SCGetGameRoomInfoRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0003(\u000b2\u0018.texaspoker.GameRoomInfo\"4\n\u000fCSEnterGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013", "\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"u\n\u0012SCEnterGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"\u00b8\u0002\n\u0013CSCreateSNGGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrRoomName\u0018\u0002 \u0002(\t\u0012\u0014\n\fbPrivateRoom\u0018\u0003 \u0001(\u0005\u0012/\n\feSNGRoomType\u0018\u0004 \u0001(\u000e2\u0019.texaspoker.SNG_ROOM_TYPE\u00125\n\u000feCreateRoomType\u0018\u0005 \u0001(\u000e2\u001c.texaspoker.CREATE_ROOM_TYPE\u0012\u0013\n\u000blFromRoomID\u0018\u0006 \u0001(\u0003\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\u0007 \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\b \u0001(\u0005\u0012\u0010\n", "\bbIPLimit\u0018\t \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\n \u0001(\u0005\u0012\u0011\n\tlLeagueID\u0018\u000b \u0001(\u0003\"\u00c6\u0001\n\u0016SCCreateSNGGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomId\u0018\u0002 \u0001(\u0003\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0004 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\"8\n\u0013CSSignUpSNGGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"\u00b1\u0001\n\u0016SCSignUpSNGGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoom", "Info\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0003 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\"7\n\u0012CSWatchSNGGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"x\n\u0015SCWatchSNGGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"7\n\u0012CSLeaveSNGGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"[\n\u0015SCLeaveSNGGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE", "\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\"X\n\u0011GamePotResultInfo\u00120\n\u000bstUserWiner\u0018\u0001 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u0011\n\tlUserPots\u0018\u0002 \u0003(\u0003\"j\n\u000eGameResultInfo\u0012:\n\u0013stGamePotResultInfo\u0018\u0001 \u0003(\u000b2\u001d.texaspoker.GamePotResultInfo\u0012\u001c\n\u0014vlOriginalUserStacks\u0018\u0002 \u0003(\u0003\"A\n\u000bCSGiveMoney\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blPopularity\u0018\u0003 \u0002(\u0003\"T\n\u000eSCGiveMoneyRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blPopularity\u0018\u0002 \u0001(\u0003\"|\n\u0010GiveMoneyPushMsg\u0012\u000e\n\u0006lMsg", "ID\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tlFromUuid\u0018\u0002 \u0002(\u0003\u0012\u000f\n\u0007lToUuid\u0018\u0003 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0004 \u0002(\u0003\u0012\u0013\n\u000blPopularity\u0018\u0005 \u0002(\u0005\u0012\u000e\n\u0006sExtra\u0018\u0006 \u0001(\t\"A\n\u0012SCGiveMoneyPushMsg\u0012+\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u001c.texaspoker.GiveMoneyPushMsg\"6\n\u0015CSGiveMoneyPushMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u00d0\u0002\n\u000fBuyinControlMsg\u0012\u0016\n\u000elBuyinActionID\u0018\u0001 \u0002(\u0003\u0012/\n\nstFromUser\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\u0012\u0012\n\nlBuyStacks\u0018\u0003 \u0001(\u0003\u00120\n\u000estGameRoomInfo\u0018\u0004 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012L\n\u001ceBuyinContro", "lMessageTypeDeny\u0018\u0005 \u0001(\u000e2&.texaspoker.BUYIN_CONTROL_MESSAGE_TYPE\u0012\u0013\n\u000blActionUuid\u0018\u0006 \u0001(\u0003\u0012\u0017\n\u000fsActionNickname\u0018\u0007 \u0001(\t\u0012\u000e\n\u0006lMsgID\u0018\b \u0001(\u0003\u0012\u000f\n\u0007lClubID\u0018\t \u0001(\u0003\u0012\u0011\n\tsClubName\u0018\n \u0001(\t\"K\n\u0011SCBuyinControlMsg\u00126\n\u0011stBuyinControlMsg\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.BuyinControlMsg\"4\n\u0014CSBuyinControlMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000e\n\u0006lMsgId\u0018\u0002 \u0001(\u0003\"\u00a1\u0001\n\rCSBuyinAction\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0016\n\u000elBuyinActionID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0003 \u0002(\u0003\u0012\u0013\n\u000blActionUuid\u0018\u0004 \u0002(\u0003\u0012@\n\u0018eBuyinC", "ontrolMessageType\u0018\u0005 \u0002(\u000e2\u001e.texaspoker.BUYIN_CONTROL_TYPE\"\u009d\u0001\n\u0010SCBuyinActionRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\u0013\n\u000blActionUuid\u0018\u0003 \u0001(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0004 \u0001(\u0003\"R\n\u0016CSSetBuyinControlState\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0015\n\rbBuyinControl\u0018\u0003 \u0001(\u0005\"\u0084\u0001\n\u0019SCSetBuyinControlStateRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0002", " \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\"D\n\u000bCSPauseGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0012\n\nbPauseGame\u0018\u0003 \u0002(\u0005\"y\n\u000eSCPauseGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\"\u00f1\u0001\n\fBuyinControl\u00123\n\u000estUserBaseInfo\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u000f\n\u0007lStacks\u0018\u0002 \u0002(\u0003\u0012\u0018\n\u0010lBuyinCreateTime\u0018\u0003 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0004 \u0001(\u0003\u0012\u0015\n\rsGameRoomName\u0018\u0005 \u0001(\t\u00121\n\reGameRoomTyp", "e\u0018\u0006 \u0001(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u0012\u000f\n\u0007lClubID\u0018\u0007 \u0001(\u0003\u0012\u0011\n\tsClubName\u0018\b \u0001(\t\":\n\u0015CSGetAllBuyinControls\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"{\n\u0018SCGetAllBuyinControlsRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000evBuyinControls\u0018\u0002 \u0003(\u000b2\u0018.texaspoker.BuyinControl\"k\n\tCSUseItem\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lItemID\u0018\u0002 \u0002(\u0005\u0012\u000e\n\u0006touuid\u0018\u0003 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0004 \u0002(\u0003\u0012\u000e\n\u0006lMsgID\u0018\u0005 \u0001(\u0003\u0012\u000e\n\u0006sExtra\u0018\u0006 \u0001(\t\"\u00b3\u0001\n\fSCUseItemRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e", "2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lItemID\u0018\u0002 \u0001(\u0005\u0012\u000e\n\u0006touuid\u0018\u0003 \u0001(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0004 \u0001(\u0003\u0012\u0013\n\u000blPopularity\u0018\u0005 \u0001(\u0003\u0012\r\n\u0005lCoin\u0018\u0006 \u0001(\u0003\u0012\u000e\n\u0006lMsgID\u0018\u0007 \u0001(\u0003\u0012\u000e\n\u0006sExtra\u0018\b \u0001(\t\"v\n\u000eUseItemPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tlFromUuid\u0018\u0002 \u0002(\u0003\u0012\u000f\n\u0007lToUuid\u0018\u0003 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0004 \u0002(\u0003\u0012\u000f\n\u0007lItemID\u0018\u0005 \u0002(\u0005\u0012\u000e\n\u0006sExtra\u0018\u0006 \u0001(\t\"=\n\u0010SCUseItemPushMsg\u0012)\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u001a.texaspoker.UseItemPushMsg\"4\n\u0013CSUseItemPushMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u0081\u0001\n\u0015SCGameRoomS", "tateChange\u00120\n\u000estGameRoomInfo\u0018\u0001 \u0002(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\u0013\n\u000bvGivenCards\u0018\u0003 \u0003(\u0005\u0012\u0013\n\u000bvGivenHands\u0018\u0004 \u0003(\u0005\u0012\f\n\u0004uuid\u0018\u0005 \u0001(\u0003\"\u0083\u0001\n\fCSGameAction\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012/\n\feGameActType\u0018\u0003 \u0002(\u000e2\u0019.texaspoker.GAME_ACT_TYPE\u0012\u000f\n\u0007lStacks\u0018\u0004 \u0002(\u0003\u0012\u0012\n\nlBettingID\u0018\u0005 \u0001(\u0003\"\u00be\u0001\n\u000fSCGameActionRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\u0012/\n\feGameActType\u0018\u0003 \u0001(\u000e2\u0019.texaspoker.GAME_ACT_TYPE\u0012\u000f\n\u0007lStacks\u0018\u0004 \u0001(\u0003", "\u0012\u0015\n\rlRemainStacks\u0018\u0005 \u0001(\u0003\u0012\u0012\n\nlBettingID\u0018\u0006 \u0001(\u0003\"*\n\tCSStandUp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"o\n\fSCStandUpRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"8\n\tCSSitDown\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\f\n\u0004iPos\u0018\u0003 \u0002(\u0005\"o\n\fSCSitDownRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"<\n\nCSBuyBuyIn\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012", "\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u000f\n\u0007lStacks\u0018\u0003 \u0001(\u0003\"\u00df\u0001\n\rSCBuyBuyInRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0003 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012!\n\u0019bWaitingBuyinConfirmation\u0018\u0004 \u0001(\u0005\u0012\u0012\n\nlBuyinTime\u0018\u0005 \u0001(\u0003\"O\n\fCSBuyBuyInV2\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u000f\n\u0007lStacks\u0018\u0003 \u0001(\u0003\u0012\u000f\n\u0007lClubID\u0018\u0004 \u0001(\u0003\"\u00e1\u0001\n\u000fSCBuyBuyInV2Rsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CO", "DE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0003 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012!\n\u0019bWaitingBuyinConfirmation\u0018\u0004 \u0001(\u0005\u0012\u0012\n\nlBuyinTime\u0018\u0005 \u0001(\u0003\"I\n\u0012CSKickUserGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u0014\n\flKickOffUuid\u0018\u0003 \u0002(\u0003\"m\n\u0015SCKickUserGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\u0012\u0014\n\flKickOffUuid\u0018\u0003 \u0001(\u0003\"0\n\u000fCSLeaveGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002", " \u0002(\u0003\"T\n\u0012SCLeaveGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\"\u009b\u0001\n\nCSShowCard\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u000f\n\u0007lGameID\u0018\u0003 \u0001(\u0003\u0012\u0014\n\fbShowCardOne\u0018\u0004 \u0001(\u0005\u0012\u0014\n\fbShowCardTwo\u0018\u0005 \u0001(\u0005\u0012\u0016\n\u000ebShowCardThree\u0018\u0006 \u0001(\u0005\u0012\u0015\n\rbShowCardFour\u0018\u0007 \u0001(\u0005\"\u0081\u0001\n\rSCShowCardRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\u000f\n\u0007lGameID\u0018\u0003 \u0001(\u0003\"\u00c8\u0002\n\u0011QuickGameRoomIn", "fo\u00120\n\u000estChatRoomInfo\u0018\u0001 \u0002(\u000b2\u0018.texaspoker.ChatRoomInfo\u0012\u0012\n\nsCryptCode\u0018\u0002 \u0001(\t\u0012@\n\u0014eQuickGameRoomStatus\u0018\u0003 \u0001(\u000e2\".texaspoker.QUICK_GAME_ROOM_STATUS\u00121\n\reGameRoomType\u0018\u0004 \u0001(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0005 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015stSNGGameRoomBaseInfo\u0018\u0006 \u0001(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\"\u00b5\u0003\n\u0015CSCreateQuickGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tsRoomName\u0018\u0002 \u0002(\t\u0012\u0014\n\flSmallBlinds\u0018\u0003 \u0002(\u0003\u0012\u0012\n\nlBig", "Blinds\u0018\u0004 \u0002(\u0003\u0012\u000e\n\u0006lBuyIn\u0018\u0005 \u0002(\u0003\u0012\u000e\n\u0006bBuyIn\u0018\u0006 \u0002(\u0005\u0012\u0011\n\tlDuration\u0018\u0007 \u0002(\u0003\u0012>\n\u0013eGameRoomSeniorType\u0018\b \u0001(\u000e2!.texaspoker.GAME_ROOM_SENIOR_TYPE\u0012\u0016\n\u000eiMaxBuyinRatio\u0018\t \u0001(\u0005\u0012\u0016\n\u000eiMinBuyinRatio\u0018\n \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\u000b \u0001(\u0005\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\f \u0001(\u0005\u0012\r\n\u0005iAnte\u0018\r \u0001(\u0005\u0012\u0012\n\nbInsurance\u0018\u000e \u0001(\u0005\u00121\n\reGameRoomType\u0018\u000f \u0001(\u000e2\u001a.texaspoker.GAME_ROOM_TYPE\u0012\u0010\n\bbIPLimit\u0018\u0010 \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\u0011 \u0001(\u0005\"\u0085\u0001\n\u0018SCCreateQuickGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b", ".texaspoker.ERROR_CODE_TYPE\u0012:\n\u0013stQuickGameRoomInfo\u0018\u0002 \u0001(\u000b2\u001d.texaspoker.QuickGameRoomInfo\"\u00aa\u0002\n\u0018CSCreateQuickSNGGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000bstrRoomName\u0018\u0002 \u0002(\t\u0012\u0014\n\fbPrivateRoom\u0018\u0003 \u0001(\u0005\u0012/\n\feSNGRoomType\u0018\u0004 \u0001(\u000e2\u0019.texaspoker.SNG_ROOM_TYPE\u00125\n\u000feCreateRoomType\u0018\u0005 \u0001(\u000e2\u001c.texaspoker.CREATE_ROOM_TYPE\u0012\u0013\n\u000blFromRoomID\u0018\u0006 \u0001(\u0003\u0012\u001c\n\u0014iGameRoomUserMaxNums\u0018\u0007 \u0001(\u0005\u0012\u0015\n\rbBuyinControl\u0018\b \u0001(\u0005\u0012\u0010\n\bbIPLimit\u0018\t \u0001(\u0005\u0012\u0011\n\tbGPSLimit\u0018\n \u0001(\u0005\"\u00ba\u0001\n\u001bSCCreat", "eQuickSNGGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012:\n\u0013stQuickGameRoomInfo\u0018\u0002 \u0001(\u000b2\u001d.texaspoker.QuickGameRoomInfo\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"8\n\u0014CSEnterQuickGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0012\n\nsCryptCode\u0018\u0002 \u0002(\t\"\u00b6\u0001\n\u0017SCEnterQuickGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012:\n\u0013stQuickGameRoomInfo\u0018\u0002 \u0001(\u000b2\u001d.texaspoker.QuickGameRoomInfo\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0001(\u000b2\u0018.tex", "aspoker.GameRoomInfo\"5\n\u0014CSStartQuickRoomGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"\u008b\u0001\n\u0017SCStartQuickRoomGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\u000f\n\u0007lRoomID\u0018\u0003 \u0001(\u0003\"\"\n\u0012CSGetQuickGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\"\u0082\u0001\n\u0015SCGetQuickGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012:\n\u0013vQuickGameRoomInfos\u0018\u0002 \u0003(\u000b2\u001d.texaspoker.QuickGameRoomInfo\"4\n\u0013CSQuitQuic", "kGameRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"X\n\u0016SCQuitQuickGameRoomRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\"\u0091\u0002\n\u0014QuickGameRoomPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012>\n\feMessageType\u0018\u0002 \u0002(\u000e2(.texaspoker.QUICK_GAME_ROOM_MESSAGE_TYPE\u0012\f\n\u0004sMsg\u0018\u0003 \u0002(\t\u0012\u0013\n\u000blCreateTime\u0018\u0004 \u0002(\u0003\u0012\u0013\n\u000blChatRoomID\u0018\u0005 \u0001(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0006 \u0001(\u0003\u0012/\n\nstFromUser\u0018\u0007 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012+\n\u0006vUsers\u0018\b \u0003(\u000b2\u001b.texaspoker.UserBaseI", "nfoNet\"K\n\u0018SCSystemQuickGameRoomMsg\u0012/\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2 .texaspoker.QuickGameRoomPushMsg\"<\n\u001bCSSystemQuickGameRoomMsRspg\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\",\n\u000bCSStartGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"d\n\u000eSCStartGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0001(\u0003\u0012\u0012\n\nlStartTime\u0018\u0003 \u0001(\u0003\"b\n\u0011CSResetBuyinRatio\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\u0012\u0016\n\u000eiMaxBuyinRatio\u0018\u0003 \u0001(\u0005\u0012\u0016\n\u000eiMinBuyinRatio\u0018\u0004 \u0001(\u0005\"\u007f\n\u0014SCR", "esetBuyinRatioRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\"G\n\u000eCSUseDelayItem\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0012\n\nlBettingID\u0018\u0003 \u0001(\u0003\"\u008e\u0001\n\u0011SCUseDelayItemRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00126\n\u0011stUserGameInfoNet\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\u0012\u0012\n\nlBettingID\u0018\u0003 \u0001(\u0003\"1\n\fCSReturnGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"U\n\u000fSCRet", "urnGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\"\u00f9\u0005\n\u0007PushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012(\n\teTalkType\u0018\u0002 \u0002(\u000e2\u0015.texaspoker.CHAT_TYPE\u00127\n\u0010eChatMessageType\u0018\u0003 \u0002(\u000e2\u001d.texaspoker.CHAT_MESSAGE_TYPE\u0012\u0011\n\tbChatRoom\u0018\u0004 \u0001(\u0005\u0012/\n\nstFromUser\u0018\u0005 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012-\n\bstToUser\u0018\u0006 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u00128\n\u0012stChatRoomBaseInfo\u0018\u0007 \u0001(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\u0012\u0013\n\u000blGameRoomID\u0018\b \u0001(\u0003\u0012", "0\n\u000estCluBasebInfo\u0018\t \u0001(\u000b2\u0018.texaspoker.ClubBaseInfo\u0012\f\n\u0004sMsg\u0018\n \u0001(\t\u0012\u0013\n\u000bvVoiceDatas\u0018\u000b \u0001(\f\u00125\n\u000fstShareBillInfo\u0018\f \u0001(\u000b2\u001c.texaspoker.ShareBillInfoNet\u0012<\n\u0016stPokerProcessBaseInfo\u0018\r \u0001(\u000b2\u001c.texaspoker.PokerProcessInfo\u0012\u0011\n\tstrPicUrl\u0018\u000e \u0001(\t\u0012\u0013\n\u000blCreateTime\u0018\u000f \u0001(\u0003\u0012\u0011\n\tlDuration\u0018\u0010 \u0001(\u0003\u0012\r\n\u0005iMute\u0018\u0011 \u0001(\u0005\u0012\u0010\n\biVibrate\u0018\u0012 \u0001(\u0005\u0012>\n\u0015stNetPageShareInfoNet\u0018\u0013 \u0001(\u000b2\u001f.texaspoker.NetPageShareInfoNet\u0012B\n\u0017stSharePokerHistoryInfo\u0018\u0014 \u0001(\u000b2!.texaspo", "ker.SharePokerHistoryInfo\u0012\u000f\n\u0007vExtras\u0018\u0015 \u0003(\t\"N\n\u0011PicPackageInfoNet\u0012\u0013\n\u000blCurrentSeq\u0018\u0001 \u0002(\u0005\u0012\u000f\n\u0007lMaxSeq\u0018\u0002 \u0002(\u0005\u0012\u0013\n\u000bvVoiceDatas\u0018\u0006 \u0001(\f\"q\n\u0013NetPageShareInfoNet\u0012\u000f\n\u0007lPageID\u0018\u0001 \u0002(\u0003\u0012\u0012\n\nsPageTitle\u0018\u0002 \u0001(\t\u0012\u0014\n\fsCoverPicUrl\u0018\u0003 \u0001(\t\u0012\u0011\n\tsPageDesc\u0018\u0004 \u0001(\t\u0012\f\n\u0004sUrl\u0018\u0005 \u0001(\t\"\u0098\u0004\n\tCSSendMsg\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0011\n\tlTalkwith\u0018\u0002 \u0002(\u0003\u0012(\n\teTalkType\u0018\u0003 \u0002(\u000e2\u0015.texaspoker.CHAT_TYPE\u00127\n\u0010eChatMessageType\u0018\u0004 \u0002(\u000e2\u001d.texaspoker.CHAT_MESSAGE_TYPE\u0012\f\n\u0004sMsg\u0018\u0005 \u0001(\t\u0012\u0013\n", "\u000bvVoiceDatas\u0018\u0006 \u0001(\f\u00125\n\u000fstShareBillInfo\u0018\u0007 \u0001(\u000b2\u001c.texaspoker.ShareBillInfoNet\u0012<\n\u0016stPokerProcessBaseInfo\u0018\b \u0001(\u000b2\u001c.texaspoker.PokerProcessInfo\u00127\n\u0010stPicPackageInfo\u0018\t \u0001(\u000b2\u001d.texaspoker.PicPackageInfoNet\u0012\u000e\n\u0006lMsgId\u0018\n \u0002(\u0003\u0012\u0011\n\tlDuration\u0018\u000b \u0001(\u0003\u0012>\n\u0015stNetPageShareInfoNet\u0018\f \u0001(\u000b2\u001f.texaspoker.NetPageShareInfoNet\u0012B\n\u0017stSharePokerHistoryInfo\u0018\r \u0001(\u000b2!.texaspoker.SharePokerHistoryInfo\u0012\u000f\n\u0007vExtras\u0018\u000e \u0003(\t\"\u00b2\u0001\n\fSCSendMsgRsp\u0012-\n\beEr", "rCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0011\n\tlTalkwith\u0018\u0002 \u0001(\u0003\u0012(\n\teTalkType\u0018\u0003 \u0001(\u000e2\u0015.texaspoker.CHAT_TYPE\u0012\u000e\n\u0006lMsgId\u0018\u0004 \u0001(\u0003\u0012\u0011\n\tlPicMsgId\u0018\u0005 \u0001(\u0003\u0012\u0013\n\u000blCurrentSeq\u0018\u0006 \u0001(\u0005\"/\n\tSCPushMsg\u0012\"\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u0013.texaspoker.PushMsg\"-\n\fCSPushMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u00ab\u0002\n\u000fChatRoomPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012<\n\u0010eGameMessageType\u0018\u0002 \u0002(\u000e2\".texaspoker.CHAT_ROOM_MESSAGE_TYPE\u0012\f\n\u0004sMsg\u0018\u0003 \u0002(\t\u0012\u0013\n\u000blCreateTime\u0018\u0004 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0005 ", "\u0001(\u0003\u0012/\n\nstFromUser\u0018\u0006 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012+\n\u0006vUsers\u0018\u0007 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\u00128\n\u0012stChatRoomBaseInfo\u0018\b \u0001(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\"A\n\u0013SCSystemChatRoomMsg\u0012*\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u001b.texaspoker.ChatRoomPushMsg\"7\n\u0016CSSystemChatRoomMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u008e\u0002\n\u000fGameRoomPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012<\n\u0010eGameMessageType\u0018\u0002 \u0002(\u000e2\".texaspoker.GAME_ROOM_MESSAGE_TYPE\u0012/\n\nstFromUser\u0018\u0003 \u0001(\u000b2\u001b.", "texaspoker.UserGameInfoNet\u0012\f\n\u0004sMsg\u0018\u0004 \u0002(\t\u0012\u0013\n\u000blCreateTime\u0018\u0005 \u0002(\u0003\u00120\n\u000estGameRoomInfo\u0018\u0006 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\u0012\f\n\u0004iPos\u0018\u0007 \u0001(\u0005\u0012\u0019\n\u0011iThinkingInterval\u0018\b \u0001(\u0005\"A\n\u0013SCSystemGameRoomMsg\u0012*\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u001b.texaspoker.GameRoomPushMsg\"7\n\u0016CSSystemGameRoomMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u00a2\u0001\n\rSystemPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u0012;\n\u0012eSystemMessageType\u0018\u0002 \u0002(\u000e2\u001f.texaspoker.SYSTEM_MESSAGE_TYPE\u0012\u000e\n\u0006sTitle\u0018\u0003 \u0002(\t\u0012\f\n\u0004sUrl\u0018\u0004 \u0002(", "\t\u0012\u0010\n\bsContent\u0018\u0005 \u0002(\t\u0012\u0014\n\flTimeoutTime\u0018\u0006 \u0002(\u0003\"7\n\u000bSCSystemMsg\u0012(\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u0019.texaspoker.SystemPushMsg\"/\n\u000eCSSystemMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\u00d2\u0002\n\u000eCSSendMsgToAll\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u00127\n\u0010eChatMessageType\u0018\u0002 \u0002(\u000e2\u001d.texaspoker.CHAT_MESSAGE_TYPE\u0012\f\n\u0004sMsg\u0018\u0003 \u0001(\t\u0012\u0013\n\u000bvVoiceDatas\u0018\u0004 \u0001(\f\u00125\n\u000fstShareBillInfo\u0018\u0005 \u0001(\u000b2\u001c.texaspoker.ShareBillInfoNet\u0012<\n\u0016stPokerProcessBaseInfo\u0018\u0006 \u0001(\u000b2\u001c.texaspoker.PokerProcessInfo\u0012\u000e\n\u0006lMsgId\u0018", "\u0007 \u0002(\u0003\u0012\u0011\n\tlDuration\u0018\b \u0001(\u0003\u0012>\n\u0015stNetPageShareInfoNet\u0018\t \u0001(\u000b2\u001f.texaspoker.NetPageShareInfoNet\"R\n\u0011SCSendMsgToAllRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u000e\n\u0006lMsgId\u0018\u0002 \u0001(\u0003\"\u009a\u0002\n\u000bClubPushMsg\u0012\u000e\n\u0006lMsgID\u0018\u0001 \u0002(\u0003\u00127\n\u0010eClubMessageType\u0018\u0002 \u0002(\u000e2\u001d.texaspoker.CLUB_MESSAGE_TYPE\u0012/\n\nstFromUser\u0018\u0003 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012-\n\bstToUser\u0018\u0004 \u0001(\u000b2\u001b.texaspoker.UserBaseInfoNet\u00120\n\u000estClubBaseInfo\u0018\u0005 \u0001(\u000b2\u0018.texaspoker.ClubB", "aseInfo\u0012\f\n\u0004sMsg\u0018\u0006 \u0002(\t\u0012\u0013\n\u000blCreateTime\u0018\u0007 \u0001(\u0003\u0012\r\n\u0005lFund\u0018\b \u0001(\u0003\"9\n\u000fSCSystemClubMsg\u0012&\n\u0005vMsgs\u0018\u0001 \u0003(\u000b2\u0017.texaspoker.ClubPushMsg\"3\n\u0012CSSystemClubMsgRsp\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007vMsgIds\u0018\u0002 \u0003(\u0003\"\"\n\u0012CSGetFrontPageInfo\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\"\u00e4\u0001\n\u0015SCGetFrontPageInfoRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stChatRoomBaseInfo\u0018\u0002 \u0003(\u000b2\u001c.texaspoker.ChatRoomBaseInfo\u00120\n\u000estGameRoomInfo\u0018\u0003 \u0003(\u000b2\u0018.texaspoker.GameRoomInfo\u00120\n\u000evClubBaseI", "nfos\u0018\u0004 \u0003(\u000b2\u0018.texaspoker.ClubBaseInfo\"C\n\u0014CSGetFrontPageInfoV2\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007iOffset\u0018\u0002 \u0002(\u0005\u0012\f\n\u0004iNum\u0018\u0003 \u0002(\u0005\"\u00b3\u0002\n\u0017SCGetFrontPageInfoV2Rsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012,\n\fvBannerInfos\u0018\u0002 \u0003(\u000b2\u0016.texaspoker.BannerInfo\u0012:\n\u0013vRecommendUserInfos\u0018\u0003 \u0003(\u000b2\u001d.texaspoker.RecommendUserInfo\u00129\n\u0017vRecommendClubBaseInfos\u0018\u0004 \u0003(\u000b2\u0018.texaspoker.ClubBaseInfo\u00123\n\u000evUserBaseInfos\u0018\u0005 \u0003(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012\u000f", "\n\u0007iOffset\u0018\u0006 \u0001(\u0005\"C\n\u0014CSGetFrontPageInfoV3\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007iOffset\u0018\u0002 \u0002(\u0005\u0012\f\n\u0004iNum\u0018\u0003 \u0002(\u0005\"\u008f\u0002\n\u0017SCGetFrontPageInfoV3Rsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012vGameRoomBaseInfos\u0018\u0002 \u0003(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015vSNGGameRoomBaseInfos\u0018\u0003 \u0003(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\u0012:\n\u0013vQuickGameRoomInfos\u0018\u0004 \u0003(\u000b2\u001d.texaspoker.QuickGameRoomInfo\u0012\u000f\n\u0007iOffset\u0018\u0005 \u0001(\u0005\"C\n\u0014CSGetFrontPageInfoV4\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007", "iOffset\u0018\u0002 \u0002(\u0005\u0012\f\n\u0004iNum\u0018\u0003 \u0002(\u0005\"\u008f\u0002\n\u0017SCGetFrontPageInfoV4Rsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012vGameRoomBaseInfos\u0018\u0002 \u0003(\u000b2\u001c.texaspoker.GameRoomBaseInfo\u0012>\n\u0015vSNGGameRoomBaseInfos\u0018\u0003 \u0003(\u000b2\u001f.texaspoker.SNGGameRoomBaseInfo\u0012:\n\u0013vQuickGameRoomInfos\u0018\u0004 \u0003(\u000b2\u001d.texaspoker.QuickGameRoomInfo\u0012\u000f\n\u0007iOffset\u0018\u0005 \u0001(\u0005\"8\n\u0017CSGetUserGameInfoInRoom\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u000f\n\u0007lRoomID\u0018\u0002 \u0002(\u0003\"\u0083\u0001\n\u001aSCGetUserGameInfoInRoomRsp\u0012-\n\beErrCo", "de\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00126\n\u0011stUserGameInfoNet\u0018\u0002 \u0001(\u000b2\u001b.texaspoker.UserGameInfoNet\":\n\u0019CSGetGameRoomInfoByRoomID\u0012\u000f\n\u0007lRoomID\u0018\u0001 \u0002(\u0003\u0012\f\n\u0004uuid\u0018\u0002 \u0001(\u0003\"\u007f\n\u001cSCGetGameRoomInfoByRoomIDRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"\u0088\u0001\n\u0011RecommendUserInfo\u00126\n\u0011stUserBaseInfoNet\u0018\u0001 \u0002(\u000b2\u001b.texaspoker.UserBaseInfoNet\u0012;\n\u0012eRecommendUserType\u0018\u0002 \u0002(\u000e2\u001f.texaspoke", "r.RECOMMEND_USER_TYPE\",\n\rCSStopSNGGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\r\n\u0005bStop\u0018\u0002 \u0002(\u0003\"P\n\u0010SCStopSNGGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\r\n\u0005bStop\u0018\u0002 \u0001(\u0003\"z\n\rInsuranceInfo\u0012:\n\u0013vInsuranceUserInfos\u0018\u0001 \u0003(\u000b2\u001d.texaspoker.InsuranceUserInfo\u0012\u0017\n\u000fiFirstInsurance\u0018\u0002 \u0001(\u0005\u0012\u0014\n\fvNoOutsUuids\u0018\u0003 \u0003(\u0003\"\u00f4\u0002\n\u0011InsuranceUserInfo\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012=\n\u0013eInsuranceBetStatus\u0018\u0002 \u0001(\u000e2 .texaspoker.INSURANCE_BET_STATUS\u00128\n\u0012vInsurancePotInfos\u0018\u0003 \u0003(\u000b", "2\u001c.texaspoker.InsurancePotInfo\u0012\u0017\n\u000flTotalGetStacks\u0018\u0004 \u0001(\u0003\u0012\u0015\n\rbCanInsurance\u0018\u0005 \u0001(\u0005\u0012\u0019\n\u0011bDefaultInsurance\u0018\u0006 \u0001(\u0005\u0012\u001b\n\u0013lInsuranceStartTime\u0018\u0007 \u0001(\u0003\u0012\u001d\n\u0015lInsuranceActDuration\u0018\b \u0001(\u0003\u0012\u001b\n\u0013iInsuranceDelayCost\u0018\t \u0001(\u0005\u0012\u001b\n\u0013iInsuranceDelayLong\u0018\n \u0001(\u0005\u0012\u0017\n\u000fbFirstInsurance\u0018\u000b \u0001(\u0005\"\u00f7\u0001\n\u0010InsurancePotInfo\u0012\u000e\n\u0006lPotID\u0018\u0001 \u0002(\u0003\u0012\u0012\n\nlPotStacks\u0018\u0002 \u0002(\u0003\u0012\r\n\u0005vOuts\u0018\u0003 \u0003(\u0005\u0012\r\n\u0005iOdds\u0018\u0004 \u0001(\u0005\u0012\u0017\n\u000flTotalPotStacks\u0018\u0005 \u0001(\u0003\u0012\u0011\n\tlNoLosses\u0018\u0006 \u0001(\u0003\u0012\u0012\n\nlMinStacks\u0018\u0007 \u0001(\u0003\u0012", "\u0012\n\nlMaxStacks\u0018\b \u0001(\u0003\u0012\u0012\n\nlBetStacks\u0018\t \u0001(\u0003\u0012\u0012\n\nlGetStacks\u0018\n \u0001(\u0003\u0012\u0011\n\tiPotIndex\u0018\u000b \u0001(\u0005\u0012\u0012\n\nlSysStacks\u0018\f \u0001(\u0003\"h\n\u0010BuyInsuranceInfo\u0012\u000e\n\u0006lPotID\u0018\u0001 \u0002(\u0003\u00120\n\reInsuranceAct\u0018\u0002 \u0001(\u000e2\u0019.texaspoker.INSURANCE_ACT\u0012\u0012\n\nlBetStacks\u0018\u0003 \u0001(\u0003\"\u00bd\u0001\n\u000eCSBuyInsurance\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blGameHandID\u0018\u0003 \u0002(\u0003\u00129\n\u000feGameRoomStatus\u0018\u0004 \u0001(\u000e2 .texaspoker.GAME_ROOM_GAME_STATE\u00128\n\u0012stBuyInsuranceInfo\u0018\u0005 \u0003(\u000b2\u001c.texaspoker.BuyInsuranceInfo\"t\n\u0011", "SCBuyInsuranceRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"j\n\u0019CSCreatorInsuranceSetting\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blSettedUuid\u0018\u0003 \u0001(\u0003\u0012\u0015\n\rbCanInsurance\u0018\u0004 \u0001(\u0005\"\u008e\u0001\n\u001cSCCreatorInsuranceSettingRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0013\n\u000blSettedUuid\u0018\u0003 \u0001(\u0003\u0012\u0015\n\rbCanInsurance\u0018\u0004 \u0001(\u0005\"V\n\u0016CSUserInsuranceSetting\u0012\f\n\u0004uui", "d\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0019\n\u0011bDefaultInsurance\u0018\u0003 \u0001(\u0005\"z\n\u0019SCUserInsuranceSettingRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0019\n\u0011bDefaultInsurance\u0018\u0003 \u0001(\u0005\"\u0088\u0001\n\u0013CSBuyInsuranceDelay\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blGameHandID\u0018\u0003 \u0002(\u0003\u00129\n\u000feGameRoomStatus\u0018\u0004 \u0001(\u000e2 .texaspoker.GAME_ROOM_GAME_STATE\"\u00a7\u0001\n\u0016SCBuyInsuranceDelayRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGam", "eRoomID\u0018\u0002 \u0001(\u0003\u0012:\n\u0013stInsuranceUserInfo\u0018\u0003 \u0001(\u000b2\u001d.texaspoker.InsuranceUserInfo\u0012\r\n\u0005lCoin\u0018\u0004 \u0001(\u0003\".\n\tCSForceBB\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"o\n\fSCForceBBRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00120\n\u000estGameRoomInfo\u0018\u0002 \u0001(\u000b2\u0018.texaspoker.GameRoomInfo\"5\n\u0010CSGetGameSetting\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"s\n\u0013SCGetGameSettingRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0018\n\u0010b", "NotBuyInsurance\u0018\u0003 \u0001(\u0005\"F\n\u000eCSUserDelegate\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0011\n\tbDelegate\u0018\u0003 \u0001(\u0005\"j\n\u0011SCUserDelegateRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0011\n\tbDelegate\u0018\u0003 \u0001(\u0005\"L\n\u0010CSKickUserInGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0015\n\rlKickUserUuid\u0018\u0003 \u0001(\u0005\"p\n\u0013SCKickUserInGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0015\n\rlKickUserUuid\u0018\u0003 \u0001(\u0005\"\u00a6\u0001\n\u0010CS", "UploadAPNToken\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012,\n\u000beDeviceType\u0018\u0002 \u0002(\u000e2\u0017.texaspoker.DEVICE_TYPE\u0012\u0016\n\u000estrIosAPNToken\u0018\u0003 \u0001(\t\u0012\u001f\n\u0017strAndroidXingeAPNToken\u0018\u0004 \u0001(\t\u0012\u001d\n\u0015strAndroidFCMAPNToken\u0018\u0005 \u0001(\t\"D\n\u0013SCUploadAPNTokenRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\"1\n\fCSCancelGame\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"U\n\u000fSCCancelGameRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\"J\n\u0010CSShowTableCards\u0012\f\n\u0004uuid\u0018\u0001", " \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0013\n\u000blGameHandID\u0018\u0003 \u0002(\u0003\"\u0083\u0001\n\u0013SCShowTableCardsRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0013\n\u000blGameHandID\u0018\u0003 \u0001(\u0003\u0012\u0013\n\u000bvTableCards\u0018\u0004 \u0003(\u0003\"=\n\u0018CSGetGameRoomLeagueClubs\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\"\u0093\u0001\n\u001bSCGetGameRoomLeagueClubsRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u00120\n\u000evClubBaseInfos\u0018\u0003 \u0003(\u000b2\u0018.texaspoker.ClubBaseInfo\"Y\n\u0019CSS", "etGameThinkingInterval\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0019\n\u0011iThinkingInterval\u0018\u0003 \u0002(\u0005\"\u0087\u0001\n\u001cSCSetGameThinkingIntervalRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo\"N\n\u000eCSForceStandup\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0019\n\u0011lForceStandUpUuid\u0018\u0003 \u0002(\u0005\"r\n\u0011SCForceStandupRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0001(\u0003\u0012\u0019\n\u0011lForc", "eStandUpUuid\u0018\u0003 \u0001(\u0003\"E\n\rCSSetStraddle\u0012\f\n\u0004uuid\u0018\u0001 \u0002(\u0003\u0012\u0013\n\u000blGameRoomID\u0018\u0002 \u0002(\u0003\u0012\u0011\n\tbStraddle\u0018\u0003 \u0002(\u0005\"{\n\u0010SCSetStraddleRsp\u0012-\n\beErrCode\u0018\u0001 \u0002(\u000e2\u001b.texaspoker.ERROR_CODE_TYPE\u00128\n\u0012stGameRoomBaseInfo\u0018\u0002 \u0001(\u000b2\u001c.texaspoker.GameRoomBaseInfo*\u00ba\u0002\n\u000fUSER_GAME_STATE\u0012\u001b\n\u0017USER_GAME_STATE_STANDBY\u0010\u0001\u0012\u0018\n\u0014USER_GAME_STATE_WAIT\u0010\u0002\u0012\u0019\n\u0015USER_GAME_STATE_READY\u0010\u0003\u0012\u001b\n\u0017USER_GAME_STATE_BETTING\u0010\u0004\u0012\u0018\n\u0014USER_GAME_STATE_FOLD\u0010\u0005\u0012\u0019\n\u0015USER_GAME_STATE_CHECK\u0010\u0007\u0012\u0018", "\n\u0014USER_GAME_STATE_CALL\u0010\b\u0012\u0019\n\u0015USER_GAME_STATE_RAISE\u0010\t\u0012\u0019\n\u0015USER_GAME_STATE_ALLIN\u0010\n\u0012\u0019\n\u0015USER_GAME_STATE_BLIND\u0010\u000b\u0012\u0018\n\u0014USER_GAME_STATE_DEAD\u0010\f*\u009f\u0001\n\u000eUSER_GAME_ROLE\u0012\u0017\n\u0013USER_GAME_ROLE_DEAL\u0010\u0001\u0012\u001e\n\u001aUSER_GAME_ROLE_SMALL_BLIND\u0010\u0002\u0012\u001c\n\u0018USER_GAME_ROLE_BIG_BLIND\u0010\u0003\u0012\u0019\n\u0015USER_GAME_ROLE_NORMAL\u0010\u0004\u0012\u001b\n\u0017USER_GAME_ROLE_STRADDLE\u0010\u0005*\u00d8\u0001\n\rHAND_PATTERNS\u0012\u0012\n\u000eHAND_PATTERN_1\u0010\u0001\u0012\u0012\n\u000eHAND_PATTERN_2\u0010\u0002\u0012\u0012\n\u000eHAND_PATTERN_3\u0010\u0003\u0012\u0012\n\u000eHAND_PATTERN_4\u0010\u0004\u0012\u0012\n\u000eHAND_", "PATTERN_5\u0010\u0005\u0012\u0012\n\u000eHAND_PATTERN_6\u0010\u0006\u0012\u0012\n\u000eHAND_PATTERN_7\u0010\u0007\u0012\u0012\n\u000eHAND_PATTERN_8\u0010\b\u0012\u0012\n\u000eHAND_PATTERN_9\u0010\t\u0012\u0013\n\u000fHAND_PATTERN_10\u0010\n*\u008b\u0001\n\u0013RECOMMEND_USER_TYPE\u0012\u0019\n\u0015RECOMMEND_BEAUTY_USER\u0010\u0001\u0012\u0019\n\u0015RECOMMEND_HUNTER_USER\u0010\u0002\u0012\u001a\n\u0016RECOMMEND_DIAMOND_USER\u0010\u0003\u0012\"\n\u001eRECOMMEND_FLOWER_GUARDIAN_USER\u0010\u0004*\u0085\u0001\n\u0011CHAT_MESSAGE_FROM\u0012\u0018\n\u0014CHAT_MESSAGE_FROM_ME\u0010\u0001\u0012\u001c\n\u0018CHAT_MESSAGE_FROM_FRIEND\u0010\u0002\u0012\u001a\n\u0016CHAT_MESSAGE_FROM_TIME\u0010\u0003\u0012\u001c\n\u0018CHAT_MESSAGE_FROM_SYSTEM\u0010\u0004*\u008f\u0003\n\u0011CHAT_", "MESSAGE_TYPE\u0012\u001a\n\u0016CHAT_MESSAGE_TYPE_TEXT\u0010\u0001\u0012\u001b\n\u0017CHAT_MESSAGE_TYPE_VOICE\u0010\u0002\u0012\u001a\n\u0016CHAT_MESSAGE_TYPE_BILL\u0010\u0003\u0012#\n\u001fCHAT_MESSAGE_TYPE_POKER_PROCESS\u0010\u0004\u0012!\n\u001dCHAT_MESSAGE_TYPE_GAME_CREATE\u0010\u0005\u0012\u0019\n\u0015CHAT_MESSAGE_TYPE_PIC\u0010\u0006\u0012 \n\u001cCHAT_MESSAGE_TYPE_ENTER_GAME\u0010\u0007\u0012\u001b\n\u0017CHAT_MESSAGE_TYPE_OTHER\u0010\b\u0012\u001d\n\u0019CHAT_MESSAGE_TYPE_WEBPAGE\u0010\t\u0012\u001c\n\u0018CHAT_MESSAGE_TYPE_SYSTEM\u0010\n\u0012!\n\u001dCHAT_MESSAGE_TYPE_GAME_SYSTEM\u0010\u000b\u0012#\n\u001fCHAT_MESSAGE_TYPE_POKER_HISTORY\u0010\f*\u0086\u0002\n\u0011CLU", "B_MESSAGE_TYPE\u0012\u0016\n\u0012CLUB_MESSAGE_APPLY\u0010\u0001\u0012\u0017\n\u0013CLUB_MESSAGE_ACCEPT\u0010\u0002\u0012\u0015\n\u0011CLUB_MESSAGE_DENY\u0010\u0003\u0012\u0017\n\u0013CLUB_MESSAGE_REMOVE\u0010\u0004\u0012\u0015\n\u0011CLUB_MESSAGE_QUIT\u0010\u0005\u0012\u0016\n\u0012CLUB_MESSAGE_ENTER\u0010\u0006\u0012\u0017\n\u0013CLUB_MESSAGE_DELETE\u0010\u0007\u0012\u0017\n\u0013CLUB_MESSAGE_SENIOR\u0010\b\u0012\u0018\n\u0014CLUB_MESSAGE_JIUNIOR\u0010\t\u0012\u0015\n\u0011CLUB_MESSAGE_FUND\u0010\n*\u008f\u0001\n\u0013SYSTEM_MESSAGE_TYPE\u0012\u0019\n\u0015SYSTEM_MESSAGE_NOTICE\u0010\u0001\u0012\u001c\n\u0018SYSTEM_MESSAGE_PROMOTION\u0010\u0002\u0012\u001f\n\u001bSYSTEM_MESSAGE_CARD_TIMEOFF\u0010\u0003\u0012\u001e\n\u001aSYSTEM_MESSAGE_FRIEND_GIF", "T\u0010\u0004*\u00cd\u0001\n\u0016CHAT_ROOM_MESSAGE_TYPE\u0012\u001c\n\u0018CHAT_ROOM_MESSAGE_INVITE\u0010\u0001\u0012\u001b\n\u0017CHAT_ROOM_MESSAGE_ENTER\u0010\u0002\u0012\u001b\n\u0017CHAT_ROOM_MESSAGE_LEAVE\u0010\u0003\u0012\u001a\n\u0016CHAT_ROOM_MESSAGE_KICK\u0010\u0004\u0012\u0019\n\u0015CHAT_ROOM_MESSAGE_SET\u0010\u0005\u0012$\n CHAT_ROOM_MESSAGE_REMOVECHATROOM\u0010\u0006*\u00d6\u0001\n\u001cQUICK_GAME_ROOM_MESSAGE_TYPE\u0012!\n\u001dQUICK_GAME_ROOM_MESSAGE_ENTER\u0010\u0001\u0012 \n\u001cQUICK_GAME_ROOM_MESSAGE_QUIT\u0010\u0002\u0012&\n\"QUICK_GAME_ROOM_MESSAGE_REMOVEROOM\u0010\u0003\u0012\"\n\u001eQUICK_GAME_ROOM_MESSAGE_FINISH\u0010\u0004\u0012%\n!QUICK_G", "AME_ROOM_MESSAGE_STARTGAME\u0010\u0005*\u00e0\u0006\n\u0016GAME_ROOM_MESSAGE_TYPE\u0012\u001c\n\u0018GAME_ROOM_MESSAGE_INVITE\u0010\u0001\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_ENTER\u0010\u0002\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_LEAVE\u0010\u0003\u0012\u001a\n\u0016GAME_ROOM_MESSAGE_OVER\u0010\u0004\u0012\u001d\n\u0019GAME_ROOM_MESSAGE_SITDOWN\u0010\u0005\u0012\u001d\n\u0019GAME_ROOM_MESSAGE_STANDUP\u0010\u0006\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_BUYIN\u0010\u0007\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_DELAY\u0010\b\u0012'\n#GAME_ROOM_MESSAGE_RESET_BUYIN_RATIO\u0010\t\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_PAUSE\u0010\n\u0012\u001c\n\u0018GAME_ROOM_MESSAGE_RESUME\u0010\u000b\u0012 \n\u001cGAME_", "ROOM_MESSAGE_RETURNGAME\u0010\f\u0012 \n\u001cGAME_ROOM_MESSAGE_BLINDRAISE\u0010\r\u0012\u001e\n\u001aGAME_ROOM_MESSAGE_DELEGATE\u0010\u000e\u0012\u001c\n\u0018GAME_ROOM_MESSAGE_CANCEL\u0010\u000f\u0012*\n&GAME_ROOM_MESSAGE_INSURANCEABLE_CHANGE\u0010\u0010\u0012%\n!GAME_ROOM_MESSAGE_INSURANCE_DELAY\u0010\u0011\u0012#\n\u001fGAME_ROOM_MESSAGE_BUY_INSURANCE\u0010\u0012\u0012'\n#GAME_ROOM_MESSAGE_INSURANCE_TIMEOUT\u0010\u0013\u0012\u001b\n\u0017GAME_ROOM_MESSAGE_START\u0010\u0014\u0012\u001a\n\u0016GAME_ROOM_MESSAGE_KICK\u0010\u0015\u0012\"\n\u001eGAME_ROOM_MESSAGE_FORCE_CANCEL\u0010\u0016\u0012#\n\u001fGAME_ROOM_MESSAGE_FOR", "CE_STANDUP\u0010\u0017\u0012\"\n\u001eGAME_ROOM_MESSAGE_SET_STRADDLE\u0010\u0018\u0012-\n)GAME_ROOM_MESSAGE_RESET_THINKING_INTERVAL\u0010\u0019*\u00a1\u0001\n\rGAME_ACT_TYPE\u0012\u0016\n\u0012GAME_ACT_TYPE_FOLD\u0010\u0001\u0012\u0016\n\u0012GAME_ACT_TYPE_CALL\u0010\u0002\u0012\u0015\n\u0011GAME_ACT_TYPE_BET\u0010\u0003\u0012\u0017\n\u0013GAME_ACT_TYPE_CHECK\u0010\u0004\u0012\u0017\n\u0013GAME_ACT_TYPE_RAISE\u0010\u0005\u0012\u0017\n\u0013GAME_ACT_TYPE_ALLIN\u0010\u0006*C\n\u000eGAME_INFO_TYPE\u0012\u0007\n\u0003ALL\u0010\u0001\u0012\u000b\n\u0007MY_GAME\u0010\u0002\u0012\u0010\n\fFRIENDS_GAME\u0010\u0003\u0012\t\n\u0005BILLS\u0010\u0004*J\n\tCHAT_TYPE\u0012\u0014\n\u0010CHAT_TYPE_SINGLE\u0010\u0001\u0012\u0013\n\u000fCHAT_TYPE_GROUP\u0010\u0002\u0012\u0012\n\u000eCHAT_TYPE_CL", "UB\u0010\u0003*W\n\u0015GAME_ROOM_SENIOR_TYPE\u0012\u001c\n\u0018GAME_ROOM_SENIOR_TYPE_NO\u0010\u0000\u0012 \n\u001cGAME_ROOM_SENIOR_TYPE_NORMAL\u0010\u0002*m\n\u0016QUICK_GAME_ROOM_STATUS\u0012\u001c\n\u0018QUICK_GAME_ROOM_NOTSTART\u0010\u0001\u0012\u0019\n\u0015QUICK_GAME_ROOM_START\u0010\u0002\u0012\u001a\n\u0016QUICK_GAME_ROOM_FINISH\u0010\u0003*k\n\u000fTABLE_USE_STATE\u0012\u0014\n\u0010TABLE_STATE_Play\u0010\u0001\u0012\u0015\n\u0011TABLE_STATE_Ready\u0010\u0002\u0012\u0014\n\u0010TABLE_STATE_OVer\u0010\u0003\u0012\u0015\n\u0011TABLE_STATE_Empty\u0010\u0004*\u00b3\u0002\n\u001aBUYIN_CONTROL_MESSAGE_TYPE\u0012%\n!BUYIN_CONTROL_MESSAGE_TYPE_INVITE\u0010\u0001\u0012%\n!BUYIN_CONTROL", "_MESSAGE_TYPE_ACCEPT\u0010\u0002\u0012#\n\u001fBUYIN_CONTROL_MESSAGE_TYPE_DENY\u0010\u0003\u0012%\n!BUYIN_CONTROL_MESSAGE_TYPE_ENABLE\u0010\u0004\u0012&\n\"BUYIN_CONTROL_MESSAGE_TYPE_DISABLE\u0010\u0005\u0012(\n$BUYIN_CONTROL_MESSAGE_TYPE_SNG_START\u0010\u0006\u0012)\n%BUYIN_CONTROL_MESSAGE_TYPE_SNG_CANCEL\u0010\u0007*P\n\u0012BUYIN_CONTROL_TYPE\u0012\u001d\n\u0019BUYIN_CONTROL_TYPE_ACCEPT\u0010\u0001\u0012\u001b\n\u0017BUYIN_CONTROL_TYPE_DENY\u0010\u0002*\u00aa\u0003\n\u0014GAME_ROOM_GAME_STATE\u0012\u001c\n\u0018ROOM_GAME_STATE_GameWait\u0010\u0001\u0012\u001d\n\u0019ROOM_GAME_STATE_GameStart\u0010\u0002\u0012\u001b\n\u0017ROOM_", "GAME_STATE_PreFlop\u0010\u0003\u0012\u0018\n\u0014ROOM_GAME_STATE_Flop\u0010\u0004\u0012\u0018\n\u0014ROOM_GAME_STATE_Turn\u0010\u0005\u0012\u0019\n\u0015ROOM_GAME_STATE_River\u0010\u0006\u0012\u001a\n\u0016ROOM_GAME_STATE_Result\u0010\u0007\u0012\u001c\n\u0018ROOM_GAME_STATE_SHOWCARD\u0010\b\u0012\u0018\n\u0014ROOM_GAME_STATE_Over\u0010\t\u0012\u001f\n\u001bROOM_GAME_STATE_GamePrepare\u0010\n\u0012\u0018\n\u0014ROOM_GAME_STATE_Ante\u0010\u000b\u0012\u001c\n\u0018ROOM_GAME_STATE_Flop_One\u0010\f\u0012\u001c\n\u0018ROOM_GAME_STATE_Flop_Two\u0010\r\u0012\u001e\n\u001aROOM_GAME_STATE_Flop_Three\u0010\u000e*b\n\u0014INSURANCE_BET_STATUS\u0012\u0019\n\u0015INSURANCE_BET_BETTING\u0010\u0001\u0012\u0016\n\u0012INSURANCE_B", "ET_FOLD\u0010\u0002\u0012\u0017\n\u0013INSURANCE_BET_BETED\u0010\u0003*>\n\rINSURANCE_ACT\u0012\u0015\n\u0011INSURANCE_ACT_BET\u0010\u0001\u0012\u0016\n\u0012INSURANCE_ACT_FOLD\u0010\u0002*f\n\u0010INSURANCE_STATUS\u0012\u0017\n\u0013INSURANCE_STATUS_NO\u0010\u0001\u0012\u001c\n\u0018INSURANCE_STATUS_BETTING\u0010\u0002\u0012\u001b\n\u0017INSURANCE_STATUS_RESULT\u0010\u0003B#\n\u0015com.texaspoker.momentB\nTexasPoker"}, fileDescriptorArr, new C11141());
        f8283a = (Descriptor) m5928a().getMessageTypes().get(0);
        f8284b = new FieldAccessorTable(f8283a, new String[]{"StUserInfo", "EGameState", "EGameRole", "LRoomId", "LRemainStacks", "BBuyin", "LBetStacks", "VCurrentHands", "BGameDealer", "IDelayTotalTimes", "LActTime", "IDelayLong", "IDelayCost", "IDelaySingleTime", "BShowCardOne", "BShowCardTwo", "LBettingID", "LBuyinStacks", "BWaitingBuyinConfirmation", "LBuyinTime", "ISNGRank", "BDelegate", "BWaitBB", "BJustSit", "BShowCardThree", "BShowCardFour", "BKickedInGame", "LBuyinClubID"});
        f8285c = (Descriptor) m5928a().getMessageTypes().get(1);
        f8286d = new FieldAccessorTable(f8285c, new String[]{"NRoomNum", "NUserNum"});
        f8288e = (Descriptor) m5928a().getMessageTypes().get(2);
        f8289f = new FieldAccessorTable(f8288e, new String[]{"MessageId", "ChatMessageType", "ChatMessageFrom", "StUserBaseinfo", "MessageText", "LTime"});
        f8290g = (Descriptor) m5928a().getMessageTypes().get(3);
        f8291h = new FieldAccessorTable(f8290g, new String[]{"LSNGSmallBlinds", "LSNGBigBlinds", "LSNGAnte"});
        f8292i = (Descriptor) m5928a().getMessageTypes().get(4);
        f8293j = new FieldAccessorTable(f8292i, new String[]{"IOuts", "IOdds"});
        f8294k = (Descriptor) m5928a().getMessageTypes().get(5);
        f8295l = new FieldAccessorTable(f8294k, new String[]{"IMaxInGameUserInfo", "ISimultaneousPlays", "IKickOff", "IFavoriteNum", "VSBs", "VPlayDuration", "IMaxLevel", "IMaxClubNums", "ISeniorGamrRoomCost", "VSNGBlindsStructures", "VOddsStructure", "BInsurance"});
        f8296m = (Descriptor) m5928a().getMessageTypes().get(6);
        f8297n = new FieldAccessorTable(f8296m, new String[]{"StUserBaseInfo", "Pwd"});
        f8298o = (Descriptor) m5928a().getMessageTypes().get(7);
        f8299p = new FieldAccessorTable(f8298o, new String[]{"EErrCode"});
        f8300q = (Descriptor) m5928a().getMessageTypes().get(8);
        f8301r = new FieldAccessorTable(f8300q, new String[]{"StUserBaseInfo", "SPhoneNumber", "SCountryCode"});
        f8302s = (Descriptor) m5928a().getMessageTypes().get(9);
        f8303t = new FieldAccessorTable(f8302s, new String[]{"EErrCode"});
        f8304u = (Descriptor) m5928a().getMessageTypes().get(10);
        f8305v = new FieldAccessorTable(f8304u, new String[]{"StUserBaseInfo", "SVeryifyCode", "StrIosToken", "StrSSOToken", "EDeviceType", "ELanguageType", "BRegister"});
        f8306w = (Descriptor) m5928a().getMessageTypes().get(11);
        f8307x = new FieldAccessorTable(f8306w, new String[]{"EErrCode", "StUserBaseInfo", "StDefaultSettingInfo", "SAccessToken", "SEncryptKey", "BRegister"});
        f8308y = (Descriptor) m5928a().getMessageTypes().get(12);
        f8309z = new FieldAccessorTable(f8308y, new String[]{"SPhoneNumber", "SCountryCode", "ELanguageType"});
        f8257A = (Descriptor) m5928a().getMessageTypes().get(13);
        f8258B = new FieldAccessorTable(f8257A, new String[]{"EErrCode"});
        f8259C = (Descriptor) m5928a().getMessageTypes().get(14);
        f8260D = new FieldAccessorTable(f8259C, new String[]{"StrID", "StrPWD", "StrIosToken", "StrSSOToken", "StrSysVersion", "StrPhoneType", "StrScreenSize", "EDeviceType", "ELanguageType", "SCountryCode"});
        f8261E = (Descriptor) m5928a().getMessageTypes().get(15);
        f8262F = new FieldAccessorTable(f8261E, new String[]{"EErrCode", "StUserGameInfo", "StGameItemInfo", "StDefaultSettingInfo", "SAccessToken", "SEncryptKey"});
        f8263G = (Descriptor) m5928a().getMessageTypes().get(16);
        f8264H = new FieldAccessorTable(f8263G, new String[]{"StrID", "EIDType", "EDeviceType", "StrIosToken", "StrSSOToken", "StrSysVersion", "StrPhoneType", "StrScreenSize", "StrCover", "StrNick", "IGender", "ELanguageType"});
        f8265I = (Descriptor) m5928a().getMessageTypes().get(17);
        f8266J = new FieldAccessorTable(f8265I, new String[]{"EErrCode", "StUserBaseInfo", "StDefaultSettingInfo", "BNewUser", "SAccessToken", "SEncryptKey"});
        f8267K = (Descriptor) m5928a().getMessageTypes().get(18);
        f8268L = new FieldAccessorTable(f8267K, new String[]{"Uuid", "StrIosToken", "StrSSOToken", "StrSysVersion", "StrPhoneType", "StrScreenSize", "EDeviceType", "ELanguageType"});
        f8269M = (Descriptor) m5928a().getMessageTypes().get(19);
        f8270N = new FieldAccessorTable(f8269M, new String[]{"EErrCode", "StUserGameInfo", "StGameItemInfo", "StDefaultSettingInfo"});
        f8271O = (Descriptor) m5928a().getMessageTypes().get(20);
        f8272P = new FieldAccessorTable(f8271O, new String[]{"Uuid", "StrIosToken", "StrSSOToken", "StrSysVersion", "StrPhoneType", "StrScreenSize", "EDeviceType", "ELanguageType", "SAccessToken"});
        f8273Q = (Descriptor) m5928a().getMessageTypes().get(21);
        f8274R = new FieldAccessorTable(f8273Q, new String[]{"EErrCode", "StUserGameInfo", "StGameRoomInfo", "LCurrentSystemTime", "IUploadLog", "SAccessToken"});
        f8275S = (Descriptor) m5928a().getMessageTypes().get(22);
        f8276T = new FieldAccessorTable(f8275S, new String[]{"SPhoneNumber", "SCountryCode", "ELanguageType"});
        f8277U = (Descriptor) m5928a().getMessageTypes().get(23);
        f8278V = new FieldAccessorTable(f8277U, new String[]{"EErrCode"});
        f8279W = (Descriptor) m5928a().getMessageTypes().get(24);
        f8280X = new FieldAccessorTable(f8279W, new String[]{"SPhoneNumber", "SVeryifyCode", "SNewPassword", "SCountryCode"});
        f8281Y = (Descriptor) m5928a().getMessageTypes().get(25);
        f8282Z = new FieldAccessorTable(f8281Y, new String[]{"EErrCode", "SNewPassword"});
        aa = (Descriptor) m5928a().getMessageTypes().get(26);
        ab = new FieldAccessorTable(aa, new String[]{"Uuid"});
        ac = (Descriptor) m5928a().getMessageTypes().get(27);
        ad = new FieldAccessorTable(ac, new String[]{"EErrCode"});
        ae = (Descriptor) m5928a().getMessageTypes().get(28);
        af = new FieldAccessorTable(ae, new String[]{"Uuid", "LGameRoomID"});
        ag = (Descriptor) m5928a().getMessageTypes().get(29);
        ah = new FieldAccessorTable(ag, new String[]{"EErrCode"});
        ai = (Descriptor) m5928a().getMessageTypes().get(30);
        aj = new FieldAccessorTable(ai, new String[]{"Uuid"});
        ak = (Descriptor) m5928a().getMessageTypes().get(31);
        al = new FieldAccessorTable(ak, new String[]{"EErrCode", "StDefaultSettingInfo"});
        am = (Descriptor) m5928a().getMessageTypes().get(32);
        an = new FieldAccessorTable(am, new String[]{"Uuid"});
        ao = (Descriptor) m5928a().getMessageTypes().get(33);
        ap = new FieldAccessorTable(ao, new String[]{"EErrCode", "LPopularity"});
        aq = (Descriptor) m5928a().getMessageTypes().get(34);
        ar = new FieldAccessorTable(aq, new String[]{"LTime"});
        as = (Descriptor) m5928a().getMessageTypes().get(35);
        at = new FieldAccessorTable(as, new String[]{"Uuid"});
        au = (Descriptor) m5928a().getMessageTypes().get(36);
        av = new FieldAccessorTable(au, new String[]{"EErrCode"});
        aw = (Descriptor) m5928a().getMessageTypes().get(37);
        ax = new FieldAccessorTable(aw, new String[]{"LChatRoomId", "StrRoomName", "NMaxMembers", "NCurMembers", "LCreateUser", "IRoomType", "NOwnerInvite", "NOwnerCreate", "StrRoomIcon", "StrSmallRoomIcon", "IMute", "IVibrate", "StrRoomTempName"});
        ay = (Descriptor) m5928a().getMessageTypes().get(38);
        az = new FieldAccessorTable(ay, new String[]{"StChatRoomBaseInfo", "VUserBaseInfos", "VGameRoomBaseInfos", "VGSNGameRoomBaseInfos"});
        aA = (Descriptor) m5928a().getMessageTypes().get(39);
        aB = new FieldAccessorTable(aA, new String[]{"LRoomID", "VIconDatas"});
        aC = (Descriptor) m5928a().getMessageTypes().get(40);
        aD = new FieldAccessorTable(aC, new String[]{"EErrCode", "SIconUrl", "LRoomID", "SSmallIconUrl"});
        aE = (Descriptor) m5928a().getMessageTypes().get(41);
        aF = new FieldAccessorTable(aE, new String[]{"Uuid", "SRoomName", "NMaxMembers", "NCurMembers", "LCreateUser", "IRoomType", "NOwnerInvite", "NOwnerCreate", "VUserBaseInfos"});
        aG = (Descriptor) m5928a().getMessageTypes().get(42);
        aH = new FieldAccessorTable(aG, new String[]{"EErrCode", "StChatRoomInfo"});
        aI = (Descriptor) m5928a().getMessageTypes().get(43);
        aJ = new FieldAccessorTable(aI, new String[]{"Uuid", "LRoomID", "VUserBaseInfos"});
        aK = (Descriptor) m5928a().getMessageTypes().get(44);
        aL = new FieldAccessorTable(aK, new String[]{"EErrCode", "StChatRoomInfo"});
        aM = (Descriptor) m5928a().getMessageTypes().get(45);
        aN = new FieldAccessorTable(aM, new String[]{"Uuid", "LRoomID", "VUserBaseInfos"});
        aO = (Descriptor) m5928a().getMessageTypes().get(46);
        aP = new FieldAccessorTable(aO, new String[]{"EErrCode", "StChatRoomInfo"});
        aQ = (Descriptor) m5928a().getMessageTypes().get(47);
        aR = new FieldAccessorTable(aQ, new String[]{"Uuid", "LRoomID", "VUserBaseInfos"});
        aS = (Descriptor) m5928a().getMessageTypes().get(48);
        aT = new FieldAccessorTable(aS, new String[]{"EErrCode", "StChatRoomInfo"});
        aU = (Descriptor) m5928a().getMessageTypes().get(49);
        aV = new FieldAccessorTable(aU, new String[]{"Uuid", "LRoomID", "SRoomName", "NOwnerInvite", "NOwnerCreate"});
        aW = (Descriptor) m5928a().getMessageTypes().get(50);
        aX = new FieldAccessorTable(aW, new String[]{"EErrCode", "StChatRoomBaseInfo"});
        aY = (Descriptor) m5928a().getMessageTypes().get(51);
        aZ = new FieldAccessorTable(aY, new String[]{"Uuid", "LStartIndex", "LNum"});
        ba = (Descriptor) m5928a().getMessageTypes().get(52);
        bb = new FieldAccessorTable(ba, new String[]{"EErrCode", "VChatRoomBaseInfos"});
        bc = (Descriptor) m5928a().getMessageTypes().get(53);
        bd = new FieldAccessorTable(bc, new String[]{"Uuid", "LRoomID"});
        be = (Descriptor) m5928a().getMessageTypes().get(54);
        bf = new FieldAccessorTable(be, new String[]{"EErrCode", "StChatRoomInfo"});
        bg = (Descriptor) m5928a().getMessageTypes().get(55);
        bh = new FieldAccessorTable(bg, new String[]{"Uuid", "LRoomID"});
        bi = (Descriptor) m5928a().getMessageTypes().get(56);
        bj = new FieldAccessorTable(bi, new String[]{"EErrCode", "StChatRoomBaseInfo", "VUserBaseInfos"});
        bk = (Descriptor) m5928a().getMessageTypes().get(57);
        bl = new FieldAccessorTable(bk, new String[]{"Uuid", "LRoomID"});
        bm = (Descriptor) m5928a().getMessageTypes().get(58);
        bn = new FieldAccessorTable(bm, new String[]{"EErrCode", "StChatRoomBaseInfo", "VGameRoomBaseInfos", "VSNGGameRoomBaseInfos"});
        bo = (Descriptor) m5928a().getMessageTypes().get(59);
        bp = new FieldAccessorTable(bo, new String[]{"Uuid", "LRoomID"});
        bq = (Descriptor) m5928a().getMessageTypes().get(60);
        br = new FieldAccessorTable(bq, new String[]{"EErrCode", "LRoomID"});
        bs = (Descriptor) m5928a().getMessageTypes().get(61);
        bt = new FieldAccessorTable(bs, new String[]{"Uuid", "LRoomID"});
        bu = (Descriptor) m5928a().getMessageTypes().get(62);
        bv = new FieldAccessorTable(bu, new String[]{"EErrCode", "LRoomID"});
        bw = (Descriptor) m5928a().getMessageTypes().get(63);
        bx = new FieldAccessorTable(bw, new String[]{"Uuid", "EChatType", "LRoomID", "ChatUuid", "IMute", "IVibrate"});
        by = (Descriptor) m5928a().getMessageTypes().get(64);
        bz = new FieldAccessorTable(by, new String[]{"EErrCode", "EChatType", "LRoomID", "ChatUuid", "IMute", "IVibrate"});
        bA = (Descriptor) m5928a().getMessageTypes().get(65);
        bB = new FieldAccessorTable(bA, new String[]{"LGameRoomId", "StrRoomName", "StCreateUserBaseInfo", "BPrivateRoom", "LSmallBlinds", "LBigBlinds", "LBuyIn", "BBuyIn", "LCreateTime", "LDuration", "LChatRoomID", "BStarted", "IGameRoomUserNums", "SFromMsg", "ECreateRoomType", "EGameRoomSeniorType", "IMaxBuyinRatio", "IMinBuyinRatio", "BBuyinControl", "BGamePause", "LGamePauseTime", "IGameRoomUserMaxNums", "IAnte", "BInsurance", "BInGame", "EGameRoomType", "LStartTime", "BIPLimit", "BGPSLimit", "LLeagueID", "SLeagueName", "SFromClubName", "SFromClubUrl", "IThinkingInterval", "BStraddle", "SFromClubCreatorName"});
        bC = (Descriptor) m5928a().getMessageTypes().get(66);
        bD = new FieldAccessorTable(bC, new String[]{"LGameRoomId", "StrRoomName", "StCreateUserBaseInfo", "BPrivateRoom", "LSmallBlinds", "LBigBlinds", "ICurrentLevel", "IMaxiLevel", "BLevelChanged", "VWinLadder", "LOriginalStacks", "IBlindInterval", "ECreateRoomType", "LFromRoomID", "IGameRoomUserMaxNums", "SFromMsg", "BStarted", "LCreateTime", "LStartTime", "ESNGRoomtype", "IGameRoomUserNums", "BInGame", "BSignupInviting", "BBuyinControl", "IAnte", "LPrepareTime", "LCancelWaitInterval", "BIPLimit", "BGPSLimit", "LLeagueID", "SLeagueName", "IThinkingInterval"});
        bE = (Descriptor) m5928a().getMessageTypes().get(67);
        bF = new FieldAccessorTable(bE, new String[]{"LPotStacks", "VUuids"});
        bG = (Descriptor) m5928a().getMessageTypes().get(68);
        bH = new FieldAccessorTable(bG, new String[]{"EGameRoomType", "StGameRoomBaseInfo", "StSNGGameRoomBaseInfo", "EGameState", "VCurrentCards", "VCurrentPots", "VUserGameInfos", "StGameResultInfo", "BStateChange", "BAllAllin", "LGameHandID", "LEffectiveRaise", "EInsuranceStatus", "VInsuranceInfos", "VPotInfos", "VKickUserIDs"});
        bI = (Descriptor) m5928a().getMessageTypes().get(69);
        bJ = new FieldAccessorTable(bI, new String[]{"Uuid", "SRoomName", "LSmallBlinds", "LBigBlinds", "LBuyIn", "BBuyIn", "LDuration", "LFromRoomID", "BPrivateRoom", "VUserBaseInfos", "EGameRoomType", "ECreateRoomType", "EGameRoomSeniorType", "IMaxBuyinRatio", "IMinBuyinRatio", "BBuyinControl", "IGameRoomUserMaxNums", "IAnte", "BInsurance", "BIPLimit", "BGPSLimit", "LLeagueID"});
        bK = (Descriptor) m5928a().getMessageTypes().get(70);
        bL = new FieldAccessorTable(bK, new String[]{"EErrCode", "LGameRoomId", "StGameRoomInfo", "StUserBaseInfoNet"});
        bM = (Descriptor) m5928a().getMessageTypes().get(71);
        bN = new FieldAccessorTable(bM, new String[]{"Uuid", "LStartIndex", "LNum"});
        bO = (Descriptor) m5928a().getMessageTypes().get(72);
        bP = new FieldAccessorTable(bO, new String[]{"EErrCode", "StGameRoomInfo"});
        bQ = (Descriptor) m5928a().getMessageTypes().get(73);
        bR = new FieldAccessorTable(bQ, new String[]{"Uuid", "LGameRoomID"});
        bS = (Descriptor) m5928a().getMessageTypes().get(74);
        bT = new FieldAccessorTable(bS, new String[]{"EErrCode", "StGameRoomInfo"});
        bU = (Descriptor) m5928a().getMessageTypes().get(75);
        bV = new FieldAccessorTable(bU, new String[]{"Uuid", "StrRoomName", "BPrivateRoom", "ESNGRoomType", "ECreateRoomType", "LFromRoomID", "IGameRoomUserMaxNums", "BBuyinControl", "BIPLimit", "BGPSLimit", "LLeagueID"});
        bW = (Descriptor) m5928a().getMessageTypes().get(76);
        bX = new FieldAccessorTable(bW, new String[]{"EErrCode", "LGameRoomId", "StGameRoomInfo", "StUserBaseInfoNet"});
        bY = (Descriptor) m5928a().getMessageTypes().get(77);
        bZ = new FieldAccessorTable(bY, new String[]{"Uuid", "LGameRoomID"});
        ca = (Descriptor) m5928a().getMessageTypes().get(78);
        cb = new FieldAccessorTable(ca, new String[]{"EErrCode", "StGameRoomInfo", "StUserBaseInfoNet"});
        cc = (Descriptor) m5928a().getMessageTypes().get(79);
        cd = new FieldAccessorTable(cc, new String[]{"Uuid", "LGameRoomID"});
        ce = (Descriptor) m5928a().getMessageTypes().get(80);
        cf = new FieldAccessorTable(ce, new String[]{"EErrCode", "StGameRoomInfo"});
        cg = (Descriptor) m5928a().getMessageTypes().get(81);
        ch = new FieldAccessorTable(cg, new String[]{"Uuid", "LGameRoomID"});
        ci = (Descriptor) m5928a().getMessageTypes().get(82);
        cj = new FieldAccessorTable(ci, new String[]{"EErrCode", "LGameRoomID"});
        ck = (Descriptor) m5928a().getMessageTypes().get(83);
        cl = new FieldAccessorTable(ck, new String[]{"StUserWiner", "LUserPots"});
        cm = (Descriptor) m5928a().getMessageTypes().get(84);
        cn = new FieldAccessorTable(cm, new String[]{"StGamePotResultInfo", "VlOriginalUserStacks"});
        co = (Descriptor) m5928a().getMessageTypes().get(85);
        cp = new FieldAccessorTable(co, new String[]{"Uuid", "LRoomID", "LPopularity"});
        cq = (Descriptor) m5928a().getMessageTypes().get(86);
        cr = new FieldAccessorTable(cq, new String[]{"EErrCode", "LPopularity"});
        cs = (Descriptor) m5928a().getMessageTypes().get(87);
        ct = new FieldAccessorTable(cs, new String[]{"LMsgID", "LFromUuid", "LToUuid", "LRoomID", "LPopularity", "SExtra"});
        cu = (Descriptor) m5928a().getMessageTypes().get(88);
        cv = new FieldAccessorTable(cu, new String[]{"VMsgs"});
        cw = (Descriptor) m5928a().getMessageTypes().get(89);
        cx = new FieldAccessorTable(cw, new String[]{"Uuid", "VMsgIds"});
        cy = (Descriptor) m5928a().getMessageTypes().get(90);
        cz = new FieldAccessorTable(cy, new String[]{"LBuyinActionID", "StFromUser", "LBuyStacks", "StGameRoomInfo", "EBuyinControlMessageTypeDeny", "LActionUuid", "SActionNickname", "LMsgID", "LClubID", "SClubName"});
        cA = (Descriptor) m5928a().getMessageTypes().get(91);
        cB = new FieldAccessorTable(cA, new String[]{"StBuyinControlMsg"});
        cC = (Descriptor) m5928a().getMessageTypes().get(92);
        cD = new FieldAccessorTable(cC, new String[]{"Uuid", "LMsgId"});
        cE = (Descriptor) m5928a().getMessageTypes().get(93);
        cF = new FieldAccessorTable(cE, new String[]{"Uuid", "LBuyinActionID", "LGameRoomID", "LActionUuid", "EBuyinControlMessageType"});
        cG = (Descriptor) m5928a().getMessageTypes().get(94);
        cH = new FieldAccessorTable(cG, new String[]{"EErrCode", "StGameRoomInfo", "LActionUuid", "LGameRoomID"});
        cI = (Descriptor) m5928a().getMessageTypes().get(95);
        cJ = new FieldAccessorTable(cI, new String[]{"Uuid", "LGameRoomID", "BBuyinControl"});
        cK = (Descriptor) m5928a().getMessageTypes().get(96);
        cL = new FieldAccessorTable(cK, new String[]{"EErrCode", "StGameRoomBaseInfo"});
        cM = (Descriptor) m5928a().getMessageTypes().get(97);
        cN = new FieldAccessorTable(cM, new String[]{"Uuid", "LGameRoomID", "BPauseGame"});
        cO = (Descriptor) m5928a().getMessageTypes().get(98);
        cP = new FieldAccessorTable(cO, new String[]{"EErrCode", "StGameRoomBaseInfo"});
        cQ = (Descriptor) m5928a().getMessageTypes().get(99);
        cR = new FieldAccessorTable(cQ, new String[]{"StUserBaseInfo", "LStacks", "LBuyinCreateTime", "LGameRoomID", "SGameRoomName", "EGameRoomType", "LClubID", "SClubName"});
        cS = (Descriptor) m5928a().getMessageTypes().get(100);
        cT = new FieldAccessorTable(cS, new String[]{"Uuid", "LGameRoomID"});
        cU = (Descriptor) m5928a().getMessageTypes().get(XGPushManager.OPERATION_REQ_UNREGISTER);
        cV = new FieldAccessorTable(cU, new String[]{"EErrCode", "VBuyinControls"});
        cW = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_buttonStyle);
        cX = new FieldAccessorTable(cW, new String[]{"Uuid", "LItemID", "Touuid", "LRoomID", "LMsgID", "SExtra"});
        cY = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_buttonStyleSmall);
        cZ = new FieldAccessorTable(cY, new String[]{"EErrCode", "LItemID", "Touuid", "LRoomID", "LPopularity", "LCoin", "LMsgID", "SExtra"});
        da = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_checkboxStyle);
        db = new FieldAccessorTable(da, new String[]{"LMsgID", "LFromUuid", "LToUuid", "LRoomID", "LItemID", "SExtra"});
        dc = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_checkedTextViewStyle);
        dd = new FieldAccessorTable(dc, new String[]{"VMsgs"});
        de = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_editTextStyle);
        df = new FieldAccessorTable(de, new String[]{"Uuid", "VMsgIds"});
        dg = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_radioButtonStyle);
        dh = new FieldAccessorTable(dg, new String[]{"StGameRoomInfo", "VGivenCards", "VGivenHands", "Uuid"});
        di = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_ratingBarStyle);
        dj = new FieldAccessorTable(di, new String[]{"Uuid", "LRoomID", "EGameActType", "LStacks", "LBettingID"});
        dk = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_ratingBarStyleIndicator);
        dl = new FieldAccessorTable(dk, new String[]{"EErrCode", "LRoomID", "EGameActType", "LStacks", "LRemainStacks", "LBettingID"});
        dm = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_ratingBarStyleSmall);
        dn = new FieldAccessorTable(dm, new String[]{"Uuid", "LRoomID"});
        f8287do = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_seekBarStyle);
        dp = new FieldAccessorTable(f8287do, new String[]{"EErrCode", "StGameRoomInfo"});
        dq = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_spinnerStyle);
        dr = new FieldAccessorTable(dq, new String[]{"Uuid", "LRoomID", "IPos"});
        ds = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_switchStyle);
        dt = new FieldAccessorTable(ds, new String[]{"EErrCode", "StGameRoomInfo"});
        du = (Descriptor) m5928a().getMessageTypes().get(R.AppCompatTheme_listMenuViewStyle);
        dv = new FieldAccessorTable(du, new String[]{"Uuid", "LRoomID", "LStacks"});
        dw = (Descriptor) m5928a().getMessageTypes().get(115);
        dx = new FieldAccessorTable(dw, new String[]{"EErrCode", "StGameRoomInfo", "StUserBaseInfoNet", "BWaitingBuyinConfirmation", "LBuyinTime"});
        dy = (Descriptor) m5928a().getMessageTypes().get(116);
        dz = new FieldAccessorTable(dy, new String[]{"Uuid", "LRoomID", "LStacks", "LClubID"});
        dA = (Descriptor) m5928a().getMessageTypes().get(117);
        dB = new FieldAccessorTable(dA, new String[]{"EErrCode", "StGameRoomInfo", "StUserBaseInfoNet", "BWaitingBuyinConfirmation", "LBuyinTime"});
        dC = (Descriptor) m5928a().getMessageTypes().get(118);
        dD = new FieldAccessorTable(dC, new String[]{"Uuid", "LRoomID", "LKickOffUuid"});
        dE = (Descriptor) m5928a().getMessageTypes().get(119);
        dF = new FieldAccessorTable(dE, new String[]{"EErrCode", "LRoomID", "LKickOffUuid"});
        dG = (Descriptor) m5928a().getMessageTypes().get(120);
        dH = new FieldAccessorTable(dG, new String[]{"Uuid", "LRoomID"});
        dI = (Descriptor) m5928a().getMessageTypes().get(121);
        dJ = new FieldAccessorTable(dI, new String[]{"EErrCode", "LRoomID"});
        dK = (Descriptor) m5928a().getMessageTypes().get(122);
        dL = new FieldAccessorTable(dK, new String[]{"Uuid", "LGameRoomID", "LGameID", "BShowCardOne", "BShowCardTwo", "BShowCardThree", "BShowCardFour"});
        dM = (Descriptor) m5928a().getMessageTypes().get(123);
        dN = new FieldAccessorTable(dM, new String[]{"EErrCode", "StGameRoomInfo", "LGameID"});
        dO = (Descriptor) m5928a().getMessageTypes().get(124);
        dP = new FieldAccessorTable(dO, new String[]{"StChatRoomInfo", "SCryptCode", "EQuickGameRoomStatus", "EGameRoomType", "StGameRoomBaseInfo", "StSNGGameRoomBaseInfo"});
        dQ = (Descriptor) m5928a().getMessageTypes().get(125);
        dR = new FieldAccessorTable(dQ, new String[]{"Uuid", "SRoomName", "LSmallBlinds", "LBigBlinds", "LBuyIn", "BBuyIn", "LDuration", "EGameRoomSeniorType", "IMaxBuyinRatio", "IMinBuyinRatio", "BBuyinControl", "IGameRoomUserMaxNums", "IAnte", "BInsurance", "EGameRoomType", "BIPLimit", "BGPSLimit"});
        dS = (Descriptor) m5928a().getMessageTypes().get(TransportMediator.KEYCODE_MEDIA_PLAY);
        dT = new FieldAccessorTable(dS, new String[]{"EErrCode", "StQuickGameRoomInfo"});
        dU = (Descriptor) m5928a().getMessageTypes().get(TransportMediator.KEYCODE_MEDIA_PAUSE);
        dV = new FieldAccessorTable(dU, new String[]{"Uuid", "StrRoomName", "BPrivateRoom", "ESNGRoomType", "ECreateRoomType", "LFromRoomID", "IGameRoomUserMaxNums", "BBuyinControl", "BIPLimit", "BGPSLimit"});
        dW = (Descriptor) m5928a().getMessageTypes().get(AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS);
        dX = new FieldAccessorTable(dW, new String[]{"EErrCode", "StQuickGameRoomInfo", "StGameRoomInfo"});
        dY = (Descriptor) m5928a().getMessageTypes().get(129);
        dZ = new FieldAccessorTable(dY, new String[]{"Uuid", "SCryptCode"});
        ea = (Descriptor) m5928a().getMessageTypes().get(TransportMediator.KEYCODE_MEDIA_RECORD);
        eb = new FieldAccessorTable(ea, new String[]{"EErrCode", "StQuickGameRoomInfo", "StGameRoomInfo"});
        ec = (Descriptor) m5928a().getMessageTypes().get(131);
        ed = new FieldAccessorTable(ec, new String[]{"Uuid", "LRoomID"});
        ee = (Descriptor) m5928a().getMessageTypes().get(132);
        ef = new FieldAccessorTable(ee, new String[]{"EErrCode", "StGameRoomInfo", "LRoomID"});
        eg = (Descriptor) m5928a().getMessageTypes().get(133);
        eh = new FieldAccessorTable(eg, new String[]{"Uuid"});
        ei = (Descriptor) m5928a().getMessageTypes().get(134);
        ej = new FieldAccessorTable(ei, new String[]{"EErrCode", "VQuickGameRoomInfos"});
        ek = (Descriptor) m5928a().getMessageTypes().get(135);
        el = new FieldAccessorTable(ek, new String[]{"Uuid", "LRoomID"});
        em = (Descriptor) m5928a().getMessageTypes().get(136);
        en = new FieldAccessorTable(em, new String[]{"EErrCode", "LRoomID"});
        eo = (Descriptor) m5928a().getMessageTypes().get(137);
        ep = new FieldAccessorTable(eo, new String[]{"LMsgID", "EMessageType", "SMsg", "LCreateTime", "LChatRoomID", "LGameRoomID", "StFromUser", "VUsers"});
        eq = (Descriptor) m5928a().getMessageTypes().get(138);
        er = new FieldAccessorTable(eq, new String[]{"VMsgs"});
        es = (Descriptor) m5928a().getMessageTypes().get(139);
        et = new FieldAccessorTable(es, new String[]{"Uuid", "VMsgIds"});
        eu = (Descriptor) m5928a().getMessageTypes().get(140);
        ev = new FieldAccessorTable(eu, new String[]{"Uuid", "LRoomID"});
        ew = (Descriptor) m5928a().getMessageTypes().get(141);
        ex = new FieldAccessorTable(ew, new String[]{"EErrCode", "LRoomID", "LStartTime"});
        ey = (Descriptor) m5928a().getMessageTypes().get(142);
        ez = new FieldAccessorTable(ey, new String[]{"Uuid", "LRoomID", "IMaxBuyinRatio", "IMinBuyinRatio"});
        eA = (Descriptor) m5928a().getMessageTypes().get(143);
        eB = new FieldAccessorTable(eA, new String[]{"EErrCode", "StGameRoomBaseInfo"});
        eC = (Descriptor) m5928a().getMessageTypes().get(144);
        eD = new FieldAccessorTable(eC, new String[]{"Uuid", "LGameRoomID", "LBettingID"});
        eE = (Descriptor) m5928a().getMessageTypes().get(145);
        eF = new FieldAccessorTable(eE, new String[]{"EErrCode", "StUserGameInfoNet", "LBettingID"});
        eG = (Descriptor) m5928a().getMessageTypes().get(146);
        eH = new FieldAccessorTable(eG, new String[]{"Uuid", "LGameRoomID"});
        eI = (Descriptor) m5928a().getMessageTypes().get(147);
        eJ = new FieldAccessorTable(eI, new String[]{"EErrCode", "LGameRoomID"});
        eK = (Descriptor) m5928a().getMessageTypes().get(148);
        eL = new FieldAccessorTable(eK, new String[]{"LMsgID", "ETalkType", "EChatMessageType", "BChatRoom", "StFromUser", "StToUser", "StChatRoomBaseInfo", "LGameRoomID", "StCluBasebInfo", "SMsg", "VVoiceDatas", "StShareBillInfo", "StPokerProcessBaseInfo", "StrPicUrl", "LCreateTime", "LDuration", "IMute", "IVibrate", "StNetPageShareInfoNet", "StSharePokerHistoryInfo", "VExtras"});
        eM = (Descriptor) m5928a().getMessageTypes().get(149);
        eN = new FieldAccessorTable(eM, new String[]{"LCurrentSeq", "LMaxSeq", "VVoiceDatas"});
        eO = (Descriptor) m5928a().getMessageTypes().get(150);
        eP = new FieldAccessorTable(eO, new String[]{"LPageID", "SPageTitle", "SCoverPicUrl", "SPageDesc", "SUrl"});
        eQ = (Descriptor) m5928a().getMessageTypes().get(151);
        eR = new FieldAccessorTable(eQ, new String[]{"Uuid", "LTalkwith", "ETalkType", "EChatMessageType", "SMsg", "VVoiceDatas", "StShareBillInfo", "StPokerProcessBaseInfo", "StPicPackageInfo", "LMsgId", "LDuration", "StNetPageShareInfoNet", "StSharePokerHistoryInfo", "VExtras"});
        eS = (Descriptor) m5928a().getMessageTypes().get(152);
        eT = new FieldAccessorTable(eS, new String[]{"EErrCode", "LTalkwith", "ETalkType", "LMsgId", "LPicMsgId", "LCurrentSeq"});
        eU = (Descriptor) m5928a().getMessageTypes().get(153);
        eV = new FieldAccessorTable(eU, new String[]{"VMsgs"});
        eW = (Descriptor) m5928a().getMessageTypes().get(154);
        eX = new FieldAccessorTable(eW, new String[]{"Uuid", "VMsgIds"});
        eY = (Descriptor) m5928a().getMessageTypes().get(155);
        eZ = new FieldAccessorTable(eY, new String[]{"LMsgID", "EGameMessageType", "SMsg", "LCreateTime", "LRoomID", "StFromUser", "VUsers", "StChatRoomBaseInfo"});
        fa = (Descriptor) m5928a().getMessageTypes().get(156);
        fb = new FieldAccessorTable(fa, new String[]{"VMsgs"});
        fc = (Descriptor) m5928a().getMessageTypes().get(157);
        fd = new FieldAccessorTable(fc, new String[]{"Uuid", "VMsgIds"});
        fe = (Descriptor) m5928a().getMessageTypes().get(158);
        ff = new FieldAccessorTable(fe, new String[]{"LMsgID", "EGameMessageType", "StFromUser", "SMsg", "LCreateTime", "StGameRoomInfo", "IPos", "IThinkingInterval"});
        fg = (Descriptor) m5928a().getMessageTypes().get(159);
        fh = new FieldAccessorTable(fg, new String[]{"VMsgs"});
        fi = (Descriptor) m5928a().getMessageTypes().get(160);
        fj = new FieldAccessorTable(fi, new String[]{"Uuid", "VMsgIds"});
        fk = (Descriptor) m5928a().getMessageTypes().get(161);
        fl = new FieldAccessorTable(fk, new String[]{"LMsgID", "ESystemMessageType", "STitle", "SUrl", "SContent", "LTimeoutTime"});
        fm = (Descriptor) m5928a().getMessageTypes().get(162);
        fn = new FieldAccessorTable(fm, new String[]{"VMsgs"});
        fo = (Descriptor) m5928a().getMessageTypes().get(163);
        fp = new FieldAccessorTable(fo, new String[]{"Uuid", "VMsgIds"});
        fq = (Descriptor) m5928a().getMessageTypes().get(164);
        fr = new FieldAccessorTable(fq, new String[]{"Uuid", "EChatMessageType", "SMsg", "VVoiceDatas", "StShareBillInfo", "StPokerProcessBaseInfo", "LMsgId", "LDuration", "StNetPageShareInfoNet"});
        fs = (Descriptor) m5928a().getMessageTypes().get(165);
        ft = new FieldAccessorTable(fs, new String[]{"EErrCode", "LMsgId"});
        fu = (Descriptor) m5928a().getMessageTypes().get(166);
        fv = new FieldAccessorTable(fu, new String[]{"LMsgID", "EClubMessageType", "StFromUser", "StToUser", "StClubBaseInfo", "SMsg", "LCreateTime", "LFund"});
        fw = (Descriptor) m5928a().getMessageTypes().get(167);
        fx = new FieldAccessorTable(fw, new String[]{"VMsgs"});
        fy = (Descriptor) m5928a().getMessageTypes().get(168);
        fz = new FieldAccessorTable(fy, new String[]{"Uuid", "VMsgIds"});
        fA = (Descriptor) m5928a().getMessageTypes().get(169);
        fB = new FieldAccessorTable(fA, new String[]{"Uuid"});
        fC = (Descriptor) m5928a().getMessageTypes().get(170);
        fD = new FieldAccessorTable(fC, new String[]{"EErrCode", "StChatRoomBaseInfo", "StGameRoomInfo", "VClubBaseInfos"});
        fE = (Descriptor) m5928a().getMessageTypes().get(171);
        fF = new FieldAccessorTable(fE, new String[]{"Uuid", "IOffset", "INum"});
        fG = (Descriptor) m5928a().getMessageTypes().get(172);
        fH = new FieldAccessorTable(fG, new String[]{"EErrCode", "VBannerInfos", "VRecommendUserInfos", "VRecommendClubBaseInfos", "VUserBaseInfos", "IOffset"});
        fI = (Descriptor) m5928a().getMessageTypes().get(173);
        fJ = new FieldAccessorTable(fI, new String[]{"Uuid", "IOffset", "INum"});
        fK = (Descriptor) m5928a().getMessageTypes().get(174);
        fL = new FieldAccessorTable(fK, new String[]{"EErrCode", "VGameRoomBaseInfos", "VSNGGameRoomBaseInfos", "VQuickGameRoomInfos", "IOffset"});
        fM = (Descriptor) m5928a().getMessageTypes().get(175);
        fN = new FieldAccessorTable(fM, new String[]{"Uuid", "IOffset", "INum"});
        fO = (Descriptor) m5928a().getMessageTypes().get(176);
        fP = new FieldAccessorTable(fO, new String[]{"EErrCode", "VGameRoomBaseInfos", "VSNGGameRoomBaseInfos", "VQuickGameRoomInfos", "IOffset"});
        fQ = (Descriptor) m5928a().getMessageTypes().get(177);
        fR = new FieldAccessorTable(fQ, new String[]{"Uuid", "LRoomID"});
        fS = (Descriptor) m5928a().getMessageTypes().get(178);
        fT = new FieldAccessorTable(fS, new String[]{"EErrCode", "StUserGameInfoNet"});
        fU = (Descriptor) m5928a().getMessageTypes().get(179);
        fV = new FieldAccessorTable(fU, new String[]{"LRoomID", "Uuid"});
        fW = (Descriptor) m5928a().getMessageTypes().get(180);
        fX = new FieldAccessorTable(fW, new String[]{"EErrCode", "StGameRoomInfo"});
        fY = (Descriptor) m5928a().getMessageTypes().get(181);
        fZ = new FieldAccessorTable(fY, new String[]{"StUserBaseInfoNet", "ERecommendUserType"});
        ga = (Descriptor) m5928a().getMessageTypes().get(182);
        gb = new FieldAccessorTable(ga, new String[]{"Uuid", "BStop"});
        gc = (Descriptor) m5928a().getMessageTypes().get(183);
        gd = new FieldAccessorTable(gc, new String[]{"EErrCode", "BStop"});
        ge = (Descriptor) m5928a().getMessageTypes().get(184);
        gf = new FieldAccessorTable(ge, new String[]{"VInsuranceUserInfos", "IFirstInsurance", "VNoOutsUuids"});
        gg = (Descriptor) m5928a().getMessageTypes().get(185);
        gh = new FieldAccessorTable(gg, new String[]{"Uuid", "EInsuranceBetStatus", "VInsurancePotInfos", "LTotalGetStacks", "BCanInsurance", "BDefaultInsurance", "LInsuranceStartTime", "LInsuranceActDuration", "IInsuranceDelayCost", "IInsuranceDelayLong", "BFirstInsurance"});
        gi = (Descriptor) m5928a().getMessageTypes().get(186);
        gj = new FieldAccessorTable(gi, new String[]{"LPotID", "LPotStacks", "VOuts", "IOdds", "LTotalPotStacks", "LNoLosses", "LMinStacks", "LMaxStacks", "LBetStacks", "LGetStacks", "IPotIndex", "LSysStacks"});
        gk = (Descriptor) m5928a().getMessageTypes().get(187);
        gl = new FieldAccessorTable(gk, new String[]{"LPotID", "EInsuranceAct", "LBetStacks"});
        gm = (Descriptor) m5928a().getMessageTypes().get(188);
        gn = new FieldAccessorTable(gm, new String[]{"Uuid", "LGameRoomID", "LGameHandID", "EGameRoomStatus", "StBuyInsuranceInfo"});
        go = (Descriptor) m5928a().getMessageTypes().get(189);
        gp = new FieldAccessorTable(go, new String[]{"EErrCode", "StGameRoomInfo"});
        gq = (Descriptor) m5928a().getMessageTypes().get(190);
        gr = new FieldAccessorTable(gq, new String[]{"Uuid", "LGameRoomID", "LSettedUuid", "BCanInsurance"});
        gs = (Descriptor) m5928a().getMessageTypes().get(191);
        gt = new FieldAccessorTable(gs, new String[]{"EErrCode", "LGameRoomID", "LSettedUuid", "BCanInsurance"});
        gu = (Descriptor) m5928a().getMessageTypes().get(192);
        gv = new FieldAccessorTable(gu, new String[]{"Uuid", "LGameRoomID", "BDefaultInsurance"});
        gw = (Descriptor) m5928a().getMessageTypes().get(193);
        gx = new FieldAccessorTable(gw, new String[]{"EErrCode", "LGameRoomID", "BDefaultInsurance"});
        gy = (Descriptor) m5928a().getMessageTypes().get(194);
        gz = new FieldAccessorTable(gy, new String[]{"Uuid", "LGameRoomID", "LGameHandID", "EGameRoomStatus"});
        gA = (Descriptor) m5928a().getMessageTypes().get(195);
        gB = new FieldAccessorTable(gA, new String[]{"EErrCode", "LGameRoomID", "StInsuranceUserInfo", "LCoin"});
        gC = (Descriptor) m5928a().getMessageTypes().get(196);
        gD = new FieldAccessorTable(gC, new String[]{"Uuid", "LGameRoomID"});
        gE = (Descriptor) m5928a().getMessageTypes().get(197);
        gF = new FieldAccessorTable(gE, new String[]{"EErrCode", "StGameRoomInfo"});
        gG = (Descriptor) m5928a().getMessageTypes().get(198);
        gH = new FieldAccessorTable(gG, new String[]{"Uuid", "LGameRoomID"});
        gI = (Descriptor) m5928a().getMessageTypes().get(199);
        gJ = new FieldAccessorTable(gI, new String[]{"EErrCode", "LGameRoomID", "BNotBuyInsurance"});
        gK = (Descriptor) m5928a().getMessageTypes().get(200);
        gL = new FieldAccessorTable(gK, new String[]{"Uuid", "LGameRoomID", "BDelegate"});
        gM = (Descriptor) m5928a().getMessageTypes().get(201);
        gN = new FieldAccessorTable(gM, new String[]{"EErrCode", "LGameRoomID", "BDelegate"});
        gO = (Descriptor) m5928a().getMessageTypes().get(202);
        gP = new FieldAccessorTable(gO, new String[]{"Uuid", "LGameRoomID", "LKickUserUuid"});
        gQ = (Descriptor) m5928a().getMessageTypes().get(203);
        gR = new FieldAccessorTable(gQ, new String[]{"EErrCode", "LGameRoomID", "LKickUserUuid"});
        gS = (Descriptor) m5928a().getMessageTypes().get(204);
        gT = new FieldAccessorTable(gS, new String[]{"Uuid", "EDeviceType", "StrIosAPNToken", "StrAndroidXingeAPNToken", "StrAndroidFCMAPNToken"});
        gU = (Descriptor) m5928a().getMessageTypes().get(205);
        gV = new FieldAccessorTable(gU, new String[]{"EErrCode"});
        gW = (Descriptor) m5928a().getMessageTypes().get(206);
        gX = new FieldAccessorTable(gW, new String[]{"Uuid", "LGameRoomID"});
        gY = (Descriptor) m5928a().getMessageTypes().get(207);
        gZ = new FieldAccessorTable(gY, new String[]{"EErrCode", "LGameRoomID"});
        ha = (Descriptor) m5928a().getMessageTypes().get(208);
        hb = new FieldAccessorTable(ha, new String[]{"Uuid", "LGameRoomID", "LGameHandID"});
        hc = (Descriptor) m5928a().getMessageTypes().get(209);
        hd = new FieldAccessorTable(hc, new String[]{"EErrCode", "LGameRoomID", "LGameHandID", "VTableCards"});
        he = (Descriptor) m5928a().getMessageTypes().get(210);
        hf = new FieldAccessorTable(he, new String[]{"Uuid", "LGameRoomID"});
        hg = (Descriptor) m5928a().getMessageTypes().get(211);
        hh = new FieldAccessorTable(hg, new String[]{"EErrCode", "LGameRoomID", "VClubBaseInfos"});
        hi = (Descriptor) m5928a().getMessageTypes().get(212);
        hj = new FieldAccessorTable(hi, new String[]{"Uuid", "LGameRoomID", "IThinkingInterval"});
        hk = (Descriptor) m5928a().getMessageTypes().get(213);
        hl = new FieldAccessorTable(hk, new String[]{"EErrCode", "StGameRoomBaseInfo"});
        hm = (Descriptor) m5928a().getMessageTypes().get(214);
        hn = new FieldAccessorTable(hm, new String[]{"Uuid", "LGameRoomID", "LForceStandUpUuid"});
        ho = (Descriptor) m5928a().getMessageTypes().get(215);
        hp = new FieldAccessorTable(ho, new String[]{"EErrCode", "LGameRoomID", "LForceStandUpUuid"});
        hq = (Descriptor) m5928a().getMessageTypes().get(216);
        hr = new FieldAccessorTable(hq, new String[]{"Uuid", "LGameRoomID", "BStraddle"});
        hs = (Descriptor) m5928a().getMessageTypes().get(217);
        ht = new FieldAccessorTable(hs, new String[]{"EErrCode", "StGameRoomBaseInfo"});
        TexasPokerCommon.a();
        TexasPokerHttpBill.a();
    }
}

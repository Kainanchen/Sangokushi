package com.amap.p003a;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.view.MotionEventCompat;
import android.telephony.TelephonyManager;
import android.util.SparseArray;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.AMapLocationClientOption;
import com.amap.p003a.cj.SDKInfo;
import com.sina.weibo.sdk.constant.WBPageConstants.ParamKey;
import com.sina.weibo.sdk.register.mobile.LetterIndexBar;
import com.tencent.android.tpush.XGPushManager;
import java.util.HashMap;
import java.util.Locale;
import org.json.JSONObject;

/* compiled from: CoreUtil */
/* renamed from: com.amap.a.bc */
public final class bc {
    public static String f347a;
    public static String f348b;
    public static String f349c;
    public static String f350d;
    public static int f351e;
    public static String f352f;
    public static String f353g;
    public static int f354h;
    public static boolean f355i;
    public static int f356j;
    static String f357k;
    static HashMap<String, String> f358l;
    public static final SparseArray<String> f359m;
    public static boolean f360n;
    public static boolean f361o;
    static boolean f362p;
    static boolean f363q;
    private static String f364r;
    private static String f365s;
    private static String[] f366t;
    private static String f367u;

    static {
        f364r = "http://apilocate.amap.com/mobile/binary";
        f365s = "http://apilocatesrc.amap.com/mobile/binary";
        f366t = new String[]{"com.amap.api.location", "com.loc"};
        f367u = "001;002;11B;11C;11E;11F;11G;11H;11I;11K;122;123;13A;135;13J";
        f347a = null;
        f348b = null;
        f349c = null;
        f350d = LetterIndexBar.SEARCH_ICON_LETTER;
        f351e = 30000;
        f352f = null;
        f353g = null;
        f354h = 20;
        f355i = true;
        f356j = 1;
        SparseArray sparseArray = new SparseArray();
        f359m = sparseArray;
        sparseArray.append(0, "UNKWN");
        f359m.append(1, "GPRS");
        f359m.append(2, "EDGE");
        f359m.append(3, "UMTS");
        f359m.append(4, "CDMA");
        f359m.append(5, "EVDO_0");
        f359m.append(6, "EVDO_A");
        f359m.append(7, "1xRTT");
        f359m.append(8, "HSDPA");
        f359m.append(9, "HSUPA");
        f359m.append(10, "HSPA");
        f359m.append(11, "IDEN");
        f359m.append(12, "EVDO_B");
        f359m.append(13, "LTE");
        f359m.append(14, "EHRPD");
        f359m.append(15, "HSPAP");
        f360n = false;
        f361o = false;
        f362p = false;
        f363q = false;
    }

    public static cj m324a(String str, String str2) {
        try {
            return new SDKInfo(str, str2, "AMAP_Location_SDK_Android 3.0.0").m605a((String[]) f366t.clone()).m606a();
        } catch (Throwable th) {
            bc.m330a(th, "CoreUtil", "getSDKInfo");
            return null;
        }
    }

    public static AMapLocation m325a(AMapLocation aMapLocation, AMapLocation aMapLocation2) {
        if (aMapLocation2 != null) {
            try {
                aMapLocation.setCountry(aMapLocation2.getCountry());
                aMapLocation.setRoad(aMapLocation2.getRoad());
                aMapLocation.setPoiName(aMapLocation2.getPoiName());
                aMapLocation.setStreet(aMapLocation2.getStreet());
                aMapLocation.setNumber(aMapLocation2.getStreetNum());
                String cityCode = aMapLocation2.getCityCode();
                String adCode = aMapLocation2.getAdCode();
                aMapLocation.setCityCode(cityCode);
                aMapLocation.setAdCode(adCode);
                aMapLocation.setCity(aMapLocation2.getCity());
                aMapLocation.setDistrict(aMapLocation2.getDistrict());
                aMapLocation.setProvince(aMapLocation2.getProvince());
                aMapLocation.setAoiName(aMapLocation2.getAoiName());
                aMapLocation.setAddress(aMapLocation2.getAddress());
                if (aMapLocation.getExtras() != null) {
                    aMapLocation.getExtras().putString("citycode", aMapLocation2.getCityCode());
                    aMapLocation.getExtras().putString("desc", aMapLocation2.getExtras().getString("desc"));
                    aMapLocation.getExtras().putString("adcode", aMapLocation2.getAdCode());
                } else {
                    Bundle bundle = new Bundle();
                    bundle.putString("citycode", aMapLocation2.getCityCode());
                    bundle.putString("desc", aMapLocation2.getExtras().getString("desc"));
                    bundle.putString("adcode", aMapLocation2.getAdCode());
                    aMapLocation.setExtras(bundle);
                }
            } catch (Throwable th) {
            }
        }
        return aMapLocation;
    }

    public static String m326a() {
        return f364r;
    }

    static JSONObject m327a(AMapLocationClientOption aMapLocationClientOption, Context context) {
        boolean z = false;
        JSONObject jSONObject = new JSONObject();
        jSONObject.put("netloc", "0");
        jSONObject.put("gpsstatus", "0");
        jSONObject.put("nbssid", "0");
        jSONObject.put("wait1stwifi", "0");
        jSONObject.put("autoup", "0");
        jSONObject.put("upcolmobile", 1);
        jSONObject.put("enablegetreq", 1);
        jSONObject.put("key", cb.m523f(context));
        jSONObject.put("User-Agent", "AMAP_Location_SDK_Android 3.0.0");
        jSONObject.put("reversegeo", aMapLocationClientOption != null ? aMapLocationClientOption.isNeedAddress() : true);
        jSONObject.put("isOffset", aMapLocationClientOption != null ? aMapLocationClientOption.isOffset() : true);
        String str = "wifiactivescan";
        Object valueOf = aMapLocationClientOption != null ? aMapLocationClientOption.isWifiActiveScan() ? "1" : "0" : Integer.valueOf(0);
        jSONObject.put(str, valueOf);
        jSONObject.put("httptimeout", aMapLocationClientOption != null ? aMapLocationClientOption.getHttpTimeOut() : (long) f351e);
        jSONObject.put("isLocationCacheEnable", aMapLocationClientOption != null ? aMapLocationClientOption.isLocationCacheEnable() : true);
        jSONObject.put("isOnceLocationLatest", aMapLocationClientOption != null ? aMapLocationClientOption.isOnceLocationLatest() : false);
        str = "isKillProcess";
        valueOf = aMapLocationClientOption != null ? aMapLocationClientOption.isKillProcess() ? "1" : "0" : Integer.valueOf(0);
        jSONObject.put(str, valueOf);
        String str2 = "locationProtocol";
        if (aMapLocationClientOption != null && aMapLocationClientOption.getLocationProtocol().ordinal() == 1) {
            z = true;
        }
        jSONObject.put(str2, z);
        return jSONObject;
    }

    public static void m328a(Context context) {
        try {
            if (bu.m472a(bc.m335c(context))) {
                f364r = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            try {
                if (f358l == null) {
                    f358l = new HashMap();
                }
                f358l.clear();
                f358l.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
                f358l.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
                f358l.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
                f358l.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
                f358l.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
                f358l.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
            } catch (Throwable th) {
                bc.m330a(th, "CoreUtil", "initUrlHash");
            }
            String a = bb.m315a(cb.m523f(context));
            f357k = a;
            if (a == null) {
                return;
            }
            if (a.length() != 0 && f358l != null && f358l.containsKey(a)) {
                String str = (String) f358l.get(a);
                str = (str == null || str.length() <= 0) ? null : new String(bb.m323d(bc.m332a(str), a), "utf-8");
                if (str != null && str.length() > 0 && str.contains("http:")) {
                    f364r = str;
                }
            }
        } catch (Throwable th2) {
            bc.m330a(th2, "CoreUtil", "checkUrl");
        }
    }

    public static void m329a(AMapLocation aMapLocation, JSONObject jSONObject) {
        if (jSONObject != null) {
            String str = LetterIndexBar.SEARCH_ICON_LETTER;
            try {
                if (bu.m473a(jSONObject, "provider")) {
                    aMapLocation.setProvider(jSONObject.getString("provider"));
                }
                if (bu.m473a(jSONObject, "lon")) {
                    aMapLocation.setLongitude(jSONObject.getDouble("lon"));
                }
                if (bu.m473a(jSONObject, "lat")) {
                    aMapLocation.setLatitude(jSONObject.getDouble("lat"));
                }
                if (bu.m473a(jSONObject, "altitude")) {
                    aMapLocation.setAltitude(jSONObject.getDouble("altitude"));
                }
                if (bu.m473a(jSONObject, "acc")) {
                    aMapLocation.setAccuracy(Float.parseFloat(jSONObject.getString("acc")));
                }
                if (bu.m473a(jSONObject, "accuracy")) {
                    aMapLocation.setAccuracy((float) jSONObject.getLong("accuracy"));
                }
                if (bu.m473a(jSONObject, "speed")) {
                    aMapLocation.setSpeed((float) jSONObject.getLong("speed"));
                }
                if (bu.m473a(jSONObject, "dir")) {
                    aMapLocation.setBearing((float) jSONObject.getLong("dir"));
                }
                if (bu.m473a(jSONObject, "bearing")) {
                    aMapLocation.setBearing((float) jSONObject.getLong("bearing"));
                }
                if (bu.m473a(jSONObject, "citycode")) {
                    aMapLocation.setCityCode(jSONObject.getString("citycode"));
                }
                if (bu.m473a(jSONObject, "address")) {
                    aMapLocation.setAddress(jSONObject.getString("address"));
                }
                if (bu.m473a(jSONObject, "desc")) {
                    str = jSONObject.getString("desc");
                }
                if (bu.m473a(jSONObject, "adcode")) {
                    aMapLocation.setAdCode(jSONObject.getString("adcode"));
                }
                Bundle bundle = new Bundle();
                bundle.putString("citycode", aMapLocation.getCityCode());
                bundle.putString("desc", str.toString());
                bundle.putString("adcode", aMapLocation.getAdCode());
                aMapLocation.setExtras(bundle);
                if (bu.m473a(jSONObject, "country")) {
                    aMapLocation.setCountry(jSONObject.getString("country"));
                }
                if (bu.m473a(jSONObject, "province")) {
                    aMapLocation.setProvince(jSONObject.getString("province"));
                }
                if (bu.m473a(jSONObject, "city")) {
                    aMapLocation.setCity(jSONObject.getString("city"));
                }
                if (bu.m473a(jSONObject, "road")) {
                    aMapLocation.setRoad(jSONObject.getString("road"));
                }
                if (bu.m473a(jSONObject, "street")) {
                    aMapLocation.setStreet(jSONObject.getString("street"));
                }
                if (bu.m473a(jSONObject, "number")) {
                    aMapLocation.setNumber(jSONObject.getString("number"));
                }
                if (bu.m473a(jSONObject, ParamKey.POINAME)) {
                    aMapLocation.setPoiName(jSONObject.getString(ParamKey.POINAME));
                }
                if (bu.m473a(jSONObject, "aoiname")) {
                    aMapLocation.setAoiName(jSONObject.getString("aoiname"));
                }
                if (bu.m473a(jSONObject, "errorCode")) {
                    aMapLocation.setErrorCode(jSONObject.getInt("errorCode"));
                }
                if (bu.m473a(jSONObject, "errorInfo")) {
                    aMapLocation.setErrorInfo(jSONObject.getString("errorInfo"));
                }
                if (bu.m473a(jSONObject, "locationType")) {
                    aMapLocation.setLocationType(jSONObject.getInt("locationType"));
                }
                if (bu.m473a(jSONObject, "locationDetail")) {
                    aMapLocation.setLocationDetail(jSONObject.getString("locationDetail"));
                }
                if (bu.m473a(jSONObject, "time")) {
                    aMapLocation.setTime(jSONObject.getLong("time"));
                }
                if (bu.m473a(jSONObject, "district")) {
                    aMapLocation.setDistrict(jSONObject.getString("district"));
                }
                if (bu.m473a(jSONObject, "isOffset")) {
                    aMapLocation.setOffset(jSONObject.getBoolean("isOffset"));
                }
            } catch (Throwable th) {
                bc.m330a(th, "CoreUtil", "transformLocation");
            }
        }
    }

    public static void m330a(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2)) {
            try {
                th.printStackTrace();
                cp.m660b(th, str, str2);
            } catch (Throwable th2) {
            }
        }
    }

    public static boolean m331a(double d, double d2) {
        int i = (int) ((d2 - 73.0d) / 0.5d);
        int i2 = (int) ((d - 3.5d) / 0.5d);
        if (i2 < 0 || i2 >= XGPushManager.OPERATION_REQ_UNREGISTER || i < 0 || i >= 124) {
            return false;
        }
        try {
            returncharAt(i + (i2 * 124)) == '1';
        } catch (Throwable th) {
            bc.m330a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    private static byte[] m332a(String str) {
        int i = 0;
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String toLowerCase = str.toLowerCase(Locale.US);
        int length = toLowerCase.length() / 2;
        byte[] bArr = new byte[length];
        while (i < length) {
            bArr[i] = (byte) (Integer.parseInt(toLowerCase.substring(i * 2, (i * 2) + 2), 16) & MotionEventCompat.ACTION_MASK);
            i++;
        }
        return bArr;
    }

    public static String m333b() {
        return f365s;
    }

    public static String m334b(Context context) {
        boolean b = bt.m456b(context, "pref", "ddex", false);
        if (b) {
            f360n = b;
            if (!f367u.contains("121")) {
                f367u += ";121";
            }
        }
        b = bt.m456b(context, "pref", "colde", false);
        if (b) {
            f361o = b;
            if (!f367u.contains("11Z")) {
                f367u += ";11Z";
            }
        }
        return f367u;
    }

    private static String m335c(Context context) {
        String str = LetterIndexBar.SEARCH_ICON_LETTER;
        try {
            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService("phone");
            if (telephonyManager != null) {
                String networkOperator = telephonyManager.getNetworkOperator();
                if (networkOperator != null && networkOperator.length() >= 3) {
                    return networkOperator.substring(0, 3);
                }
            }
        } catch (Throwable th) {
            bc.m330a(th, "CoreUtil", "getMcc");
        }
        return str;
    }

    public static boolean m336c() {
        if (!f362p) {
            f362p = true;
            f363q = false;
        }
        return f363q;
    }
}
